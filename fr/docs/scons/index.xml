<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel SCons on </title>
    <link>https://www.wikiod.com/fr/docs/scons/</link>
    <description>Recent content in Tutoriel SCons on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/scons/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec SCons</title>
      <link>https://www.wikiod.com/fr/scons/premiers-pas-avec-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/scons/premiers-pas-avec-scons/</guid>
      <description>Commencer # Une fois que vous avez [SCons en cours d&amp;rsquo;exécution] (https://www.wikiod.com/fr/scons/execution-de-scons), créez un fichier nommé SConstruct :
print(&#39;..Building World&#39;) Exécutez maintenant scons :
$ scons scons: Reading SConscript files ... ..Building World scons: done reading SConscript files. scons: Building targets ... scons: `.&#39; is up to date. scons: done building targets. SConstruct est un script Python avec des fonctions SCons supplémentaires.
Zip(&#39;archive&#39;, [&#39;SConstruct&#39;]) Le script ci-dessus s&amp;rsquo;intègre dans archive.zip en utilisant la fonction Zip() fournie par SCons.</description>
    </item>
    
    <item>
      <title>Exécution de SCons</title>
      <link>https://www.wikiod.com/fr/scons/execution-de-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/scons/execution-de-scons/</guid>
      <description>SCons est écrit en Python 2 et n&amp;rsquo;a besoin d&amp;rsquo;aucune dépendance pour fonctionner. Vous pouvez simplement copier ses scripts dans l&amp;rsquo;arborescence source de votre projet et exécuter à partir d&amp;rsquo;ici. Ou vous pouvez utiliser la version packagée pour votre système d&amp;rsquo;exploitation.
Installation sous Linux # Sur Debian ou Ubuntu, vous pouvez installer SCons en utilisant
$ sudo apt-get install scons Sur les systèmes basés sur [YUM] (https://en.wikipedia.org/wiki/Yellowdog_Updater,_Modified), utilisez
$ sudo yum install scons Vous pouvez installer à l&amp;rsquo;aide d&amp;rsquo;un RPM en le téléchargeant, puis en exécutant</description>
    </item>
    
    <item>
      <title>Phases d&#39;exécution des SCons</title>
      <link>https://www.wikiod.com/fr/scons/phases-dexecution-des-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/scons/phases-dexecution-des-scons/</guid>
      <description>SCons est un système de construction en plusieurs étapes. D&amp;rsquo;abord, il lit tous les SConstruct et SConscript pour exécuter le code Python et créer un build graph avec des cibles. Ensuite, il analyse le système de fichiers pour détecter quelles cibles du build graph doivent être mises à jour, puis il exécute la commande pour créer des cibles obsolètes.
Inspecter les phases SCons # scons décrit les phases d&amp;rsquo;exécution elles-mêmes. L&amp;rsquo;exécuter sur un SConstruct vide donne ceci :</description>
    </item>
    
    <item>
      <title>C&#43;&#43;</title>
      <link>https://www.wikiod.com/fr/scons/c-/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/scons/c-/</guid>
      <description>Une construction simple # Il est très facile de construire un projet C++ simple. Voici un exemple de fichier SConstruct qui le fait :
env=Environment() env.Program(&#39;hello&#39;, Glob(&#39;src/*.cpp&#39;)) Cela crée l&amp;rsquo;exécutable hello composé de toutes les sources dans src avec l&amp;rsquo;extension cpp.
Spécifier diverses options de construction # Cet exemple montre des paramètres de compilation plus détaillés :
env=Environment( CPPPATH=&#39;/usr/include/boost/&#39;, CPPDEFINES=[&#39;foo&#39;], LIBS=[&#39;bar&#39;], SCONS_CXX_STANDARD=&#39;c++11&#39;) env.Program(&#39;hello&#39;, Glob(&#39;src/*.cpp&#39;)) Ceci construit l&amp;rsquo;exécutable hello à partir de tous les fichiers cpp dans src, avec les paramètres suivants :</description>
    </item>
    
  </channel>
</rss>
