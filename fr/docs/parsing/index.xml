<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel d&#39;analyse on </title>
    <link>https://www.wikiod.com/fr/docs/parsing/</link>
    <description>Recent content in Tutoriel d&#39;analyse on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/parsing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec l&#39;analyse</title>
      <link>https://www.wikiod.com/fr/parsing/debuter-avec-lanalyse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/parsing/debuter-avec-lanalyse/</guid>
      <description>Un analyseur simple # La manière la plus simple d&amp;rsquo;écrire un analyseur est d&amp;rsquo;utiliser la technique de descente récursive. Cela crée un analyseur descendant (qui peut formellement être décrit comme un LL(1)). Pour commencer l&amp;rsquo;exemple, nous devons d&amp;rsquo;abord établir les règles de grammaire de notre langue. Dans cet exemple, nous utiliserons des affectations d&amp;rsquo;expressions arithmétiques simples pour les expressions qui ne peuvent utiliser que l&amp;rsquo;opérateur plus :
Assignment --&amp;gt; Identifier := Expression Expression --&amp;gt; Expression + Term | Term Term --&amp;gt; Identifier | (Expression) Identifier --&amp;gt; x | y | z Pour chaque règle de la grammaire, nous pouvons écrire une procédure pour reconnaître les jetons entrants dans la règle.</description>
    </item>
    
  </channel>
</rss>
