<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel ABAP on </title>
    <link>https://www.wikiod.com/fr/docs/abap/</link>
    <description>Recent content in Tutoriel ABAP on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/abap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec ABAP</title>
      <link>https://www.wikiod.com/fr/abap/premiers-pas-avec-abap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/premiers-pas-avec-abap/</guid>
      <description>Bonjour le monde # PROGRAM zhello_world. START-OF-SELECTION. WRITE &#39;Hello, World!&#39;. Au lieu d&amp;rsquo;imprimer sur la console, ABAP écrit des valeurs dans une liste qui s&amp;rsquo;affichera dès que la logique principale sera exécutée.
Hello World dans les objets ABAP # PROGRAM zhello_world. CLASS main DEFINITION FINAL CREATE PRIVATE. PUBLIC SECTION. CLASS-METHODS: start. ENDCLASS. CLASS main IMPLEMENTATION. METHOD start. cl_demo_output=&amp;gt;display( &#39;Hello World!&#39; ). ENDMETHOD. ENDCLASS. START-OF-SELECTION. main=&amp;gt;start( ). </description>
    </item>
    
    <item>
      <title>Objets ABAP</title>
      <link>https://www.wikiod.com/fr/abap/objets-abap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/objets-abap/</guid>
      <description>Déclaration de classe # Les classes ABAP peuvent être déclarées Globalement ou Localement. Une classe globale peut être utilisée par n&amp;rsquo;importe quel objet du référentiel ABAP. En revanche, une classe locale ne peut être utilisée que dans la portée pour laquelle elle est déclarée. # CLASS lcl_abap_class DEFINITION. PUBLIC SECTION. PROTECTED SECTION. PRIVATE SECTION. ENDCLASS. CLASS lcl_abap_class IMPLEMENTATION. ENDCLASS. Constructeur, méthodes # Implémentation de la classe :
CLASS lcl_abap_class DEFINITION. PUBLIC SECTION.</description>
    </item>
    
    <item>
      <title>Tableaux internes</title>
      <link>https://www.wikiod.com/fr/abap/tableaux-internes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/tableaux-internes/</guid>
      <description>Types de tables internes # DATA: &amp;lt;TABLE NAME&amp;gt; TYPE &amp;lt;SORTED|STANDARD|HASHED&amp;gt; TABLE OF &amp;lt;TYPE NAME&amp;gt; WITH &amp;lt;UNIQUE|NON-UNIQUE&amp;gt; KEY &amp;lt;FIELDS FOR KEY&amp;gt;. Tableau standard
Cette table contient toutes les entrées stockées de manière linéaire et les enregistrements sont accessibles de manière linéaire. Pour les tables de grande taille, l&amp;rsquo;accès aux tables peut être lent.
Tableau trié
Nécessite l&amp;rsquo;ajout de AVEC UNIQUE|CLE NON UNIQUE. La recherche est rapide grâce à l&amp;rsquo;exécution d&amp;rsquo;une recherche binaire.</description>
    </item>
    
    <item>
      <title>Cordes</title>
      <link>https://www.wikiod.com/fr/abap/cordes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/cordes/</guid>
      <description>Modèles de chaînes # Les modèles de chaînes sont un moyen pratique de mélanger des chaînes littérales avec des valeurs de variables :
WRITE |Hello, { lv_name }, nice to meet you!|. Il peut également formater des choses comme les dates. Pour utiliser le format de date de l&amp;rsquo;utilisateur connecté :
WRITE |The order was completed on { lv_date DATE = USER } and can not be changed|. Les appels et expressions de méthode fonctionnelle sont pris en charge :</description>
    </item>
    
    <item>
      <title>Afficheur de liste ABAP GRID (ALV)</title>
      <link>https://www.wikiod.com/fr/abap/afficheur-de-liste-abap-grid-alv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/afficheur-de-liste-abap-grid-alv/</guid>
      <description>Création et affichage d&amp;rsquo;un ALV # Cet exemple décrit la création ALV la plus simple à l&amp;rsquo;aide de la classe cl_salv_table et sans options de formatage supplémentaires. Des options de formatage supplémentaires seraient incluses après le bloc TRY ENDTRY et avant l&amp;rsquo;appel de la méthode alv-&amp;gt;display().
Tous les exemples suivants utilisant l&amp;rsquo;approche ABAP Objects pour la création d&amp;rsquo;ALV utiliseront cet exemple comme point de départ.
DATA: t_spfli TYPE STANDARD TABLE OF spfli, alv TYPE REF TO cl_salv_table, error_message TYPE REF TO cx_salv_msg.</description>
    </item>
    
    <item>
      <title>Programmation dynamique</title>
      <link>https://www.wikiod.com/fr/abap/programmation-dynamique/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/programmation-dynamique/</guid>
      <description>Champ-Symboles # Les Field-Symbols sont l&amp;rsquo;équivalent ABAP des pointeurs, sauf que les Field-Symbols sont toujours déréférencés (il n&amp;rsquo;est pas possible de changer l&amp;rsquo;adresse réelle en mémoire).
Déclaration
Pour déclarer un Field-Symbol le mot clé FIELD-SYMBOLS doit être utilisé. Les types peuvent être génériques (ANY [... TABLE]) pour gérer une grande variété de variables.
FIELD-SYMBOLS: &amp;lt;fs_line&amp;gt; TYPE any, &amp;quot;generic &amp;lt;fs_struct&amp;gt; TYPE kna1. &amp;quot;non-generic Attribution
Les symboles de champ sont &amp;ldquo;non affectés&amp;rdquo; lors de la déclaration, ce qui signifie qu&amp;rsquo;ils ne pointent vers rien.</description>
    </item>
    
    <item>
      <title>Boucles</title>
      <link>https://www.wikiod.com/fr/abap/boucles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/boucles/</guid>
      <description>Lors d&amp;rsquo;une boucle sur des tables internes, il est généralement préférable de ASSIGN à un symbole de champ plutôt que de boucler INTO une zone de travail. L&amp;rsquo;attribution de symboles de champ met simplement à jour leur référence pour pointer vers la ligne suivante de la table interne à chaque itération, tandis que l&amp;rsquo;utilisation de &amp;ldquo;INTO&amp;rdquo; entraîne la copie de la ligne de la table dans la zone de travail, ce qui peut être coûteux pour les tables longues/larges.</description>
    </item>
    
    <item>
      <title>Déclaration de données</title>
      <link>https://www.wikiod.com/fr/abap/declaration-de-donnees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/declaration-de-donnees/</guid>
      <description>## Déclaration de données en ligne Dans certaines situations, les déclarations de données peuvent être effectuées en ligne.
LOOP AT lt_sflight INTO DATA(ls_sflight). WRITE ls_sflight-carrid. ENDLOOP. Déclaration de variable unique # DATA begda TYPE sy-datum. Déclaration de variables multiples # DATA: begda TYPE sy-datum, endda TYPE sy-datum. Déclaration de données en ligne dans l&amp;rsquo;instruction SELECT # Lors de l&amp;rsquo;utilisation d&amp;rsquo;une déclaration de données en ligne à l&amp;rsquo;intérieur d&amp;rsquo;un bloc SELECT...ENDSELECT ou d&amp;rsquo;une instruction SELECT SINGLE, le caractère @ doit être utilisé comme caractère d&amp;rsquo;échappement pour l&amp;rsquo;expression DATA(lv_cityto).</description>
    </item>
    
    <item>
      <title>Expressions régulières</title>
      <link>https://www.wikiod.com/fr/abap/expressions-regulieres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/expressions-regulieres/</guid>
      <description>Évaluation d&amp;rsquo;expressions régulières avec une fonction de prédicat # La fonction de prédicat matches peut être utilisée pour évaluer des chaînes à la volée sans utiliser de déclaration d&amp;rsquo;objet.
IF matches( val = &#39;Not a hex string&#39; regex = &#39;[0-9a-f]*&#39; ). cl_demo_output=&amp;gt;display( &#39;This will not display&#39; ). ELSEIF matches( val = &#39;6c6f7665&#39; regex = &#39;[0-9a-f]*&#39; ). cl_demo_output=&amp;gt;display( &#39;This will display&#39; ). ENDIF. Remplacement # L&amp;rsquo;instruction REPLACE peut fonctionner directement avec des expressions régulières :</description>
    </item>
    
    <item>
      <title>SQL ouvert</title>
      <link>https://www.wikiod.com/fr/abap/sql-ouvert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/abap/sql-ouvert/</guid>
      <description>Instruction SELECT # SELECT est une instruction Open-SQL permettant de lire des données d&amp;rsquo;une ou plusieurs tables de base de données dans des [objets de données][1].
Sélection de tous les enregistrements
* This returns all records into internal table lt_mara. SELECT * FROM mara INTO lt_mara. Sélection d&amp;rsquo;un seul enregistrement
* This returns single record if table consists multiple records with same key. SELECT SINGLE * INTO TABLE lt_mara FROM mara WHERE matnr EQ &#39;400-500&#39;.</description>
    </item>
    
  </channel>
</rss>
