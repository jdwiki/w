<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python-requests Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/python-requests/</link>
    <description>Recent content in Python-requests Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/python-requests/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec les requêtes python</title>
      <link>https://www.wikiod.com/fr/python-requests/premiers-pas-avec-les-requetes-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/python-requests/premiers-pas-avec-les-requetes-python/</guid>
      <description>Installation ou configuration # python-requests est disponible sur PyPI, le Python Package Index, ce qui signifie qu&amp;rsquo;il peut être installé via pip :
pip install requests Le code source à jour peut être trouvé sur le [requests GitHub repository][1]
Si vous souhaitez l&amp;rsquo;installer à partir des sources, vous pouvez le faire soit en clonant le référentiel GitHub :
git clone git://github.com/kennethreitz/requests.git Ou en récupérant l&amp;rsquo;archive (-O écrit la sortie dans le fichier ; -L suit les redirections) :</description>
    </item>
    
    <item>
      <title>Automatisation de la connexion à l&#39;aide de requêtes via l&#39;authentification unique</title>
      <link>https://www.wikiod.com/fr/python-requests/automatisation-de-la-connexion-a-laide-de-requetes-via-lauthentification-unique/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/python-requests/automatisation-de-la-connexion-a-laide-de-requetes-via-lauthentification-unique/</guid>
      <description>Exemple d&amp;rsquo;accès à des pages authentifiées à l&amp;rsquo;aide de requêtes # Parfois, nous avons besoin d&amp;rsquo;analyser des pages, mais cela nécessite que vous soyez un utilisateur autorisé. Voici un exemple qui vous montre comment vous connecter à Oracle.
import sys import requests import json from bs4 import BeautifulSoup def mprint(x): sys.stdout.write(x) print return headers = {&#39;User-Agent&#39;: &#39;Mozilla/5.0 (X11; Linux i686; rv:7.0.1) Gecko/20100101 Firefox/7.0.1&#39;} mprint(&#39;[-] Initialization...&#39;) s = requests.session() s.headers.update(headers) print &#39;done&#39; mprint(&#39;[-] Gathering JSESSIONID.</description>
    </item>
    
    <item>
      <title>Envoi et réception de JSON</title>
      <link>https://www.wikiod.com/fr/python-requests/envoi-et-reception-de-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/python-requests/envoi-et-reception-de-json/</guid>
      <description>Publication de JSON # Pour POSTER un corps JSON, transmettez une structure de données Python à l&amp;rsquo;argument json ; ici un dictionnaire est posté mais tout ce qui peut être encodé en JSON fera l&amp;rsquo;affaire :
import requests # Create a dictionary to be sent. json_data = {&#39;foo&#39;: [&#39;bar&#39;, &#39;baz&#39;], &#39;spam&#39;: True, &#39;eggs&#39;: 5.5} # Send the data. response = requests.post(url=&#39;http://example.com/api/foobar&#39;, json=json_data) print(&amp;quot;Server responded with %s&amp;quot; % response.status_code) requests s&amp;rsquo;occupe de l&amp;rsquo;encodage en JSON pour vous et définit le Content-Type sur application/json.</description>
    </item>
    
    <item>
      <title>Cadre Django</title>
      <link>https://www.wikiod.com/fr/python-requests/cadre-django/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/python-requests/cadre-django/</guid>
      <description>##Installation et configuration Django est un framework full stack pour le développement web. Il alimente certains des sites Web les plus populaires sur Internet.
Pour installer le framework; utilisez l&amp;rsquo;outil pip :
pip install django Si vous l&amp;rsquo;installez sur OSX ou Linux, la commande ci-dessus peut entraîner une erreur d&amp;rsquo;autorisation ; pour éviter cette erreur, installez le package pour votre compte utilisateur ou utilisez un environnement virtuel :
pip install --user django Une fois installé, vous aurez accès à l&amp;rsquo;outil d&amp;rsquo;amorçage django-admin, qui créera un répertoire avec certaines valeurs par défaut pour démarrer le développement.</description>
    </item>
    
    <item>
      <title>Utiliser des requêtes derrière un proxy</title>
      <link>https://www.wikiod.com/fr/python-requests/utiliser-des-requetes-derriere-un-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/python-requests/utiliser-des-requetes-derriere-un-proxy/</guid>
      <description>Définition du proxy dans le code Python # Si votre code s&amp;rsquo;exécute derrière un proxy et que vous connaissez le point final, vous pouvez définir ces informations dans votre code.
requests accepte un paramètre [proxies][1]. Il doit s&amp;rsquo;agir d&amp;rsquo;un dictionnaire qui mappe le protocole à l&amp;rsquo;URL du proxy.
proxies = { &#39;http&#39;: &#39;http://proxy.example.com:8080&#39;, &#39;https&#39;: &#39;http://secureproxy.example.com:8090&#39;, } Notez que dans le dictionnaire, nous avons défini l&amp;rsquo;URL du proxy pour deux protocoles distincts : HTTP et HTTPS.</description>
    </item>
    
    <item>
      <title>Des dossiers</title>
      <link>https://www.wikiod.com/fr/python-requests/des-dossiers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/python-requests/des-dossiers/</guid>
      <description>Paramètres # Paramètres Fonction dossier JSON Liste des chemins d&amp;rsquo;accès aux fichiers. type_de_contenu Types MIME en-têtes En-têtes HTTP La variable r dans les exemples contient les données binaires complètes du fichier que vous envoyez.
Téléchargement de fichier simple # url = &#39;http://your_url&#39; files = {&#39;file&#39;: open(&#39;myfile.test&#39;, &#39;rb&#39;)} r = requests.post(url, files=files) Téléchargement de fichier avec paramètres manuels # url = &#39;http://httpbin.org/post&#39; files = {&#39;file&#39;: (&#39;report.xls&#39;, open(&#39;report.xls&#39;, &#39;rb&#39;), &#39;application/vnd.ms-excel&#39;, {&#39;Expires&#39;: &#39;0&#39;})} r = requests.</description>
    </item>
    
  </channel>
</rss>
