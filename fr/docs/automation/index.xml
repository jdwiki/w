<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel d&#39;automatisation on </title>
    <link>https://www.wikiod.com/fr/docs/automation/</link>
    <description>Recent content in Tutoriel d&#39;automatisation on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec l&#39;automatisation</title>
      <link>https://www.wikiod.com/fr/automation/debuter-avec-lautomatisation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/automation/debuter-avec-lautomatisation/</guid>
      <description>Identification des objectifs-types-approches de l&amp;rsquo;automatisation des tests # L&amp;rsquo;automatisation des tests est un vaste sujet. DEV/QA devrait d&amp;rsquo;abord se pencher sur ces questions :
Quelle est la nature du produit ? (Web, Mobile, Cloud, IOT, Analytique) Qu&amp;rsquo;est-ce que l&amp;rsquo;étape de développement ? (développé-hérité, en développement) Qu&amp;rsquo;est-ce que la pile technologique ? (Java, C#, Python, Ruby, Noeud, Réagir) Est-ce basé sur SOA/Micro-services ? Quelle serait la meilleure approche de l&amp;rsquo;automatisation qui peut donner une rétroaction plus rapide ou ?</description>
    </item>
    
    <item>
      <title>Automatisation de l&#39;interface utilisateur</title>
      <link>https://www.wikiod.com/fr/automation/automatisation-de-linterface-utilisateur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/automation/automatisation-de-linterface-utilisateur/</guid>
      <description>L&amp;rsquo;objectif de cette section serait de répertorier les outils, les approches de conception et les défis courants pour tout effort d&amp;rsquo;automatisation de l&amp;rsquo;interface utilisateur.
Automatisation de l&amp;rsquo;interface utilisateur Web # Approches de conception # Facteur de conduite : quel devrait être notre moteur de conduite ? Doit-il s&amp;rsquo;agir de fonctions de test, de mots-clés, de données ou de comportement ? Nous énumérons ici différentes approches avec des exemples. Basé sur les données/basé sur les mots clés/hybride : Piloté par le code : BDD/TDD/ATDD : Concombre-Java avec l&amp;rsquo;approche Page Factory # Étapes pour commencer : # Télécharger Eclipse Créez un projet Java Maven avec l&amp;rsquo;exemple d&amp;rsquo;organisation de packages suivant src/test/java com.</description>
    </item>
    
  </channel>
</rss>
