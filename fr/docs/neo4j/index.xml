<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel neo4j on </title>
    <link>https://www.wikiod.com/fr/docs/neo4j/</link>
    <description>Recent content in Tutoriel neo4j on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/neo4j/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec neo4j</title>
      <link>https://www.wikiod.com/fr/neo4j/premiers-pas-avec-neo4j/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/neo4j/premiers-pas-avec-neo4j/</guid>
      <description>Langage de requête chiffré # C&amp;rsquo;est le Cypher, le langage de requête de Neo4j. À bien des égards, Cypher est similaire à SQL si vous le connaissez, sauf que SQL fait référence à des éléments stockés dans une table, tandis que Cypher fait référence à des éléments stockés dans un graphique.
Tout d&amp;rsquo;abord, nous devrions commencer par apprendre à créer un graphique et à ajouter des relations, car c&amp;rsquo;est essentiellement ce qu&amp;rsquo;est Neo4j.</description>
    </item>
    
    <item>
      <title>Zéro</title>
      <link>https://www.wikiod.com/fr/neo4j/zero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/neo4j/zero/</guid>
      <description>Cypher est le langage de requête utilisé par Neo4j. Vous utilisez Cypher pour effectuer des tâches et des correspondances avec un graphique Neo4j.
Cypher est &amp;ldquo;inspiré de SQL&amp;rdquo; et est conçu pour être intuitif dans la façon dont vous décrivez les relations, c&amp;rsquo;est-à-dire généralement le dessin du modèle ressemblera à la représentation Cypher du motif.
Suppression # Supprimer tous les nœuds # MATCH (n) DETACH DELETE n DETACH ne fonctionne pas dans les anciennes versions (moins de 2.</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://www.wikiod.com/fr/neo4j/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/neo4j/python/</guid>
      <description>Installer neo4jrestclient # pip install neo4jrestclient Connectez-vous à neo4j # from neo4jrestclient.client import GraphDatabase db = GraphDatabase(&amp;quot;http://localhost:7474&amp;quot;, username=&amp;quot;neo4j&amp;quot;, password=&amp;quot;mypass&amp;quot;) Créer des nœuds avec des étiquettes # user = db.labels.create(&amp;quot;User&amp;quot;) u1 = db.nodes.create(name=&amp;quot;user1&amp;quot;) user.add(u1) u2 = db.nodes.create(name=&amp;quot;user2&amp;quot;) user.add(u2) Vous pouvez associer une étiquette à plusieurs nœuds en une seule fois # Language = db.labels.create(&amp;quot;Language&amp;quot;) b1 = db.nodes.create(name=&amp;quot;C++&amp;quot;) b2 = db.nodes.create(name=&amp;quot;Python&amp;quot;) beer.add(b1, b2) Créer des relations # u1.relationships.create(&amp;quot;likes&amp;quot;, b1) u1.relationships.create(&amp;quot;likes&amp;quot;, b2) u2.relationships.create(&amp;quot;likes&amp;quot;, b1) Relations bidirectionnelles # u1.</description>
    </item>
    
  </channel>
</rss>
