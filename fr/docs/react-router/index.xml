<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel sur le routeur React on </title>
    <link>https://www.wikiod.com/fr/docs/react-router/</link>
    <description>Recent content in Tutoriel sur le routeur React on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/react-router/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec React Router</title>
      <link>https://www.wikiod.com/fr/react-router/premiers-pas-avec-react-router/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/react-router/premiers-pas-avec-react-router/</guid>
      <description>Hello World avec React et React Router # Une fois que vous avez installé react et react-router, il est temps de les utiliser ensemble.
La syntaxe est très simple, vous spécifiez &amp;ldquo;l&amp;rsquo;url&amp;rdquo; et le &amp;ldquo;composant&amp;rdquo; que vous voulez rendre lorsque cette URL est ouverte
&amp;lt;Route path=&amp;quot;hello&amp;quot; component={ HelloComponent } /&amp;gt;
Cela signifie que lorsque le chemin de l&amp;rsquo;URL est hello, rendez le composant HelloComponent
FILENAME : app.js
&#39;use strict&#39;; import React from &#39;react&#39;; import { render } from &#39;react-dom&#39;; import { Router, browserHistory, Link } from &#39;react-router&#39;; // These are just demo components which render different text.</description>
    </item>
    
    <item>
      <title>Réagissez Router 4 avec TypeScript</title>
      <link>https://www.wikiod.com/fr/react-router/reagissez-router-4-avec-typescript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/react-router/reagissez-router-4-avec-typescript/</guid>
      <description>Quelques exemples d&amp;rsquo;intégration de TypeScript avec react-router 4.x.
Le but est de préserver autant que possible la sécurité du type.
Comment accomplir cela avec TypeScript n&amp;rsquo;est pas évident lorsque l&amp;rsquo;on suit la documentation des projets.
Routage avec paramètres typés # import * as React from &#39;react&#39;; import * as ReactDOM from &#39;react-dom&#39;; import { Route, BrowserRouter as Router, Link, match } from &#39;react-router-dom&#39;; // define React components for multiple pages class Home extends React.</description>
    </item>
    
  </channel>
</rss>
