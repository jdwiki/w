<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solrj Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/solrj/</link>
    <description>Recent content in Solrj Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/solrj/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec solrj</title>
      <link>https://www.wikiod.com/fr/solrj/demarrer-avec-solrj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/solrj/demarrer-avec-solrj/</guid>
      <description>Installation ou configuration # SolrJ fait partie de la distribution Solr depuis Solr 1.x. La dernière version de Solr peut être téléchargée [ici][1]. À partir de Solr-6.3.0, la dernière version disponible, nous devons obtenir les bibliothèques suivantes et les ajouter à notre chemin de construction : /dist/apache-solr-solrj-.jar /dist/solrj-lib/
Une fois que nous avons terminé, SolrJ est prêt à communiquer avec notre instance Solr. Dans l&amp;rsquo;exemple suivant, nous verrons comment utiliser SolrJ pour interroger ou ajouter du contenu à Solr.</description>
    </item>
    
    <item>
      <title>Obtenez des chefs de partition à l&#39;aide de SolrJ</title>
      <link>https://www.wikiod.com/fr/solrj/obtenez-des-chefs-de-partition-a-laide-de-solrj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/solrj/obtenez-des-chefs-de-partition-a-laide-de-solrj/</guid>
      <description>Dans certains cas, par exemple lorsque nous voulons sauvegarder des collections solrcloud par programme, nous devons savoir quels sont les chefs de partition. L&amp;rsquo;exemple ci-dessous montre comment cela peut être réalisé en utilisant SolrJ.
Obtenez des chefs de partition à l&amp;rsquo;aide de l&amp;rsquo;API SolrJ # private final String COLLECTION_NAME = &amp;quot;myCollection&amp;quot;; private final String ZOOKEPER_CLIENT_TIMEOUT_MS = &amp;quot;1000000&amp;quot; private Map&amp;lt;String, String&amp;gt; getShardLeaders(CloudSolrServer cloudSolrServer) throws InterruptedException, KeeperException { Map&amp;lt;String, String&amp;gt; shardleaders = new TreeMap&amp;lt;String, String&amp;gt;(); ZkStateReader zkStateReader = cloudSolrServer.</description>
    </item>
    
    <item>
      <title>Obtenez des extraits en surbrillance avec SolrJ</title>
      <link>https://www.wikiod.com/fr/solrj/obtenez-des-extraits-en-surbrillance-avec-solrj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/solrj/obtenez-des-extraits-en-surbrillance-avec-solrj/</guid>
      <description>Lorsque nous obtenons des extraits de code en surbrillance dans notre réponse Solr par programmation, nous devons les extraire et les gérer. Le code ci-dessous montre comment faire cela avec SolrJ.
Obtenir le texte en surbrillance pour les champs à valeur unique # public String getHighlightedText(final QueryResponse queryResponse, final String fieldName, final String docId) { String highlightedText = &amp;quot;&amp;quot;; Map&amp;lt;String, Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;&amp;gt; highlights = queryResponse.getHighlighting(); if (highlights!=null &amp;amp;&amp;amp; MapUtils.isNotEmpty(highlights.get(docId))) { List&amp;lt;String&amp;gt; snippets = highlights.</description>
    </item>
    
  </channel>
</rss>
