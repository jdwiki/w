<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cuda Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/cuda/</link>
    <description>Recent content in cuda Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/cuda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec cuda</title>
      <link>https://www.wikiod.com/fr/cuda/demarrer-avec-cuda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cuda/demarrer-avec-cuda/</guid>
      <description>Lançons un seul thread CUDA pour dire bonjour # Ce programme CUDA simple montre comment écrire une fonction qui s&amp;rsquo;exécutera sur le GPU (alias &amp;ldquo;périphérique&amp;rdquo;). Le CPU, ou « hôte », crée des threads CUDA en appelant des fonctions spéciales appelées « noyaux ». Les programmes CUDA sont des programmes C++ avec une syntaxe supplémentaire.
Pour voir comment cela fonctionne, placez le code suivant dans un fichier nommé hello.cu :</description>
    </item>
    
    <item>
      <title>Réduction parallèle (par exemple, comment additionner un tableau)</title>
      <link>https://www.wikiod.com/fr/cuda/reduction-parallele-par-exemple-comment-additionner-un-tableau/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cuda/reduction-parallele-par-exemple-comment-additionner-un-tableau/</guid>
      <description>L&amp;rsquo;algorithme de réduction parallèle fait généralement référence à un algorithme qui combine un tableau d&amp;rsquo;éléments, produisant un résultat unique. Les problèmes typiques qui entrent dans cette catégorie sont :
additionner tous les éléments d&amp;rsquo;un tableau trouver un maximum dans un tableau En général, la réduction parallèle peut être appliquée pour tout [opérateur associatif][1] binaire, c&amp;rsquo;est-à-dire (A*B)*C = A*(B*C). Avec un tel opérateur *, l&amp;rsquo;algorithme de réduction parallèle regroupe de manière répétée les arguments du tableau par paires.</description>
    </item>
    
    <item>
      <title>Communication inter-blocs</title>
      <link>https://www.wikiod.com/fr/cuda/communication-inter-blocs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cuda/communication-inter-blocs/</guid>
      <description>Les blocs dans CUDA fonctionnent de manière semi-indépendante. Il n&amp;rsquo;existe aucun moyen sûr de les synchroniser tous. Cependant, cela ne signifie pas qu&amp;rsquo;ils ne peuvent en aucun cas interagir les uns avec les autres.
Garde du dernier bloc # Considérez une grille travaillant sur une tâche, par ex. une réduction parallèle. Initialement, chaque bloc peut faire son travail indépendamment, produisant un résultat partiel. À la fin cependant, les résultats partiels doivent être combinés et fusionnés.</description>
    </item>
    
    <item>
      <title>Installation de cuda</title>
      <link>https://www.wikiod.com/fr/cuda/installation-de-cuda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cuda/installation-de-cuda/</guid>
      <description>Pour installer la boîte à outils CUDA sur Windows, vous devez d&amp;rsquo;abord installer une version appropriée de Visual Studio. Visual studio 2013 doit être installé si vous souhaitez installer CUDA 7.0 ou 7.5. Visual Studio 2015 est pris en charge pour CUDA 8.0 et au-delà.
Lorsque vous avez une version appropriée de VS sur votre système, il est temps de télécharger et d&amp;rsquo;installer la boîte à outils CUDA. Suivez ce lien pour trouver la version de la boîte à outils CUDA que vous recherchez : [Archive de la boîte à outils CUDA][1]</description>
    </item>
    
  </channel>
</rss>
