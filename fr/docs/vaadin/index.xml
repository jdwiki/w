<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vaadin Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/vaadin/</link>
    <description>Recent content in vaadin Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/vaadin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Commencer avec vaadin</title>
      <link>https://www.wikiod.com/fr/vaadin/commencer-avec-vaadin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/vaadin/commencer-avec-vaadin/</guid>
      <description>Créer un projet Vaadin avec Maven # Avec Maven, vous pouvez créer un projet Vaadin avec l&amp;rsquo;archétype vaadin-archetype-application. Vous pouvez également ajouter cet archétype dans IDE pour créer un projet maven avec IDE.
mvn archetype:generate -DarchetypeGroupId=com.vaadin -DarchetypeArtifactId=vaadin-archetype-application -DarchetypeVersion=7.6.8 -DgroupId=myvaadin.project -DartifactId=DemoVaadinProject -Dversion=0.1 -Dpackaging=war Une fois que vous avez exécuté la commande ci-dessus, vous aurez la structure de projet suivante.
DemoVaadinProject |-src |-main |-java | |-myvaadin | |-project | |-MyUI.java |-resource | |-myvaadin | |-project | |-MyAppWidgetset.</description>
    </item>
    
    <item>
      <title>Utiliser des modules complémentaires avec Vaadin</title>
      <link>https://www.wikiod.com/fr/vaadin/utiliser-des-modules-complementaires-avec-vaadin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/vaadin/utiliser-des-modules-complementaires-avec-vaadin/</guid>
      <description>Utilisation de modules complémentaires dans un projet Maven # Pour afficher et parcourir les modules complémentaires Vaadin dans l&amp;rsquo;annuaire, vous devez être enregistré sur vaadin.com. Après la découverte initiale des détails de l&amp;rsquo;artefact, par ex. pour le téléchargement et l&amp;rsquo;utilisation, l&amp;rsquo;enregistrement n&amp;rsquo;est pas nécessaire. De plus, l&amp;rsquo;utilisation de modules complémentaires dans un projet Maven n&amp;rsquo;est pas spécifique à l&amp;rsquo;IDE et les mêmes instructions s&amp;rsquo;appliquent.
Depuis un projet Maven normal, commencez par éditer votre pom.</description>
    </item>
    
    <item>
      <title>Vaadin et Maven</title>
      <link>https://www.wikiod.com/fr/vaadin/vaadin-et-maven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/vaadin/vaadin-et-maven/</guid>
      <description>Cela serait très utile à la communauté Vaadin et Maven car il n&amp;rsquo;y a pas de documentation
J&amp;rsquo;ai besoin de la configuration Maven # ** Maven commun **
mvn -B archetype:generate -DarchetypeGroupId=com.vaadin -DarchetypeArtifactId=vaadin- archetype-application -DarchetypeVersion=7.7.3 -DgroupId=org.test -DartifactId=vaadin-app -Dversion=1.0-SNAPSHOT ** Maven avancé **
mvn archetype:generate \ -DgroupId=com.mycompany.mycompanyapp \ -DartifactId=mycompanyapp \ -Dversion=1.0 \ -DpackageName=com.mycompany.mycompanyapp \ -DarchetypeGroupId=com.vaadin \ -DarchetypeArtifactId=vaadin-archetype-application \ -DthemeName=mytheme \ -DuiName=MyCompanyAppUI \ -DwidgetsetName=MyCompanyAppAppWidgetSet \ -DarchetypeVersion=LATEST \ -DinteractiveMode=false Une fois cela fait, exécutez la commande suivante : cd ~/mycompanyapp &amp;amp;&amp;amp; mvn install -Dmaven.</description>
    </item>
    
    <item>
      <title>Thèmes</title>
      <link>https://www.wikiod.com/fr/vaadin/themes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/vaadin/themes/</guid>
      <description>Lumière # @theme(&amp;quot;valo&amp;quot;) Rennes # @theme(&amp;quot;reindeer&amp;quot;) </description>
    </item>
    
    <item>
      <title>Page de connexion</title>
      <link>https://www.wikiod.com/fr/vaadin/page-de-connexion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/vaadin/page-de-connexion/</guid>
      <description>SimpleLoginView # public class SimpleLoginView extends CustomComponent implements View, Button.ClickListener { public static final String NAME = &amp;quot;login&amp;quot;; private final TextField user; private final PasswordField password; private final Button loginButton; public SimpleLoginView() { setSizeFull(); // Create the user input field user = new TextField(&amp;quot;User:&amp;quot;); user.setWidth(&amp;quot;300px&amp;quot;); user.setRequired(true); user.setInputPrompt(&amp;quot;Your username (eg. joe@email.com)&amp;quot;); user.addValidator(new EmailValidator( &amp;quot;Username must be an email address&amp;quot;)); user.setInvalidAllowed(false); // Create the password input field password = new PasswordField(&amp;quot;Password:&amp;quot;); password.setWidth(&amp;quot;300px&amp;quot;); password.</description>
    </item>
    
    <item>
      <title>Vaadin TouchKit</title>
      <link>https://www.wikiod.com/fr/vaadin/vaadin-touchkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/vaadin/vaadin-touchkit/</guid>
      <description>Installer # @Theme(&amp;quot;mobiletheme&amp;quot;) @Widgetset(&amp;quot;com.example.myapp.MyAppWidgetSet&amp;quot;) @Title(&amp;quot;My Mobile App&amp;quot;) public class SimplePhoneUI extends UI { @Override protected void init(VaadinRequest request) { // Define a view class MyView extends NavigationView { public MyView() { super(&amp;quot;Planet Details&amp;quot;); CssLayout content = new CssLayout(); setContent(content); VerticalComponentGroup group = new VerticalComponentGroup(); content.addComponent(group); group.addComponent(new TextField(&amp;quot;Planet&amp;quot;)); group.addComponent(new NumberField(&amp;quot;Found&amp;quot;)); group.addComponent(new Switch(&amp;quot;Probed&amp;quot;)); setRightComponent(new Button(&amp;quot;OK&amp;quot;)); } } // Use it as the content root setContent(new MyView()); } </description>
    </item>
    
  </channel>
</rss>
