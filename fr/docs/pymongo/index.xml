<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel PyMongo on </title>
    <link>https://www.wikiod.com/fr/docs/pymongo/</link>
    <description>Recent content in Tutoriel PyMongo on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/pymongo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec PyMongo</title>
      <link>https://www.wikiod.com/fr/pymongo/demarrer-avec-pymongo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pymongo/demarrer-avec-pymongo/</guid>
      <description>Bonjour le monde # PyMongo est un pilote Python natif pour MongoDB.
Installer PyMongo # pip install pymongo Créer une connexion # Utilisez MongoClient pour créer une connexion. MongoClient utilise par défaut l&amp;rsquo;instance MongoDB s&amp;rsquo;exécutant sur localhost:27017 si elle n&amp;rsquo;est pas spécifiée.
from pymongo import MongoClient client = MongoClient() Accéder aux objets de la base de données # La classe [Database][1] de PyMongo représente la construction de la base de données dans MongoDB.</description>
    </item>
    
    <item>
      <title>Conversion entre BSON et JSON</title>
      <link>https://www.wikiod.com/fr/pymongo/conversion-entre-bson-et-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pymongo/conversion-entre-bson-et-json/</guid>
      <description>Dans de nombreuses applications, les enregistrements de MongoDB doivent être sérialisés au format JSON. Si vos enregistrements ont des champs de type date, datetime, objectId, binary, code, etc., vous rencontrerez des exceptions TypeError: not JSON serializable lors de l&amp;rsquo;utilisation de json.dumps. Cette rubrique montre comment surmonter cela.
Utilisation de json_util # json_util fournit deux méthodes d&amp;rsquo;assistance, dumps et loads, qui enveloppent les méthodes json natives et fournissent une conversion BSON explicite vers et depuis json.</description>
    </item>
    
    <item>
      <title>Filtrer les documents par heure de création stockée dans ObjectId</title>
      <link>https://www.wikiod.com/fr/pymongo/filtrer-les-documents-par-heure-de-creation-stockee-dans-objectid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pymongo/filtrer-les-documents-par-heure-de-creation-stockee-dans-objectid/</guid>
      <description>Inclut des exemples de requête pymongo pour filtrer les documents par horodatage encapsulé dans ObjectId
## Documents créés au cours des 60 dernières secondes Comment retrouver des documents créés il y a 60 secondes
seconds = 60 gen_time = datetime.datetime.today() - datetime.timedelta(seconds=seconds) dummy_id = ObjectId.from_datetime(gen_time) db.CollectionName.find({&amp;quot;_id&amp;quot;: {&amp;quot;$gte&amp;quot;: dummy_id}}) Si vous vous trouvez dans un fuseau horaire différent, vous devrez peut-être décaler la date et l&amp;rsquo;heure sur UTC
seconds = 60 gen_time = datetime.</description>
    </item>
    
  </channel>
</rss>
