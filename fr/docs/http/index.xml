<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel HTTP on </title>
    <link>https://www.wikiod.com/fr/docs/http/</link>
    <description>Recent content in Tutoriel HTTP on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec HTTP</title>
      <link>https://www.wikiod.com/fr/http/premiers-pas-avec-http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/premiers-pas-avec-http/</guid>
      <description>##HTTP/2
Requêtes et réponses HTTP # [![Les clients et les serveurs HTTP envoient respectivement des requêtes et des réponses HTTP][1]][1]
HTTP décrit comment un client HTTP, tel qu&amp;rsquo;un navigateur Web, envoie une requête HTTP via un réseau à un serveur HTTP, qui renvoie ensuite une réponse HTTP au client.
La demande HTTP est généralement soit une demande de ressource en ligne, telle qu&amp;rsquo;une page Web ou une image, mais peut également inclure des informations supplémentaires, telles que des données saisies dans un formulaire.</description>
    </item>
    
    <item>
      <title>Requêtes HTTP</title>
      <link>https://www.wikiod.com/fr/http/requetes-http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/requetes-http/</guid>
      <description>Paramètres # Méthode HTTP Objectif OPTIONS Récupérer des informations sur les options de communication (méthodes et en-têtes disponibles) disponibles sur l&amp;rsquo;URI de requête spécifié. OBTENIR Récupérer les données identifiées par l&amp;rsquo;URI de requête, ou les données produites par le script disponible à l&amp;rsquo;URI de requête. TÊTE Identique à GET sauf qu&amp;rsquo;aucun corps de message ne sera renvoyé par le serveur : uniquement les en-têtes. &amp;lsquo;POSTER&amp;rsquo; Soumettez un bloc de données (spécifié dans le corps du message) au serveur pour l&amp;rsquo;ajouter à la ressource spécifiée dans l&amp;rsquo;URI de la demande.</description>
    </item>
    
    <item>
      <title>Codes d&#39;état HTTP</title>
      <link>https://www.wikiod.com/fr/http/codes-detat-http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/codes-detat-http/</guid>
      <description>Dans HTTP, les codes d&amp;rsquo;état sont un mécanisme lisible par machine indiquant le résultat d&amp;rsquo;une requête précédemment émise. De RFC 7231, sec. 6: &amp;ldquo;L&amp;rsquo;élément status-code est un code entier à trois chiffres donnant le résultat de la tentative de compréhension et de satisfaction de la demande.&amp;rdquo;
La grammaire formelle permet aux codes d&amp;rsquo;être n&amp;rsquo;importe quoi entre &amp;lsquo;000&amp;rsquo; et &amp;lsquo;999&amp;rsquo;. Cependant, seule la plage de &amp;lsquo;100&amp;rsquo; à &amp;lsquo;599&amp;rsquo; a une signification.</description>
    </item>
    
    <item>
      <title>Réponses HTTP</title>
      <link>https://www.wikiod.com/fr/http/reponses-http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/reponses-http/</guid>
      <description>Paramètres # Code d&amp;rsquo;état Phrase de raison — Description 100 Continuer : le client doit envoyer la partie suivante d&amp;rsquo;une requête en plusieurs parties. 101 Changement de protocole : le serveur modifie la version ou le type de protocole utilisé dans cette communication. 200 OK — le serveur a reçu et complété la demande du client. 201 Created — le serveur a accepté la demande et créé une nouvelle ressource, qui est disponible sous l&amp;rsquo;URI dans l&amp;rsquo;en-tête Location.</description>
    </item>
    
    <item>
      <title>Mise en cache des réponses HTTP</title>
      <link>https://www.wikiod.com/fr/http/mise-en-cache-des-reponses-http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/mise-en-cache-des-reponses-http/</guid>
      <description>Les réponses sont mises en cache séparément pour chaque URL et chaque méthode HTTP.
La mise en cache HTTP est définie dans RFC 7234.
Glossaire # fresh — état d&amp;rsquo;une réponse mise en cache, qui n&amp;rsquo;a pas encore expiré. En règle générale, une nouvelle réponse peut satisfaire les demandes sans qu&amp;rsquo;il soit nécessaire de contacter le serveur d&amp;rsquo;où provient la réponse. stale — état d&amp;rsquo;une réponse mise en cache, qui a dépassé sa date d&amp;rsquo;expiration.</description>
    </item>
    
    <item>
      <title>Authentification</title>
      <link>https://www.wikiod.com/fr/http/authentification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/authentification/</guid>
      <description>Paramètres # Paramètre Détails État de la réponse 401 si le serveur d&amp;rsquo;origine requiert une authentification, [407](https://tools.ietf.org/html/rfc7235 #section-3.2) si un proxy intermédiaire requiert une authentification En-têtes de réponse WWW-Authenticate par le serveur d&amp;rsquo;origine, [Proxy-Authenticate](https://tools.ietf.org/html /rfc7235#section-4.3) par un proxy intermédiaire En-têtes de requête Authorization pour l&amp;rsquo;autorisation contre un serveur d&amp;rsquo;origine, [Proxy-Authorization](https://tools.ietf.org/html /rfc7235#section-4.4) contre un proxy intermédiaire Schéma d&amp;rsquo;authentification Basic pour l&amp;rsquo;authentification de base, mais d&amp;rsquo;autres tels que Digest et SPNEGO peuvent être utilisés.</description>
    </item>
    
    <item>
      <title>Encodages et compression des réponses</title>
      <link>https://www.wikiod.com/fr/http/encodages-et-compression-des-reponses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/encodages-et-compression-des-reponses/</guid>
      <description>compression HTTP # Le corps du message HTTP peut être compressé (depuis HTTP/1.1). Soit le serveur compresse la requête et ajoute un en-tête &amp;ldquo;Content-Encoding&amp;rdquo;, soit un proxy le fait et ajoute un en-tête &amp;ldquo;Transfer-Encoding&amp;rdquo;.
Un client peut envoyer un en-tête de demande &amp;ldquo;Accept-Encoding&amp;rdquo; pour indiquer les encodages qu&amp;rsquo;il accepte.
Les encodages les plus couramment utilisés sont :
gzip - algorithme de dégonflage (LZ77) avec somme de contrôle CRC32 implémentée dans le programme de compression du fichier &amp;ldquo;gzip&amp;rdquo; ([RFC1952][1]) deflate - format de données &amp;ldquo;zlib&amp;rdquo; ([RFC1950][2]), algorithme de deflate (hybride LZ77 et Huffman) avec somme de contrôle Adler32 [1] : https://tools.</description>
    </item>
    
    <item>
      <title>HTTP pour les API</title>
      <link>https://www.wikiod.com/fr/http/http-pour-les-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/http-pour-les-api/</guid>
      <description>Les API HTTP utilisent un large éventail de verbes HTTP et renvoient généralement des réponses JSON ou XML.
Créer une ressource # Tout le monde n&amp;rsquo;est pas d&amp;rsquo;accord sur ce qu&amp;rsquo;est la méthode la plus sémantiquement correcte pour la création de ressources. Ainsi, votre API pourrait accepter les requêtes POST ou PUT, ou les deux.
Le serveur doit répondre par 201 Created si la ressource a été créée avec succès. Choisissez le code d&amp;rsquo;erreur le plus approprié si ce n&amp;rsquo;était pas le cas.</description>
    </item>
    
    <item>
      <title>Origine croisée et contrôle d&#39;accès</title>
      <link>https://www.wikiod.com/fr/http/origine-croisee-et-controle-dacces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/http/origine-croisee-et-controle-dacces/</guid>
      <description>[Le partage de ressources cross-origin][1] est conçu pour permettre des requêtes dynamiques entre domaines, souvent en utilisant des techniques telles que [AJAX][2]. Bien que le script effectue la majeure partie du travail, le serveur HTTP doit prendre en charge la demande en utilisant les en-têtes corrects.
[1] : https://www.w3.org/TR/cors [2] : https://en.wikipedia.org/wiki/Ajax_(programmation)
Client : envoi d&amp;rsquo;une requête CORS (Cross-Origin Resource Sharing) # Une demande d&amp;rsquo;origine croisée doit être envoyée avec l&amp;rsquo;en-tête &amp;ldquo;Origin&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
