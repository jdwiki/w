<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel google-cloud-platform on </title>
    <link>https://www.wikiod.com/fr/docs/google-cloud-platform/</link>
    <description>Recent content in Tutoriel google-cloud-platform on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/google-cloud-platform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec google-cloud-platform</title>
      <link>https://www.wikiod.com/fr/google-cloud-platform/premiers-pas-avec-google-cloud-platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/google-cloud-platform/premiers-pas-avec-google-cloud-platform/</guid>
      <description>Installation ou configuration # Instructions détaillées sur la configuration ou l&amp;rsquo;installation de google-cloud-platform.</description>
    </item>
    
    <item>
      <title>Nouveau projet avec le client d&#39;API Cloud Resource Manager pour Python</title>
      <link>https://www.wikiod.com/fr/google-cloud-platform/nouveau-projet-avec-le-client-dapi-cloud-resourcemanager-pour-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/google-cloud-platform/nouveau-projet-avec-le-client-dapi-cloud-resourcemanager-pour-python/</guid>
      <description>Nous utiliserons Google API Client Libraries pour Python pour cet exemple.
Il existe d&amp;rsquo;autres bibliothèques. Veuillez consulter explication des bibliothèques clientes Google pour plus de détails.
Nous utiliserons l&amp;rsquo;API Cloud Resource Manager pour [Créer et gérer des projets](https://cloud.google.com/resource-manager/docs/ création-gestion-de-projets).
Commençons.
Mettre tous ensemble&amp;hellip;
Si vous avez suivi les exemples ci-dessus, vous devriez dans un répertoire appelé my_project_folder et il contient, espérons-le, un sous-répertoire appelé venv.
Assurez-vous que votre environnement virtuel est activé.</description>
    </item>
    
    <item>
      <title>Nouveau projet avec le client d&#39;API Cloud Resource Manager pour .NET</title>
      <link>https://www.wikiod.com/fr/google-cloud-platform/nouveau-projet-avec-le-client-dapi-cloud-resourcemanager-pour-net/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/google-cloud-platform/nouveau-projet-avec-le-client-dapi-cloud-resourcemanager-pour-net/</guid>
      <description>Nous utiliserons Google API Client Libraries pour .NET pour cet exemple.
Il existe d&amp;rsquo;autres bibliothèques. Veuillez consulter Google Client Libraries Explained pour plus de détails.
Nous utiliserons l&amp;rsquo;API Cloud Resource Manager pour [Créer et gérer des projets](https://cloud.google.com/resource-manager/docs/ création-gestion-de-projets).
Commençons.
Mettre tous ensemble&amp;hellip;
Vous devriez avoir deux fichiers. Le premier fichier s&amp;rsquo;appelle packages.config ou project.json.
Appelons le second fichier Program.cs. Tout le code inclus dans les sections ci-dessus peut être collé dans une seule méthode principale :</description>
    </item>
    
    <item>
      <title>Google App Engine</title>
      <link>https://www.wikiod.com/fr/google-cloud-platform/google-app-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/google-cloud-platform/google-app-engine/</guid>
      <description>Google App Engine (GAE) est une offre de plate-forme en tant que service (PaaS) sur Google Cloud Platform, qui fait abstraction de l&amp;rsquo;infrastructure afin que vous vous concentriez sur le code de votre application Web. App Engine gère à la fois le scaling automatique à la hausse et à la baisse des instances à la demande pour votre application Web en fonction du nombre de requêtes.
App Engine est disponible dans 2 types d&amp;rsquo;environnements : standard et flexible, et prend en charge les langages de programmation suivants : Go, Java, Python, PHP, Node.</description>
    </item>
    
    <item>
      <title>Connecter Google Cloud SQL avec des applications et des outils ?</title>
      <link>https://www.wikiod.com/fr/google-cloud-platform/connecter-google-cloudsql-avec-des-applications-et-des-outils/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/google-cloud-platform/connecter-google-cloudsql-avec-des-applications-et-des-outils/</guid>
      <description>Comment connecter Google Cloud SQL avec des applications (comme Google App Engine) et des outils comme (mySQL workbench) ? # Dans ce document, nous verrons comment créer une instance Google Cloud SQL et les connecter dans votre application Google App Engine et l&amp;rsquo;outil d&amp;rsquo;administration MySQL Workbench.
Google Cloud SQL :
Google Cloud SQL est un service de base de données entièrement géré qui facilite la configuration, la maintenance, la gestion et l&amp;rsquo;administration de vos bases de données relationnelles MySQL dans le cloud.</description>
    </item>
    
  </channel>
</rss>
