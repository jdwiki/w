<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gcc Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/gcc/</link>
    <description>Recent content in gcc Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/gcc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec gcc</title>
      <link>https://www.wikiod.com/fr/gcc/premiers-pas-avec-gcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gcc/premiers-pas-avec-gcc/</guid>
      <description>&amp;ldquo;Bonjour le monde!&amp;rdquo; avec des options de ligne de commande communes # Pour les programmes avec un seul fichier source, l&amp;rsquo;utilisation de gcc est simple.
/* File name is hello_world.c */ #include &amp;lt;stdio.h&amp;gt; int main(void) { int i; printf(&amp;quot;Hello world!\n&amp;quot;); } Pour compiler le fichier hello_world.c depuis la ligne de commande :
gcc hello_world.c gcc compilera alors le programme et sortira l&amp;rsquo;exécutable dans le fichier a.out. Si vous souhaitez nommer l&amp;rsquo;exécutable, utilisez l&amp;rsquo;option -o.</description>
    </item>
    
    <item>
      <title>Couverture du code gcov</title>
      <link>https://www.wikiod.com/fr/gcc/couverture-du-code-gcov/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gcc/couverture-du-code-gcov/</guid>
      <description>GCC fournit une documentation sur gcov ici
Gcovr et Lcov peuvent être utilisés pour aider à générer et résumer les résultats de couverture
Introduction # La couverture de code est une mesure utilisée pour déterminer la fréquence d&amp;rsquo;exécution de chaque instruction et branche de code source. Cette mesure est généralement requise lors de l&amp;rsquo;exécution d&amp;rsquo;une suite de tests pour s&amp;rsquo;assurer qu&amp;rsquo;autant de code que possible est testé par la suite de tests.</description>
    </item>
    
    <item>
      <title>Avertissements</title>
      <link>https://www.wikiod.com/fr/gcc/avertissements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gcc/avertissements/</guid>
      <description>Syntaxe # gcc [-Woption [-Woption [&amp;hellip;]]] src-file Paramètres # Paramètre Détails facultatif Il peut être utilisé pour activer ou désactiver les avertissements. Il peut transformer les avertissements en erreurs. fichier-src Le fichier source à compiler. Il est recommandé d&amp;rsquo;activer la plupart des avertissements lors du développement d&amp;rsquo;un logiciel.
Activer presque tous les avertissements # Fichier source C # gcc -Wall -Wextra -o main main.c Fichier source C++ # g++ -Wall -Wextra -Wconversion -Woverloaded-virtual -o main main.</description>
    </item>
    
    <item>
      <title>Extensions GNU C</title>
      <link>https://www.wikiod.com/fr/gcc/extensions-gnu-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gcc/extensions-gnu-c/</guid>
      <description>Le compilateur GNU C est livré avec des fonctionnalités intéressantes qui ne sont pas spécifiées par les normes C. Ces extensions sont largement utilisées dans les logiciels système et constituent un excellent outil d&amp;rsquo;optimisation des performances.
Attribut compressé # packed est un attribut variable qui est utilisé avec les structures et les unions afin de minimiser les besoins en mémoire.
#include &amp;lt;stdio.h&amp;gt; struct foo { int a; char c; }; struct __attribute__((__packed__))foo_packed { int a; char c; }; int main() { printf(&amp;quot;Size of foo: %d\n&amp;quot;, sizeof(struct foo)); printf(&amp;quot;Size of packed foo: %d\n&amp;quot;, sizeof(struct foo_packed)); return 0; } Sur mon Linux 64 bits,</description>
    </item>
    
    <item>
      <title>Optimisations GCC</title>
      <link>https://www.wikiod.com/fr/gcc/optimisations-gcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gcc/optimisations-gcc/</guid>
      <description>Le compilateur GNU offre différents niveaux d&amp;rsquo;optimisations pour le processus de compilation. Ces optimisations sont utilisées pour améliorer les performances du code et/ou la taille du code. La compilation d&amp;rsquo;un code avec des optimisations activées prend généralement plus de temps.
Cette commande vous indique quelles optimisations sont disponibles sur votre système : $gcc -Q &amp;ndash;help=optimizations
Voici une documentation détaillée des options pour contrôler les optimisations :
https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html
Différence entre les codes compilés avec O0 et O3 # J&amp;rsquo;ai écrit un simple code C foo.</description>
    </item>
    
  </channel>
</rss>
