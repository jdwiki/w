<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rubygems Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/rubygems/</link>
    <description>Recent content in Rubygems Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/rubygems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec rubygems</title>
      <link>https://www.wikiod.com/fr/rubygems/debuter-avec-rubygems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rubygems/debuter-avec-rubygems/</guid>
      <description>Installation ou configuration # Si vous n&amp;rsquo;avez pas installé de * RubyGems *, il existe toujours l&amp;rsquo;approche pré-gem pour obtenir un logiciel, en le faisant manuellement :
Télécharger depuis [RubyGems][1]
Décompressez dans un répertoire et cd là
Installer avec : ruby setup.rb (vous aurez peut-être besoin des privilèges admin/root)
sudo ruby setup.rb Pour plus de détails et d&amp;rsquo;autres options, voir :
ruby setup.rb --help [1] : https://rubygems.org/pages/download/
Installation sous Linux # Assurez-vous que ruby ​​est installé avant d&amp;rsquo;installer rubygems, puis :</description>
    </item>
    
    <item>
      <title>Anémone</title>
      <link>https://www.wikiod.com/fr/rubygems/anemone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rubygems/anemone/</guid>
      <description>Syntaxe # Utilisez Anemone::Core.new(url, options) pour initialiser le crawler Utilisez le bloc on_every_page pour exécuter du code sur chaque page visitée Utilisez la méthode .run pour démarrer le crawl. Aucun code préalable ne démarrera réellement les appels GET. Paramètres # Paramètre Détails URL URL (y compris le protocole à explorer) options hachage facultatif, voir toutes les options ici Le robot d&amp;rsquo;exploration ne visitera que les liens qui se trouvent sur le même domaine que l&amp;rsquo;URL de départ.</description>
    </item>
    
    <item>
      <title>Changer la source de la gemme dans Gemfile</title>
      <link>https://www.wikiod.com/fr/rubygems/changer-la-source-de-la-gemme-dans-gemfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rubygems/changer-la-source-de-la-gemme-dans-gemfile/</guid>
      <description>Utilisez le référentiel github pour une gemme spécifique dans Gemfile # À la place de
joyau &#39;rails&#39;
Vous pouvez spécifier une combinaison utilisateur/dépôt github avec
gem &#39;rails&#39;, github: &#39;rails/rails&#39;
Utilisez ref, branch, git pour une gemme spécifique dans le gemfile # gem &#39;any gem&#39;,git: &#39;any repo&#39;,branch: &#39;specific branch of that repo&#39;,ref: &#39;reference no.&#39; ref spécifie un commit individuel. branch spécifie la branche git à partir de laquelle extraire.</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>https://www.wikiod.com/fr/rubygems/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rubygems/json/</guid>
      <description>La gemme json pour Ruby permet l&amp;rsquo;analyse et la création de JSON.
Syntaxe # JSON.parse(json_document_string) =&amp;gt; renvoie un hachage du document JSON JSON.generate(ruby_hash) =&amp;gt; retourne un document JSON sous forme de String Paramètres # Paramètre Détails json_document_string Un document JSON sous la forme d&amp;rsquo;un String hachage_rubis Tout objet Hash Hachage en JSON # require &#39;json&#39; data = {&amp;quot;test&amp;quot; =&amp;gt; 123} puts JSON.generate(data) JSON vers hachage # require &#39;json&#39; document = &amp;quot;{\&amp;quot;test\&amp;quot;:123}&amp;quot; puts JSON.</description>
    </item>
    
    <item>
      <title>Maruku</title>
      <link>https://www.wikiod.com/fr/rubygems/maruku/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rubygems/maruku/</guid>
      <description>Maruku est un interprète Markdown pour Ruby. Il permet d&amp;rsquo;exporter Markdown vers HTML et PDF.
Syntaxe # Maruku.new(str) =&amp;gt; analyse Markdown en un objet Maruku Maruku#to_html_document =&amp;gt; renvoie l&amp;rsquo;objet Maruku sous la forme d&amp;rsquo;un document HTML complet (sous forme de chaîne) Paramètres # Paramètre Utilisation chaîne Chaîne Markdown à analyser Lire Markdown dans Maruku # require &#39;maruku&#39; str = &amp;quot; # Title * List 1 * List 2 * List 3 &amp;quot; markdown = Maruku.</description>
    </item>
    
  </channel>
</rss>
