<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel ansible on </title>
    <link>https://www.wikiod.com/fr/docs/ansible/</link>
    <description>Recent content in Tutoriel ansible on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/ansible/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec ansible</title>
      <link>https://www.wikiod.com/fr/ansible/demarrer-avec-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/demarrer-avec-ansible/</guid>
      <description>Bonjour le monde # Créez un répertoire appelé ansible-helloworld-playbook
mkdir ansible-helloworld-playbook Créez un fichier hosts et ajoutez les systèmes distants que vous souhaitez gérer. Comme ansible s&amp;rsquo;appuie sur ssh pour connecter les machines, vous devez vous assurer qu&amp;rsquo;elles vous sont déjà accessibles en ssh depuis votre ordinateur.
192.168.1.1 192.168.1.2 Testez la connexion à vos systèmes distants à l&amp;rsquo;aide du module Ansible ping.
ansible all -m ping -k En cas de succès, il devrait retourner quelque chose comme ça</description>
    </item>
    
    <item>
      <title>Utiliser Ansible avec OpenStack</title>
      <link>https://www.wikiod.com/fr/ansible/utiliser-ansible-avec-openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/utiliser-ansible-avec-openstack/</guid>
      <description>OpenStack est une plate-forme logicielle open source pour le cloud computing. Les instances Linux peuvent être lancées/arrêtées manuellement à l&amp;rsquo;aide de l&amp;rsquo;interface graphique Web ou automatisées grâce au module cloud openstack d&amp;rsquo;ansible.
Configurer ansible peut être délicat, mais une fois bien configuré, il est vraiment facile et puissant pour les tests et l&amp;rsquo;environnement d&amp;rsquo;intégration continue.
Paramètres # paramètres Commentaires hôtes : hôte local Les commandes OpenStack sont lancées depuis notre localhost rassemble_faits : Faux Nous n&amp;rsquo;avons pas besoin de recueillir des informations sur notre localhost auth_url : https://openstack-identity.</description>
    </item>
    
    <item>
      <title>Inventaire</title>
      <link>https://www.wikiod.com/fr/ansible/inventaire/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/inventaire/</guid>
      <description>Paramètres # Paramètre Explication connexion_ansible Type de connexion à l&amp;rsquo;hôte. Cela peut être le nom de n&amp;rsquo;importe lequel des plugins de connexion d&amp;rsquo;ansible. Les types de protocole SSH sont smart, ssh ou paramiko. La valeur par défaut est intelligente. Les types non basés sur SSH sont décrits dans la section suivante. ansible_host Le nom de l&amp;rsquo;hôte auquel se connecter, s&amp;rsquo;il est différent de l&amp;rsquo;alias que vous souhaitez lui donner. ansible_port Le numéro de port ssh, sinon 22 utilisateur_ansible Le nom d&amp;rsquo;utilisateur ssh par défaut à utiliser.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://www.wikiod.com/fr/ansible/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/installation/</guid>
      <description>Installation d&amp;rsquo;Ansible dans n&amp;rsquo;importe quel système d&amp;rsquo;exploitation, y compris Windows à l&amp;rsquo;aide de Virtual Box et de Vagrant. Une solution alternative est également disponible si vous souhaitez simplement vous entraîner à des commandes et des playbooks ansibles ad hoc et que vous ne souhaitez pas configurer l&amp;rsquo;environnement local.
Installer Ansible sur Ubuntu # Ansible gère un référentiel PPA qui peut être utilisé pour installer les binaires Ansible :
sudo apt-add-repository ppa:ansible/ansible -y sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install ansible -y Pour installer une version spécifique, utilisez pip.</description>
    </item>
    
    <item>
      <title>Boucles Ansibles et Conditionnelles</title>
      <link>https://www.wikiod.com/fr/ansible/boucles-ansibles-et-conditionnelles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/boucles-ansibles-et-conditionnelles/</guid>
      <description>La documentation officielle explique les conditionnels du playbook.
http://docs.ansible.com/ansible/playbooks_conditionals.html Ansible (github)
https://github.com/marxwang/ansible-learn-resources Quels types de conditions utiliser ? # Utilisez les conditions via (la syntaxe est entre [crochets]):
quand quand:**]
Task: - name: run if operating system is debian command: echo &amp;quot;I am a Debian Computer&amp;quot; when: ansible_os_family == &amp;quot;Debian&amp;quot; boucles [with_items :]
boucles [with_dicts :]
Faits personnalisés [ when : my_custom_facts == &amp;lsquo;1234&amp;rsquo;]
Importations conditionnelles
Sélectionnez des fichiers et des modèles en fonction de variables</description>
    </item>
    
    <item>
      <title>Introduction aux playbooks</title>
      <link>https://www.wikiod.com/fr/ansible/introduction-aux-playbooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/introduction-aux-playbooks/</guid>
      <description>Aperçu # Dans Ansible, un playbook est un fichier YAML contenant la définition de l&amp;rsquo;apparence d&amp;rsquo;un serveur. Dans un playbook, vous définissez les actions qu&amp;rsquo;Ansible doit entreprendre pour mettre le serveur dans l&amp;rsquo;état souhaité. Seul ce que vous définissez est fait.
Il s&amp;rsquo;agit d&amp;rsquo;un playbook Ansible de base qui installe git sur chaque hôte appartenant au groupe &amp;ldquo;web&amp;rdquo;:
--- - name: Git installation hosts: web remote_user: root tasks: - name: Install Git apt: name=git state=present ## Structure du livre de lecture Le format d&amp;rsquo;un playbook est assez simple, mais strict en termes d&amp;rsquo;espacement et de mise en page.</description>
    </item>
    
    <item>
      <title>Utiliser Ansible avec Amazon Web Services</title>
      <link>https://www.wikiod.com/fr/ansible/utiliser-ansible-avec-amazon-web-services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/utiliser-ansible-avec-amazon-web-services/</guid>
      <description>exemple-2 : Ceci sert d&amp;rsquo;exemple, alors ne le copiez pas / ne le collez pas. Au lieu de cela, pour répondre à vos besoins, vous devez personnaliser ses variables ; ansible_key, règles de groupe de sécurité, etc.
example-1 : Pour désactiver la vérification stricte de la clé d&amp;rsquo;hôte ssh, un comportement que nous ne voulons pas lors de l&amp;rsquo;automatisation des tâches, nous l&amp;rsquo;avons défini sur &amp;ldquo;no&amp;rdquo; dans le fichier &amp;ldquo;ansible.cfg&amp;rdquo;. c&amp;rsquo;est-à-dire : StrictHostKeyChecking=non</description>
    </item>
    
    <item>
      <title>Les rôles</title>
      <link>https://www.wikiod.com/fr/ansible/les-roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/les-roles/</guid>
      <description>Dépendances des rôles # Les rôles vous permettent également de définir d&amp;rsquo;autres rôles en tant que dépendance en créant un fichier meta/main.yml avec un bloc dependencies :
dependencies: - role: common Il est également possible de passer une valeur à un paramètre/variable dans le rôle dépendant :
dependencies: - { role: common, some_parameter: 3 } Ou même exécuter le rôle dépendant conditionnellement :
dependencies: - { role: common, some_parameter: 3 } - { role: sshd, enable_sshd: false, when: environment == &#39;production&#39; } Les rôles dépendants sont toujours exécutés avant les rôles qui en dépendent.</description>
    </item>
    
    <item>
      <title>Inventaire dynamique</title>
      <link>https://www.wikiod.com/fr/ansible/inventaire-dynamique/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/inventaire-dynamique/</guid>
      <description>Les variables d&amp;rsquo;environnement dans l&amp;rsquo;inventaire dynamique ne fonctionneront pas, par ex.
&amp;quot;ansible_ssh_private_key_file&amp;quot;: $HOME/.ssh/key.pem&amp;quot; Si le côté serveur d&amp;rsquo;inventaire dynamique passe $HOME par exemple, remplacez la variable dans le code client (Python) :
json_input.replace(&amp;quot;$HOME&amp;quot;, os.environ.get(&amp;quot;HOME&amp;quot;)) Inventaire dynamique avec identifiants de connexion # Transmettez l&amp;rsquo;inventaire dynamique à ansible-playbook :
ansible-playbook -i inventory/dyn.py -l targethost my_playbook.yml python Inventory/dyn.py devrait afficher quelque chose comme ceci :
{ &amp;quot;_meta&amp;quot;: { &amp;quot;hostvars&amp;quot;: { &amp;quot;10.1.0.10&amp;quot;: { &amp;quot;ansible_user&amp;quot;: &amp;quot;vagrant&amp;quot;, &amp;quot;ansible_ssh_private_key_file&amp;quot;: &amp;quot;/home/mrtuovinen/.</description>
    </item>
    
    <item>
      <title>Cryptage secret</title>
      <link>https://www.wikiod.com/fr/ansible/cryptage-secret/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ansible/cryptage-secret/</guid>
      <description>Ansible propose Vault (à ne pas confondre avec HashiCorp Vault !) pour gérer les données sensibles chiffrement. Vault vise principalement à chiffrer toutes les données structurées telles que les variables, les tâches, les gestionnaires.
Chiffrement des données structurées sensibles # Tout d&amp;rsquo;abord, créez un fichier clé, par exemple, vault_pass_file, qui contient idéalement une longue séquence de caractères aléatoires. Dans les systèmes Linux, vous pouvez utiliser pwgen pour créer un fichier de mot de passe aléatoire :</description>
    </item>
    
  </channel>
</rss>
