<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel sfml on </title>
    <link>https://www.wikiod.com/fr/docs/sfml/</link>
    <description>Recent content in Tutoriel sfml on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/sfml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec sfml</title>
      <link>https://www.wikiod.com/fr/sfml/demarrer-avec-sfml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sfml/demarrer-avec-sfml/</guid>
      <description>Programme SFML de base # Si tout a été configuré correctement, l&amp;rsquo;extrait de code suivant affichera une fenêtre intitulée &amp;ldquo;SFML fonctionne !&amp;rdquo; avec un cercle vert :
#include &amp;lt;SFML/Graphics.hpp&amp;gt; int main() { sf::RenderWindow window(sf::VideoMode(200, 200), &amp;quot;SFML works!&amp;quot;); sf::CircleShape shape(100.f); shape.setFillColor(sf::Color::Green); while (window.isOpen()) { sf::Event event; while (window.pollEvent(event)) { if (event.type == sf::Event::Closed) window.close(); } window.clear(); window.draw(shape); window.display(); } return 0; } ##Installation - Linux Il existe différentes approches pour l&amp;rsquo;installation de SFML sous Linux :</description>
    </item>
    
    <item>
      <title>Compiler SFML pour Android sous Windows</title>
      <link>https://www.wikiod.com/fr/sfml/compiler-sfml-pour-android-sous-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sfml/compiler-sfml-pour-android-sous-windows/</guid>
      <description>4. Créer l&amp;rsquo;exemple Android SFML # Vous pouvez trouver l&amp;rsquo;exemple Android dans [SFML_ROOT]\examples\android
Vous pouvez le copier pour laisser le dépôt SFML dans son état d&amp;rsquo;origine. Ouvrez cmd.exe dans l&amp;rsquo;emplacement de l&amp;rsquo;exemple.
Pour obtenir une liste de toutes les cibles de compilation Android disponibles :
android list target Exécutez le projet de mise à jour pour l&amp;rsquo;exemple :
android update project --path [Path/to/Android/Sample] --target [targetID] par exemple.
android update project --path &amp;quot;&amp;quot; --target android-19 Pour le chemin, nous pouvons utiliser &amp;quot;&amp;quot; car nous exécutons déjà cmd dans l&amp;rsquo;exemple de chemin.</description>
    </item>
    
    <item>
      <title>Bases de la fenêtre</title>
      <link>https://www.wikiod.com/fr/sfml/bases-de-la-fenetre/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sfml/bases-de-la-fenetre/</guid>
      <description>Vous devez utiliser un sf::RenderWindow plutôt qu&amp;rsquo;un sf::Window, si vous envisagez de dessiner des primitives fournies par SFML, telles que sf::RectangleShape ou sf::Sprite.
Création d&amp;rsquo;une fenêtre OpenGL # Les fenêtres dans SFML sont représentées par l&amp;rsquo;une des deux classes :
sf::Window est une fenêtre générique fournie par le système d&amp;rsquo;exploitation incluant un contexte de rendu OpenGL. sf::RenderWindow est une version spécialisée de sf::Window qui agit également comme sf::RenderTarget, permettant aux primitives de SFML d&amp;rsquo;y être rendues.</description>
    </item>
    
  </channel>
</rss>
