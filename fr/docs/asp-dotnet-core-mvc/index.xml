<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel asp.net-core-mvc on </title>
    <link>https://www.wikiod.com/fr/docs/asp-dotnet-core-mvc/</link>
    <description>Recent content in Tutoriel asp.net-core-mvc on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/asp-dotnet-core-mvc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec asp.net-core-mvc</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-core-mvc/premiers-pas-avec-aspnet-core-mvc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-core-mvc/premiers-pas-avec-aspnet-core-mvc/</guid>
      <description>Ajouter un middleware MVC # Si vous avez créé un projet vide ou si vous n&amp;rsquo;avez toujours pas configuré mvc dans votre application, vous pouvez ajouter une dépendance :
&amp;quot;Microsoft.AspNetCore.Mvc&amp;quot;: &amp;quot;1.0.1&amp;quot;
Dans votre fichier project.json sous &amp;quot;dependencies&amp;quot;.
Et enregistrez le middleware MVC dans votre classe Startup :
public void ConfigureServices(IServiceCollection services) { ... services.AddMvc(); } Notez que nous avons à la fois services.AddMvc() et services.AddMvcCore(). Si vous commencez avec asp.net core, ou si vous voulez que ce soit tel qu&amp;rsquo;il est, vous devez conserver services.</description>
    </item>
    
    <item>
      <title>Configurez et installez .Net Core MVC avec le code Visual studio et le démarrage rapide .net core mvc hello world.</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-core-mvc/configurez-et-installez-net-core-mvc-avec-le-code-visual-studio-et-le-demarrage-rapide-net-core-mvc-hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-core-mvc/configurez-et-installez-net-core-mvc-avec-le-code-visual-studio-et-le-demarrage-rapide-net-core-mvc-hello-world/</guid>
      <description>Cet article donne des idées sur la configuration et l&amp;rsquo;installation du noyau Asp.Net avec le code Visual Studio. Créez également un modèle et un débogage MVC de base.
Étapes impliquées ci-dessous&amp;hellip;
Étape 1 - installation du code Visual studio.
Étape 2 - Configuration de .Net core et C#.
Étape 3 - Créer un modèle MVC de base.
Étape 4 - Exécutez et déboguez l&amp;rsquo;application.
Cet article est sur le point de configurer à partir de zéro avec le code open source de Visual Studio et de créer et de déboguer des applications mvc de base .</description>
    </item>
    
    <item>
      <title>Modifier l&#39;emplacement de la vue par défaut</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-core-mvc/modifier-lemplacement-de-la-vue-par-defaut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-core-mvc/modifier-lemplacement-de-la-vue-par-defaut/</guid>
      <description>Dans ASP.NET MVC, les vues sont placées par défaut dans le dossier &amp;ldquo;Vues&amp;rdquo;. Parfois, vous souhaitez modifier ces emplacements et stocker les vues ailleurs.
Créer un extenseur d&amp;rsquo;emplacement de vue # Pour pouvoir changer l&amp;rsquo;emplacement de la vue, vous devez implémenter le IViewLocationExpander. La méthode ExpandViewLocations renvoie un IEnumerable&amp;lt;string&amp;gt; contenant les différents emplacements où rechercher, avec
public class MyViewLocationExpander : IViewLocationExpander { public IEnumerable&amp;lt;string&amp;gt; ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable&amp;lt;string&amp;gt; viewLocations) { yield return &amp;quot;/CustomViewFolder/{1}/{0}.</description>
    </item>
    
  </channel>
</rss>
