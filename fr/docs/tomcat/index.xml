<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel de chat on </title>
    <link>https://www.wikiod.com/fr/docs/tomcat/</link>
    <description>Recent content in Tutoriel de chat on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/tomcat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec tomcat</title>
      <link>https://www.wikiod.com/fr/tomcat/premiers-pas-avec-tomcat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/tomcat/premiers-pas-avec-tomcat/</guid>
      <description>Installation ou configuration # Instructions détaillées sur la configuration ou l&amp;rsquo;installation de tomcat.
Installer Tomcat en tant que service sur Ubuntu # Cet exemple montre comment installer Tomcat en tant que service sur Ubuntu à l&amp;rsquo;aide des versions *.tar.gz de Tomcat et de Java.
1. Installer l&amp;rsquo;environnement d&amp;rsquo;exécution Java (JRE) # Téléchargez la version jre .tar.gz souhaitée Extraire vers /opt/ Cela créera un répertoire /opt/jre1.Xxxx/ Créez un lien symbolique vers le répertoire de base de Java : cd /opt ; sudo ln -s jre1.</description>
    </item>
    
    <item>
      <title>Configuration d&#39;une source de données JNDI</title>
      <link>https://www.wikiod.com/fr/tomcat/configuration-dune-source-de-donnees-jndi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/tomcat/configuration-dune-source-de-donnees-jndi/</guid>
      <description>Paramètres # Attribut Détails auth (Chaîne) Spécifiez si le code de l&amp;rsquo;application Web se connecte au gestionnaire de ressources correspondant par programmation ou si le conteneur se connecte au gestionnaire de ressources au nom de l&amp;rsquo;application. La valeur de cet attribut doit être Application ou Conteneur. Cet attribut est obligatoire si l&amp;rsquo;application Web utilise un élément resource-ref dans le descripteur de déploiement de l&amp;rsquo;application Web, mais il est facultatif si l&amp;rsquo;application utilise à la place un élément resource-env-ref.</description>
    </item>
    
    <item>
      <title>Hôtes virtuels Tomcat</title>
      <link>https://www.wikiod.com/fr/tomcat/hotes-virtuels-tomcat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/tomcat/hotes-virtuels-tomcat/</guid>
      <description>Host Manager est une application Web à l&amp;rsquo;intérieur de Tomcat qui crée/supprime des hôtes virtuels dans Tomcat.
Un hôte virtuel vous permet de définir plusieurs noms d&amp;rsquo;hôte sur un seul serveur, vous pouvez donc utiliser le même serveur pour gérer les requêtes vers, par exemple, ren.myserver.com et stimpy.myserver.com.
Malheureusement, la documentation sur le côté graphique du gestionnaire d&amp;rsquo;hôtes ne semble pas exister, mais la documentation sur la configuration manuelle des hôtes virtuels dans context.</description>
    </item>
    
    <item>
      <title>Paramétrage HTTPS</title>
      <link>https://www.wikiod.com/fr/tomcat/parametrage-https/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/tomcat/parametrage-https/</guid>
      <description>##Configuration SSL/TLS HTTPS
HTTPS (également appelé HTTP sur TLS,[1][2] HTTP sur SSL,[3] et HTTP Secure[4][5]) est un protocole de communication sécurisée sur un réseau informatique largement utilisé sur Internet. HTTPS consiste en une communication via le protocole de transfert hypertexte (HTTP) au sein d&amp;rsquo;une connexion cryptée par Transport Layer Security ou son prédécesseur, Secure Sockets Layer. La principale motivation du HTTPS est l&amp;rsquo;authentification du site Web visité et la protection de la confidentialité et de l&amp;rsquo;intégrité des données échangées.</description>
    </item>
    
    <item>
      <title>Configuration d&#39;une source de données JDBC</title>
      <link>https://www.wikiod.com/fr/tomcat/configuration-dune-source-de-donnees-jdbc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/tomcat/configuration-dune-source-de-donnees-jdbc/</guid>
      <description>Afin d&amp;rsquo;utiliser une source de données JDBC, nous devons d&amp;rsquo;abord configurer une référence [JNDI][1] dans Tomcat. Une fois la référence JNDI établie, les sources de données JDBC peuvent être utilisées dans notre serveur Tomcat et nos applications à l&amp;rsquo;aide de références partagées ou indépendantes (idéal pour la configuration dev/staging/prod ou la suppression des chaînes de connexion/informations d&amp;rsquo;identification du code validé).
[1] : http://stackoverflow.com/questions/4365621/what-is-jndi-what-is-its-basic-use-when-is-it-used
L&amp;rsquo;utilisation de JNDI et de JDBC vous permet également d&amp;rsquo;utiliser des ORM comme Hibernate ou des plates-formes comme JPA pour définir des &amp;ldquo;unités de persistance&amp;rdquo; pour les mappages d&amp;rsquo;objets et de tables.</description>
    </item>
    
    <item>
      <title>Intégration dans une application</title>
      <link>https://www.wikiod.com/fr/tomcat/integration-dans-une-application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/tomcat/integration-dans-une-application/</guid>
      <description>Intégrer Tomcat en utilisant Maven # &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.tomcat.maven&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;tomcat7-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.1&amp;lt;/version&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;id&amp;gt;tomcat-run&amp;lt;/id&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;exec-war-only&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;!--This phase is for creating jar file.You can customize configuration --&amp;gt; &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;path&amp;gt;/WebAppName&amp;lt;/path&amp;gt; &amp;lt;enableNaming&amp;gt;false&amp;lt;/enableNaming&amp;gt; &amp;lt;finalName&amp;gt;WebAppName.jar&amp;lt;/finalName&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;!--This configuration is for running application in your ide--&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;port&amp;gt;8020&amp;lt;/port&amp;gt; &amp;lt;path&amp;gt;/webappName&amp;lt;/path&amp;gt; &amp;lt;!--These properties are optional--&amp;gt; &amp;lt;systemProperties&amp;gt; &amp;lt;CATALINA_OPTS&amp;gt;-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode -XX:+CMSIncrementalPacing -XX:CMSIncrementalDutyCycleMin=0 -XX:-TraceClassUnloading &amp;lt;/CATALINA_OPTS&amp;gt; &amp;lt;/systemProperties&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt; Vous pouvez exécuter le tomcat ci-dessus dans votre ide en utilisant l&amp;rsquo;objectif tomcat: run.</description>
    </item>
    
    <item>
      <title>Structures des répertoires Tomcat(x)</title>
      <link>https://www.wikiod.com/fr/tomcat/structures-des-repertoires-tomcatx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/tomcat/structures-des-repertoires-tomcatx/</guid>
      <description>Structure des répertoires dans Ubuntu (Linux) # Après avoir installé Tomcat avec apt-get sur Ubuntu xx.xx, Tomcat crée et utilise ces répertoires :
$cd /etc/tomcat6/
├── Catalina │ └── localhost │ ├── ROOT.xml │ └── solr.xml -&amp;gt; ../../../solr/solr-tomcat.xml ├── catalina.properties ├── context.xml ├── logging.properties ├── policy.d │ ├── 01system.policy │ ├── 02debian.policy │ ├── 03catalina.policy │ ├── 04webapps.policy │ ├── 05solr.policy -&amp;gt; /etc/solr/tomcat.policy │ └── 50local.policy ├── server.xml ├── tomcat-users.xml └── web.</description>
    </item>
    
    <item>
      <title>CAC permettant Tomcat à des fins de développement</title>
      <link>https://www.wikiod.com/fr/tomcat/cac-permettant-tomcat-a-des-fins-de-developpement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/tomcat/cac-permettant-tomcat-a-des-fins-de-developpement/</guid>
      <description>Création des Keystores et configuration de Tomcat # Cet article décrit les étapes de configuration de Tomcat pour demander des certificats CAC au client. Il est axé sur la mise en place d&amp;rsquo;un environnement de développement, de sorte que certaines fonctionnalités qui devraient être prises en compte pour la production ne sont pas ici. (Par exemple, il montre l&amp;rsquo;utilisation d&amp;rsquo;un certificat auto-signé pour https et il n&amp;rsquo;envisage pas de vérifier les certificats révoqués.</description>
    </item>
    
  </channel>
</rss>
