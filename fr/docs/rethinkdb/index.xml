<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>repenser le Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/rethinkdb/</link>
    <description>Recent content in repenser le Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/rethinkdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec rethinkdb</title>
      <link>https://www.wikiod.com/fr/rethinkdb/premiers-pas-avec-rethinkdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rethinkdb/premiers-pas-avec-rethinkdb/</guid>
      <description>##Installation sous Windows
Téléchargement # Prérequis : Nous fournissons des binaires 64 bits natifs pour Windows 7 et supérieur. Une version 64 bits de Windows est requise.
Téléchargez l&amp;rsquo;archive ZIP et décompressez-la dans un répertoire de votre choix.
Le port Windows de RethinkDB est un ajout récent et n&amp;rsquo;a pas encore reçu autant de réglages que les versions Linux et OS X. Veuillez signaler tout problème de performances sur [GitHub][gh-issues].</description>
    </item>
    
    <item>
      <title>Utiliser RethinkDB avec Docker</title>
      <link>https://www.wikiod.com/fr/rethinkdb/utiliser-rethinkdb-avec-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rethinkdb/utiliser-rethinkdb-avec-docker/</guid>
      <description>Utilisation de base # Par défaut, RethinkDB lie tous les services à 127.0.0.1. Ainsi, cet exemple suivant conservera les données dans host_data_path sur la machine hôte du conteneur et sera disponible pour 127.0.0.1 sur les ports standard.
Services Drapeau Port par défaut Chauffeur --driver-port 28015 Grappe --cluster-port 29015 Interface Web HTTP --port-http 8080 docker run -d -v host_data_path:/data rethinkdb Pour ouvrir le pilote et le port du cluster au trafic externe, vous devez spécifier l&amp;rsquo;adresse des interfaces locales ou fournir &amp;ldquo;tout&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>utiliser thinky.io avec RethinkDB</title>
      <link>https://www.wikiod.com/fr/rethinkdb/utiliser-thinkyio-avec-rethinkdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rethinkdb/utiliser-thinkyio-avec-rethinkdb/</guid>
      <description>Démarrage de Thinky dans node.js # thinky est un ORM node.js léger pour RethinkDB.
Vous devez d&amp;rsquo;abord avoir RethinkDB en cours d&amp;rsquo;exécution sur votre serveur.
Installez ensuite le package thinky.io npm dans votre projet.
npm install --save thinky Importez maintenant thinky dans votre fichier de modèle.
const thinky = require(&#39;thinky)(); const type = thinky.type Créez ensuite un modèle.
const User = thinky.createModel(&#39;User&#39; { email:type.string(), password: type.string() }); Vous pouvez maintenant créer et enregistrer un utilisateur.</description>
    </item>
    
    <item>
      <title>Premiers pas avec Node</title>
      <link>https://www.wikiod.com/fr/rethinkdb/premiers-pas-avec-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/rethinkdb/premiers-pas-avec-node/</guid>
      <description>Installation du package RethinkDB à partir de NPM # npm install -g rethinkdb Établir une connexion à RethinkDB # const r = require(&amp;ldquo;rethinkdb&amp;rdquo;);
r.connect({host: &#39;localhost&#39;, port: 28015}, (conn) =&amp;gt; console.log(conn)) // Or as a promise let rdb_conn; r.connect({host: &#39;localhost&#39;, port: 28015}).then((conn) =&amp;gt; { rdb_conn = conn; }).then(() =&amp;gt; { // Continue to use rdb_conn }); Lister toutes les bases de données # r.connect({host: &#39;localhost&#39;, port: 28015}) .then((conn) =&amp;gt; { return r.</description>
    </item>
    
  </channel>
</rss>
