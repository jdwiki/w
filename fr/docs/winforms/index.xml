<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel winforms on </title>
    <link>https://www.wikiod.com/fr/docs/winforms/</link>
    <description>Recent content in Tutoriel winforms on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/winforms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec winforms</title>
      <link>https://www.wikiod.com/fr/winforms/premiers-pas-avec-winforms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/winforms/premiers-pas-avec-winforms/</guid>
      <description>Création d&amp;rsquo;une application WinForms simple à l&amp;rsquo;aide de Visual Studio # Cet exemple vous montrera comment créer un projet d&amp;rsquo;application Windows Forms dans Visual Studio.
Créer un projet Windows Forms # Démarrez Visual Studio.
Dans le menu Fichier, pointez sur Nouveau, puis sélectionnez Projet. La boîte de dialogue Nouveau projet s&amp;rsquo;affiche.
Dans le volet Modèles installés, sélectionnez &amp;ldquo;Visual C#&amp;rdquo; ou &amp;ldquo;Visual Basic&amp;rdquo;.
Au-dessus du volet central, vous pouvez sélectionner le framework cible dans la liste déroulante.</description>
    </item>
    
    <item>
      <title>Intégration de l&#39;aide</title>
      <link>https://www.wikiod.com/fr/winforms/integration-de-laide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/winforms/integration-de-laide/</guid>
      <description>Vous pouvez fournir de l&amp;rsquo;aide pour les formulaires et les contrôles dans une application Windows Forms de différentes manières. Vous pouvez afficher une aide contextuelle, ouvrir un fichier CHM ou une URL. Vous pouvez afficher une aide contextuelle pour les formulaires, les contrôles et les boîtes de dialogue.
Composant HelpProvider # Vous pouvez configurer un composant HelpProvider pour fournir une aide contextuelle pour le composant. Ainsi, lorsque l&amp;rsquo;utilisateur appuie sur la touche F1 ou sur le bouton Aide du formulaire, vous pouvez automatiquement :</description>
    </item>
    
    <item>
      <title>Zone de texte</title>
      <link>https://www.wikiod.com/fr/winforms/zone-de-texte/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/winforms/zone-de-texte/</guid>
      <description>Complétion automatique à partir d&amp;rsquo;une collection de chaînes # var source = new AutoCompleteStringCollection(); // Add your collection of strings. source.AddRange(new[] { &amp;quot;Guybrush Threepwood&amp;quot;, &amp;quot;LeChuck&amp;quot; }); var textBox = new TextBox { AutoCompleteCustomSource = source, AutoCompleteMode = AutoCompleteMode.SuggestAppend, AutoCompleteSource = AutoCompleteSource.CustomSource }; form.Controls.Add(textBox); Cela se complétera automatiquement lorsque l&amp;rsquo;utilisateur essaiera de taper G ou L.
AutoCompleteMode.SuggestAppend affichera à la fois une liste de valeurs suggérées et tapera automatiquement la première correspondance, Append uniquement et Suggest uniquement sont également disponibles.</description>
    </item>
    
    <item>
      <title>Liaison de données</title>
      <link>https://www.wikiod.com/fr/winforms/liaison-de-donnees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/winforms/liaison-de-donnees/</guid>
      <description>Paramètres # Argumentation Descriptif nompropriété Nom de la propriété de contrôle à lier. source de données Un objet représentant la source de données. dataMember La propriété ou la liste à lier. formatageEnabled Détermine si les données affichées doivent être formatées. modemiseàjour La source de données est mise à jour lorsque la propriété du contrôle est validée (par défaut), ou immédiatement lorsque la propriété a changé valeurnull Lorsque la source de données a cette valeur, la propriété liée est définie sur DBNull.</description>
    </item>
    
    <item>
      <title>Affichage d&#39;un formulaire</title>
      <link>https://www.wikiod.com/fr/winforms/affichage-dun-formulaire/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/winforms/affichage-dun-formulaire/</guid>
      <description>Cette rubrique explique comment le moteur WinForms fonctionne pour afficher les formulaires et comment vous contrôlez leur durée de vie.
Fermer un formulaire modal # Lorsqu&amp;rsquo;un formulaire est affiché à l&amp;rsquo;aide de la méthode ShowDialog, il est nécessaire de définir la propriété DialogResult du formulaire pour fermer le formulaire. Cette propriété peut être définie à l&amp;rsquo;aide de l&amp;rsquo;énumération également appelée [DialogResult][1].
Pour fermer un formulaire, il vous suffit de définir la propriété DialogResult du formulaire (à n&amp;rsquo;importe quelle valeur par DialogResult.</description>
    </item>
    
    <item>
      <title>Commandes de base</title>
      <link>https://www.wikiod.com/fr/winforms/commandes-de-base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/winforms/commandes-de-base/</guid>
      <description>Bouton # Les boutons sont l&amp;rsquo;un des contrôles les plus simples et sont principalement utilisés pour exécuter du code lorsque l&amp;rsquo;utilisateur le souhaite.
Ici, nous avons un cas très simple, afficher une boîte de message lorsqu&amp;rsquo;un bouton est cliqué. Nous ajoutons un bouton à un formulaire, nommons-le cmdShowMessage tel qu&amp;rsquo;il est utilisé dans le code pour identifier l&amp;rsquo;objet et définissons le texte des boutons sur Afficher le message.
[![entrez la description de l&amp;rsquo;image ici][1]][1]</description>
    </item>
    
    <item>
      <title>Héritage des contrôles</title>
      <link>https://www.wikiod.com/fr/winforms/heritage-des-controles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/winforms/heritage-des-controles/</guid>
      <description>Les contrôles sont dérivés exactement de la même manière que les autres classes. La seule chose à laquelle il faut faire attention est de remplacer les événements : il est généralement conseillé de s&amp;rsquo;assurer que vous appelez le gestionnaire d&amp;rsquo;événements de base après le vôtre. Ma propre règle d&amp;rsquo;or : en cas de doute, appelez l&amp;rsquo;événement de base.
Paramètres à l&amp;rsquo;échelle de l&amp;rsquo;application # Une lecture rapide de la plupart des sites de développeurs révélera que WinForms est considéré comme inférieur à WPF.</description>
    </item>
    
  </channel>
</rss>
