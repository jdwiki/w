<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel Xcode on </title>
    <link>https://www.wikiod.com/fr/docs/xcode/</link>
    <description>Recent content in Tutoriel Xcode on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/xcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec Xcode</title>
      <link>https://www.wikiod.com/fr/xcode/premiers-pas-avec-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/premiers-pas-avec-xcode/</guid>
      <description>Utiliser plusieurs versions de Xcode # Vous pouvez avoir plusieurs versions de Xcode installées en même temps (y compris les versions bêta). Renommez simplement l&amp;rsquo;application dans le Finder pour éviter les conflits.
Remarque : L&amp;rsquo;installation de Xcode depuis l&amp;rsquo;App Store aura tendance à écraser une version existante sur votre machine. Vous pouvez également installer Xcode à partir d&amp;rsquo;un téléchargement direct pour mieux contrôler les versions dont vous disposez.
Chaque copie de Xcode inclut des outils de ligne de commande (clang, xcodebuild, etc.</description>
    </item>
    
    <item>
      <title>Outils de ligne de commande</title>
      <link>https://www.wikiod.com/fr/xcode/outils-de-ligne-de-commande/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/outils-de-ligne-de-commande/</guid>
      <description>## Répertorier les cibles, les schémas et les configurations de construction disponibles Pour répertorier tous les schémas disponibles pour le projet dans votre répertoire actuel
xcodebuild -list Vous pouvez éventuellement transmettre un chemin d&amp;rsquo;accès à un fichier de projet ou d&amp;rsquo;espace de travail
xcodebuild -list -workspace ./MyApp.xcworkspace xcodebuild -list -project ./MyApp.xcodeproj Exemple de sortie
Information about project &amp;quot;Themoji&amp;quot;: Targets: Themoji ThemojiUITests Unit Build Configurations: Debug Release If no build configuration is specified and -scheme is not passed then &amp;quot;Release&amp;quot; is used.</description>
    </item>
    
    <item>
      <title>Projets et espaces de travail</title>
      <link>https://www.wikiod.com/fr/xcode/projets-et-espaces-de-travail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/projets-et-espaces-de-travail/</guid>
      <description>Créez, exécutez, profilez, testez et analysez votre projet # Cliquez sur le bouton Exécuter dans la barre d&amp;rsquo;outils (ou appuyez sur ⌘R) pour créer et exécuter votre projet. Cliquez sur Arrêter (ou appuyez sur ⌘.) pour arrêter l&amp;rsquo;exécution.
Cliquez et maintenez enfoncé pour voir les autres actions, Test (⌘U), Profil (⌘I) et Analyse (⇧⌘B). Maintenez enfoncées les touches de modification ⌥ option, ⇧ shift et ⌃ control pour plus de variantes.</description>
    </item>
    
    <item>
      <title>Création de contrôles personnalisés dans Interface Builder avec @IBDesignable</title>
      <link>https://www.wikiod.com/fr/xcode/creation-de-controles-personnalises-dans-interface-builder-avec-ibdesignable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/creation-de-controles-personnalises-dans-interface-builder-avec-ibdesignable/</guid>
      <description>Il est devenu beaucoup plus facile de créer des contrôles personnalisés dans Interface Builder avec l&amp;rsquo;introduction des directives @IBDesignable et @IBInspectable dans Swift. Les développeurs peuvent désormais créer des commandes riches, complexes et entièrement animées en utilisant seulement quelques lignes de code supplémentaires. Je suis surpris par le nombre de développeurs qui n&amp;rsquo;ont pas encore pleinement adopté cette fonctionnalité, et je trouve souvent que l&amp;rsquo;ajout de quelques lignes de code aux classes existantes peut les rendre beaucoup plus faciles à utiliser.</description>
    </item>
    
    <item>
      <title>Conseils Xcode</title>
      <link>https://www.wikiod.com/fr/xcode/conseils-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/conseils-xcode/</guid>
      <description>Réutiliser les extraits de code dans Xcode # Vous pouvez enregistrer vos extraits de code pour une utilisation ultérieure simplement par glisser-déposer. Par exemple : si vous avez une instruction NSLog utilisée pour tant d&amp;rsquo;endroits ailleurs dans le projet, vous pouvez enregistrer les instructions NSLog dans la bibliothèque d&amp;rsquo;extraits de code.
[![entrez la description de l&amp;rsquo;image ici][1]][1]
Faites glisser l&amp;rsquo;instruction NSLog vers la bibliothèque d&amp;rsquo;extraits de code.
[![entrez la description de l&amp;rsquo;image ici][2]][2]</description>
    </item>
    
    <item>
      <title>Certificats, profils d&#39;approvisionnement et signature de code</title>
      <link>https://www.wikiod.com/fr/xcode/certificats-profils-dapprovisionnement-et-signature-de-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/certificats-profils-dapprovisionnement-et-signature-de-code/</guid>
      <description>Choisissez la bonne approche de signature de code # Si vous venez de démarrer un nouveau projet, il est important de réfléchir à la manière dont vous souhaitez gérer la signature de code.
Si vous débutez dans la signature de code, consultez la session WWDC qui décrit les principes de base de la signature de code dans Xcode.
Pour signer correctement le code de votre application, vous devez disposer des ressources suivantes sur votre ordinateur local :</description>
    </item>
    
    <item>
      <title>Développement multiplateforme</title>
      <link>https://www.wikiod.com/fr/xcode/developpement-multiplateforme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/developpement-multiplateforme/</guid>
      <description>CibleConditions # L&amp;rsquo;en-tête système TargetConditionals.h définit plusieurs macros que vous pouvez utiliser à partir de C et Objective-C pour déterminer la plate-forme que vous utilisez.
#import &amp;lt;TargetConditionals.h&amp;gt; // imported automatically with Foundation - (void)doSomethingPlatformSpecific { #if TARGET_OS_IOS // code that is compiled for iPhone / iPhone Simulator #elif TARGET_OS_MAC &amp;amp;&amp;amp; !TARGET_OS_IPHONE // code that is compiled for OS X only #else // code that is compiled for other platforms #endif } Les valeurs des macros sont :</description>
    </item>
    
    <item>
      <title>Personnalisation de l&#39;IDE Xcode</title>
      <link>https://www.wikiod.com/fr/xcode/personnalisation-de-lide-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/personnalisation-de-lide-xcode/</guid>
      <description>Ceci est une collection de différents trucs et astuces, pour personnaliser et améliorer votre IDE Xcode
Ouvrir le terminal dans le dossier de projet Xcode actuel # Xcode a la capacité d&amp;rsquo;exécuter n&amp;rsquo;importe quel script avec un raccourci clavier.
Voici un exemple d&amp;rsquo;attribution du raccourci clavier ⌘+⌥+⌃+⇧+T pour ouvrir l&amp;rsquo;application Terminal dans le dossier du projet en cours.
Créez un script bash et enregistrez-le dans un dossier
#!/bin/bash
Project Name: $XcodeProject # Project Dir: $XcodeProjectPath # Workspace Dir: $XcodeWorkspacePath # open -a Terminal &amp;ldquo;$(dirname $XcodeProjectPath)&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Cours de récréation</title>
      <link>https://www.wikiod.com/fr/xcode/cours-de-recreation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/cours-de-recreation/</guid>
      <description>Premiers pas avec Playground # Créez un nouveau fichier playground :
First option: From Xcode welcome screen, select the first option (Get started with a playground). [![get started with playground][1]][1]
Second option: From menu select File → New → Playground (⌥⇧⌘N). Nommez votre playground et sélectionnez la plateforme (iOS/macOS/tvOS), puis cliquez sur Suivant.
[![entrez la description de l&amp;rsquo;image ici][2]][2]
Sur l&amp;rsquo;écran suivant, choisissez où vous souhaitez enregistrer votre terrain de jeu, puis cliquez sur Créer.</description>
    </item>
    
    <item>
      <title>Fonctionnalités de Xcode 8</title>
      <link>https://www.wikiod.com/fr/xcode/fonctionnalites-de-xcode-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xcode/fonctionnalites-de-xcode-8/</guid>
      <description>Cela ne fonctionne qu&amp;rsquo;avec les projets utilisant Swift 3+
Littéraux de couleur et d&amp;rsquo;image # Xcode 8 reconnaîtra automatiquement toutes les images que vous avez dans un catalogue de ressources et les proposera comme suggestion dans un initialiseur UIImage.
Vous pouvez donc déclarer une nouvelle variable, puis ajouter un nom d&amp;rsquo;actif que vous avez ajouté à votre catalogue d&amp;rsquo;actifs. Par exemple let img = dog. img contient maintenant l&amp;rsquo;image de dog qui se trouve dans le catalogue de ressources.</description>
    </item>
    
  </channel>
</rss>
