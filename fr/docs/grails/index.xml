<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grails Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/grails/</link>
    <description>Recent content in Grails Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/grails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec le graal</title>
      <link>https://www.wikiod.com/fr/grails/debuter-avec-le-graal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/grails/debuter-avec-le-graal/</guid>
      <description>Création d&amp;rsquo;une application # Pour créer une application Grails, utilisez la commande grails create-app. La commande suivante crée une application Grails, nommée myapp dans le répertoire courant :
grails create-app fancy-app L&amp;rsquo;exécuter est aussi simple que de visiter le répertoire de l&amp;rsquo;application nouvellement créé :
cd fancy-app et alors
grails run-app // in order to run the app on a different port, e.g. 8888, use this instead grails run-app -port 8888 // in order to run the app with a secure communication grails run-app -https Grails Installation # Remarque : GRAILS nécessite l&amp;rsquo;installation d&amp;rsquo;un JDK Java (un environnement d&amp;rsquo;exécution JRE n&amp;rsquo;est pas suffisant) sur votre système, avant de configurer Grails.</description>
    </item>
    
    <item>
      <title>Classes de domaine en tant que ressources REST</title>
      <link>https://www.wikiod.com/fr/grails/classes-de-domaine-en-tant-que-ressources-rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/grails/classes-de-domaine-en-tant-que-ressources-rest/</guid>
      <description>Le moyen le plus simple de créer une API RESTful dans Grails est d&amp;rsquo;exposer une classe de domaine en tant que ressource REST. Cela peut être fait en ajoutant la transformation grails.rest.Resource à n&amp;rsquo;importe quelle classe de domaine.
API REST simple avec grails # import grails.rest.* @Resource(uri=&#39;/books&#39;) class Book { String title static constraints = { title blank:false } } En ajoutant simplement la transformation Resource et en spécifiant un URI, votre classe de domaine sera automatiquement disponible en tant que ressource REST aux formats XML ou JSON.</description>
    </item>
    
    <item>
      <title>Déploiement</title>
      <link>https://www.wikiod.com/fr/grails/deploiement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/grails/deploiement/</guid>
      <description>Jar exécutable # L&amp;rsquo;un des moyens les plus simples de déployer Grails 3.x consiste à créer un fichier jar exécutable qui intègre un conteneur de servlet (Tomcat, Undertow, etc.) avec l&amp;rsquo;application.
Modifiez build.gradle :
// Remove or comment out the war plugin: // apply plugin:&amp;quot;war&amp;quot; // Enable the executable jar: springBoot { executable = true } // Optional: Customize the jar properties: // https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Jar.html jar { archiveName(&#39;myapp.jar&#39;) } Construire en utilisant .</description>
    </item>
    
    <item>
      <title>SGP</title>
      <link>https://www.wikiod.com/fr/grails/sgp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/grails/sgp/</guid>
      <description>Paramètres # Variables et portées Détails application [ServletContext][1] instance applicationContext Instance de printemps [ApplicationContext][2] flash L&amp;rsquo;objet [flash][3] GrailsApplication [GrailsApplication][4] instance sortie écrivain de réponse pour écrire dans le flux de sortie paramètres objet [params][5] pour récupérer les paramètres de la requête demande [HttpServletRequest][6] instance réponse [HttpServletResponse][7] instance session [HttpSession][8] instance webRequest [GrailsWebRequest][9] instance [1] : http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html [2] : https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/ApplicationContext.html [3] : http://docs.grails.org/latest/ref/Controllers/flash.html [4] : http://docs.grails.org/3.0.x/api/grails/core/GrailsApplication.html [5] : http://docs.grails.org/latest/ref/Controllers/params.html [6] : http://docs.</description>
    </item>
    
  </channel>
</rss>
