<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel WebSocket on </title>
    <link>https://www.wikiod.com/fr/docs/websocket/</link>
    <description>Recent content in Tutoriel WebSocket on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/websocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec WebSocket</title>
      <link>https://www.wikiod.com/fr/websocket/premiers-pas-avec-websocket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/websocket/premiers-pas-avec-websocket/</guid>
      <description>Exemple de client web-socket # Ceci est un exemple de client web-socket en javascript. Ce:
Se connecte à un serveur de démonstration en direct. Envoie un message. Reçoit le(s) message(s). Se déconnecte après un intervalle. var mySocket = null; var serverUrl = &#39;wss://echo.websocket.org&#39;; // wss: is ws: but using SSL. var oWebSocket = window.WebSocket || window.MozWebSocket; if (oWebSocket) { mySocket = new oWebSocket (serverUrl); if (mySocket) { console.log (mySocket); mySocket.onopen = onSocketOpen; mySocket.</description>
    </item>
    
    <item>
      <title>Différences entre WebSocket et AJAX</title>
      <link>https://www.wikiod.com/fr/websocket/differences-entre-websocket-et-ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/websocket/differences-entre-websocket-et-ajax/</guid>
      <description>Ajax utilise le protocole HTTP et peut envoyer des requêtes à l&amp;rsquo;aide des méthodes POST/GET du client au serveur.
WebSocket est lui-même un protocole de communication entre client et serveur, distinct de HTTP.
En Ajax, lorsque vous envoyez une requête, le serveur envoie une réponse à cette requête et la connexion se termine.
En utilisant WebSockets lorsque vous établissez une connexion avec le serveur , vous pouvez communiquer entre le client et le serveur autant que vous le souhaitez et cela maintient la connexion active.</description>
    </item>
    
  </channel>
</rss>
