<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cdi Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/cdi/</link>
    <description>Recent content in cdi Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/cdi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec cdi</title>
      <link>https://www.wikiod.com/fr/cdi/premiers-pas-avec-cdi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cdi/premiers-pas-avec-cdi/</guid>
      <description>Configuration rapide dans un environnement Java SE # Si vous travaillez avec un serveur d&amp;rsquo;applications Java EE 6+, CDI fait partie du conteneur et vous n&amp;rsquo;avez rien à faire pour commencer à l&amp;rsquo;utiliser. Mais CDI ne se limite pas aux serveurs d&amp;rsquo;applications Java EE. Il peut être utilisé dans des applications Java SE ou de simples conteneurs de servlets tout aussi facilement. Jetons un coup d&amp;rsquo;œil à l&amp;rsquo;utilisation de CDI dans une simple application de ligne de commande.</description>
    </item>
    
    <item>
      <title>Champs d&#39;application</title>
      <link>https://www.wikiod.com/fr/cdi/champs-dapplication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cdi/champs-dapplication/</guid>
      <description>** Pourquoi ai-je besoin de ces constructeurs sans arguments ??? **
Que se passe-t-il si un bean de portée session est injecté dans un bean de portée application ? Comment le bean de portée d&amp;rsquo;application obtient-il la bonne instance de bean de portée de session pour chaque requête ? Le bean de portée de session ne fuirait-il pas dans d&amp;rsquo;autres requêtes ? Comment cela fonctionne-t-il ?* Afin de faciliter le cadrage, CDI utilise ce qu&amp;rsquo;on appelle un proxy.</description>
    </item>
    
    <item>
      <title>Injection de dépendance</title>
      <link>https://www.wikiod.com/fr/cdi/injection-de-dependance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cdi/injection-de-dependance/</guid>
      <description>La fonctionnalité phare de CDI est une API déclarative pour l&amp;rsquo;injection de dépendances. Les classes peuvent avoir des dépendances marquées avec l&amp;rsquo;annotation @Inject, qui indiquera au gestionnaire CDI qu&amp;rsquo;il doit fournir ces dépendances lors de la construction d&amp;rsquo;une instance de la classe.
Injection de constructeur # Le cas courant pour injecter des dépendances dans une classe est l&amp;rsquo;injection de constructeur. Cela implique d&amp;rsquo;annoter un constructeur sur la classe avec @Inject. Le gestionnaire CDI recherchera un constructeur avec l&amp;rsquo;annotation @Inject lors de la création d&amp;rsquo;une instance de la classe.</description>
    </item>
    
  </channel>
</rss>
