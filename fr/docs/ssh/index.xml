<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel sur le shell sécurisé on </title>
    <link>https://www.wikiod.com/fr/docs/ssh/</link>
    <description>Recent content in Tutoriel sur le shell sécurisé on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/ssh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec Secure Shell</title>
      <link>https://www.wikiod.com/fr/ssh/premiers-pas-avec-secure-shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ssh/premiers-pas-avec-secure-shell/</guid>
      <description>Création de votre clé SSH # Vous pouvez créer votre clé ssh en utilisant ssh-keygen, c&amp;rsquo;est un programme qui fait partie de l&amp;rsquo;installation de ssh. Pour ce faire, lancez-le et suivez les instructions à l&amp;rsquo;écran.
Voici un exemple :
$ ssh-keygen Generating public/private rsa key pair. Le répertoire par défaut où votre paire de clés ssh sera enregistrée se trouve dans le dossier .ssh de votre répertoire personnel (vous pouvez le modifier en spécifiant un chemin valide) et le nom par défaut de la paire de clés est id_rsa pour la clé privée et id_rsa.</description>
    </item>
    
    <item>
      <title>Débogage des problèmes ssh</title>
      <link>https://www.wikiod.com/fr/ssh/debogage-des-problemes-ssh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ssh/debogage-des-problemes-ssh/</guid>
      <description>Connexion rejetée # Une erreur &amp;ldquo;Connexion refusée&amp;rdquo; se produira si votre client envoie une demande de connexion à un hôte de serveur distant et que l&amp;rsquo;hôte distant répond en indiquant qu&amp;rsquo;il refuse d&amp;rsquo;accepter la demande. L&amp;rsquo;erreur &amp;ldquo;Connexion refusée&amp;rdquo; signifie essentiellement que l&amp;rsquo;ordinateur n&amp;rsquo;accepte pas les connexions à l&amp;rsquo;adresse IP et au port demandés.
&amp;ldquo;Connexion refusée&amp;rdquo; peut être causée par un pare-feu qui bloque les demandes de connexion. Un pare-feu configuré pour bloquer les connexions à un point de terminaison particulier peut être configuré pour abandonner les demandes de connexion, auquel cas le client n&amp;rsquo;obtiendra jamais de réponse et finira par expirer.</description>
    </item>
    
    <item>
      <title>Tunnels inversés</title>
      <link>https://www.wikiod.com/fr/ssh/tunnels-inverses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ssh/tunnels-inverses/</guid>
      <description>OpenSSH # La création d&amp;rsquo;un tunnel ssh inversé ne nécessite qu&amp;rsquo;un seul commutateur -R pour la commande d&amp;rsquo;origine.
Ligne de commande # Supposons que vous vous connectez à example.com en tant qu&amp;rsquo;utilisateur guest en utilisant une commande ssh guest@example.com. L&amp;rsquo;ouverture du tunnel inversé peut ressembler à ceci :
ssh -R 2222:localhost:22 guest@example.com Il ouvrira un port 2222 sur le serveur distant (interface de bouclage uniquement) et chaque connexion à ce port sera transmise au serveur ssh de votre ordinateur local (port 22).</description>
    </item>
    
    <item>
      <title>Commandes à distance</title>
      <link>https://www.wikiod.com/fr/ssh/commandes-a-distance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ssh/commandes-a-distance/</guid>
      <description>Commandes interactives et basées sur l&amp;rsquo;écran # De nombreuses commandes et programmes du côté distant sont basés sur l&amp;rsquo;écran (par exemple mc) ou ils doivent demander un mot de passe (par exemple sudo), pour pouvoir exécuter ce type de programmes, vous pouvez utiliser l&amp;rsquo;option -t.
ssh -t alice@example.com sudo ls / [sudo] mot de passe pour alice :
bin root dev etc home lib mnt opt ​​proc root run usr var</description>
    </item>
    
    <item>
      <title>Travailler avec des clés ssh</title>
      <link>https://www.wikiod.com/fr/ssh/travailler-avec-des-cles-ssh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ssh/travailler-avec-des-cles-ssh/</guid>
      <description>Convertir PPK (clé PuTTY) au format OpenSSH # Vous pourriez recevoir de votre pair une clé privée au format PPK, qui semble ne pas fonctionner dans OpenSSH (ligne de commande ssh). Le client demandera la phrase secrète, à cause du bogue OpenSSH.
$ ssh -i mykey.ppk example.com Enter passphrase for mykey.ppk: Vous devez convertir la clé au format OpenSSH à l&amp;rsquo;aide de PuTTYgen (version en ligne de commande) :
puttygen mykey.</description>
    </item>
    
    <item>
      <title>Tuer la session SSH qui ne répond pas</title>
      <link>https://www.wikiod.com/fr/ssh/tuer-la-session-ssh-qui-ne-repond-pas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ssh/tuer-la-session-ssh-qui-ne-repond-pas/</guid>
      <description>Parfois, votre session SSH cesse de répondre. Vous pouvez facilement sortir de cette session en utilisant l&amp;rsquo;astuce suivante.
Arrêt d&amp;rsquo;une session SSH à l&amp;rsquo;aide du caractère d&amp;rsquo;échappement # Par défaut, le caractère d&amp;rsquo;échappement est ~.
Allez-y et tapez ~. dans votre session SSH ouverte.
Après avoir appuyé sur Entrée votre session se terminera immédiatement.
Allez-y et essayez-le dans n&amp;rsquo;importe quelle session, cela fonctionne quelle que soit la réactivité de votre session.</description>
    </item>
    
    <item>
      <title>Gestion des fichiers distants via ssh</title>
      <link>https://www.wikiod.com/fr/ssh/gestion-des-fichiers-distants-via-ssh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ssh/gestion-des-fichiers-distants-via-ssh/</guid>
      <description>cette rubrique doit décrire différentes manières d&amp;rsquo;utiliser ssh comme moyen sécurisé de gérer des fichiers sur des machines distantes
Montage du répertoire distant via ssh # Vous pouvez monter un répertoire distant via ssh en utilisant sshfs. Sshfs n&amp;rsquo;est pas fourni par défaut sur Ubuntu, vous devez donc d&amp;rsquo;abord l&amp;rsquo;installer en utilisant sudo apt-get install sshfs. Vous pouvez ensuite monter le répertoire distant sur votre machine locale comme ceci
sshfs user@xxx.</description>
    </item>
    
  </channel>
</rss>
