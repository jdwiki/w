<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>signaleur Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/signalr/</link>
    <description>Recent content in signaleur Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/signalr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec Signalr</title>
      <link>https://www.wikiod.com/fr/signalr/premiers-pas-avec-signalr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/signalr/premiers-pas-avec-signalr/</guid>
      <description>Être opérationnel # Exigences de la version IIS / .NET : Voir ici
SignalR 2+ # Installez le package NuGet Microsoft.AspNet.SignalR (il s&amp;rsquo;agit de l&amp;rsquo;ensemble de la solution SignalR) et il vous demandera d&amp;rsquo;installer toutes les dépendances pour d&amp;rsquo;autres packages. Acceptez les conditions et installez-les également.
Maintenant que nous avons les .dlls et les scripts clients nécessaires pour générer notre propre SignalR Hub, créons-en un. Cliquez sur votre projet Web, ajoutez un dossier nommé Hubs ou SignalR, et ajoutez-y une classe NameOfYourChoosingHub.</description>
    </item>
    
    <item>
      <title>Gestion des durées de vie des connexions</title>
      <link>https://www.wikiod.com/fr/signalr/gestion-des-durees-de-vie-des-connexions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/signalr/gestion-des-durees-de-vie-des-connexions/</guid>
      <description>Paramètres # Paramètre Détails stopCalled Cette valeur vous indique comment un utilisateur s&amp;rsquo;est déconnecté, si elle est définie sur true, l&amp;rsquo;utilisateur a explicitement fermé la connexion, sinon il a expiré. Il convient de noter qu&amp;rsquo;au cours de ces fonctions, vous avez toujours accès au contexte, vous pouvez donc obtenir le connectionId et identifier qui/quoi s&amp;rsquo;est déconnecté.
N&amp;rsquo;oubliez pas qu&amp;rsquo;un utilisateur peut avoir ** plusieurs ID de connexion **, alors réfléchissez à la manière dont vous souhaitez stocker tous les ID de connexion pour un utilisateur</description>
    </item>
    
  </channel>
</rss>
