<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sympy Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/sympy/</link>
    <description>Recent content in Sympy Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/sympy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec sympy</title>
      <link>https://www.wikiod.com/fr/sympy/demarrer-avec-sympy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sympy/demarrer-avec-sympy/</guid>
      <description>Installer SymPy # La manière la plus simple et recommandée d&amp;rsquo;installer SymPy consiste à installer Anaconda.
Si vous avez déjà installé Anaconda ou Miniconda, vous pouvez installer la dernière version avec conda :
conda install sympy Une autre façon d&amp;rsquo;installer SymPy consiste à utiliser pip :
pip install sympy Notez que cela peut nécessiter des privilèges root, donc on pourrait avoir besoin
sudo pip install sympy La plupart des distributions Linux proposent également SymPy dans leurs référentiels de packages.</description>
    </item>
    
    <item>
      <title>Calculs différentiels</title>
      <link>https://www.wikiod.com/fr/sympy/calculs-differentiels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sympy/calculs-differentiels/</guid>
      <description>Optimisation non linéaire contrainte # Énoncé du problème :
Trouver le minimum (sur x, y) de la fonction f(x,y), sous réserve de g(x,y)=0, où f(x,y) = 2 * x**2 + 3 * y**2 et g(x,y) = x**2 + y* *2 - 4.
Solution : nous allons résoudre ce problème en procédant comme suit :
Spécifiez la fonction lagrangienne pour le problème Déterminer les conditions de Karush-Kuhn-Tucker (KKT) Trouvez les tuples (x,y) qui satisfont les conditions KKT Déterminez lequel de ces tuples (x,y) correspond au minimum de f(x,y) Définissez d&amp;rsquo;abord les variables d&amp;rsquo;optimisation ainsi que les fonctions objectifs et contraintes :</description>
    </item>
    
    <item>
      <title>Équations</title>
      <link>https://www.wikiod.com/fr/sympy/equations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sympy/equations/</guid>
      <description>Résoudre le système d&amp;rsquo;équations linéaires # import sympy as sy x1, x2 = sy.symbols(&amp;quot;x1 x2&amp;quot;) equations = [ sy.Eq( 2*x1 + 1*x2 , 10 ), sy.Eq( 1*x1 - 2*x2 , 11 ) ] print sy.solve(equations) # Result: {x1: 31/5, x2: -12/5} Résoudre une seule équation # import sympy as sy # Symbols have to be defined before one can use them x = sy.S(&#39;x&#39;) # Definition of the equation to be solved eq=sy.</description>
    </item>
    
    <item>
      <title>Solveurs</title>
      <link>https://www.wikiod.com/fr/sympy/solveurs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sympy/solveurs/</guid>
      <description>À partir de la version 1.0 de Sympy, la principale chose à comprendre concernant l&amp;rsquo;utilisation de ses solveurs est peut-être que &amp;lsquo;solveset prendra le relais solve soit en interne, soit en externe&amp;rsquo;. À ce stade, le solveset devrait déjà être utilisé pour résoudre des équations univariées et des systèmes d&amp;rsquo;équations linéaires.
Résoudre une inégalité univariée # &amp;gt;&amp;gt;&amp;gt; from sympy.solvers.inequalities import solve_univariate_inequality &amp;gt;&amp;gt;&amp;gt; from sympy import var &amp;gt;&amp;gt;&amp;gt; x=var(&#39;x&#39;) &amp;gt;&amp;gt;&amp;gt; solve_univariate_inequality(2*x**2-6&amp;gt;1,x,relational=False) (-oo, -sqrt(14)/2) U (sqrt(14)/2, oo) Le paramètre relational=False indique simplement comment les résultats doivent être rendus.</description>
    </item>
    
  </channel>
</rss>
