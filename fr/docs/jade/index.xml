<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jade Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/jade/</link>
    <description>Recent content in jade Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/jade/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec le jade</title>
      <link>https://www.wikiod.com/fr/jade/debuter-avec-le-jade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jade/debuter-avec-le-jade/</guid>
      <description>Syntaxe # Pug (l&amp;rsquo;ancien nom est Jade) est une syntaxe propre et sensible aux espaces pour écrire du HTML. Voici un exemple simple :
doctype html html(lang=&amp;quot;en&amp;quot;) head title= pageTitle script(type=&#39;text/javascript&#39;). if (foo) bar(1 + 5) body h1 Pug - node template engine #container.col if youAreUsingPug p You are amazing else p Get on it! p. Pug is a terse and simple templating language with a strong focus on performance and powerful features.</description>
    </item>
    
    <item>
      <title>Les attributs</title>
      <link>https://www.wikiod.com/fr/jade/les-attributs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jade/les-attributs/</guid>
      <description>&amp;amp;les attributs # Prononcée &amp;ldquo;et attributs&amp;rdquo;, la syntaxe &amp;ldquo;&amp;amp;attributs&amp;rdquo; peut être utilisée pour décomposer un objet en attributs d&amp;rsquo;un élément. #Code : div#foo(data-bar=&amp;quot;foo&amp;quot;)&amp;amp;attributs({&#39;data-foo&#39; : &#39;bar&#39;})
Résultat: # &amp;lt;div id=&amp;quot;foo&amp;quot; data-bar=&amp;quot;foo&amp;quot; data-foo=&amp;quot;bar&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
L&amp;rsquo;objet n&amp;rsquo;a pas besoin d&amp;rsquo;être un littéral d&amp;rsquo;objet. Il peut également s&amp;rsquo;agir simplement d&amp;rsquo;une variable qui a un objet comme valeur (voir aussi Mixin Attributes)
#Code :
- var attributes = {&#39;data-foo&#39;: &#39;bar&#39;}; div#foo(data-bar=&amp;quot;foo&amp;quot;)&amp;amp;attributes(attributes) Résultat: # &amp;lt;div id=&amp;quot;foo&amp;quot; data-bar=&amp;quot;foo&amp;quot; data-foo=&amp;quot;bar&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;</description>
    </item>
    
    <item>
      <title>Cas</title>
      <link>https://www.wikiod.com/fr/jade/cas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jade/cas/</guid>
      <description>Cas # - var friends = 10 case friends when 0 p you have no friends when 1 p you have a friend default p you have #{friends} friends Le résultat est :
&amp;lt;p&amp;gt;tu as 10 amis&amp;lt;/p&amp;gt;</description>
    </item>
    
    <item>
      <title>harpe js</title>
      <link>https://www.wikiod.com/fr/jade/harpe-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jade/harpe-js/</guid>
      <description>Harp est un serveur Web statique avec prétraitement intégré. Harp peut compiler votre projet en actifs statiques, HTML, CSS et JavaScript, sans aucune configuration nécessaire. Vous pouvez également utiliser Harp en tant que bibliothèque Node pour compiler ou exécuter en tant que serveur.
Harp inclut les préprocesseurs communs et utiles par défaut. Il sert Jade (Pug), Markdown, EJS, CoffeeScript, LESS, Sass et Stylus.
Comment configurer la harpe # Harp ne nécessite aucune configuration pour démarrer.</description>
    </item>
    
  </channel>
</rss>
