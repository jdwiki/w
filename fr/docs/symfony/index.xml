<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel symfony on </title>
    <link>https://www.wikiod.com/fr/docs/symfony/</link>
    <description>Recent content in Tutoriel symfony on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/symfony/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec symfony</title>
      <link>https://www.wikiod.com/fr/symfony/demarrer-avec-symfony/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/symfony/demarrer-avec-symfony/</guid>
      <description>Création d&amp;rsquo;un nouveau projet Symfony à l&amp;rsquo;aide de Symfony Installer # Le [Symfony Installer][1] est un outil en ligne de commande qui vous aide à créer de nouvelles applications Symfony. Il nécessite PHP 5.4 ou supérieur.
Téléchargement et installation de Symfony Installer sur Linux / MacOS # Ouvrez un terminal et exécutez les commandes suivantes :
sudo mkdir -p /usr/local/bin sudo curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony sudo chmod a+x /usr/local/bin/symfony Cela crée un exécutable symfony global qui peut être appelé de n&amp;rsquo;importe où.</description>
    </item>
    
    <item>
      <title>Routage</title>
      <link>https://www.wikiod.com/fr/symfony/routage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/symfony/routage/</guid>
      <description>Le routage est le processus de mappage d&amp;rsquo;une URL à un [contrôleur][1]. Symfony dispose d&amp;rsquo;un puissant composant Routing qui vous permet de définir des routes.
Le composant de routage prend en charge un certain nombre de formats de configuration : annotations, YAML, XML et PHP brut.
[1] : https://www.wikiod.com/fr/symfony/controleurs
Paramètres # Paramètre Détails nom Le nom de l&amp;rsquo;itinéraire. Exemple : livre_show chemin Le chemin (peut contenir des caractères génériques). Exemple : /livre/{isbn} valeurs par défaut Valeurs par défaut des paramètres Itinéraires simples # Utilisation de YAML :</description>
    </item>
    
    <item>
      <title>Contrôleurs</title>
      <link>https://www.wikiod.com/fr/symfony/controleurs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/symfony/controleurs/</guid>
      <description>Un contrôleur dans Symfony est un appelable PHP (une fonction, une méthode sur un objet ou une fermeture) qui reçoit une requête HTTP et renvoie une réponse HTTP. Une réponse HTTP peut contenir n&amp;rsquo;importe quoi : une page HTML, une chaîne JSON, un téléchargement de fichier, etc.
Afin d&amp;rsquo;indiquer à Symfony quel contrôleur doit gérer une certaine requête, vous devez [configurer une route][1].
[1] : https://www.wikiod.com/fr/symfony/routage
Syntaxe # $this-&amp;gt;generateUrl(&amp;lsquo;route_name&amp;rsquo;, [&amp;lsquo;placeholder&amp;rsquo; =&amp;gt; &amp;lsquo;value&amp;rsquo;]); // génère une URL pour la route route_name avec un espace réservé $this-&amp;gt;render(&amp;rsquo;template.</description>
    </item>
    
    <item>
      <title>Conteneur de services</title>
      <link>https://www.wikiod.com/fr/symfony/conteneur-de-services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/symfony/conteneur-de-services/</guid>
      <description>Une application Symfony est généralement composée d&amp;rsquo;un grand nombre d&amp;rsquo;objets qui effectuent différentes tâches, telles que des référentiels, des contrôleurs, des mailers, etc. Dans Symfony, ces objets sont appelés services et sont définis dans app/config/services. yml ou dans l&amp;rsquo;un des bundles installés.
Le conteneur de services sait comment instancier ces services et en conserve une référence afin qu&amp;rsquo;ils n&amp;rsquo;aient pas à être instanciés deux fois. Si un service a des dépendances, il les instancie également.</description>
    </item>
    
    <item>
      <title>La demande</title>
      <link>https://www.wikiod.com/fr/symfony/la-demande/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/symfony/la-demande/</guid>
      <description>La classe Request de Symfony est une représentation orientée objet de la requête HTTP. Il contient des informations telles que l&amp;rsquo;URL, la chaîne de requête, les fichiers téléchargés, les cookies et d&amp;rsquo;autres en-têtes provenant du navigateur.
Syntaxe # $request-&amp;gt;getPathInfo(); // renvoie le chemin (partie locale de l&amp;rsquo;URL) qui est demandé (mais sans la chaîne de requête). C&amp;rsquo;est à dire. lors de la visite de https://example.com/foo/bar?key=value, cela contiendra /foo/bar $request-&amp;gt;query-&amp;gt;get(&amp;lsquo;id&amp;rsquo;); // renvoie un paramètre de chaîne de requête ($_GET) $request-&amp;gt;query-&amp;gt;get(&amp;lsquo;id&amp;rsquo;, 1); // renvoie un paramètre de chaîne de requête avec une valeur par défaut $request-&amp;gt;request-&amp;gt;get(&amp;rsquo;nom&amp;rsquo;); // renvoie une variable de corps de requête ($_POST) $request-&amp;gt;files-&amp;gt;get(&amp;lsquo;attachment&amp;rsquo;); // renvoie une instance de UploadedFile identifiée par &amp;ldquo;attachment&amp;rdquo; $request-&amp;gt;cookies-&amp;gt;get(&amp;lsquo;PHPSESSID&amp;rsquo;); // renvoie la valeur d&amp;rsquo;un cookie ($_COOKIE) $request-&amp;gt;headers-&amp;gt;get(&amp;lsquo;content_type&amp;rsquo;); // renvoie un en-tête de requête HTTP $request-&amp;gt;getMethod(); // renvoie la méthode de requête HTTP (GET, POST, PUT, DELETE, etc.</description>
    </item>
    
  </channel>
</rss>
