<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel Xamarin.Android on </title>
    <link>https://www.wikiod.com/fr/docs/xamarin-android/</link>
    <description>Recent content in Tutoriel Xamarin.Android on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/xamarin-android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec Xamarin. Android</title>
      <link>https://www.wikiod.com/fr/xamarin-android/premiers-pas-avec-xamarin-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/premiers-pas-avec-xamarin-android/</guid>
      <description>Premiers pas dans Visual Studio # Accédez à Fichier &amp;gt; Nouveau &amp;gt; Projet pour afficher la boîte de dialogue Nouveau projet. Accédez à Visual C# &amp;gt; Android et sélectionnez Application vierge : [![enter image description here][1]][1] Donnez un Nom à votre application et appuyez sur OK pour créer votre projet. Configurez votre [appareil pour le déploiement][2], ou [configurez un émulateur][3] Pour exécuter votre application, sélectionnez la configuration Debug et appuyez sur le bouton Start : [!</description>
    </item>
    
    <item>
      <title>Xamarin.Android - Comment créer une barre d&#39;outils</title>
      <link>https://www.wikiod.com/fr/xamarin-android/xamarinandroid---comment-creer-une-barre-doutils/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/xamarinandroid---comment-creer-une-barre-doutils/</guid>
      <description>Chère équipe,
Je pense qu&amp;rsquo;il est bon de mentionner la documentation officielle d&amp;rsquo;Android où le contrôle de la barre d&amp;rsquo;outils est expliqué en détail :
https://developer.android.com/reference/android/support/v7/widget/Toolbar.html
Il existe également du contenu intéressant sur la bibliothèque Android.Support.v7 utilisée dans l&amp;rsquo;exemple :
https://developer.android.com/training/appbar/index.html
Ajouter une barre d&amp;rsquo;outils à l&amp;rsquo;application Xamarin.Android # Tout d&amp;rsquo;abord, vous devez ajouter la bibliothèque Xamarin.Android.Support.V7.AppCompat pour NuGet : https://www.nuget.org/packages/Xamarin.Android.Support.v7.AppCompat/
Dans le dossier &amp;ldquo;values&amp;rdquo; sous &amp;ldquo;Ressources&amp;rdquo;, ajoutez un nouveau fichier xml appelé &amp;ldquo;styles.</description>
    </item>
    
    <item>
      <title>RecyclerView</title>
      <link>https://www.wikiod.com/fr/xamarin-android/recyclerview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/recyclerview/</guid>
      <description>Principes de base de RecyclerView # Ceci est un exemple d&amp;rsquo;utilisation de Android Support Library V7 RecyclerView. Les bibliothèques de support sont généralement recommandées car elles fournissent des versions rétrocompatibles des nouvelles fonctionnalités, fournissent des éléments d&amp;rsquo;interface utilisateur utiles qui ne sont pas inclus dans le framework et fournissent une gamme d&amp;rsquo;utilitaires sur lesquels les applications peuvent s&amp;rsquo;appuyer.
Pour obtenir le RecyclerView, nous allons installer les packages Nuget nécessaires. Tout d&amp;rsquo;abord, nous allons rechercher v7 recyclerview.</description>
    </item>
    
    <item>
      <title>Cycle de vie de l&#39;application - Xamarin.Andorid</title>
      <link>https://www.wikiod.com/fr/xamarin-android/cycle-de-vie-de-lapplication---xamarinandorid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/cycle-de-vie-de-lapplication---xamarinandorid/</guid>
      <description>Le cycle de vie de l&amp;rsquo;application Xamarin.Android est le même que celui de l&amp;rsquo;application Android normale. Lorsque nous parlons de cycle de vie, nous devons parler du cycle de vie de l&amp;rsquo;application, du cycle de vie de l&amp;rsquo;activité et du cycle de vie du fragment.
Dans ce qui suit, je vais essayer de fournir une bonne description et la façon de les utiliser. J&amp;rsquo;ai obtenu cette documentation à partir de la documentation officielle Android et Xamarin et de nombreuses ressources Web utiles fournies dans la section des remarques ci-dessous.</description>
    </item>
    
    <item>
      <title>Fixations</title>
      <link>https://www.wikiod.com/fr/xamarin-android/fixations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/fixations/</guid>
      <description>Suppression de types # Il est possible de demander au générateur de liaisons Xamarin. Android d&amp;rsquo;ignorer un type Java et de ne pas le lier. Cela se fait en ajoutant un élément XML remove-node au fichier metadata.xml :
&amp;lt;remove-node path=&amp;quot;/api/package[@name=&#39;{package_name}&#39;]/class[@name=&#39;{name}&#39;]&amp;quot; /&amp;gt; Implémentation d&amp;rsquo;interfaces Java # Si une bibliothèque Java contient des interfaces qui doivent être implémentées par l&amp;rsquo;utilisateur (par exemple, des écouteurs de clic comme View.IOnClickListener ou des rappels), la classe d&amp;rsquo;implémentation doit hériter &amp;ndash; directement ou indirectement &amp;ndash; de Java.</description>
    </item>
    
    <item>
      <title>Publication de votre APK Xamarin.Android</title>
      <link>https://www.wikiod.com/fr/xamarin-android/publication-de-votre-apk-xamarinandroid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/publication-de-votre-apk-xamarinandroid/</guid>
      <description>Cette rubrique montre des informations sur la façon de préparer votre application Xamarin. Android pour le mode de publication et comment l&amp;rsquo;optimiser.
Préparation de votre APK dans Visual Studio # Vous avez terminé votre application, testé en mode débogage et elle fonctionne parfaitement. Maintenant, vous voulez le préparer pour le publier dans le Google Play Store.
La documentation Xamarin fournit de bonnes informations ici :
https://developer.xamarin.com/guides/android/deployment,_testing,_and_metrics/publishing_an_application/
Manifeste Android
Tout d&amp;rsquo;abord, dans Visual Studio, cliquez avec le bouton droit sur votre projet Xamarin.</description>
    </item>
    
    <item>
      <title>Dialogues</title>
      <link>https://www.wikiod.com/fr/xamarin-android/dialogues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/dialogues/</guid>
      <description>Paramètres # méthode publique couramment utilisée Utiliser SetTitle(String) Définit le titre de la boîte de dialogue SetIcon(Drawable) Définir l&amp;rsquo;icône de la boîte de dialogue d&amp;rsquo;alerte SetMessage(chaîne) Définissez le message à afficher. SetNegativeButton(String, EventHandler) Définit un écouteur à invoquer lorsque le bouton négatif de la boîte de dialogue est enfoncé. SetPositiveButton(String, EventHandler) Définit un écouteur à invoquer lorsque le bouton positif de la boîte de dialogue est enfoncé. SetNeutralButton(String, EventHandler) Définit un écouteur à invoquer lorsque le bouton neutre de la boîte de dialogue est enfoncé.</description>
    </item>
    
    <item>
      <title>Toasts</title>
      <link>https://www.wikiod.com/fr/xamarin-android/toasts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/toasts/</guid>
      <description>Message Toast de base # Tout d&amp;rsquo;abord, instanciez un objet Toast avec l&amp;rsquo;une des méthodes [MakeText()][1]. Cette méthode prend trois paramètres : l&amp;rsquo;application [Context][2], le message texte et la durée du toast. Il renvoie un objet Toast correctement initialisé. Vous pouvez afficher la notification de toast avec [Show()][3], comme illustré dans l&amp;rsquo;exemple suivant :
Context context = Application.Context; string text = &amp;quot;Hello toast!&amp;quot;; ToastLength duration = ToastLength.Short; var toast = Toast.</description>
    </item>
    
    <item>
      <title>Xamarin.Android - Communication Bluetooth</title>
      <link>https://www.wikiod.com/fr/xamarin-android/xamarinandroid---communication-bluetooth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/xamarinandroid---communication-bluetooth/</guid>
      <description>Dans Xamarin.Android, les propriétés BluetoothSocket.InputStream et BluetoothSocket.OutputStream sont par conception automatiquement converties en System.IO.Stream. Dans le cas d&amp;rsquo;un protocole de communication dit interactif, lorsque le serveur ne répond que lorsque le client lui parle, System.IO.Stream n&amp;rsquo;est pas bon car il n&amp;rsquo;a pas de méthode ou de propriété pour obtenir le nombre d&amp;rsquo;octets de réponse disponibles avant de lire la réponse.
Paramètres # Paramètre Détails prise Une instance de l&amp;rsquo;objet BluetoothSocket. Socket doit être ouvert avant d&amp;rsquo;appeler cette méthode.</description>
    </item>
    
    <item>
      <title>Vue de liste personnalisée</title>
      <link>https://www.wikiod.com/fr/xamarin-android/vue-de-liste-personnalisee/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/xamarin-android/vue-de-liste-personnalisee/</guid>
      <description>Custom Listview comprend des lignes conçues selon les besoins des utilisateurs. # [![entrez la description de l&amp;rsquo;image ici][1]][1]
Pour la mise en page ci-dessus, votre fichier customrow.axml est comme indiqué ci-dessous
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; &amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; android:layout_width=&amp;quot;fill_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:padding=&amp;quot;8dp&amp;quot;&amp;gt; &amp;lt;ImageView android:id=&amp;quot;@+id/Image&amp;quot; android:layout_width=&amp;quot;80dp&amp;quot; android:layout_height=&amp;quot;80dp&amp;quot; android:layout_alignParentLeft=&amp;quot;true&amp;quot; android:layout_marginRight=&amp;quot;8dp&amp;quot; android:src=&amp;quot;@drawable/icon&amp;quot; /&amp;gt; &amp;lt;TextView android:id=&amp;quot;@+id/Text1&amp;quot; android:layout_width=&amp;quot;wrap_content&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:layout_alignTop=&amp;quot;@id/Image&amp;quot; android:layout_toRightOf=&amp;quot;@id/Image&amp;quot; android:layout_marginTop=&amp;quot;5dip&amp;quot; android:text=&amp;quot;This is Line1&amp;quot; android:textSize=&amp;quot;20dip&amp;quot; android:textStyle=&amp;quot;bold&amp;quot; /&amp;gt; &amp;lt;TextView android:id=&amp;quot;@+id/Text2&amp;quot; android:layout_width=&amp;quot;fill_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:layout_below=&amp;quot;@id/Text1&amp;quot; android:layout_marginTop=&amp;quot;1dip&amp;quot; android:text=&amp;quot;This is line2&amp;quot; android:textSize=&amp;quot;15dip&amp;quot; android:layout_toRightOf=&amp;quot;@id/Image&amp;quot; /&amp;gt; &amp;lt;/RelativeLayout&amp;gt; Ensuite, vous pouvez concevoir votre main.</description>
    </item>
    
  </channel>
</rss>
