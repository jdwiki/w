<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel mercuriel on </title>
    <link>https://www.wikiod.com/fr/docs/mercurial/</link>
    <description>Recent content in Tutoriel mercuriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/mercurial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec Mercurial</title>
      <link>https://www.wikiod.com/fr/mercurial/premiers-pas-avec-mercurial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mercurial/premiers-pas-avec-mercurial/</guid>
      <description>Installation et configuration # Vous pouvez [télécharger Mercurial][1] depuis le site Web du projet, et il existe des [utilitaires graphiques][2] pour Windows, Linux et OSX si vous préférez cela à une interface de ligne de commande. La plupart des gestionnaires de packages Unix incluent Mercurial, par exemple sur Debian/Ubuntu :
$ apt-get install mercurial Vous pouvez vérifier que Mercurial est installé en exécutant :
$ hg --version Installer # Mercurial est prêt à l&amp;rsquo;emploi, mais vous souhaiterez probablement configurer Mercurial pour savoir qui vous êtes avant d&amp;rsquo;aller plus loin.</description>
    </item>
    
    <item>
      <title>Opérations courantes</title>
      <link>https://www.wikiod.com/fr/mercurial/operations-courantes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mercurial/operations-courantes/</guid>
      <description>Utilisation de la commande bisect pour trouver un bogue # La commande bisect vous aide à retrouver l&amp;rsquo;ensemble de modifications qui a introduit un bogue.
Réinitialisez l&amp;rsquo;état bisect et marquez la révision actuelle comme mauvaise (elle contient le bogue !)
hg bisect --reset hg bisect --bad Revenez à un point où vous pensez que le bug n&amp;rsquo;est pas présent
hg update -r -200 Vous devez maintenant tester le logiciel et si votre hypothèse était correcte (bug absent), marquez la révision comme bonne :</description>
    </item>
    
    <item>
      <title>Files d&#39;attente mercurielles</title>
      <link>https://www.wikiod.com/fr/mercurial/files-dattente-mercurielles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mercurial/files-dattente-mercurielles/</guid>
      <description>Syntaxe # hg qnew -m &amp;ldquo;Mon message de commit&amp;rdquo; myPatch hg qpop -hg qpush hg qrefresh -m &amp;ldquo;Mon nouveau message de commit&amp;rdquo; hg qappliqué hg qseries finition hg hg qdelete myPatch hg qfold myPatch hg qqueue &amp;ndash;list hg qqueue &amp;ndash;create maNouvelleQueue hg qqueue &amp;ndash;delete maNouvelleQueue Activer l&amp;rsquo;extension # Modifiez Mercurial.ini (Windows) ou .hgrc (Linux/OSX) :
[extenstions] mq = Créer et mettre à jour des correctifs # Créez de nouveaux correctifs avec hg qnew patch-name, puis mettez-les à jour avec les nouvelles modifications avec hg qrefresh :</description>
    </item>
    
    <item>
      <title>Liste des commandes</title>
      <link>https://www.wikiod.com/fr/mercurial/liste-des-commandes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mercurial/liste-des-commandes/</guid>
      <description>Commandes pour préparer les commits # add : ajoute les fichiers spécifiés au prochain commit addremove : ajoutez tous les nouveaux fichiers, supprimez tous les fichiers manquants backout : effet inverse du jeu de modifications précédent commit, ci : validez les fichiers spécifiés ou toutes les modifications en suspens copy, cp : marque les fichiers comme copiés pour le prochain commit forget : oublie les fichiers spécifiés lors du prochain commit merge : fusionne une autre révision dans le répertoire de travail remove, rm : supprime les fichiers spécifiés au prochain commit renommer, déplacer, mv : renommer les fichiers ; équivalent de copier + supprimer Résoudre : rétablir les fusions ou définir/afficher l&amp;rsquo;état de fusion des fichiers revert : restaure les fichiers à leur état fraîchement extrait Inspecter l&amp;rsquo;historique # annoter, blâmer : afficher les informations sur le jeu de modifications par ligne pour chaque fichier bisect : recherche de subdivision des changesets cat : affiche la révision actuelle ou donnée des fichiers diff : référentiel diff (ou fichiers sélectionnés) grep : recherche un modèle dans les fichiers et révisions spécifiés log, history : affiche l&amp;rsquo;historique des révisions de l&amp;rsquo;ensemble du référentiel ou des fichiers Échanger des ensembles de modifications avec des dépôts distants # archive : crée une archive non versionnée d&amp;rsquo;une révision du référentiel bundle : créer un fichier changegroup clone : faire une copie d&amp;rsquo;un référentiel existant export : vider l&amp;rsquo;en-tête et les diffs pour un ou plusieurs ensembles de modifications greffer : copier les modifications des autres branches sur la branche actuelle entrant : affiche les nouveaux ensembles de modifications trouvés dans la source import, patch : importez un ensemble ordonné de patchs init : crée un nouveau dépôt dans le répertoire donné sortant : affiche les ensembles de modifications introuvables dans la destination phase : définir ou afficher le nom de la phase actuelle pull : extrait les modifications de la source spécifiée push : envoie les modifications vers la destination spécifiée recover : annuler une transaction interrompue rollback : annuler la dernière transaction (DANGEREUX) (OBSOLÈTE) servir : démarrer le serveur Web autonome unbundle : appliquez un ou plusieurs fichiers changegroup Statut : où en êtes-vous ?</description>
    </item>
    
  </channel>
</rss>
