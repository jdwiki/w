<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel pyqt on </title>
    <link>https://www.wikiod.com/fr/docs/pyqt/</link>
    <description>Recent content in Tutoriel pyqt on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/pyqt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec pyqt</title>
      <link>https://www.wikiod.com/fr/pyqt/demarrer-avec-pyqt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pyqt/demarrer-avec-pyqt/</guid>
      <description>Une application de base # L&amp;rsquo;exemple suivant montre une fenêtre graphique principale de base avec un widget d&amp;rsquo;étiquette, une barre d&amp;rsquo;outils et une barre d&amp;rsquo;état utilisant PyQt4.
[![][1]][1]
import sys from PyQt4 import QtGui class App(QtGui.QApplication): def __init__(self, sys_argv): super(App, self).__init__(sys_argv) self.build_ui() def build_ui(self): # build a main GUI window self.main_window = QtGui.QMainWindow() self.main_window.setWindowTitle(&#39;App&#39;) self.main_window.show() # add a label to the main window label = QtGui.QLabel(&#39;Label&#39;) self.main_window.setCentralWidget(label) # add a toolbar with an action button to the main window action = QtGui.</description>
    </item>
    
    <item>
      <title>Utilisation de threads avec PyQt</title>
      <link>https://www.wikiod.com/fr/pyqt/utilisation-de-threads-avec-pyqt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pyqt/utilisation-de-threads-avec-pyqt/</guid>
      <description>Bien que certaines parties du framework Qt soient thread-safe, une grande partie ne l&amp;rsquo;est pas. La [documentation Qt C++][1] fournit un bon aperçu des classes réentrantes (peut être utilisé pour instancier des objets dans plusieurs threads). Les règles suivantes sont les plus recherchées :
Vous ne pouvez pas créer ou accéder à un objet Qt GUI depuis l&amp;rsquo;extérieur du thread principal (par exemple, tout ce qui sous-classe QWidget ou similaire). Même si la classe Qt est réentrante, vous ne pouvez pas partager l&amp;rsquo;accès à un objet Qt entre les threads à moins que la documentation Qt de cette classe n&amp;rsquo;indique explicitement que les instances sont thread-safe.</description>
    </item>
    
  </channel>
</rss>
