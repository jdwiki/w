<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/jenkins/</link>
    <description>Recent content in Jenkins Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/jenkins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec Jenkins</title>
      <link>https://www.wikiod.com/fr/jenkins/demarrer-avec-jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jenkins/demarrer-avec-jenkins/</guid>
      <description>Configuration du proxy Nginx # Nativement, Jenkins s&amp;rsquo;exécute sur le port 8080. Nous pouvons établir un proxy à partir du port 80 -&amp;gt; 8080 afin que Jenkins soit accessible via :
http://&amp;lt;url&amp;gt;.com au lieu de la valeur par défaut
http://&amp;lt;url&amp;gt;.com:8080 Commencez par installer Nginx.
sudo aptitude -y install nginx
Supprimer les paramètres par défaut pour Nginx
cd /etc/nginx/sites-available
sudo rm par défaut ../sites-enabled/default
Créer le nouveau fichier de configuration
sudo touche jenkins</description>
    </item>
    
    <item>
      <title>Script Jenkins Groovy</title>
      <link>https://www.wikiod.com/fr/jenkins/script-jenkins-groovy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jenkins/script-jenkins-groovy/</guid>
      <description>Créer un utilisateur par défaut # Créez un fichier groovy par le chemin $JENKINS_HOME/init.groovy.d/basic-security.groovy Dans Ubuntu 16, le répertoire d&amp;rsquo;accueil de Jenkins se trouve dans /var/lib/jenkins
Placez dans le fichier le code suivant
#!groovy
import jenkins.model.* import hudson.security.*
def instance = Jenkins.getInstance()
def hudsonRealm = new HudsonPrivateSecurityRealm(false)
hudsonRealm.createAccount(&amp;ldquo;admin_name&amp;rdquo;,&amp;ldquo;admin_password&amp;rdquo;) instance.setSecurityRealm(hudsonRealm) instance.save()
Redémarrez le service Jenkins
Après le démarrage de Jenkins, vous devez supprimer le fichier $JENKINS_HOME/init.groovy.d/basic-security.groovy
Désactiver l&amp;rsquo;assistant de configuration # Ouvrez le fichier de configuration par défaut de Jenkins et ajoutez la clé suivante JAVA_ARGS -Djenkins.</description>
    </item>
    
    <item>
      <title>Configurer Auto Git Push lors d&#39;une génération réussie dans Jenkins</title>
      <link>https://www.wikiod.com/fr/jenkins/configurer-auto-git-push-lors-dune-generation-reussie-dans-jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jenkins/configurer-auto-git-push-lors-dune-generation-reussie-dans-jenkins/</guid>
      <description>Ce document vous guidera à travers les étapes de configuration d&amp;rsquo;un travail Jenkins qui permet à l&amp;rsquo;utilisateur de configurer le push automatique en cas de construction réussie. L&amp;rsquo;opération push peut être contrôlée par l&amp;rsquo;utilisateur. L&amp;rsquo;utilisateur peut choisir s&amp;rsquo;il souhaite effectuer ou non l&amp;rsquo;opération de poussée automatique en cas de génération réussie.
Configuration de la tâche de poussée automatique # Créez une tâche de build (selon vos besoins). Pour cet exemple, j&amp;rsquo;ai créé un travail de style libre (AutoPush) pour effectuer la construction ANT.</description>
    </item>
    
    <item>
      <title>Installez Jenkins sur Windows avec prise en charge SSH pour les référentiels GitHub privés</title>
      <link>https://www.wikiod.com/fr/jenkins/installez-jenkins-sur-windows-avec-prise-en-charge-ssh-pour-les-referentiels-github-prives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jenkins/installez-jenkins-sur-windows-avec-prise-en-charge-ssh-pour-les-referentiels-github-prives/</guid>
      <description>Les demandes d&amp;rsquo;extraction GitHub échouent # Les installations prêtes à l&amp;rsquo;emploi de Jenkins avec les plugins Git et SSH ne fonctionneront pas lorsque vous tenterez d&amp;rsquo;extraire un référentiel privé de GitHub. [![entrez la description de l&amp;rsquo;image ici][1]][1]
[1] : https://i.stack.imgur.com/COpK2.png
Outil PS PSExec.exe de Microsoft # La première étape pour résoudre ce problème que j&amp;rsquo;ai trouvé était de télécharger [PSTools][1] et d&amp;rsquo;extraire les outils à un emplacement pratique sur le serveur de construction (par exemple, c:\Programs\PSTools est là, j&amp;rsquo;ai extrait le mien).</description>
    </item>
    
    <item>
      <title>Configuration de Jenkins pour l&#39;automatisation des builds iOS.</title>
      <link>https://www.wikiod.com/fr/jenkins/configuration-de-jenkins-pour-lautomatisation-des-builds-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jenkins/configuration-de-jenkins-pour-lautomatisation-des-builds-ios/</guid>
      <description>Vous pouvez désormais définir le processus d&amp;rsquo;intégration continue et de livraison continue (CI/CD) en tant que code avec Jenkins 2.0 pour vos projets dans iOS 10. Des activités telles que la création, le test, la couverture du code, le style de vérification, les rapports et les notifications peuvent être décrit dans un seul fichier.
Pour lire l&amp;rsquo;article complet, rendez-vous sur [Pipeline in Jenkins 2.0 as Code for iOS 10 and XCode 8][1]</description>
    </item>
    
    <item>
      <title>Plugin de stratégie de rôle</title>
      <link>https://www.wikiod.com/fr/jenkins/plugin-de-strategie-de-role/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jenkins/plugin-de-strategie-de-role/</guid>
      <description>Configuration # Gérer les rôles # ** Rôles globaux ** - Créez des rôles avec un ensemble sélectionné de fonctionnalités Jenkins par exemple. Généralement pour un projet de développement, 2 rôles peuvent être créés.
Développeur - Le rôle global ne peut être défini que sur Général : Lire ProjectOwner - Le rôle global peut être défini sur Overall : Lire Cela limite le développeur et le propriétaire du projet à l&amp;rsquo;accès en lecture à toutes les fonctionnalités de Jenkins.</description>
    </item>
    
    <item>
      <title>Configuration de Build Automation pour iOS à l&#39;aide de Shenzhen</title>
      <link>https://www.wikiod.com/fr/jenkins/configuration-de-build-automation-pour-ios-a-laide-de-shenzhen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jenkins/configuration-de-build-automation-pour-ios-a-laide-de-shenzhen/</guid>
      <description>## Configuration de l&amp;rsquo;automatisation de la création d&amp;rsquo;iOS à l&amp;rsquo;aide de Shenzhen Partie I : Configurer la machine Mac pour utiliser shenzhen
Aller à la borne
Installer Shenzhen
sudo gem installer shenzhen
sudo gem installer nomad-cli
Télécharger l&amp;rsquo;utilitaire de ligne de commande XCode
xcode-select &amp;ndash;install
Popup apparaît avec le texte ci-dessous
La commande xcode-select nécessite les outils de développement en ligne de commande. Souhaitez-vous installer les outils maintenant ?&amp;quot;
Cliquez - Installer</description>
    </item>
    
  </channel>
</rss>
