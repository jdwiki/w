<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel asynchrone on </title>
    <link>https://www.wikiod.com/fr/docs/asynchronous/</link>
    <description>Recent content in Tutoriel asynchrone on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/asynchronous/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec l&#39;asynchrone</title>
      <link>https://www.wikiod.com/fr/asynchronous/premiers-pas-avec-lasynchrone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asynchronous/premiers-pas-avec-lasynchrone/</guid>
      <description>Installation ou configuration # Instructions détaillées sur la configuration ou l&amp;rsquo;installation de l&amp;rsquo;asynchrone.
Lecture de fichiers dans Node js # var fs = require(&amp;quot;fs&amp;quot;); fs.readFileSync(‘abc.txt’,function(err,data){ //Reading File Synchronously if(!err) { console.log(data); } //else //console.log(err); }); console.log(&amp;quot;something else&amp;quot;); Ici, le programme attendait pendant la lecture du fichier. Il n&amp;rsquo;ira pas plus loin avant d&amp;rsquo;avoir terminé l&amp;rsquo;opération de lecture, qui est un exemple de code de blocage. Mais idéalement, nous devrions continuer pendant que le programme lisait le fichier et une fois que c&amp;rsquo;est fait, nous devrions revenir en arrière et traiter cela.</description>
    </item>
    
  </channel>
</rss>
