<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel asp.net-mvc-5 on </title>
    <link>https://www.wikiod.com/fr/docs/asp-dotnet-mvc-5/</link>
    <description>Recent content in Tutoriel asp.net-mvc-5 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/asp-dotnet-mvc-5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec asp.net-mvc-5</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-mvc-5/premiers-pas-avec-aspnet-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-mvc-5/premiers-pas-avec-aspnet-mvc-5/</guid>
      <description>Quoi de neuf dans ASP.NET MVC 5 # Filtres d&amp;rsquo;authentification Are a new kind of filter added in ASP.NET MVC 5.0 .That run prior to authorization filters in the ASP.NET MVC pipeline and allow you to specify authentication logic per-action, per-controller, or globally for all controllers. Authentication filters process credentials in the request and provide a corresponding principal. Authentication filters can also add authentication challenges in response to unauthorized requests. 2.</description>
    </item>
    
    <item>
      <title>Routage des attributs dans mvc-5</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-mvc-5/routage-des-attributs-dans-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-mvc-5/routage-des-attributs-dans-mvc-5/</guid>
      <description>Syntaxe # 1. {productId : int}/{productTitle} Mappé sur ProductsController.Show(int id)
{nom d&amp;rsquo;utilisateur} mappé sur ProfilesController.Show(chaîne nom d&amp;rsquo;utilisateur)
{username}/catalogs/{catalogId:int}/{catalogTitle} Mappé sur CatalogsController.Show(string username, int catalogId)
Le routage est la façon dont ASP.NET MVC fait correspondre un URI à une action. MVC 5 prend en charge un nouveau type de routage, appelé routage d&amp;rsquo;attribut. Comme son nom l&amp;rsquo;indique, le routage d&amp;rsquo;attributs utilise des attributs pour définir des routes. Le routage des attributs vous donne plus de contrôle sur les URI de votre application Web.</description>
    </item>
    
    <item>
      <title>Créer des assistants HTML</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-mvc-5/creer-des-assistants-html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-mvc-5/creer-des-assistants-html/</guid>
      <description>Les assistants HTML sont un moyen très utile de créer des éléments HTML dans des vues à l&amp;rsquo;aide du framework MVC. Avec un peu de temps, votre équipe peut vraiment bénéficier de leur utilisation. Cela aide à garder le code propre et sujet aux erreurs.
Pour utiliser les assistants, vous devez d&amp;rsquo;abord ajouter une directive @using dans la vue, ou ajouter l&amp;rsquo;espace de noms dans le fichier Web.config situé dans le dossier Views.</description>
    </item>
    
    <item>
      <title>Contrôleur asynchrone dans MVC 5</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-mvc-5/controleur-asynchrone-dans-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-mvc-5/controleur-asynchrone-dans-mvc-5/</guid>
      <description>Définition # Utilisation d&amp;rsquo;un contrôleur asynchrone dans ASP.NET MVC. La classe AsyncController vous permet d&amp;rsquo;écrire des méthodes d&amp;rsquo;action asynchrones. Vous pouvez utiliser des méthodes d&amp;rsquo;action asynchrones pour les demandes de longue durée non liées au processeur. Cela évite d&amp;rsquo;empêcher le serveur Web d&amp;rsquo;effectuer des tâches pendant le traitement de la demande.
Contrôleur asynchrone # public async Task&amp;lt;actionresult&amp;gt; Index() { return View(&amp;quot;View&amp;quot;, await db.UserMasers.ToListAsync()); } </description>
    </item>
    
  </channel>
</rss>
