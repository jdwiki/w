<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Primefaces Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/primefaces/</link>
    <description>Recent content in Primefaces Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/primefaces/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec les primefaces</title>
      <link>https://www.wikiod.com/fr/primefaces/premiers-pas-avec-les-primefaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/primefaces/premiers-pas-avec-les-primefaces/</guid>
      <description>Installation de PrimeFaces # PrimeFaces peut être utilisé dans toutes les applications Web basées sur [Java Server Faces][1] (version 2.x) qui sont exécutées sur des conteneurs de servlet (par exemple [Wildlfy][2] ou [Tomcat][3] ou [GlassFish][ 4]).
Il existe plusieurs façons d&amp;rsquo;ajouter PrimeFaces à votre application.
Manuellement # [Téléchargez][5] le primefaces-{version}.jar et ajoutez-le à votre classpath.
Maven # &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.primefaces&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;primefaces&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;{version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Pour les anciennes versions (3.5 et inférieures), vous devez en plus ajouter le référentiel PrimeFaces :</description>
    </item>
    
    <item>
      <title>widgetVar</title>
      <link>https://www.wikiod.com/fr/primefaces/widgetvar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/primefaces/widgetvar/</guid>
      <description>widgetVar est le nom des variables côté client qui contient tous les widgets javascript PF sur la page. Il existe une excellente introduction/tutoriel pour utiliser le composant widgetVar écrit par Hatem Alimam appelé [Intro To PrimeFaces widgetVar][1]
[1] : http://blog.hatemalimam.com/intro-to-primefaces-widgetvar/
Utilisation de base de widgetVar # &amp;lt;h:form&amp;gt; &amp;lt;p:dialog widgetVar=&amp;quot;myDialog&amp;quot;&amp;gt;&amp;lt;/p:dialog&amp;gt; &amp;lt;p:commandButton onclick=&amp;quot;PF(&#39;myDialog&#39;).show();&amp;quot; /&amp;gt; &amp;lt;/h:form&amp;gt; Tableau de données # [datatable.js][datatable] dans le référentiel GitHub
Fonction Détails bindPaginator : fonction() Lie l&amp;rsquo;écouteur d&amp;rsquo;événement change et rend le paginateur loadLiveRows : fonction() Charge les lignes à la volée lors du défilement en direct paginer : fonction(nouvelÉtat) Pagination Ajax fetchPageSuivante : fonction(nouvelÉtat) Charge la page suivante de manière asynchrone pour la conserver à l&amp;rsquo;état d&amp;rsquo;affichage et met à jour l&amp;rsquo;état d&amp;rsquo;affichage sort : fonction(EntêteColonne, ordre, multi) Tri Ajax filtre : fonction() Filtre Ajax onRowClick : fonction (événement, élément de ligne, silencieux) onRowDblclick : fonction(événement, ligne) highlightRow : fonction(ligne) Met en surbrillance la ligne sélectionnée unhighlightRow : fonction(ligne) Efface les visuels sélectionnés fireRowSelectEvent : fonction (rowKey, behaviorEvent) Envoie un rowSelectEvent côté serveur pour invoquer un rowSelectListener s&amp;rsquo;il est défini fireRowUnselectEvent : fonction (rowKey, behaviorEvent) Envoie un rowUnselectEvent côté serveur pour invoquer un rowUnselectListener s&amp;rsquo;il est défini selectRowWithRadio : fonction(radio) Sélectionne la ligne correspondante d&amp;rsquo;une sélection de colonne radio unselectAllRows : fonction() selectAllRowsOnPage : fonction() unselectAllRowsOnPage : fonction() selectAllRows : fonction() toggleExpansion : fonction(toggler) Développe une ligne pour afficher le contenu détaillé collapseRow : fonction(ligne) collapseAllRows : fonction() getExpandedRows : fonction() switchToRowEdit : fonction(ligne) showRowEditors : fonction(ligne) saveRowEdit : fonction(rowEditor) Enregistre la ligne modifiée cancelRowEdit: fonction(rowEditor) updateRow : fonction(ligne, contenu) Met à jour la ligne avec le contenu donné clearSelection : fonction() Efface l&amp;rsquo;état de sélection clearFilters : fonction() Efface les filtres de tableau removeSelection : fonction(rowIndex) Supprimer le rowIndex donné de la sélection addSelection : fonction(rowKey) Ajoute la rowKey donnée à la sélection si elle n&amp;rsquo;existe pas déjà isSelected : fonction(rowKey) Trouve si la rowKey donnée est dans la sélection saveColumnOrder : fonction() estVide : fonction() Renvoie s&amp;rsquo;il y a des données affichées getSelectedRowsCount : fonction() [datatable] : https://github.</description>
    </item>
    
    <item>
      <title>Bonjour Primefaces</title>
      <link>https://www.wikiod.com/fr/primefaces/bonjour-primefaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/primefaces/bonjour-primefaces/</guid>
      <description>Bonjour Primefaces # C&amp;rsquo;est une application simple avec primefaces, c&amp;rsquo;est une page de connexion :
1-Configuration de web.xml :
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;web-app version=&amp;quot;3.1&amp;quot; xmlns=&amp;quot;http://xmlns.jcp.org/xml/ns/javaee&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&amp;quot;&amp;gt; &amp;lt;context-param&amp;gt; &amp;lt;param-name&amp;gt;javax.faces.PROJECT_STAGE&amp;lt;/param-name&amp;gt; &amp;lt;param-value&amp;gt;Development&amp;lt;/param-value&amp;gt; &amp;lt;/context-param&amp;gt; &amp;lt;servlet&amp;gt; &amp;lt;servlet-name&amp;gt;Faces Servlet&amp;lt;/servlet-name&amp;gt; &amp;lt;servlet-class&amp;gt;javax.faces.webapp.FacesServlet&amp;lt;/servlet-class&amp;gt; &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt; &amp;lt;/servlet&amp;gt; &amp;lt;servlet-mapping&amp;gt; &amp;lt;servlet-name&amp;gt;Faces Servlet&amp;lt;/servlet-name&amp;gt; &amp;lt;url-pattern&amp;gt;*.xhtml&amp;lt;/url-pattern&amp;gt; &amp;lt;/servlet-mapping&amp;gt; &amp;lt;session-config&amp;gt; &amp;lt;session-timeout&amp;gt; 30 &amp;lt;/session-timeout&amp;gt; &amp;lt;/session-config&amp;gt; &amp;lt;welcome-file-list&amp;gt; &amp;lt;welcome-file&amp;gt;index.xhtml&amp;lt;/welcome-file&amp;gt; &amp;lt;/welcome-file-list&amp;gt; &amp;lt;/web-app&amp;gt; 2-Créez ManagedBean :
import javax.faces.application.FacesMessage; import javax.faces.bean.ManagedBean; import javax.faces.bean.RequestScoped; import javax.faces.context.FacesContext; @ManagedBean @RequestScoped public class LoginBean { private String username; private String password; public LoginBean() { } public void login() { //Simple login if (!</description>
    </item>
    
    <item>
      <title>Comment utiliser la vitrine Primefaces</title>
      <link>https://www.wikiod.com/fr/primefaces/comment-utiliser-la-vitrine-primefaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/primefaces/comment-utiliser-la-vitrine-primefaces/</guid>
      <description>L&amp;rsquo;exemple du composant Primefaces panelGrid dans sa vitrine. # La vitrine des composants Primefaces que vous pouvez trouver [ici][1] et la documentation est [ici][2]
[1] : http://www.primefaces.org/showcase/ [2] : http://www.primefaces.org/documentation
L&amp;rsquo;interface doit être enregistrée en tant que fichier XHTML. Ce fichier peut contenir JSF, JSTL, JSP, HTML, CSS, jQuery, javaScript et son cadre et plus de technologies frontales. S&amp;rsquo;il vous plaît, ne mélangez pas les technologies JSF et JSP. Ce n&amp;rsquo;est pas une bonne approche.</description>
    </item>
    
  </channel>
</rss>
