<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel intellij-idea on </title>
    <link>https://www.wikiod.com/fr/docs/intellij-idea/</link>
    <description>Recent content in Tutoriel intellij-idea on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/intellij-idea/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec intellij-idea</title>
      <link>https://www.wikiod.com/fr/intellij-idea/demarrer-avec-intellij-idea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/demarrer-avec-intellij-idea/</guid>
      <description>Bonjour le monde! # Cela vous apprendra comment réaliser votre premier projet avec IDEA.
Lancez IDEA et cliquez sur &amp;ldquo;Créer un nouveau projet&amp;rdquo; dans l&amp;rsquo;écran de démarrage : [![Écran de démarrage][1]][1] Cliquez sur &amp;ldquo;Suivant&amp;rdquo; sur l&amp;rsquo;écran suivant. Nous créons un projet Java simple, nous n&amp;rsquo;avons donc pas besoin d&amp;rsquo;addons ou d&amp;rsquo;extras pour ce projet [![Pas d&amp;rsquo;action requise! Cliquez simplement sur Suivant !][2]][2] Utilisez l&amp;rsquo;écran suivant pour créer le modèle de projet &amp;ldquo;Java Hello World&amp;rdquo; : [!</description>
    </item>
    
    <item>
      <title>Comment installer des plugins</title>
      <link>https://www.wikiod.com/fr/intellij-idea/comment-installer-des-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/comment-installer-des-plugins/</guid>
      <description>Les plugins nous aident à faire les choses plus facilement. Intellij fournit une vaste gamme de plugins pour diverses technologies / langues. Il existe trois façons d&amp;rsquo;installer le plugin dans Intellij.
Pour télécharger et installer un plugin de référentiel # 1. Go to File --&amp;gt; Settings (e.g. Ctrl+Alt+S ). 2. In the left-hand pane, select Plugins. 3.On the Plugins window, click &amp;quot;Install JetBrains plugin&amp;quot; or the &amp;quot;Browse repositories button&amp;quot;. Pour installer un plugin depuis le disque # 1.</description>
    </item>
    
    <item>
      <title>IdeaVim</title>
      <link>https://www.wikiod.com/fr/intellij-idea/ideavim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/ideavim/</guid>
      <description>IdeaVim est un plugin pour les produits IDEA qui vise à fournir la fonctionnalité Vim dans les vues de l&amp;rsquo;éditeur
Affichage des numéros de ligne # À partir de la version 2016.2 d&amp;rsquo;IntelliJ IDEA et de la version 0.46 d&amp;rsquo;IdeaVim, l&amp;rsquo;option native d&amp;rsquo;IntelliJ pour afficher les numéros de ligne est inefficace. Lorsque vous cliquez sur Afficher les numéros de ligne, les numéros de ligne s&amp;rsquo;affichent et disparaissent immédiatement.
Ce problème est causé par un bogue dans le plugin IdeaVim, qui peut être résolu en utilisant la commande Vim pour afficher les numéros de ligne :</description>
    </item>
    
    <item>
      <title>Raccourcis utiles</title>
      <link>https://www.wikiod.com/fr/intellij-idea/raccourcis-utiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/raccourcis-utiles/</guid>
      <description>Navigation de base # Aller à l&amp;rsquo;éditeur (depuis la fenêtre de l&amp;rsquo;outil) # Échap
Basculer le focus vers la fenêtre d&amp;rsquo;outils correspondante # Windows : Alt + &amp;lt;numéro de la fenêtre d&amp;rsquo;outils&amp;gt; # OS X / macOS : Cmd + &amp;lt;numéro de fenêtre d&amp;rsquo;outil&amp;gt; # Par exemple, basculer le focus sur la fenêtre du projet # Windows : Alt + 1 # OS X / macOS : Cmd + 1 # Fenêtre contextuelle des fichiers récents # Windows : Ctrl + E # OS X / macOS : Cmd + E # Rechercher une action # Windows : Ctrl + Maj + A # OS X / macOS : Cmd + Maj + A # Aller vers # Dossier : # Windows: Ctrl + Shift + N # OS X / macOS: Cmd + Shift + N # Classer : # Windows: Ctrl + N # OS X / macOS: Cmd + N # Symbole (classe/méthode/variable/nom de constante) : # Windows: Ctrl + Alt + Shift + N # OS X / macOS: Cmd + Option + Shift + N # Note that you can use class name to narrow down the method/variable/constant search, for example to find symbol usersCollection in class UserDAO type:</description>
    </item>
    
    <item>
      <title>Fonctionnalités méconnues</title>
      <link>https://www.wikiod.com/fr/intellij-idea/fonctionnalites-meconnues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/fonctionnalites-meconnues/</guid>
      <description>Aperçu rapide # [Consultez la vidéo screencast sur YouTube à propos de cette fonctionnalité](https://youtu.be/D6YlYZVprCw) IntelliJ fournit une fonction d&amp;rsquo;aperçu rapide appelée Viewing Definition. L&amp;rsquo;utilisation de cette fonctionnalité permet à un utilisateur de voir rapidement le contenu d&amp;rsquo;une méthode/classe sans avoir à naviguer dans la classe elle-même
OS X - (⌘+Y) ou (⌥+Espace) Unix / Windows - Ctrl+Maj+I Exemple : Examiner Arrays.copyOfRange() : [![entrez la description de l&amp;rsquo;image ici][1]][1]
Vérifier si vous avez sélectionné la bonne classe dans &amp;ldquo;Rechercher&amp;rdquo; :</description>
    </item>
    
    <item>
      <title>Hibernate HQL console et inspections</title>
      <link>https://www.wikiod.com/fr/intellij-idea/hibernate-hql-console-et-inspections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/hibernate-hql-console-et-inspections/</guid>
      <description>Intellij IDEA prend en charge la saisie semi-automatique HQL et l&amp;rsquo;exécution de requêtes HQL sur la console. C&amp;rsquo;est ainsi que vous activez ce support.
Configuration des inspections HQL # Allez dans Fichier -&amp;gt; Structure du projet -&amp;gt; Modules. Ajoutez un nouveau module Hibernate. Faites un clic droit sur le module souhaité -&amp;gt; Ajouter -&amp;gt; Hiberner. Sélectionnez l&amp;rsquo;option de configuration Hibernate nouvellement créée, puis cliquez sur le signe (+) dans le volet de droite pour créer le fichier hibernate.</description>
    </item>
    
    <item>
      <title>Modèles en direct</title>
      <link>https://www.wikiod.com/fr/intellij-idea/modeles-en-direct/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/modeles-en-direct/</guid>
      <description>Ajoutez facilement une méthode de test # @org.junit.Test public void should_$name$() { $END$ } Assurez-vous de cocher la case Shorted FQ names lors de la création de ce modèle.
[![configurer le modèle dynamique][1]][1]
Lorsque vous tapez &amp;ldquo;devrait&amp;rdquo; (l&amp;rsquo;abréviation), cela ajoutera l&amp;rsquo;instruction import org.junit.Test; nécessaire en haut du fichier, et ce code :
@Test public void should_() { } C&amp;rsquo;est grâce à l&amp;rsquo;option Shorten FQ names que @org.junit.Test est simplement réduit à @Test.</description>
    </item>
    
    <item>
      <title>Optimisation</title>
      <link>https://www.wikiod.com/fr/intellij-idea/optimisation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/optimisation/</guid>
      <description>Personnalisation des options de machine virtuelle # Vous pouvez remplacer les vmoptions par défaut par vos propres paramètres personnels en choisissant Aide &amp;gt; Modifier les options de VM personnalisées dans la barre d&amp;rsquo;outils. Cela créera une copie locale du fichier que vous êtes libre de modifier.
Par exemple, si vous doublez la valeur définie pour Xmx, la taille maximale du pool d&amp;rsquo;allocation de mémoire sera doublée après le redémarrage de l&amp;rsquo;IDE.</description>
    </item>
    
    <item>
      <title>Contrôles</title>
      <link>https://www.wikiod.com/fr/intellij-idea/controles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/controles/</guid>
      <description>Intellij IDEA fournit de nombreuses inspections de code, qui peuvent considérablement simplifier l&amp;rsquo;écriture de code.
Les paramètres d&amp;rsquo;inspection peuvent être trouvés dans Préférences | Éditeur | Rubrique &amp;ldquo;Vérifications&amp;rdquo;. Par défaut, IDEA en a beaucoup activés. Et de nombreuses inspections prennent en charge les options de correction automatique, visibles en appuyant sur Alt + Entrée.
Pour exécuter des inspections pour l&amp;rsquo;ensemble de votre projet (ou une portée personnalisée), vous devez sélectionner &amp;ldquo;Analyser&amp;rdquo; | Inspecter le code.</description>
    </item>
    
    <item>
      <title>Exportation</title>
      <link>https://www.wikiod.com/fr/intellij-idea/exportation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/intellij-idea/exportation/</guid>
      <description>Construire un .jar # Finalement, lorsque vous serez prêt à publier une version de votre code en production, vous aurez besoin d&amp;rsquo;un fichier [.jar][1] à distribuer. Intellij facilite la création de fichiers JAR.
Tout d&amp;rsquo;abord, accédez à &amp;ldquo;Fichier -&amp;gt; Structure du projet&amp;rdquo; et cliquez sur &amp;ldquo;Artefacts&amp;rdquo; : [![Artefacts][2]][2]
Cliquez sur le bouton + et sélectionnez JAR -&amp;gt; From modules with dependencies : [![entrez la description de l&amp;rsquo;image ici][3]][3]
Sélectionnez votre module dans la liste déroulante et le fichier principal (il s&amp;rsquo;agit du fichier qui contient votre méthode public static void main()) : [!</description>
    </item>
    
  </channel>
</rss>
