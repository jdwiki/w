<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Carlin Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/pug/</link>
    <description>Recent content in Carlin Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/pug/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Commencer avec le carlin</title>
      <link>https://www.wikiod.com/fr/pug/commencer-avec-le-carlin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pug/commencer-avec-le-carlin/</guid>
      <description>Hello World Exemple # Tout d&amp;rsquo;abord, créons un modèle à rendre !
p Hello World, #{name}! Enregistrez ceci dans un fichier se terminant par l&amp;rsquo;extension .pug (vous pouvez l&amp;rsquo;appeler comme vous voulez, mais nous utiliserons view.pug dans le code suivant pour le compiler).
Il ne reste plus qu&amp;rsquo;à compiler ce modèle ! Créez un fichier de script JS (nous appellerons le nôtre main.js) et ajoutez le contenu suivant :
// Import the pug module const pug = require(&#39;pug&#39;); // Compile the template (with the data not yet inserted) const templateCompiler = pug.</description>
    </item>
    
    <item>
      <title>Conditionnels</title>
      <link>https://www.wikiod.com/fr/pug/conditionnels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pug/conditionnels/</guid>
      <description>Pug peut exécuter conditionnellement du code basé sur des variables (transmises depuis votre serveur ou basées sur Pug lui-même).
Syntaxe # si (énoncé)
// Pug code sinon si (instruction)
// Pug code autre
// Pug code à moins que (déclaration)
// Pug code Paramètres # Paramètre Détails si (instruction) Évalue statement pour voir s&amp;rsquo;il renvoie vrai ou faux. Le code imbriqué sous if ne s&amp;rsquo;exécutera que si statement renvoie true. sinon si (instruction) Enchaîné à une instruction if ou else if existante ; il ne s&amp;rsquo;exécute que si l&amp;rsquo;instruction précédente a été évaluée comme fausse.</description>
    </item>
    
    <item>
      <title>Interpolation avec Carlin</title>
      <link>https://www.wikiod.com/fr/pug/interpolation-avec-carlin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pug/interpolation-avec-carlin/</guid>
      <description>Il est important de pouvoir utiliser des variables côté serveur dans votre site Web. Pug vous permet d&amp;rsquo;interpoler les données générées par votre serveur en code HTML, CSS et même JavaScript.
Syntaxe # res.render(path, variables) // Recherche un fichier pug à rendre au chemin &amp;ldquo;path&amp;rdquo;, et lui passe des &amp;ldquo;variables&amp;rdquo; #{variable} // Interpole &amp;ldquo;variable&amp;rdquo; en ligne avec le code Jade environnant, après avoir évalué &amp;ldquo;variable&amp;rdquo; !{variable} // Interpole &amp;ldquo;variable&amp;rdquo; en ligne avec le code Jade environnant, sans évaluer &amp;ldquo;variable&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Itération avec Pug</title>
      <link>https://www.wikiod.com/fr/pug/iteration-avec-pug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pug/iteration-avec-pug/</guid>
      <description>Comment itérer sur un objet JSON simple et économiser beaucoup de frappe
Vous devez avoir installé Node.js et Pug
Chaque itération # Construisez un app.js avec un simple magasin de données :
app.get(&amp;quot;/bookstore&amp;quot;, function (req, res, next) { // Your route data var bookStore = [ { title: &amp;quot;Templating with Pug&amp;quot;, author: &amp;quot;Winston Smith&amp;quot;, pages: 143, year: 2017 }, { title: &amp;quot;Node.js will help&amp;quot;, author: &amp;quot;Guy Fake&amp;quot;, pages: 879, year: 2015 } ]; res.</description>
    </item>
    
    <item>
      <title>Syntaxe et génération de balisage</title>
      <link>https://www.wikiod.com/fr/pug/syntaxe-et-generation-de-balisage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pug/syntaxe-et-generation-de-balisage/</guid>
      <description>Un aperçu de la différence entre le code pug et le balisage généré
Pug permet d&amp;rsquo;écrire du HTML de la manière la plus simple, en utilisant une syntaxe propre et sensible aux espaces.
Du Carlin au HTML # doctype html html(lang=&amp;quot;en&amp;quot;) head title= pageTitle script(type=&#39;text/javascript&#39;). if (foo) bar(1 + 5) body h1 Pug - node template engine #container.col if youAreUsingPug p You are amazing else p Get on it! p. Pug is a terse and simple templating language with a strong focus on performance and powerful features.</description>
    </item>
    
  </channel>
</rss>
