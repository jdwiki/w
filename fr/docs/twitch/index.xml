<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel de contraction on </title>
    <link>https://www.wikiod.com/fr/docs/twitch/</link>
    <description>Recent content in Tutoriel de contraction on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/twitch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec twitch</title>
      <link>https://www.wikiod.com/fr/twitch/debuter-avec-twitch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/twitch/debuter-avec-twitch/</guid>
      <description>Obtenez le jeton OAuth à partir du fragment d&amp;rsquo;URL # Si l&amp;rsquo;utilisateur autorise votre candidature, il sera redirigé vers l&amp;rsquo;URL suivante :
https://[your registered redirect URI]/#access_token=[an access token] &amp;amp;scope=[authorized scopes] Notez que le jeton d&amp;rsquo;accès se trouve dans le fragment d&amp;rsquo;URL et non dans la chaîne de requête. Cela signifie que la valeur n&amp;rsquo;apparaîtra pas dans les requêtes HTTP adressées à votre serveur. Les fragments d&amp;rsquo;URL sont accessibles à partir de JavaScript avec document.</description>
    </item>
    
    <item>
      <title>Listes de streamers par jeu</title>
      <link>https://www.wikiod.com/fr/twitch/listes-de-streamers-par-jeu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/twitch/listes-de-streamers-par-jeu/</guid>
      <description>Obtenir la première page en Ruby # Cet exemple Ruby utilise [Mechanize][mechanize], une bibliothèque pour automatiser les interactions Web.
client_id est un client_id OAuth.
game est le répertoire du jeu à lister.
[mécaniser] : https://github.com/sparklemotion/mechanize
require &#39;mechanize&#39; master_agent = Mechanize.new client_id = &amp;quot;123&amp;quot; game = &amp;quot;Minecraft&amp;quot; url = &amp;quot;https://api.twitch.tv/kraken/streams?game=#{game}&amp;amp;client_id=#{client_id}&amp;quot; final_list = [] master_agent.get(url) do |page| master_list = JSON.parse(page.body) master_list[&amp;quot;streams&amp;quot;].each do |stream| final_list &amp;lt;&amp;lt; stream[&amp;quot;channel&amp;quot;][&amp;quot;name&amp;quot;] end end </description>
    </item>
    
    <item>
      <title>Lecteur vidéo intégré interactif</title>
      <link>https://www.wikiod.com/fr/twitch/lecteur-video-integre-interactif/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/twitch/lecteur-video-integre-interactif/</guid>
      <description>Lecteur vidéo en streaming en direct # Implémentation de base :
&amp;lt;script src= &amp;quot;http://player.twitch.tv/js/embed/v1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;PLAYER_DIV_ID&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var options = { width: 854, height: 480, channel: &amp;quot;monstercat&amp;quot;, }; var player = new Twitch.Player(&amp;quot;PLAYER_DIV_ID&amp;quot;, options); player.setVolume(0.5); &amp;lt;/script&amp;gt; Avec les commandes masquées :
&amp;lt;script src= &amp;quot;http://player.twitch.tv/js/embed/v1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;PLAYER_DIV_ID&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var options = { width: 854, height: 480, channel: &amp;quot;monstercat&amp;quot;, controls: false, }; var player = new Twitch.Player(&amp;quot;PLAYER_DIV_ID&amp;quot;, options); player.setVolume(0.5); &amp;lt;/script&amp;gt; Lecteur vidéo enregistré (pas en direct) # &amp;lt;script src= &amp;quot;http://player.</description>
    </item>
    
    <item>
      <title>Appel des API Twitch</title>
      <link>https://www.wikiod.com/fr/twitch/appel-des-api-twitch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/twitch/appel-des-api-twitch/</guid>
      <description>Cette rubrique est destinée à montrer une manière générale d&amp;rsquo;appeler l&amp;rsquo;API Twitch sans OAuth. Vous pouvez appeler toutes les API trouvées dans la [documentation de l&amp;rsquo;API REST Twitch][1] en utilisant ce modèle. Vous changeriez simplement l&amp;rsquo;URL au bon point de terminaison.
Un ID client est requis pour tous les appels à l&amp;rsquo;API Twitch. Dans ces exemples, l&amp;rsquo;ID client est ajouté comme en-tête à chaque appel. Vous pouvez également l&amp;rsquo;ajouter avec le paramètre de chaîne de requête client_id.</description>
    </item>
    
    <item>
      <title>Bot Twitch Chat (IRC)</title>
      <link>https://www.wikiod.com/fr/twitch/bot-twitch-chat-irc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/twitch/bot-twitch-chat-irc/</guid>
      <description>Twitch Chat est un simple chat IRC. Pour tout développement sérieux, il existe de multiples documents pour celui-ci, dont la ressource la plus complète et la plus générale : http://ircdocs.horse/
Connexion, poignée de main # IRC est un protocole TCP de base basé sur du texte en clair. La connexion à Twitch fonctionne comme n&amp;rsquo;importe quel service IRC classique avec une différence dans l&amp;rsquo;authentification :
Initiation de la connexion &amp;gt; Prise de contact &amp;gt; Utilisation</description>
    </item>
    
    <item>
      <title>Obtenir un jeton OAuth à l&#39;aide du flux de code d&#39;autorisation</title>
      <link>https://www.wikiod.com/fr/twitch/obtenir-un-jeton-oauth-a-laide-du-flux-de-code-dautorisation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/twitch/obtenir-un-jeton-oauth-a-laide-du-flux-de-code-dautorisation/</guid>
      <description>Envoyez l&amp;rsquo;utilisateur au point de terminaison d&amp;rsquo;autorisation pour obtenir le code d&amp;rsquo;autorisation # Vous allez d&amp;rsquo;abord envoyer l&amp;rsquo;utilisateur au point de terminaison d&amp;rsquo;autorisation Twitch. Cette URL est composée d&amp;rsquo;une URL d&amp;rsquo;autorisation de base (https://api.twitch.tv/kraken/oauth2/authorize) et de paramètres de chaîne de requête qui définissent ce que vous demandez. Les paramètres requis sont response_type, client_id, redirect_uri et scope.
Pour le flux de code d&amp;rsquo;autorisation, le paramètre response_type est toujours défini sur code. Cela signifie que vous demandez un code d&amp;rsquo;autorisation à l&amp;rsquo;API Twitch.</description>
    </item>
    
  </channel>
</rss>
