<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel core-bluetooth on </title>
    <link>https://www.wikiod.com/fr/docs/core-bluetooth/</link>
    <description>Recent content in Tutoriel core-bluetooth on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/core-bluetooth/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec core-bluetooth</title>
      <link>https://www.wikiod.com/fr/core-bluetooth/premiers-pas-avec-core-bluetooth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/core-bluetooth/premiers-pas-avec-core-bluetooth/</guid>
      <description>Installation ou configuration # Instructions détaillées sur la configuration ou l&amp;rsquo;installation de core-bluetooth.</description>
    </item>
    
    <item>
      <title>Numérisez et connectez-vous avec des périphériques BLE (Bluetooth Smart)</title>
      <link>https://www.wikiod.com/fr/core-bluetooth/numerisez-et-connectez-vous-avec-des-peripheriques-ble-bluetooth-smart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/core-bluetooth/numerisez-et-connectez-vous-avec-des-peripheriques-ble-bluetooth-smart/</guid>
      <description>Cette section décrit comment la centrale (application iOS) peut analyser les périphériques BLE disponibles et se connecter à celui qui nous intéresse.
Scanner tous les périphériques disponibles # Rapide:
centralManager.scanForPeripherals(withServices: nil, options: nil) Objectif c:
[centralManager scanForPeripheralsWithServices:nil options:nil]; Scanner les périphériques disponibles uniquement avec les services intéressés # Rapide:
let services = [CBUUID(string: SERVICE1_UUID), CBUUID(string: SERVICE2_UUID)] centralManager.scanForPeripherals(withServices: services, options: nil) Objectif c:
NSArray *services = @[[CBUUID UUIDWithString:SERVICE1_UUID], [CBUUID UUIDWithString:SERVICE2_UUID]]; [centralManager scanForPeripheralsWithServices:services options:nil]; </description>
    </item>
    
    <item>
      <title>Configurer le gestionnaire central Bluetooth</title>
      <link>https://www.wikiod.com/fr/core-bluetooth/configurer-le-gestionnaire-central-bluetooth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/core-bluetooth/configurer-le-gestionnaire-central-bluetooth/</guid>
      <description>CBCentralManager agit comme une application côté central de la classe gestionnaire, généralement une application iOS. qui est responsable de la communication de pont entre les périphériques et le central.
Déclarer et instancier CBCentralManager # Rapide:
var centralManager:CBCentralManager! centralManager = CBCentralManager(delegate: self, queue: nil) Objectif c:
@property (nonatomic, strong) CBCentralManager *centralManager; centralManager = [[CBCentralManager alloc] initWithDelegate:self queue:nil]; Déclarer et instancier CBCentralManager avec des options # Rapide:
var centralManager:CBCentralManager! centralManager = CBCentralManager(delegate: self, queue: nil, options: [CBCentralManagerOptionRestoreIdentifierKey : &amp;quot;com.</description>
    </item>
    
  </channel>
</rss>
