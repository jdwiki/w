<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel magento on </title>
    <link>https://www.wikiod.com/fr/docs/magento/</link>
    <description>Recent content in Tutoriel magento on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/magento/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec magento</title>
      <link>https://www.wikiod.com/fr/magento/debuter-avec-magento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/debuter-avec-magento/</guid>
      <description>Installation et configuration # Prérequis et exigences pour Magento Community Edition 1.9 ================================================= ==============
Hébergement
Apache 2.x (avec mod_rewrite) ou Nginx 1.7.x
En raison des exigences de traitement des opérations de Magento, il est recommandé d&amp;rsquo;installer Magento sur un serveur avec au moins 2 Go de RAM. Cela garantira que tous les logiciels impliqués dans la gestion du magasin auront suffisamment de mémoire pour fonctionner.
Possibilité d&amp;rsquo;exécuter des tâches planifiées (crontab) avec PHP 5.</description>
    </item>
    
    <item>
      <title>Obtenir des produits de la base de données</title>
      <link>https://www.wikiod.com/fr/magento/obtenir-des-produits-de-la-base-de-donnees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/obtenir-des-produits-de-la-base-de-donnees/</guid>
      <description>Obtenir le produit par sku # $sku = &#39;sku-goes-here&#39;; $product = Mage::getModel(&#39;catalog/product&#39;)-&amp;gt;loadByAttribute(&#39;sku&#39;, $sku); Obtenir le produit par ID # $id = 1; $product = Mage::getModel(&#39;catalog/product&#39;)-&amp;gt;load($id); if($product-&amp;gt;getId()){ //product was found } Obtenir la collection de produits par attribut # $collection = Mage::getModel(&#39;catalog/product&#39;)-&amp;gt;getCollection(); // Using operator $collection-&amp;gt;addAttributeToFilter(&#39;status&#39;, array(&#39;eq&#39; =&amp;gt; 1)); // Without operator (automatically uses &#39;equal&#39; operator $collection-&amp;gt;addAttributeToFilter(&#39;status&#39;, 1); Collection de produits - requête LIKE # $collection = Mage::getModel(&#39;catalog/product&#39;)-&amp;gt;getCollection(); $collection-&amp;gt;addAttributeToFilter(&#39;sku&#39;, array(&#39;like&#39; =&amp;gt; &#39;UX%&#39;)); Collection de produits - avec attributs # //all attributes $collection = Mage::getModel(&#39;catalog/product&#39;) -&amp;gt;getCollection() -&amp;gt;addAttributeToSelect(&#39;*&#39;); //specific attributes $collection = Mage::getModel(&#39;catalog/product&#39;) -&amp;gt;getCollection() -&amp;gt;addAttributeToSelect(&#39;name&#39;); //certain attributes are special, such as price and images //for images, then you can use &#39;getMediaGalleryImages&#39; $product-&amp;gt;load(&#39;media_galley&#39;); Obtenez une collection de produits à partir d&amp;rsquo;une liste de SKU # $ skuList = array (&#39;SKU-1&#39;, &#39;SKU-2&#39;, .</description>
    </item>
    
    <item>
      <title>Structure des modules</title>
      <link>https://www.wikiod.com/fr/magento/structure-des-modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/structure-des-modules/</guid>
      <description>Les modules existent pour être étendus. Vous ne pouvez pas modifier les fichiers the app/code/ sans interdire toute mise à jour future. Au lieu de cela, nous ajoutons un module au répertoire app/code/local (le répertoire local peut être manquant, si c&amp;rsquo;est le cas, il doit être créé manuellement. Ceci est courant dans les versions ultérieures de Magento) pour ajouter des fonctionnalités locales personnalisées.
Tous les fichiers de configuration du module commencent par une balise &amp;lt;config&amp;gt;.</description>
    </item>
    
    <item>
      <title>Structure MVC</title>
      <link>https://www.wikiod.com/fr/magento/structure-mvc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/structure-mvc/</guid>
      <description>MVC signifie Modèle-Vue-Contrôleur. Toute application qui sépare son accès aux données, sa logique métier et son interface utilisateur est appelée MVC. Il peut y avoir deux types de MVC : basé sur les conventions et basé sur la configuration. Par exemple, cakePHP est basé sur une convention, c&amp;rsquo;est-à-dire qu&amp;rsquo;il vous suffit de suivre les instructions du système principal pour préparer votre module en quelques lignes seulement. Magento est basé sur la configuration, c&amp;rsquo;est-à-dire que vous devez spécifier chaque chose dans le fichier de configuration de votre module afin de le faire fonctionner.</description>
    </item>
    
    <item>
      <title>EAV (valeur d&#39;attribut d&#39;entité)</title>
      <link>https://www.wikiod.com/fr/magento/eav-valeur-dattribut-dentite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/eav-valeur-dattribut-dentite/</guid>
      <description>Entité
Stocke des informations sur le type de données stockées. Dans le cas de Magento, il s&amp;rsquo;agit du client, du produit, de la catégorie, etc.
Attribut
Les propriétés individuelles de chacune des entités, par ex. nom, poids, adresse e-mail, etc.
Évaluer
La valeur d&amp;rsquo;une entité et d&amp;rsquo;un attribut donnés. Par exemple, nous pouvons spécifier l&amp;rsquo;entité client et l&amp;rsquo;attribut email, puis lui donner la valeur hello@example.com.
Schéma de base de données</description>
    </item>
    
    <item>
      <title>Ordres</title>
      <link>https://www.wikiod.com/fr/magento/ordres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/ordres/</guid>
      <description>Obtenir la commande par ID # $orderid = 12345; $order = Mage::getModel(&#39;sales/order&#39;)-&amp;gt;load($orderid); Le code ci-dessus est à peu près analogue à la requête SQL suivante.
select * from sales_flat_order where entity_id=12345; Obtenir la commande par ID d&amp;rsquo;incrément # $incrementid = 100000000; $order = Mage::getModel(&#39;sales/order&#39;)-&amp;gt;loadByIncrementId($incrementid); Le code ci-dessus est à peu près analogue à la requête SQL suivante.
select * from sales_flat_order where increment_id=100000000; Le increment_id est l&amp;rsquo;identifiant de la commande face au client, tandis que le entity_id est l&amp;rsquo;identifiant au niveau de la base de données pour la commande.</description>
    </item>
    
    <item>
      <title>Coque, CLI</title>
      <link>https://www.wikiod.com/fr/magento/coque-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/coque-cli/</guid>
      <description>Bases # Vous devez disposer d&amp;rsquo;une ligne de commande Linux ou vous connecter en SSH à votre serveur afin d&amp;rsquo;utiliser des scripts shell. Allez dans votre Magento_ROOT/shell Le script peut être exécuté en tapant, c&amp;rsquo;est-à-dire php -f indexer.php help Méthodes shell de base par fichiers # résumé.php
indexer.php
compilateur.php
log.php
Scripts shell php personnalisés # Parfois, nous devons accéder à Magento en dehors d&amp;rsquo;un navigateur Web pour supprimer les temps d&amp;rsquo;exécution ou définir différentes choses qui n&amp;rsquo;affecteront pas l&amp;rsquo;interface.</description>
    </item>
    
    <item>
      <title>Comprendre les types de produits</title>
      <link>https://www.wikiod.com/fr/magento/comprendre-les-types-de-produits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/comprendre-les-types-de-produits/</guid>
      <description>Il existe six types de produits différents intégrés à Magento.
Simple Une seule unité de stock
Configurable Premier des produits composites. Permettez aux clients de configurer leur produit et d&amp;rsquo;ajouter un seul produit simple au panier.
Groupé Le deuxième produit composite, un produit groupé, concerne des produits simples et offre aux clients la possibilité de choisir les quantités de chaque article.
Paquet Le troisième type de produit composite , un lot, associe des produits simples à acheter en un seul article.</description>
    </item>
    
    <item>
      <title>Gestion des erreurs Magento, messages et rapports</title>
      <link>https://www.wikiod.com/fr/magento/gestion-des-erreurs-magento-messages-et-rapports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/gestion-des-erreurs-magento-messages-et-rapports/</guid>
      <description>Emplacements des journaux d&amp;rsquo;erreurs # /var/log/ # Généralement, les fichiers system.log et exception.log existent dans le dossier /var/log/. Ceux-ci contiennent la plupart des informations dont vous aurez besoin. Vous pouvez vérifier si ceux-ci sont activés et quels sont les noms de l&amp;rsquo;exception et du journal système en allant dans &amp;ldquo;Système &amp;gt; Configuration &amp;gt; Système &amp;gt; Développeur &amp;gt; Paramètres du journal&amp;rdquo;.
[![zone des paramètres de journalisation dans le tableau de bord d&amp;rsquo;administration de Magento 1.</description>
    </item>
    
    <item>
      <title>Obtenir l&#39;utilisateur actuel</title>
      <link>https://www.wikiod.com/fr/magento/obtenir-lutilisateur-actuel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento/obtenir-lutilisateur-actuel/</guid>
      <description>Obtenir le client actuel # Mage::helper(&#39;customer&#39;)-&amp;gt;getCustomer(); ou
Mage::getSingleton(&#39;customer/session&#39;)-&amp;gt;getCustomer(); Obtenir l&amp;rsquo;utilisateur administrateur actuel # Mage::getSingleton(&#39;admin/session&#39;)-&amp;gt;getUser(); Vérifier si l&amp;rsquo;utilisateur est connecté # Mage::getSingleton(&#39;customer/session&#39;)-&amp;gt;isLoggedIn() </description>
    </item>
    
  </channel>
</rss>
