<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel Android on </title>
    <link>https://www.wikiod.com/fr/docs/android/</link>
    <description>Recent content in Tutoriel Android on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec Android</title>
      <link>https://www.wikiod.com/fr/android/premiers-pas-avec-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/premiers-pas-avec-android/</guid>
      <description>Création d&amp;rsquo;un nouveau projet # Configurer Android Studio # Commencez par [configurer Android Studio](https://www.wikiod.com/fr/android/premiers-pas-avec-android#Configuration d&amp;rsquo;Android Studio), puis ouvrez-le. Vous êtes maintenant prêt à créer votre première application Android !
Remarque : ce guide est basé sur Android Studio 2.2, mais le processus sur les autres versions est essentiellement le même.
Configurez votre projet # Configuration de base # Vous pouvez démarrer un nouveau projet de deux manières :
Cliquez sur &amp;ldquo;Démarrer un nouveau projet Android Studio&amp;rdquo; dans l&amp;rsquo;écran d&amp;rsquo;accueil.</description>
    </item>
    
    <item>
      <title>Intention</title>
      <link>https://www.wikiod.com/fr/android/intention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/intention/</guid>
      <description>Une intention est un petit message transmis autour du système Android. Ce message peut contenir des informations sur notre intention d&amp;rsquo;effectuer une tâche.
Il s&amp;rsquo;agit essentiellement d&amp;rsquo;une structure de données passive contenant une description abstraite d&amp;rsquo;une action à effectuer.
Syntaxe # Intention Intention() Intention Intention(Intention Intention) Intention Intention (action de chaîne) Intention d&amp;rsquo;intention (action de chaîne, Uri uri) Intention Intention(Context packageContext, Class&lt;?&gt; cls) Intention d&amp;rsquo;intention (action de chaîne, Uri uri, contexte packageContext, classe &lt;?</description>
    </item>
    
    <item>
      <title>Conception matérielle</title>
      <link>https://www.wikiod.com/fr/android/conception-materielle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/conception-materielle/</guid>
      <description>Material Design est un guide complet pour la conception visuelle, de mouvement et d&amp;rsquo;interaction sur les plates-formes et les appareils.
Consultez également le billet de blog Android d&amp;rsquo;origine présentant la Bibliothèque d&amp;rsquo;aide à la conception
Documentation officielle
https://developer.android.com/design/material/index.html
Lignes directrices pour la conception des matériaux
https://material.io/guidelines
Autres ressources de conception et bibliothèques
https://design.google.com/resources/
Ajout d&amp;rsquo;une barre d&amp;rsquo;outils # Une Toolbar est une généralisation de ActionBar à utiliser dans les présentations d&amp;rsquo;application.</description>
    </item>
    
    <item>
      <title>Gradle pour Android</title>
      <link>https://www.wikiod.com/fr/android/gradle-pour-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/gradle-pour-android/</guid>
      <description>Gradle est un système de construction basé sur JVM qui permet aux développeurs d&amp;rsquo;écrire des scripts de haut niveau pouvant être utilisés pour automatiser le processus de compilation et de production d&amp;rsquo;applications. Il s&amp;rsquo;agit d&amp;rsquo;un système flexible basé sur des plugins, qui vous permet d&amp;rsquo;automatiser divers aspects du processus de construction ; y compris la compilation et la signature d&amp;rsquo;un .jar, le téléchargement et la gestion des dépendances externes, l&amp;rsquo;injection de champs dans le AndroidManifest ou l&amp;rsquo;utilisation de versions spécifiques du SDK.</description>
    </item>
    
    <item>
      <title>RecyclerView</title>
      <link>https://www.wikiod.com/fr/android/recyclerview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/recyclerview/</guid>
      <description>RecyclerView est une version plus avancée de List View avec des performances améliorées et des fonctionnalités supplémentaires.
1 : https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html
Paramètres # Paramètre Détail Adaptateur Une sous-classe de RecyclerView.Adapter chargée de fournir des vues qui représentent des éléments dans un ensemble de données Position La position d&amp;rsquo;un élément de données dans un adaptateur Index L&amp;rsquo;index d&amp;rsquo;une vue enfant attachée tel qu&amp;rsquo;utilisé dans un appel à getChildAt(int). Contraste avec Position Liaison Le processus de préparation d&amp;rsquo;une vue enfant pour afficher des données correspondant à une position dans l&amp;rsquo;adaptateur Recycler (vue) Une vue précédemment utilisée pour afficher des données pour une position d&amp;rsquo;adaptateur spécifique peut être placée dans un cache pour une réutilisation ultérieure afin d&amp;rsquo;afficher à nouveau le même type de données ultérieurement.</description>
    </item>
    
    <item>
      <title>Création de vues personnalisées</title>
      <link>https://www.wikiod.com/fr/android/creation-de-vues-personnalisees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/creation-de-vues-personnalisees/</guid>
      <description>Création de vues personnalisées # Si vous avez besoin d&amp;rsquo;une vue entièrement personnalisée, vous devrez sous-classer View (la superclasse de toutes les vues Android) et fournir votre dimensionnement personnalisé (onMeasure(...)) et votre dessin (onDraw(...) ) méthodes :
Créez votre squelette de vue personnalisé : c&amp;rsquo;est fondamentalement le même pour chaque vue personnalisée. Ici, nous créons le squelette d&amp;rsquo;une vue personnalisée qui peut dessiner un smiley, appelé &amp;ldquo;SmileyView&amp;rdquo; :
public class SmileyView extends View { private Paint mCirclePaint; private Paint mEyeAndMouthPaint; private float mCenterX; private float mCenterY; private float mRadius; private RectF mArcBounds = new RectF(); public SmileyView(Context context) { this(context, null, 0); } public SmileyView(Context context, AttributeSet attrs) { this(context, attrs, 0); } public SmileyView(Context context, AttributeSet attrs, int defStyleAttr) { super(context, attrs, defStyleAttr); initPaints(); } private void initPaints() {/* .</description>
    </item>
    
    <item>
      <title>Fuites de mémoire</title>
      <link>https://www.wikiod.com/fr/android/fuites-de-memoire/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/fuites-de-memoire/</guid>
      <description>Évitez les fuites d&amp;rsquo;activités avec AsyncTask # Un mot d&amp;rsquo;avertissement : AsyncTask a [de nombreux pièges][3] en dehors de la fuite de mémoire décrite ici. Soyez donc prudent avec cette API, ou évitez-la complètement si vous ne comprenez pas pleinement les implications. Il existe de nombreuses alternatives (Thread, EventBus, RxAndroid, etc.).
Une erreur courante avec AsyncTask consiste à capturer une référence forte à l&amp;rsquo;hôte Activity (ou Fragment):
class MyActivity extends Activity { private AsyncTask&amp;lt;Void, Void, Void&amp;gt; myTask = new AsyncTask&amp;lt;Void, Void, Void&amp;gt;() { // Don&#39;t do this!</description>
    </item>
    
    <item>
      <title>SQLiteName</title>
      <link>https://www.wikiod.com/fr/android/sqlitename/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/sqlitename/</guid>
      <description>[SQLite][1] est un système de gestion de bases de données relationnelles écrit en [C][2]. Pour commencer à travailler avec les bases de données SQLite dans le framework Android, définissez une classe qui étend [SQLiteOpenHelper][3] et personnalisez-la selon vos besoins.
[1] : https://www.wikiod.com/fr/sqlite [2] : https://www.wikiod.com/fr/c [3] : https://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html
La classe [SQLiteOpenHelper][1] définit les méthodes statiques onCreate() et onUpgrade(). Ces méthodes sont appelées dans les méthodes correspondantes d&amp;rsquo;une sous-classe SQLiteOpenHelper que vous personnalisez avec vos propres tables.</description>
    </item>
    
    <item>
      <title>JSON dans Android avec org.json</title>
      <link>https://www.wikiod.com/fr/android/json-dans-android-avec-orgjson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/json-dans-android-avec-orgjson/</guid>
      <description>Syntaxe # Objet : Un objet est un ensemble non ordonné de paires nom/valeur. Un objet commence par { (accolade gauche) et se termine par } (accolade droite). Chaque nom est suivi de : (deux-points) et les paires nom/valeur sont séparées par , (virgule).
Array : Un tableau est une collection ordonnée de valeurs. Un tableau commence par [ (crochet gauche) et se termine par ] (crochet droit). Les valeurs sont séparées par , (virgule).</description>
    </item>
    
    <item>
      <title>BAD (pont de débogage Android)</title>
      <link>https://www.wikiod.com/fr/android/bad-pont-de-debogage-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android/bad-pont-de-debogage-android/</guid>
      <description>ADB (Android Debug Bridge) est un outil de ligne de commande utilisé pour communiquer avec une instance d&amp;rsquo;émulateur ou un appareil Android connecté.
[Aperçu de la BAD ][1]
Une grande partie de ce sujet a été répartie sur https://www.wikiod.com/fr/android/coque-adb
[1] : https://developer.android.com/studio/command-line/adb.html
Liste des exemples déplacés vers https://www.wikiod.com/fr/android/coque-adb#t=201703130900469866621 :
https://www.wikiod.com/fr/android/coque-adb/3967/granting-revoking-api-23-permissions https://www.wikiod.com/fr/android/coque-adb/3958/send-text-key-pressed-and-touch-events-to-android-device-via-adb https://www.wikiod.com/fr/android/coque-adb/3959/list-packages https://www.wikiod.com/fr/android/coque-adb/9559/recording-the-display https://www.wikiod.com/fr/android/coque-adb/18032/open-developer-options https://www.wikiod.com/fr/android/coque-adb/16607/set-date-time-via-adb https://www.wikiod.com/fr/android/coque-adb/14524/changing-file-permissions-using-chmod-command https://www.wikiod.com/fr/android/coque-adb/18033/generating-a-boot-complete-broadcast https://www.wikiod.com/fr/android/coque-adb/3968/print-application-data https://www.wikiod.com/fr/android/coque-adb/18323/view-external-secondaire-storage-content https://www.wikiod.com/fr/android/coque-adb/29140/adb-shell https://www.wikiod.com/fr/android/coque-adb/29141/kill-a-process-inside-an-android-device Connectez ADB à un appareil via WiFi # La configuration ADB standard implique une connexion USB à un périphérique physique.</description>
    </item>
    
  </channel>
</rss>
