<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>awk Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/awk/</link>
    <description>Recent content in awk Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/awk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec awk</title>
      <link>https://www.wikiod.com/fr/awk/demarrer-avec-awk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/demarrer-avec-awk/</guid>
      <description>AWK par exemples # AWK est un langage de manipulation de chaînes, largement utilisé dans les systèmes UNIX. L&amp;rsquo;idée derrière AWK était de créer un langage polyvalent à utiliser lors du travail sur des fichiers, qui n&amp;rsquo;était pas trop complexe à comprendre.
AWK a quelques autres variantes, mais le concept principal est le même, juste avec des fonctionnalités supplémentaires. Ces autres variantes sont NAWK et GAWK. GAWK contient toutes les fonctionnalités des deux, tandis que NAWK est un pas au-dessus de AWK, si vous le souhaitez.</description>
    </item>
    
    <item>
      <title>Fonctions de manipulation de chaînes</title>
      <link>https://www.wikiod.com/fr/awk/fonctions-de-manipulation-de-chaines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/fonctions-de-manipulation-de-chaines/</guid>
      <description>Syntaxe # index (grand, petit) longueur ou longueur() longueur (chaîne) correspondance (chaîne, regex) split (chaîne, tableau, séparateur) split (chaîne, tableau) sprintf(format, &amp;hellip;) sous (regex, subst, chaîne) sous (regex, subst) gsub(regex, subst) gsub(regex, subst, string) sous-chaîne(chaîne, début, fin) sous-chaîne(chaîne, début) en bas (chaîne) toupper (chaîne) Paramètres # | Paramètre | Détails | | &amp;mdash;&amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; &amp;ndash; | | grand | La chaîne qui est scannée pour &amp;ldquo;peu&amp;rdquo;. | | fin | Index auquel terminer la sous-chaîne.</description>
    </item>
    
    <item>
      <title>Variables intégrées</title>
      <link>https://www.wikiod.com/fr/awk/variables-integrees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/variables-integrees/</guid>
      <description>FS - Séparateur de champs # La variable FS est utilisée pour définir le séparateur de champs d&amp;rsquo;entrée. Dans awk, l&amp;rsquo;espace et la tabulation agissent comme séparateurs de champs par défaut. La valeur du champ correspondant est accessible via $1, $2, $3&amp;hellip; et ainsi de suite.
awk -F&#39;=&#39; &#39;{print $1}&#39; file -F - option de ligne de commande pour définir le séparateur de champ d&amp;rsquo;entrée.
awk &amp;lsquo;BEGIN { FS=&amp;quot;=&amp;quot; } { print $1 }&amp;rsquo; file</description>
    </item>
    
    <item>
      <title>variables</title>
      <link>https://www.wikiod.com/fr/awk/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/variables/</guid>
      <description>Affectation de variables en ligne de commande # Pour assigner des variables depuis la ligne de commande, -v peut être utilisé :
$ awk -v myvar=&amp;quot;hello&amp;quot; &#39;BEGIN {print myvar}&#39; hello Notez qu&amp;rsquo;il n&amp;rsquo;y a pas d&amp;rsquo;espace autour du signe égal.
Cela permet d&amp;rsquo;utiliser des variables shell :
$ shell_var=&amp;quot;hello&amp;quot; $ awk -v myvar=&amp;quot;$shell_var&amp;quot; &#39;BEGIN {print myvar}&#39; hello De plus, cela permet de définir des variables intégrées qui contrôlent awk :</description>
    </item>
    
    <item>
      <title>One-liners utiles - calcul de la moyenne à partir d&#39;un CSV, etc.</title>
      <link>https://www.wikiod.com/fr/awk/one-liners-utiles---calcul-de-la-moyenne-a-partir-dun-csv-etc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/one-liners-utiles---calcul-de-la-moyenne-a-partir-dun-csv-etc/</guid>
      <description>Calculer la moyenne des valeurs d&amp;rsquo;une colonne à partir de données tabulaires # Étant donné un fichier utilisant ; comme délimiteur de colonne. Nous calculons la moyenne des valeurs de la deuxième colonne avec le programme suivant, l&amp;rsquo;entrée fournie est la liste des notes d&amp;rsquo;un groupe d&amp;rsquo;étudiants :
awk -F&#39;;&#39; &#39;{ sum += $2 } END { print(sum / NR) }&#39; &amp;lt;&amp;lt;EOF Alice;2 Victor;1 Barbara;1 Casper;4 Deborah;0 Ernest;1 Fabiola;4 Giuseppe;4 EOF La sortie de ce programme est 2.</description>
    </item>
    
    <item>
      <title>Traitement à deux fichiers</title>
      <link>https://www.wikiod.com/fr/awk/traitement-a-deux-fichiers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/traitement-a-deux-fichiers/</guid>
      <description>Vérifier les champs correspondants dans deux fichiers # Étant donné ces deux fichiers CSV :
$ cat file1 1,line1 2,line2 3,line3 4,line4 $ cat file2 1,line3 2,line4 3,line5 4,line6 Pour imprimer ces lignes dans file2 dont la deuxième colonne apparaît également dans le premier fichier, nous pouvons dire :
$ awk -F, &#39;FNR==NR {lines[$2]; next} $2 in lines&#39; file1 file2 1,line3 2,line4 Ici, lines[] contient un tableau qui est rempli lors de la lecture de file1 avec le contenu du deuxième champ de chaque ligne.</description>
    </item>
    
    <item>
      <title>Manipulation des lignes</title>
      <link>https://www.wikiod.com/fr/awk/manipulation-des-lignes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/manipulation-des-lignes/</guid>
      <description>Extraire des lignes spécifiques d&amp;rsquo;un fichier texte # Supposons que nous ayons un fichier
cat -n lorem_ipsum.txt 1 Lorem Ipsum is simply dummy text of the printing and typesetting industry. 2 Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. 3 It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</description>
    </item>
    
    <item>
      <title>Modèles et actions</title>
      <link>https://www.wikiod.com/fr/awk/modeles-et-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/modeles-et-actions/</guid>
      <description>Introduction # Un awk se compose de modèles et d&amp;rsquo;actions, entre accolades, à prendre si un modèle correspond. Le modèle le plus basique est le modèle vide, qui correspond à n&amp;rsquo;importe quel enregistrement. L&amp;rsquo;action la plus basique est l&amp;rsquo;action vide, qui est équivalente à { print }, qui est, à son tour, équivalente à { print $0 }. Si le motif et l&amp;rsquo;action sont vides, awk ne fera simplement rien.</description>
    </item>
    
    <item>
      <title>Motifs</title>
      <link>https://www.wikiod.com/fr/awk/motifs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/motifs/</guid>
      <description>Modèles d&amp;rsquo;expression régulière # Les modèles peuvent être spécifiés sous forme d&amp;rsquo;expressions régulières :
/regular expression/ {action} Par exemple:
echo &amp;quot;user@hostname.com not an email&amp;quot; | awk &#39;/[^@]+@.+/ {print}&#39; Produit :
user@hostname.com Notez qu&amp;rsquo;une action constituée uniquement de l&amp;rsquo;instruction print peut être entièrement omise. L&amp;rsquo;exemple ci-dessus est équivalent à :
echo &amp;quot;user@hostname.com not an email&amp;quot; | awk &#39;/[^@]+@.+/&#39; </description>
    </item>
    
    <item>
      <title>Fonctions intégrées</title>
      <link>https://www.wikiod.com/fr/awk/fonctions-integrees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/awk/fonctions-integrees/</guid>
      <description>longueur([Chaîne]) # Renvoie le nombre de caractères de la String donnée
Considérations # Si un nombre est donné à la place d&amp;rsquo;une chaîne, le résultat sera la longueur de la chaîne représentant le nombre donné. C&amp;rsquo;est à dire. Si nous exécutons length(12345) le résultat sera le même que length(&amp;quot;12345&amp;quot;), c&amp;rsquo;est-à-dire 5
Si aucune valeur n&amp;rsquo;est donnée, le résultat sera la longueur de la ligne en cours de traitement, c&amp;rsquo;est-à-dire length($0)</description>
    </item>
    
  </channel>
</rss>
