<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>maillot Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/jersey/</link>
    <description>Recent content in maillot Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/jersey/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec le maillot</title>
      <link>https://www.wikiod.com/fr/jersey/debuter-avec-le-maillot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jersey/debuter-avec-le-maillot/</guid>
      <description>Exemple d&amp;rsquo;opérations CRUD à Jersey # Cet exemple illustre l&amp;rsquo;utilisation des méthodes HTTP GET, POST, PUT et DELETE pour effectuer des opérations CRUD sur une ressource REST.
J&amp;rsquo;utilise les logiciels, frameworks et outils ci-dessous :
Maillot 2.25.1 JDK 1.7.x (Java 7) Eclipse IDE Kepler Apache Maven 3.3.9 Apache Tomcat 7.x Veuillez suivre les étapes ci-dessous pour créer l&amp;rsquo;application Jersey requise
Étape 1 : Créez un nouveau projet maven en utilisant l&amp;rsquo;archétype maven-archetype-webapp dans Eclipse IDE en choisissant File-&amp;gt;New-&amp;gt;Maven Project</description>
    </item>
    
    <item>
      <title>Injection de dépendance avec Jersey</title>
      <link>https://www.wikiod.com/fr/jersey/injection-de-dependance-avec-jersey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jersey/injection-de-dependance-avec-jersey/</guid>
      <description>Injection de dépendance de base à l&amp;rsquo;aide de HK2 de Jersey # Jersey (2) utilise [HK2][1] comme système d&amp;rsquo;injection de dépendance (DI). Nous pouvons utiliser d&amp;rsquo;autres systèmes d&amp;rsquo;injection, mais son infrastructure est construite avec HK2, et nous permet de l&amp;rsquo;utiliser également dans nos applications.
La configuration d&amp;rsquo;une simple injection de dépendances avec Jersey ne prend que quelques lignes de code. Disons par exemple que nous avons un service que nous aimerions injecter dans nos ressources.</description>
    </item>
    
    <item>
      <title>Utilisation de Spring Boot avec Jersey</title>
      <link>https://www.wikiod.com/fr/jersey/utilisation-de-spring-boot-avec-jersey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jersey/utilisation-de-spring-boot-avec-jersey/</guid>
      <description>Application simple avec Spring Boot et Jersey # Spring Boot est un framework d&amp;rsquo;amorçage pour les applications Spring. Il a également un support transparent pour l&amp;rsquo;intégration avec Jersey. L&amp;rsquo;un des avantages (du point de vue d&amp;rsquo;un utilisateur de Jersey) est que vous avez accès au vaste écosystème de Spring.
Pour commencer, créez un nouveau projet Maven standalone (non-wepapp). Nous pouvons également créer une application Web, mais pour ce guide, nous utiliserons simplement une application autonome.</description>
    </item>
    
    <item>
      <title>Prise en charge de Jersey MVC</title>
      <link>https://www.wikiod.com/fr/jersey/prise-en-charge-de-jersey-mvc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jersey/prise-en-charge-de-jersey-mvc/</guid>
      <description>Les frameworks MVC tels que Spring MVC sont utilisés pour créer des applications Web qui servent des pages Web dynamiques. Jersey, bien que connu pour être un framework REST, prend également en charge la création de pages Web dynamiques à l&amp;rsquo;aide de son module MVC.
Maillot MVC Hello World # Pour commencer, créez une nouvelle application Web Maven (la procédure à suivre sort du cadre de cet exemple). Dans votre pom.</description>
    </item>
    
    <item>
      <title>Configuration de JAX-RS à Jersey</title>
      <link>https://www.wikiod.com/fr/jersey/configuration-de-jax-rs-a-jersey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jersey/configuration-de-jax-rs-a-jersey/</guid>
      <description>Filtre Java Jersey CORS pour les demandes d&amp;rsquo;origine croisée # Configuration Java Jersey # Cet exemple illustre comment configurer Jersey afin que vous puissiez commencer à l&amp;rsquo;utiliser comme infrastructure d&amp;rsquo;implémentation JAX-RS pour votre API RESTful.
En supposant que vous avez déjà installé [Apache Maven][1], suivez ces étapes pour configurer Jersey :
Créez une structure de projet Web Maven, dans le terminal (Windows) exécutez la commande suivante archétype mvn : générer -DgroupId= com.</description>
    </item>
    
  </channel>
</rss>
