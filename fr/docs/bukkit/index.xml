<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel bukkit on </title>
    <link>https://www.wikiod.com/fr/docs/bukkit/</link>
    <description>Recent content in Tutoriel bukkit on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/bukkit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Commencer avec bukkit</title>
      <link>https://www.wikiod.com/fr/bukkit/commencer-avec-bukkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/commencer-avec-bukkit/</guid>
      <description>Création d&amp;rsquo;un plugin # Conditions préalables # JDK 7 ou supérieur (recommandé : JDK 8+) Ajout de Bukkit en tant que dépendance # La méthode la plus simple pour ajouter l&amp;rsquo;API Bukkit à votre projet consiste à télécharger le fichier Bukkit.jar directement depuis le Spigot Repository et ajoutez-le au chemin de classe de votre projet. Les anciennes versions de Bukkit peuvent être trouvées dans le Bukkit Repository.
L&amp;rsquo;autre consiste à l&amp;rsquo;ajouter en tant que dépendance Maven, en ajoutant les lignes suivantes à votre pom.</description>
    </item>
    
    <item>
      <title>Programmation du planificateur</title>
      <link>https://www.wikiod.com/fr/bukkit/programmation-du-planificateur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/programmation-du-planificateur/</guid>
      <description>Syntaxe # Bukkit.getScheduler().scheduleSyncRepeatingTask(Plug-in, Tâche exécutable, int initialDelay, int repeatingDelay) Bukkit.getScheduler().scheduleSyncDelayedTask(Plug-in, Tâche exécutable, int initialDelay) Bukkit.getScheduler().runTaskAsynchronously (Plug-in, Tâche exécutable) Bukkit.getScheduler().runTask(plugin plugin, tâche exécutable) new BukkitRunnable() { @Override public void run() { /* CODE */ } }.runTaskLater(Plugin plugin, long delay); new BukkitRunnable() { @Override public void run() { /* CODE */ } }.runTaskTimer(Plugin plugin, long initialDelay, long repeatingDelay); Peu de méthodes de l&amp;rsquo;API Bukkit sont thread-safe et peuvent être appelées de manière asynchrone.</description>
    </item>
    
    <item>
      <title>Gestion des événements</title>
      <link>https://www.wikiod.com/fr/bukkit/gestion-des-evenements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/gestion-des-evenements/</guid>
      <description>Quand quelque chose se passe dans Bukkit, un événement est appelé afin que chaque plugin puisse décider quoi faire chaque fois que quelque chose se passe.
Un événement est appelé lorsqu&amp;rsquo;un joueur tente de jouer un bloc, lorsqu&amp;rsquo;une entité disparaît, lorsque quelqu&amp;rsquo;un se connecte&amp;hellip; Les plugins peuvent écouter des événements spécifiques et les gérer de différentes manières, par exemple en envoyant un message à un administrateur lorsque un joueur se connecte, via le PlayerLoginEvent.</description>
    </item>
    
    <item>
      <title>Enregistrement</title>
      <link>https://www.wikiod.com/fr/bukkit/enregistrement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/enregistrement/</guid>
      <description>Utilisation de l&amp;rsquo;enregistreur Bukkit # public class MyClass { public void foo() { Logger logger = Bukkit.getLogger(); logger.info(&amp;quot;A log message&amp;quot;); logger.log(Level.INFO, &amp;quot;Another message&amp;quot;); logger.fine(&amp;quot;A fine message&amp;quot;); // logging an exception try { // code might throw an exception } catch (SomeException ex) { // log a warning printing &amp;quot;Something went wrong&amp;quot; // together with the exception message and stacktrace logger.log(Level.WARNING, &amp;quot;Something went wrong&amp;quot;, ex); } String s = &amp;quot;Hello World!&amp;quot;; // logging an object LOG.</description>
    </item>
    
    <item>
      <title>SMN</title>
      <link>https://www.wikiod.com/fr/bukkit/smn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/smn/</guid>
      <description>NMS, également connu sous le nom de Net.Minecraft.Server est le package qui contient le code principal du serveur Minecraft. Les classes de ce package ont été créées par Mojang (et non Bukkit) et sont donc pour la plupart obscurcies et ne sont pas destinées à être utilisées ou modifiées. Cependant, interagir avec le code du serveur Minecraft à ce niveau vous permet d&amp;rsquo;en modifier presque tous les aspects. Ceci est important car il existe de nombreuses modifications que Bukkit ne prend pas en charge.</description>
    </item>
    
    <item>
      <title>Entités</title>
      <link>https://www.wikiod.com/fr/bukkit/entites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/entites/</guid>
      <description>Entités à proximité # Pour récupérer une liste des entités proches d&amp;rsquo;une entité, on peut utiliser
List&amp;lt;Entity&amp;gt; nearby = entity.getNearbyEntities(double x, double y, double z); Bukkit calculera alors une boîte englobante centrée autour de l&amp;rsquo;entité, ayant comme paramètres :
x : 1/2 de la taille de la boîte le long de l&amp;rsquo;axe x y : 1/2 de la taille de la boîte selon l&amp;rsquo;axe y z : 1/2 de la taille de la boîte selon l&amp;rsquo;axe z La liste peut être vide, ce qui signifie qu&amp;rsquo;il n&amp;rsquo;y a pas d&amp;rsquo;entités à proximité avec les paramètres.</description>
    </item>
    
    <item>
      <title>Faire apparaître des œufs</title>
      <link>https://www.wikiod.com/fr/bukkit/faire-apparaitre-des-ufs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/faire-apparaitre-des-ufs/</guid>
      <description>Reportez-vous à [Documentation des entités] [1] pour mieux comprendre EntityType
[1] : https://www.wikiod.com/fr/bukkit/entites#Type d&amp;rsquo;entité
Création d&amp;rsquo;un ItemStack d&amp;rsquo;un SpawnEgg # Pour tout ce qui est inférieur à 1,9
SpawnEgg egg = new SpawnEgg(EntityType.CREEPER); ItemStack creeperEgg = egg.toItemStack(5); Pour 1.9 et supérieur
Dans les versions 1.9 et supérieures, Spigot n&amp;rsquo;a pas d&amp;rsquo;implémentation pour créer des oeufs d&amp;rsquo;apparition sans utiliser NMS. Pour ce faire, vous pouvez utiliser une petite classe/wrapper personnalisée pour y arriver :</description>
    </item>
    
    <item>
      <title>Fichiers de configuration</title>
      <link>https://www.wikiod.com/fr/bukkit/fichiers-de-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/fichiers-de-configuration/</guid>
      <description>Syntaxe # String s = config.getString(&amp;quot;path.to.string&amp;quot;); int i = config.getInt(&amp;quot;path.to.int&amp;quot;); double d = config.getDouble(&amp;quot;chemin.vers.double&amp;quot;); List&amp;lt;String&amp;gt; sl = config.getStringList(&amp;quot;path.to.stringlist&amp;quot;); List&amp;lt;Double&amp;gt; dl = config.getDoubleList(&amp;quot;path.to.doublelist&amp;quot;); List&amp;lt;Integer&amp;gt; il = config.getIntegerList(&amp;quot;path.to.integerlist&amp;quot;); Les fichiers de configuration Bukkit sont des fichiers Y.A.M.L (Yet Another Markup Language) simples et sont implémentés comme tels.
Configuration du plugin.yml # Vous pouvez avoir un fichier config.yml qui se charge directement à partir de votre fichier jar. Il doit être ajouté au dossier de votre projet, de la même manière que le fichier plugin.</description>
    </item>
    
    <item>
      <title>Événements d&#39;entité</title>
      <link>https://www.wikiod.com/fr/bukkit/evenements-dentite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/evenements-dentite/</guid>
      <description>All Entity Events étend EntityEvent, la superclasse pour EntityEvents.
Tous les EntityEvents connus se trouvent ci-dessous et seront traités dans cette documentation.
EntityEvent (Superclasse) # Les sous-classes connues pour les événements d&amp;rsquo;entité sont :
Sous-classes Sous-classes Sous-classes CreatureSpawnEvent CreeperPowerEvent EntityChangeBlockEvent EntityCombustEvent EntityCreatePortalEvent EntityDamageEvent EntityDeathEvent EntityExplodeEvent EntityInteractEvent EntityPortalEnterEvent EntityRegainHealthEvent EntityShootBowEvent EntityTameEvent EntityTargetEvent EntityTeleportEvent EntityUnleashEvent ExplosionPrimeEvent FoodLevelChangeEvent HorseJumpEvent ItemDespawnEvent ItemSpawnEvent PigZapEvent ProjectileHitEvent ProjectileLaunchEvent Événement de teinture de laine de mouton Événement de régénération de laine de mouton Événement de scission de boue En plus de cela, toutes les sous-classes héritent des méthodes suivantes :</description>
    </item>
    
    <item>
      <title>Génération mondiale</title>
      <link>https://www.wikiod.com/fr/bukkit/generation-mondiale/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/bukkit/generation-mondiale/</guid>
      <description>Générateur de Vide # La classe de générateur de vide :
public class VoidGenerator extends ChunkGenerator { @SuppressWarnings(&amp;quot;deprecation&amp;quot;) public byte[] generate(World w, Random rand, int x, int z) { byte[] result = new byte[32768]; //chunksized array filled with 0 - Air //Build a platform with Bedrock where the player shall spawn later if(x == 0 &amp;amp;&amp;amp; z == 0) { result[xyz(0, 64, 0)] = (byte)Material.BEDROCK.getId(); result[xyz(1, 64, 0)] = (byte)Material.BEDROCK.getId(); result[xyz(0, 64, 1)] = (byte)Material.</description>
    </item>
    
  </channel>
</rss>
