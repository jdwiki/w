<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel ASP.NET on </title>
    <link>https://www.wikiod.com/fr/docs/asp-dotnet/</link>
    <description>Recent content in Tutoriel ASP.NET on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/asp-dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec ASP.NET</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/premiers-pas-avec-aspnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/premiers-pas-avec-aspnet/</guid>
      <description>Installation ou configuration # Par défaut, toutes les bibliothèques requises pour créer des applications ASP.NET sont incluses lors de l&amp;rsquo;installation de Visual Studio. Si une version plus récente d&amp;rsquo;ASP.NET est publiée qui n&amp;rsquo;était pas incluse avec Visual Studio, vous pouvez télécharger la bibliothèque SDK appropriée de Microsoft, qui inclura toutes les bibliothèques nécessaires pour cette version.
De même, le système d&amp;rsquo;exploitation Windows est préinstallé avec une version plus récente d&amp;rsquo;ASP.NET et est automatiquement enregistré auprès d&amp;rsquo;IIS pour la configuration et l&amp;rsquo;exécution.</description>
    </item>
    
    <item>
      <title>Gestion des événements</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/gestion-des-evenements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/gestion-des-evenements/</guid>
      <description>Syntaxe # Private void EventName (expéditeur de l&amp;rsquo;objet, EventArgs e) ; Paramètres # Paramètre Détails expéditeur d&amp;rsquo;objet sender fait référence à l&amp;rsquo;objet qui a invoqué l&amp;rsquo;événement qui a déclenché le gestionnaire d&amp;rsquo;événements. Ceci est utile si vous avez de nombreux objets utilisant le même gestionnaire d&amp;rsquo;événements. EventArgs e EventArgs est en quelque sorte une classe de base factice. En soi, c&amp;rsquo;est plus ou moins inutile, mais si vous en dérivez, vous pouvez ajouter toutes les données dont vous avez besoin pour passer à vos gestionnaires d&amp;rsquo;événements.</description>
    </item>
    
    <item>
      <title>GridView</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/gridview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/gridview/</guid>
      <description>GridView fortement typé # À partir d&amp;rsquo;Asp.net 4.5, les contrôles Web peuvent tirer parti de la liaison fortement typée pour obtenir la prise en charge d&amp;rsquo;IntelliSense et les erreurs de compilation.
Créez une classe contenant votre modèle :
public class Album { public int Id { get; set; } public string Name { get; set; } public string Artist { get; set; } } Définissez le contrôle GridView sur votre page :</description>
    </item>
    
    <item>
      <title>ASP.NET - Contrôles utilisateur</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/aspnet---controles-utilisateur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/aspnet---controles-utilisateur/</guid>
      <description>Les contrôles utilisateur sont des conteneurs qui peuvent être remplis avec du balisage HTML et des contrôles serveur avec code-behind de la même manière que la page ASPX. Ils sont traités comme de plus petites unités réutilisables d&amp;rsquo;une page, ils ne peuvent donc pas s&amp;rsquo;exécuter en tant que pages autonomes et ne doivent pas contenir d&amp;rsquo;éléments HTML html, body ou form.
Introduction des contrôles utilisateur # Les contrôles utilisateur sont conçus pour être réutilisables sur les pages ASP.</description>
    </item>
    
    <item>
      <title>Formulaires Web</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/formulaires-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/formulaires-web/</guid>
      <description>Syntaxe # &amp;lt;asp:TextBox runat=&amp;ldquo;server&amp;rdquo; ID=&amp;quot;&amp;quot; TextMode=&amp;quot;&amp;quot; Text=&amp;quot;&amp;quot; /&amp;gt; &amp;lt;asp:Repeater runat=&amp;ldquo;server&amp;rdquo; ID=&amp;quot;&amp;quot; OnItemDataBound=&amp;quot;&amp;quot;&amp;gt; &amp;lt;Modèle d&#39;en-tête&amp;gt;&amp;lt;/Modèle d&#39;en-tête&amp;gt; &amp;lt;ItemTemplate&amp;gt;&amp;lt;/ItemTemplate&amp;gt; &amp;lt;Modèle de pied de page&amp;gt;&amp;lt;/Modèle de pied de page&amp;gt; &amp;lt;/asp:Répéteur&amp;gt; Tous les contrôles ASP.Net WebForm nécessitent runat=&amp;quot;server&amp;quot; afin de communiquer avec le CodeBehind.
Utilisation d&amp;rsquo;un répéteur pour créer un tableau HTML # Regroupement dans ListView # Exemple # &amp;lt;script language=&amp;quot;VB&amp;quot; runat=&amp;quot;server&amp;quot;&amp;gt; Sub SubmitBtn_Click(sender As Object, e As EventArgs) Label1.Text = &amp;quot;Text1.Text = &amp;quot; &amp;amp; Text1.</description>
    </item>
    
    <item>
      <title>Méthodes de page</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/methodes-de-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/methodes-de-page/</guid>
      <description>Paramètres # Paramètre Détail limite Paramètre de la méthode C#. Vous fournissez l&amp;rsquo;argument via la méthode Page. surSuccès La fonction JavaScript qui est exécutée lorsque l&amp;rsquo;appel de la méthode de page réussit. surErreur La fonction JavaScript qui est exécutée lorsqu&amp;rsquo;il y a une erreur dans l&amp;rsquo;appel de la méthode Page. Plus d&amp;rsquo;un paramètre # Dans l&amp;rsquo;exemple, la fonction C # demande simplement un paramètre, si vous devez en passer plusieurs, vous pouvez le faire, mettez-les simplement dans l&amp;rsquo;ordre dans votre appel JS et vous êtes prêt à partir.</description>
    </item>
    
    <item>
      <title>Cycle de vie des pages</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/cycle-de-vie-des-pages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/cycle-de-vie-des-pages/</guid>
      <description>Événements du cycle de vie # Voici les événements du cycle de vie de la page :
PreInit - PreInit est le premier événement du cycle de vie de la page. Il vérifie la propriété IsPostBack et détermine si la page est une publication. Il définit les thèmes et les pages maîtres, crée des contrôles dynamiques et obtient et définit les valeurs des propriétés de profil. Cet événement peut être géré en remplaçant la méthode OnPreInit ou en créant un gestionnaire Page_PreInit.</description>
    </item>
    
    <item>
      <title>Liaison de données</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/liaison-de-donnees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/liaison-de-donnees/</guid>
      <description>Source de données SQL # Les contrôles pouvant être liés à des données peuvent utiliser les contrôles SqlDataSource. Le contrôle SqlDataSource vous permet non seulement de récupérer des données à partir d&amp;rsquo;une base de données, mais également de modifier et de trier les données.
Récupération des données # Procédure stockée:
&amp;lt;asp:SqlDataSource ID=&amp;quot;SqlDataSourceEmployees&amp;quot; runat=&amp;quot;server&amp;quot; ConnectionString=&amp;quot;&amp;lt;%$ ConnectionStrings:MyConnectionString %&amp;gt;&amp;quot; SelectCommand=&amp;quot;sp_GetEmployees&amp;quot; SelectCommandType=&amp;quot;StoredProcedure&amp;quot;&amp;gt; &amp;lt;/asp:SqlDataSource&amp;gt; Requête SQL :
&amp;lt;asp:SqlDataSource ID=&amp;quot;SqlDataSourceEmployees&amp;quot; runat=&amp;quot;server&amp;quot; ConnectionString=&amp;quot;&amp;lt;%$ ConnectionStrings:MyConnectionString %&amp;gt;&amp;quot; SelectCommand=&amp;quot;SELECT EmployeeID, EmployeeFirstName, EmployeeLastName FROM dbo.</description>
    </item>
    
    <item>
      <title>Directives</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/directives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/directives/</guid>
      <description>La directive d&amp;rsquo;application # La directive Application définit les attributs spécifiques à l&amp;rsquo;application. Il est fourni en haut du fichier global.aspx. La syntaxe de base de la directive Application est :
&amp;lt;%@ Application Language=&amp;quot;C#&amp;quot; %&amp;gt; Les attributs de la directive Application sont :
Attributs Descriptif Hérite Nom de la classe dont hériter. Descriptif Description textuelle de l&amp;rsquo;application. Les analyseurs et les compilateurs ignorent cela. Langue Le langage utilisé dans les blocs de code.</description>
    </item>
    
    <item>
      <title>État de session</title>
      <link>https://www.wikiod.com/fr/asp-dotnet/etat-de-session/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet/etat-de-session/</guid>
      <description>Syntaxe # Session[&amp;ldquo;Session_Key&amp;rdquo;] = Obj_Value ; HTTP est sans état. L&amp;rsquo;état de session ASP.NET est une infrastructure qui facilite la maintenance de l&amp;rsquo;état entre les requêtes de page HTTP.
La session diffère des variables de niveau de classe dans sa capacité à rester disponible à travers les publications et les différentes pages. Par exemple, une variable de session créée dans Page1.aspx sera disponible si l&amp;rsquo;utilisateur est ensuite redirigé vers Page2.aspx, au sein de la même application.</description>
    </item>
    
  </channel>
</rss>
