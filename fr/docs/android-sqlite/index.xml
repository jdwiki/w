<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel android-sqlite on </title>
    <link>https://www.wikiod.com/fr/docs/android-sqlite/</link>
    <description>Recent content in Tutoriel android-sqlite on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/android-sqlite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec android-sqlite</title>
      <link>https://www.wikiod.com/fr/android-sqlite/premiers-pas-avec-android-sqlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android-sqlite/premiers-pas-avec-android-sqlite/</guid>
      <description>Utilisation de base # Pour inclure une base de données dans votre application, vous dérivez généralement une classe de SQLiteOpenHelper :
public class HelloDBHelper extends SQLiteOpenHelper { private static final int DATABASE_VERSION = 1; private static final int DATABASE_NAME = &amp;quot;hello&amp;quot;; HelloDBHelper(Context context) { super(context, DATABASE_NAME, null, DATABASE_VERSION); } @Override public void onCreate(SQLiteDatabase db) { db.execSQL(&amp;quot;CREATE TABLE ...&amp;quot;); ... } } Cette classe d&amp;rsquo;assistance est responsable de l&amp;rsquo;ouverture (et de la création/mise à jour, si nécessaire) de la base de données.</description>
    </item>
    
    <item>
      <title>SQLiteOpenHelper</title>
      <link>https://www.wikiod.com/fr/android-sqlite/sqliteopenhelper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/android-sqlite/sqliteopenhelper/</guid>
      <description>SQLiteOpenHelper avec nom de chemin de base de données complet/base de données dans le dossier public # Normalement, Android-SQLiteOpenHelper n&amp;rsquo;autorise pas les noms de chemin complets où la base de données doit être stockée. Les fichiers de base de données publics ne sont donc pas possibles.
Vous pouvez utiliser SQLiteOpenHelper avec un chemin personnalisé si vous fournissez une ContextClass personnalisée et si vous disposez d&amp;rsquo;un accès en écriture dans le répertoire cible.</description>
    </item>
    
  </channel>
</rss>
