<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codeigniter Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/codeigniter/</link>
    <description>Recent content in Codeigniter Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/codeigniter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec codeigniter</title>
      <link>https://www.wikiod.com/fr/codeigniter/premiers-pas-avec-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/premiers-pas-avec-codeigniter/</guid>
      <description>Installation et configuration # Environnement Windows # Installez [XAMPP][1] ou [WAMP][2] Téléchargez et décompressez le package depuis [Codeigniter.com][3] Extraire tout le document dans l&amp;rsquo;espace serveur (répertoire htdocs ou www) Environnement Mac # Installez [MAMP][5] Téléchargez et décompressez le package depuis [Codeigniter.com][3] Extraire tout le document dans l&amp;rsquo;espace serveur (htdocs) Environnement Linux # Téléchargez et décompressez le package depuis [Codeigniter.com][3] Placez le dossier extrait dans /var/www (en WAMP) ou xampp/htdocs (XAMPP) GitHub # git clone https://github.</description>
    </item>
    
    <item>
      <title>Utilisation de crochets</title>
      <link>https://www.wikiod.com/fr/codeigniter/utilisation-de-crochets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/utilisation-de-crochets/</guid>
      <description>Points d&amp;rsquo;accroche # pré_système # Appelé très tôt lors de l&amp;rsquo;exécution du système. Seules la classe benchmark et hooks ont été chargées à ce stade. Aucun routage ou autre processus ne s&amp;rsquo;est produit.
pré_contrôleur # Appelé immédiatement avant que l&amp;rsquo;un de vos contrôleurs ne soit appelé. Toutes les classes de base, le routage et les contrôles de sécurité ont été effectués.
post_controller_constructor # Appelé immédiatement après l&amp;rsquo;instanciation de votre contrôleur, mais avant tout appel de méthode.</description>
    </item>
    
    <item>
      <title>Comment définir le fuseau horaire dans CodeIgniter</title>
      <link>https://www.wikiod.com/fr/codeigniter/comment-definir-le-fuseau-horaire-dans-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/comment-definir-le-fuseau-horaire-dans-codeigniter/</guid>
      <description>Comment définir le fuseau horaire dans CodeIgniter # Placer date_default_timezone_set(&#39;Asia/Kolkata&#39;); sur config.php au-dessus de l&amp;rsquo;URL de base fonctionne également.
PHP [Liste des fuseaux horaires pris en charge] [1]
application/config.php
&amp;lt;?php defined(&#39;BASEPATH&#39;) OR exit(&#39;No direct script access allowed&#39;); date_default_timezone_set(&#39;Asia/Kolkata&#39;); Une autre façon que j&amp;rsquo;ai trouvée utile est si vous souhaitez définir un fuseau horaire pour chaque utilisateur :
Créez un fichier MY_Controller.php.
Créez une colonne dans votre table &amp;ldquo;utilisateur&amp;rdquo;, vous pouvez la nommer fuseau horaire ou tout ce que vous voulez.</description>
    </item>
    
    <item>
      <title>URL de base dans Codeigniter</title>
      <link>https://www.wikiod.com/fr/codeigniter/url-de-base-dans-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/url-de-base-dans-codeigniter/</guid>
      <description>Définition de votre URL de base dans Codeigniter # Vous devrez définir votre URL de base dans application/config/config.php
S&amp;rsquo;il n&amp;rsquo;est pas défini, CodeIgniter essaiera de deviner le protocole et le chemin vers votre installation, mais pour des raisons de sécurité, le nom d&amp;rsquo;hôte sera défini à $_SERVER[&#39;SERVER_ADDR&#39;] si disponible, ou localhost sinon. Le mécanisme d&amp;rsquo;auto-détection n&amp;rsquo;existe que pour plus de commodité pendant développement et NE DOIT PAS être utilisé en production !</description>
    </item>
    
    <item>
      <title>Commençons Hello World</title>
      <link>https://www.wikiod.com/fr/codeigniter/commencons-hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/commencons-hello-world/</guid>
      <description>Une application Hello World très simple # À partir d&amp;rsquo;une nouvelle installation de Codeigniter 3, voici un moyen simple de démarrer avec une application Hello World, pour briser la glace avec ce framework PHP solide.
Pour ce faire, vous pouvez commencer à créer la vue que nous souhaitons afficher pour notre application Hello World.
Nous allons le mettre dans votre dossier de candidature, ici :
Dans hello_world.php(/application/views/)
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Hello World&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Hello World!</description>
    </item>
    
    <item>
      <title>Utilisation du modèle dans codeigniter</title>
      <link>https://www.wikiod.com/fr/codeigniter/utilisation-du-modele-dans-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/utilisation-du-modele-dans-codeigniter/</guid>
      <description>Fonction de modèle d&amp;rsquo;appel # Syntaxe
$this-&amp;gt;load-&amp;gt;model(&#39;model_name&#39;); $this-&amp;gt;model_name-&amp;gt;method_name(); Pratique
$this-&amp;gt;load-&amp;gt;model(&#39;home_model&#39;); $this-&amp;gt;home_model-&amp;gt;get_data(); Création d&amp;rsquo;un modèle # Aller à application/modèle
Nom du fichier - Home_model.php A l&amp;rsquo;intérieur du dossier
class Home_model extends CI_Model { public $variable; public function __construct() { parent::__construct(); } public function get_data() { $query = $this-&amp;gt;db-&amp;gt;get(&#39;table_name&#39;, 10); return $query-&amp;gt;result_array(); } } Et quand vous devez charger ce modèle :
$this-&amp;gt;load-&amp;gt;model(&#39;home_model&#39;); $this-&amp;gt;home_model-&amp;gt;get_data(); Ou Si vous souhaitez que votre modèle soit affecté à un nom d&amp;rsquo;objet différent, vous pouvez le spécifier comme ceci :</description>
    </item>
    
    <item>
      <title>Téléchargeur d&#39;imagesfichiers dans CodeIgniter</title>
      <link>https://www.wikiod.com/fr/codeigniter/telechargeur-dimagesfichiers-dans-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/telechargeur-dimagesfichiers-dans-codeigniter/</guid>
      <description>Il n&amp;rsquo;est pas nécessaire que vous deviez utiliser les mêmes noms pour le (Contrôleur, Fichier, Classe, ID) ou quoi que ce soit. Toutes les choses que j&amp;rsquo;ai utilisées sont dans le but de comprendre le flux de codage et mes hypothèses. C&amp;rsquo;est au développeur de prendre le code et de modifier le code/nom selon son souhait, puis d&amp;rsquo;héberger le code et de réussir.
Téléchargeur de fichier unique/d&amp;rsquo;image # Nous allons maintenant voir comment fonctionne le code Image/File Uploading dans la méthode native CI à l&amp;rsquo;aide des formulaires proposés par la méthode CI.</description>
    </item>
    
    <item>
      <title>Comment utiliser les bibliothèques CI et l&#39;assistant</title>
      <link>https://www.wikiod.com/fr/codeigniter/comment-utiliser-les-bibliotheques-ci-et-lassistant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/comment-utiliser-les-bibliotheques-ci-et-lassistant/</guid>
      <description>Utilisation des bibliothèques et des assistants # L&amp;rsquo;exemple est à des fins d&amp;rsquo;illustration de l&amp;rsquo;utilisation de bibliothèques et d&amp;rsquo;assistants et non d&amp;rsquo;un code valide. Ne le copiez/collez pas sur vos projets.
HELPER helpers/sendEmail_helper.php
if ( ! function_exists(&#39;sendEmail&#39;)) { function sendEmail($email, $subject, $message, $lang, $cc = null, $file = null) { $CI =&amp;amp; get_instance(); $mail_config[&#39;protocol&#39;] = &#39;smtp&#39;; $mail_config[&#39;smtp_host&#39;] = &#39;host&#39;; $mail_config[&#39;smtp_user&#39;] = &#39;user&#39;; $mail_config[&#39;smtp_pass&#39;] = &#39;pass&#39;; $mail_config[&#39;smtp_port&#39;] = &#39;587&#39;; $mail_config[&#39;smtp_timeout&#39;] = 5; $mail_config[&#39;charset&#39;] = &#39;utf-8&#39;; $mail_config[&#39;mailtype&#39;] = &#39;html&#39;; $mail_config[&#39;wrapchars&#39;] = 76; $mail_config[&#39;wordwrap&#39;] = TRUE; $CI-&amp;gt;email-&amp;gt;initialize($mail_config); $CI-&amp;gt;email-&amp;gt;set_newLine(&#39;\r\n&#39;); if ($lang == &amp;quot;en&amp;quot;){ $CI-&amp;gt;email-&amp;gt;from(&#39;support.</description>
    </item>
    
    <item>
      <title>Sécuriser votre application web</title>
      <link>https://www.wikiod.com/fr/codeigniter/securiser-votre-application-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/securiser-votre-application-web/</guid>
      <description>N&amp;rsquo;oubliez pas que CodeIgniter est un framework de développement. Il ne s&amp;rsquo;efforce pas de sécuriser votre application. Il vous donne simplement les outils pour le faire vous-même. Si vous regardez la page Sécurité de CI, il est assez clair qu&amp;rsquo;ils s&amp;rsquo;attendent à ce que le développeur comprenne la sécurité des applications et l&amp;rsquo;intègre dans leur application.
Si la sécurité WebApp est relativement nouvelle pour vous, je commencerais par OWASP. Il pourrait être avantageux de regarder d&amp;rsquo;autres frameworks tels que Zend ou Cake qui, je pense, font plus de choses en amont</description>
    </item>
    
    <item>
      <title>Validation du formulaire</title>
      <link>https://www.wikiod.com/fr/codeigniter/validation-du-formulaire/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/codeigniter/validation-du-formulaire/</guid>
      <description>Valider l&amp;rsquo;exemple de formulaire # // initialize library $this-&amp;gt;load-&amp;gt;library(&#39;form_validation&#39;); $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;username&#39;, &#39;Username&#39;, &#39;required|max_length[20]&#39;); // Add validation rules for require and max $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;password&#39;, &#39;Password&#39;, &#39;required|matches[password]&#39;); // Validation for the input match $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;passconf&#39;, &#39;Password Confirmation&#39;, &#39;required&#39;); $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;email&#39;, &#39;Email&#39;, &#39;required|valid_email|is_unique[userTable.emailColumn&#39;); // add validation for the email and check the emailColumn in userTable for unique value $this-&amp;gt;form_validation-&amp;gt;set_message(&#39;is_unique&#39;, &#39;The %s is already taken, Please use another %s&#39;); // add message for the is_unique if ($this-&amp;gt;form_validation-&amp;gt;run() === FALSE) { // fail } else { // success } [Lien][1]</description>
    </item>
    
  </channel>
</rss>
