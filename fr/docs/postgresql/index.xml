<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel postgresql on </title>
    <link>https://www.wikiod.com/fr/docs/postgresql/</link>
    <description>Recent content in Tutoriel postgresql on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec postgresql</title>
      <link>https://www.wikiod.com/fr/postgresql/debuter-avec-postgresql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/debuter-avec-postgresql/</guid>
      <description>Installer PostgreSQL sous Windows # Bien qu&amp;rsquo;il soit recommandé d&amp;rsquo;utiliser un système d&amp;rsquo;exploitation basé sur Unix (ex. Linux ou BSD) comme serveur de production, vous pouvez facilement installer PostgreSQL sur Windows (espérons-le uniquement en tant que serveur de développement).
Téléchargez les fichiers binaires d&amp;rsquo;installation de Windows à partir d&amp;rsquo;EnterpriseDB : http://www.enterprisedb.com/products-services-training/pgdownload Il s&amp;rsquo;agit d&amp;rsquo;une société tierce créée par les principaux contributeurs au projet PostgreSQL qui ont optimisé les fichiers binaires pour Windows.</description>
    </item>
    
    <item>
      <title>EXTENSION dblink et postgres_fdw</title>
      <link>https://www.wikiod.com/fr/postgresql/extension-dblink-et-postgres_fdw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/extension-dblink-et-postgres_fdw/</guid>
      <description>Syntaxe # dblink (&amp;lsquo;dbname = name_db_distance port = PortOfDB host = HostOfDB user = usernameDB password = passwordDB&amp;rsquo;, &amp;lsquo;MA REQUÊTE&amp;rsquo;)
dbname = nom de la base de données
port = Port de la base de données
host = Hôte de la base de données
user = nom d&amp;rsquo;utilisateur de la base de données
password = mot de passe de la base de données&amp;rsquo;,
MY QUESRY = cela peut être n&amp;rsquo;importe quelle opération que je veux faire SELECT, INSERT, &amp;hellip;</description>
    </item>
    
    <item>
      <title>Prise en charge JSON</title>
      <link>https://www.wikiod.com/fr/postgresql/prise-en-charge-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/prise-en-charge-json/</guid>
      <description>JSON - Java Script Object Notation, Postgresql prend en charge le type de données JSON depuis la version 9.2. Il existe des fonctions et des opérateurs prédéfinis pour accéder aux données JSON.
L&amp;rsquo;opérateur -&amp;gt; renvoie la clé de la colonne JSON. L&amp;rsquo;opérateur -&amp;gt;&amp;gt; renvoie la valeur de la colonne JSON.
Utilisation des opérateurs JSONb # Création d&amp;rsquo;une BD et d&amp;rsquo;une table # DROP DATABASE IF EXISTS books_db; CREATE DATABASE books_db WITH ENCODING=&#39;UTF8&#39; TEMPLATE template0; DROP TABLE IF EXISTS books; CREATE TABLE books ( id SERIAL PRIMARY KEY, client TEXT NOT NULL, data JSONb NOT NULL ); Remplissage de la BD # INSERT INTO books(client, data) values ( &#39;Joe&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;Siddhartha&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Herman&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Hesse&amp;quot; } }&#39; ),( &#39;Jenny&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;Dharma Bums&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Jack&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Kerouac&amp;quot; } }&#39; ),( &#39;Jenny&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;100 años de soledad&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Gabo&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Marquéz&amp;quot; } }&#39; ); Voyons tout à l&amp;rsquo;intérieur des livres de table :</description>
    </item>
    
    <item>
      <title>Se connecter à PostgreSQL depuis Java</title>
      <link>https://www.wikiod.com/fr/postgresql/se-connecter-a-postgresql-depuis-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/se-connecter-a-postgresql-depuis-java/</guid>
      <description>L&amp;rsquo;API pour utiliser une base de données relationnelle à partir de Java est JDBC.
Cette API est implémentée par un pilote JDBC.
Pour l&amp;rsquo;utiliser, placez le fichier JAR avec le pilote sur le chemin de classe JAVA.
Cette documentation montre des exemples d&amp;rsquo;utilisation du pilote JDBC pour se connecter à une base de données.
URL JDBC
L&amp;rsquo;URL JDBC peut prendre l&amp;rsquo;une des formes suivantes :
jdbc:postgresql://host[:port]/[database][parameters] host par défaut est localhost, port à 5432.</description>
    </item>
    
    <item>
      <title>Sauvegarde et restauration</title>
      <link>https://www.wikiod.com/fr/postgresql/sauvegarde-et-restauration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/sauvegarde-et-restauration/</guid>
      <description>Sauvegarder le système de fichiers au lieu d&amp;rsquo;utiliser pg_dumpall et pg_dump # Il est très important que si vous l&amp;rsquo;utilisez, vous appeliez la fonction pg_start_backup() avant et la fonction pg_stop_backup() après. Faire des sauvegardes de système de fichiers n&amp;rsquo;est pas sûr autrement ; même un instantané ZFS ou FreeBSD du système de fichiers sauvegardé sans ces appels de fonction placera la base de données en mode de récupération et peut perdre des transactions.</description>
    </item>
    
    <item>
      <title>Gestion des rôles</title>
      <link>https://www.wikiod.com/fr/postgresql/gestion-des-roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/gestion-des-roles/</guid>
      <description>Syntaxe # CRÉER nom RÔLE [ [ AVEC ] option [ ... ] ]
CRÉER nom UTILISATEUR [ [ AVEC ] option [ ... ] ]
où l&#39;option peut être : SUPERUSER | NOSUPERUSER | CREATEDB | NOCREATEDB | CREATEROLE | NOCREATEROLE | CREATEUSER | NOCREATEUSER | INHERIT | NOINHERIT | LOGIN | NOLOGIN | CONNECTION LIMIT connlimit | [ ENCRYPTED | UNENCRYPTED ] PASSWORD &#39;password&#39; | VALID UNTIL &#39;timestamp&#39; | IN ROLE role_name [, .</description>
    </item>
    
    <item>
      <title>Haute disponibilité PostgreSQL</title>
      <link>https://www.wikiod.com/fr/postgresql/haute-disponibilite-postgresql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/haute-disponibilite-postgresql/</guid>
      <description>Réplication dans PostgreSQL # Configuration du serveur principal
Requirements:
Replication User for replication activities Directory to store the WAL archives Create Replication user
createuser -U postgres replication -P -c 5 --replication
+ option -P will prompt you for new password + option -c is for maximum connections. 5 connections are enough for replication + -replication will grant replication privileges to the user Create a archive directory in data directory
mkdir $PGDATA/archive</description>
    </item>
    
    <item>
      <title>Programmation avec PLpgSQL</title>
      <link>https://www.wikiod.com/fr/postgresql/programmation-avec-plpgsql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/programmation-avec-plpgsql/</guid>
      <description>PL/pgSQL est le langage de programmation intégré de PostgreSQL pour écrire des fonctions qui s&amp;rsquo;exécutent dans la base de données elle-même, appelées procédures stockées dans d&amp;rsquo;autres bases de données. Il étend SQL avec des boucles, des conditions et des types de retour. Bien que sa syntaxe puisse sembler étrange à de nombreux développeurs, elle est beaucoup plus rapide que tout ce qui s&amp;rsquo;exécute sur le serveur d&amp;rsquo;applications car la surcharge de connexion à la base de données est éliminée, ce qui est particulièrement utile lorsque vous auriez autrement besoin d&amp;rsquo;exécuter une requête, d&amp;rsquo;attendre le résultat, et soumettre une autre requête.</description>
    </item>
    
    <item>
      <title>Trucs et astuces Postgres</title>
      <link>https://www.wikiod.com/fr/postgresql/trucs-et-astuces-postgres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/trucs-et-astuces-postgres/</guid>
      <description>Alternative à DATEADD dans Postgres # SELECT CURRENT_DATE + &#39;1 jour&#39; :: INTERVALLE SELECT &#39;1999-12-11&#39;::TIMESTAMP + &#39;19 days&#39;::INTERVAL SELECT &#39;1 mois&#39;::INTERVALLE + &#39;1 mois 3 jours&#39;::INTERVALLE Valeurs séparées par des virgules d&amp;rsquo;une colonne # SELECT string_agg(&amp;lt;TABLE_NAME&amp;gt;.&amp;lt;COLUMN_NAME&amp;gt;, &#39;,&#39;) FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt; T Supprimer les enregistrements en double de la table postgres # DELETE FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;Table_NAME&amp;gt; WHERE ctid NOT IN ( SELECT MAX(ctid) FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt; GROUP BY &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt;.* ) ; Requête de mise à jour avec jointure entre deux tables alternative car Postresql ne prend pas en charge la jointure dans la requête de mise à jour.</description>
    </item>
    
    <item>
      <title>Accéder aux données par programmation</title>
      <link>https://www.wikiod.com/fr/postgresql/acceder-aux-donnees-par-programmation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/postgresql/acceder-aux-donnees-par-programmation/</guid>
      <description>Accéder à PostgreSQL avec le C-API # Le C-API est le moyen le plus puissant d&amp;rsquo;accéder à PostgreSQL et il est étonnamment confortable.
Compilation et mise en relation # Lors de la compilation, vous devez ajouter le répertoire d&amp;rsquo;inclusion de PostgreSQL, qui peut être trouvé avec pg_config --includedir, au chemin d&amp;rsquo;inclusion. Vous devez établir un lien avec la bibliothèque partagée du client PostgreSQL (libpq.so sous UNIX, libpq.dll sous Windows). Cette bibliothèque se trouve dans le répertoire de la bibliothèque PostgreSQL, qui peut être trouvée avec pg_config --libdir.</description>
    </item>
    
  </channel>
</rss>
