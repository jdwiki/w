<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel PHP on </title>
    <link>https://www.wikiod.com/fr/docs/php/</link>
    <description>Recent content in Tutoriel PHP on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec PHP</title>
      <link>https://www.wikiod.com/fr/php/debuter-avec-php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/debuter-avec-php/</guid>
      <description>Sortie HTML du serveur Web # PHP peut être utilisé pour ajouter du contenu aux fichiers HTML. Alors que le HTML est traité directement par un navigateur Web, les scripts PHP sont exécutés par un serveur Web et le HTML résultant est envoyé au navigateur.
Le balisage HTML suivant contient une instruction PHP qui ajoutera &amp;ldquo;Hello World!&amp;rdquo; à la sortie :
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;PHP!&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt;&amp;lt;?php echo &amp;quot;Hello world!</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>https://www.wikiod.com/fr/php/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/json/</guid>
      <description>[JSON][3] ([JavaScript Object Notation][2]) est un moyen indépendant de la plate-forme et du langage de sérialiser des objets en texte clair. Parce qu&amp;rsquo;il est souvent utilisé sur le Web, tout comme PHP, il existe une [extension de base] [1] pour travailler avec JSON en PHP.
[1] : https://secure.php.net/manual/en/book.json.php [2] : https://en.wikipedia.org/wiki/JSON [3] : http://www.json.org
Syntaxe # chaîne json_encode ( mixte $value [, int $options = 0 [, int $depth = 512 ]] ) mixte json_decode ( string $json [, bool $assoc = false [, int $depth = 512 [, int $options = 0 ]]] ) Paramètres # Paramètre Détails json_encode - valeur La valeur en cours de codage.</description>
    </item>
    
    <item>
      <title>variables</title>
      <link>https://www.wikiod.com/fr/php/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/variables/</guid>
      <description>Syntaxe # $variable = &amp;lsquo;valeur&amp;rsquo; ; // Affectation d&amp;rsquo;une variable générale $objet-&amp;gt;propriété = &amp;lsquo;valeur&amp;rsquo; ; // Affecte une propriété d&amp;rsquo;objet NomClasse ::$propriété = &amp;lsquo;valeur&amp;rsquo; ; // Affecte une propriété de classe statique $tableau[0] = &amp;lsquo;valeur&amp;rsquo; ; // Affecte une valeur à un index d&amp;rsquo;un tableau $tableau[] = &amp;lsquo;valeur&amp;rsquo; ; // Pousser un élément à la fin d&amp;rsquo;un tableau $tableau[&amp;lsquo;clé&amp;rsquo;] = &amp;lsquo;valeur&amp;rsquo; ; // Affecte une valeur de tableau echo $variable ; // Écho (affiche) une valeur de variable une_fonction($variable); // Utiliser la variable comme paramètre de la fonction unset($variable); // Annule une variable $$variable = &amp;lsquo;valeur&amp;rsquo; ; // Affectation à une variable variable isset($variable); // Vérifie si une variable est définie ou non vide($variable); // Vérifie si une variable est vide ou non Vérification de type # Une partie de la documentation concernant les variables et les types mentionne que PHP n&amp;rsquo;utilise pas typage statique.</description>
    </item>
    
    <item>
      <title>Classes et objets</title>
      <link>https://www.wikiod.com/fr/php/classes-et-objets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/classes-et-objets/</guid>
      <description>Les classes et les objets sont utilisés pour rendre votre code plus efficace et moins répétitif en regroupant des tâches similaires.
Une classe est utilisée pour définir les actions et la structure de données utilisées pour construire des objets. Les objets sont ensuite construits à l&amp;rsquo;aide de cette structure prédéfinie.
Syntaxe # class &amp;lt;ClassName&amp;gt; [ extend &amp;lt;ParentClassName&amp;gt; ] [ implements &amp;lt;Interface1&amp;gt; [, &amp;lt;Interface2&amp;gt;, ... ] { } // Déclaration de classe interface &amp;lt;NomInterface&amp;gt; [ étend &amp;lt;InterfaceParent1&amp;gt; [, &amp;lt;InterfaceParent2&amp;gt;, .</description>
    </item>
    
    <item>
      <title>AOP</title>
      <link>https://www.wikiod.com/fr/php/aop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/aop/</guid>
      <description>L&amp;rsquo;extension PDO (PHP Data Objects) permet aux développeurs de se connecter à de nombreux types de bases de données différents et d&amp;rsquo;exécuter des requêtes sur celles-ci de manière uniforme et orientée objet. manière.
Syntaxe # PDO::LastInsertId() PDO::LastInsertId($columnName) // certains pilotes ont besoin du nom de la colonne Avertissement Ne manquez pas de vérifier les exceptions lors de l&amp;rsquo;utilisation de lastInsertId(). Il peut générer l&amp;rsquo;erreur suivante :
SQLSTATE IM001 : Le pilote ne supporte pas cette fonction</description>
    </item>
    
    <item>
      <title>Sortie de la valeur d&#39;une variable</title>
      <link>https://www.wikiod.com/fr/php/sortie-de-la-valeur-dune-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/sortie-de-la-valeur-dune-variable/</guid>
      <description>Pour construire un programme PHP dynamique et interactif, il est utile de sortir des variables et leurs valeurs. Le langage PHP permet plusieurs méthodes de sortie de valeur. Cette rubrique couvre les méthodes standard d&amp;rsquo;impression d&amp;rsquo;une valeur en PHP et où ces méthodes peuvent être utilisées.
Les variables en PHP sont de types variés. Selon le cas d&amp;rsquo;utilisation, vous souhaiterez peut-être les afficher dans le navigateur sous forme de rendu HTML, les afficher pour le débogage ou les afficher sur le terminal (si vous exécutez une application via la ligne de commande).</description>
    </item>
    
    <item>
      <title>Tableaux</title>
      <link>https://www.wikiod.com/fr/php/tableaux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/tableaux/</guid>
      <description>Un tableau est une structure de données qui stocke un nombre arbitraire de valeurs dans une seule valeur. Un tableau en PHP est en fait une carte ordonnée, où map est un type qui associe des valeurs à des clés.
Syntaxe # $tableau = tableau(&amp;lsquo;Valeur1&amp;rsquo;, &amp;lsquo;Valeur2&amp;rsquo;, &amp;lsquo;Valeur3&amp;rsquo;); // Clés par défaut à 0, 1, 2, &amp;hellip;, $array = array(&amp;lsquo;Valeur1&amp;rsquo;, &amp;lsquo;Valeur2&amp;rsquo;, ); // Virgule finale facultative $array = array(&amp;lsquo;key1&amp;rsquo; =&amp;gt; &amp;lsquo;Valeur1&amp;rsquo;, &amp;lsquo;key2&amp;rsquo; =&amp;gt; &amp;lsquo;Valeur2&amp;rsquo;, ); // Clés explicites $array = array(&amp;lsquo;key1&amp;rsquo; =&amp;gt; &amp;lsquo;Valeur1&amp;rsquo;, &amp;lsquo;Valeur2&amp;rsquo;, ); // Tableau ( [&amp;lsquo;key1&amp;rsquo;] =&amp;gt; Valeur1 [1] =&amp;gt; &amp;lsquo;Valeur2&amp;rsquo;) $array = [&amp;lsquo;key1&amp;rsquo; =&amp;gt; &amp;lsquo;Valeur1&amp;rsquo;, &amp;lsquo;key2&amp;rsquo; =&amp;gt; &amp;lsquo;Valeur2&amp;rsquo;, ] ; // Raccourci PHP 5.</description>
    </item>
    
    <item>
      <title>Sécurité</title>
      <link>https://www.wikiod.com/fr/php/securite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/securite/</guid>
      <description>Comme la majorité des sites Web utilisent PHP, la sécurité des applications est un sujet important pour les développeurs PHP afin de protéger leur site Web, leurs données et leurs clients. Cette rubrique couvre les meilleures pratiques de sécurité en PHP ainsi que les vulnérabilités et les faiblesses courantes avec des exemples de correctifs en PHP.
Voir également
[Prévenir l&amp;rsquo;injection SQL avec des requêtes paramétrées dans PDO][1] [Déclarations préparées dans mysqli][2] [Projet de sécurité des applications Web ouvertes (OWASP)][3] [1] : https://www.</description>
    </item>
    
    <item>
      <title>Traits</title>
      <link>https://www.wikiod.com/fr/php/traits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/traits/</guid>
      <description>Caractéristiques pour faciliter la réutilisation horizontale du code # Disons que nous avons une interface pour la journalisation :
interface Logger { function log($message); } Supposons maintenant que nous ayons deux implémentations concrètes de l&amp;rsquo;interface Logger : le FileLogger et le ConsoleLogger.
class FileLogger implements Logger { public function log($message) { // Append log message to some file } } class ConsoleLogger implements Logger { public function log($message) { // Log message to the console } } Maintenant, si vous définissez une autre classe &amp;ldquo;Foo&amp;rdquo; pour laquelle vous souhaitez également pouvoir effectuer des tâches de journalisation, vous pouvez faire quelque chose comme ceci :</description>
    </item>
    
    <item>
      <title>Injection de dépendance</title>
      <link>https://www.wikiod.com/fr/php/injection-de-dependance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/php/injection-de-dependance/</guid>
      <description>L&amp;rsquo;injection de dépendance (DI) est un terme fantaisiste pour &amp;ldquo;faire passer des choses&amp;rdquo;. Tout cela signifie vraiment passer les dépendances d&amp;rsquo;un objet via le constructeur et/ou les setters au lieu de les créer lors de la création de l&amp;rsquo;objet à l&amp;rsquo;intérieur de l&amp;rsquo;objet.
L&amp;rsquo;injection de dépendance peut également faire référence à des conteneurs d&amp;rsquo;injection de dépendance qui automatisent la construction et l&amp;rsquo;injection.
Injection de constructeur # Les objets dépendront souvent d&amp;rsquo;autres objets.</description>
    </item>
    
  </channel>
</rss>
