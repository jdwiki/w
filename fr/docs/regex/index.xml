<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel sur les expressions régulières on </title>
    <link>https://www.wikiod.com/fr/docs/regex/</link>
    <description>Recent content in Tutoriel sur les expressions régulières on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/regex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec les expressions régulières</title>
      <link>https://www.wikiod.com/fr/regex/premiers-pas-avec-les-expressions-regulieres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/premiers-pas-avec-les-expressions-regulieres/</guid>
      <description>Guide des personnages # Notez que certains éléments de syntaxe ont un comportement différent selon l&amp;rsquo;expression.
Syntaxe La description ? Faites correspondre le caractère ou la sous-expression précédente 0 ou 1 fois. Également utilisé pour les groupes sans capture et les groupes de capture nommés. * Faites correspondre le caractère ou la sous-expression précédente 0 fois ou plus. + Faites correspondre le caractère ou la sous-expression précédente 1 ou plusieurs fois.</description>
    </item>
    
    <item>
      <title>Caractères d&#39;ancrage Caret (^)</title>
      <link>https://www.wikiod.com/fr/regex/caracteres-dancrage-caret/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/caracteres-dancrage-caret/</guid>
      <description>Terminologie
Le caractère Caret (^) est également désigné par les termes suivants :
chapeau contrôler flèche vers le haut chevron accent circonflexe Usage
Il a deux utilisations dans les expressions régulières :
Pour marquer le début de la ligne S&amp;rsquo;il est utilisé immédiatement après un crochet ([^), il agit pour annuler l&amp;rsquo;ensemble de caractères autorisés (c&amp;rsquo;est-à-dire [123] signifie que le caractère 1, 2 ou 3 est autorisé, tandis que l&amp;rsquo;instruction [^123] signifie que tout caractère autre que 1, 2 ou 3 est autorisé.</description>
    </item>
    
    <item>
      <title>Quantificateurs gourmands et paresseux</title>
      <link>https://www.wikiod.com/fr/regex/quantificateurs-gourmands-et-paresseux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/quantificateurs-gourmands-et-paresseux/</guid>
      <description>Paramètres # Quantificateurs La description ? Faites correspondre le caractère ou la sous-expression précédente 0 ou 1 fois (de préférence 1). * Faites correspondre le caractère ou la sous-expression précédente 0 fois ou plus (autant que possible). + Faites correspondre le caractère ou la sous-expression précédente 1 ou plusieurs fois (autant que possible). {n} Faites correspondre le caractère ou la sous-expression précédente exactement n fois. {minute,} Faites correspondre le caractère ou la sous-expression précédente min ou plusieurs fois (autant que possible).</description>
    </item>
    
    <item>
      <title>Anticipation et anticipation</title>
      <link>https://www.wikiod.com/fr/regex/anticipation-et-anticipation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/anticipation-et-anticipation/</guid>
      <description>Syntaxe # Avance positive : (?=motif) Avant négatif : (?!pattern) Aperçu positif : (?&amp;lt;=motif) Regard en arrière négatif : (?&amp;lt;!pattern) Non pris en charge par tous les moteurs de regex.
De plus, de nombreux moteurs de regex limitent les modèles à l&amp;rsquo;intérieur des lookbehinds à des chaînes de longueur fixe. Par exemple, le modèle (?&amp;lt;=a+)b devrait correspondre au b dans aaab mais génère une erreur en Python.
La capture de groupes est autorisée et fonctionne comme prévu, y compris les références arrière.</description>
    </item>
    
    <item>
      <title>Modificateurs Regex (drapeaux)</title>
      <link>https://www.wikiod.com/fr/regex/modificateurs-regex-drapeaux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/modificateurs-regex-drapeaux/</guid>
      <description>Les modèles d&amp;rsquo;expressions régulières sont souvent utilisés avec des modificateurs (également appelés flags) qui redéfinissent le comportement des regex. Les modificateurs Regex peuvent être regular (par exemple /abc/i) et inline (ou embedded) (par exemple (?i)abc). Les modificateurs les plus courants sont les modificateurs globaux, insensibles à la casse, multilignes et dotall. Cependant, les saveurs de regex diffèrent par le nombre de modificateurs de regex pris en charge et leurs types.</description>
    </item>
    
    <item>
      <title>Groupes de capture</title>
      <link>https://www.wikiod.com/fr/regex/groupes-de-capture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/groupes-de-capture/</guid>
      <description>Groupes de capture de base # Un groupe est une section d&amp;rsquo;une expression régulière entre parenthèses (). Ceci est communément appelé &amp;ldquo;sous-expression&amp;rdquo; et sert à deux fins :
Cela rend la sous-expression atomique, c&amp;rsquo;est-à-dire qu&amp;rsquo;elle correspondra, échouera ou se répétera dans son ensemble. La portion de texte à laquelle elle correspond est accessible dans le reste de l&amp;rsquo;expression et le reste du programme. Les groupes sont numérotés dans les moteurs de regex, en commençant par 1.</description>
    </item>
    
    <item>
      <title>Classes de personnages</title>
      <link>https://www.wikiod.com/fr/regex/classes-de-personnages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/classes-de-personnages/</guid>
      <description>Cours simples # Expression régulière Matchs [abc] L&amp;rsquo;un des caractères suivants : a, b ou c [a-z] N&amp;rsquo;importe quel caractère de a à z, inclusif (c&amp;rsquo;est ce qu&amp;rsquo;on appelle une plage) [0-9] N&amp;rsquo;importe quel chiffre de &amp;lsquo;0&amp;rsquo; à &amp;lsquo;9&amp;rsquo;, inclus Cours communs # Certains groupes/gammes de caractères sont si souvent utilisés qu&amp;rsquo;ils ont des abréviations spéciales :
Expression régulière Matchs \w Caractères alphanumériques plus le trait de soulignement (également appelés &amp;ldquo;caractères de mot&amp;rdquo;) \W Caractères non verbaux (comme [^\w]) \d Chiffres (plus larges que [0-9] puisqu&amp;rsquo;ils incluent les chiffres persans, indiens, etc.</description>
    </item>
    
    <item>
      <title>Limite de mot</title>
      <link>https://www.wikiod.com/fr/regex/limite-de-mot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/limite-de-mot/</guid>
      <description>Syntaxe # Style POSIX, fin de mot : [[:&amp;gt;:]] Style POSIX, début de mot : [[:&amp;lt;:]] Style POSIX, limite de mot : [[:&amp;lt;:][:&amp;gt;:]] SVR4/GNU, fin de mot : \&amp;gt; SVR4/GNU, début de mot : \&amp;lt; Perl/GNU, limite de mot : \b Tcl, fin de mot : \M Tcl, début de mot : \m Tcl, limite de mot : \y ERE portable, début de mot : (^|[^[:alnum:]_]) ERE portable, fin de mot : ([^[:alnum:]_]|$) Ressources additionnelles # [chapitre POSIX sur les expressions régulières][POSIX] [Documentation sur les expressions régulières Perl][Perl] [Page de manuel Tcl re_syntax][Tcl] [GNU grep expressions de barre oblique inverse][ggrep] [Re_formater BSD][re_formater] [Plus de lecture][1] [1] : http://www.</description>
    </item>
    
    <item>
      <title>Match Réinitialiser K</title>
      <link>https://www.wikiod.com/fr/regex/match-reinitialiser-k/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/match-reinitialiser-k/</guid>
      <description>Regex101 définit la fonctionnalité \K comme :
\K réinitialise le point de départ de la correspondance signalée. Tous les personnages précédemment consommés ne sont plus inclus dans le match final
La séquence d&amp;rsquo;échappement \K est prise en charge par plusieurs moteurs, langages ou outils, tels que :
boost (depuis ???) grep -P ← utilise PCRE Oniguruma ([depuis 5.13.3][4]) PCRE ([depuis 7.2][2]) Perl ([depuis 5.10.0][3]) PHP ([depuis 5.2.4][1]) Rubis (depuis 2.0.0) &amp;hellip;et (jusqu&amp;rsquo;à présent) non pris en charge par :</description>
    </item>
    
    <item>
      <title>Vitrine Regex utile</title>
      <link>https://www.wikiod.com/fr/regex/vitrine-regex-utile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/regex/vitrine-regex-utile/</guid>
      <description>Faire correspondre une adresse e-mail # Faire correspondre une adresse e-mail dans une chaîne est une tâche difficile, car spécification le définissant, la RFC2822, est complexe, ce qui le rend difficile à implémenter en tant que regex. Pour plus de détails pourquoi c&amp;rsquo;est ce n&amp;rsquo;est pas une bonne idée de faire correspondre un email avec une regex, veuillez vous référer au exemple d&amp;rsquo;antipattern [quand ne pas utiliser une regex : pour la correspondance e-mails] (https://www.</description>
    </item>
    
  </channel>
</rss>
