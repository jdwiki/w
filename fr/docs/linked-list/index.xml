<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel sur les listes liées on </title>
    <link>https://www.wikiod.com/fr/docs/linked-list/</link>
    <description>Recent content in Tutoriel sur les listes liées on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/linked-list/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec la liste liée</title>
      <link>https://www.wikiod.com/fr/linked-list/premiers-pas-avec-la-liste-liee/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/linked-list/premiers-pas-avec-la-liste-liee/</guid>
      <description>Installation ou configuration # Instructions détaillées sur la configuration ou l&amp;rsquo;installation de la liste liée.
Conception à l&amp;rsquo;aide de Sentry Node # Lors de la conception d&amp;rsquo;une liste chaînée, vous pouvez éviter tous les cas particuliers (liste vide, premier nœud, dernier nœud, etc.) en utilisant un nœud sentinelle. Voyons comment cela se fait :
struct Node { Node* next; Node* prev; T data; }; // helper function to link 2 nodes void Link(Node* n1, Node* n2) { n1-&amp;gt;next = n2; n2-&amp;gt;prev = n1; } // this inserts new data before &#39;here&#39; Node* Insert(Node* here, const T&amp;amp; data) { Node* item = new Node{0,0,data}; // create new item.</description>
    </item>
    
  </channel>
</rss>
