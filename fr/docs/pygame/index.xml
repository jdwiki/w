<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel pygame on </title>
    <link>https://www.wikiod.com/fr/docs/pygame/</link>
    <description>Recent content in Tutoriel pygame on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/pygame/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec pygame</title>
      <link>https://www.wikiod.com/fr/pygame/demarrer-avec-pygame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pygame/demarrer-avec-pygame/</guid>
      <description>Un &amp;ldquo;jeu&amp;rdquo; simple # Importer et initialiser # Chaque module doit être importé et pygame ne fait pas exception. Bien que nous devions appeler la fonction pygame.init() pour que tous les modules importés dans pygame soient initialisés correctement. Si nous oublions cela, certains modules ne fonctionneront pas. La fonction renvoie également un tuple de toutes les initialisations réussies et échouées (elle ne déclenchera pas d&amp;rsquo;erreur si un module ne parvient pas à s&amp;rsquo;initialiser).</description>
    </item>
    
    <item>
      <title>Gestion des événements</title>
      <link>https://www.wikiod.com/fr/pygame/gestion-des-evenements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pygame/gestion-des-evenements/</guid>
      <description>Boucle d&amp;rsquo;événement # Pygame enregistrera tous les événements de l&amp;rsquo;utilisateur dans une file d&amp;rsquo;attente d&amp;rsquo;événements qui peut être reçue avec le code pygame.event.get(). Chaque élément de cette file d&amp;rsquo;attente est un objet Event et ils auront tous l&amp;rsquo;attribut type, qui est un entier représentant le type d&amp;rsquo;événement dont il s&amp;rsquo;agit. Dans le module pygame, il existe des constantes entières prédéfinies représentant le type. À l&amp;rsquo;exception de cet attribut, les événements ont des attributs différents.</description>
    </item>
    
    <item>
      <title>Création d&#39;une fenêtre dans pygame - pygame.display.set_mode()</title>
      <link>https://www.wikiod.com/fr/pygame/creation-dune-fenetre-dans-pygame---pygamedisplayset_mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pygame/creation-dune-fenetre-dans-pygame---pygamedisplayset_mode/</guid>
      <description>Syntaxe # pygame.display.set_mode(resolution=(0,0), flags=0, depth=0) # Renvoie un pygame.Surface représentant la fenêtre à l&amp;rsquo;écran flags = pygame.PLEIN ÉCRAN | pygame.OPENGL # Les drapeaux peuvent être combinés en utilisant le &amp;ldquo;|&amp;rdquo; (OU au niveau du bit ou &amp;ldquo;tuyau&amp;rdquo;). Paramètres # paramètre explication résolution une paire de nombres représentant la largeur et la hauteur de la fenêtre drapeaux options supplémentaires qui changent le type de fenêtre - voir &amp;ldquo;Remarques&amp;rdquo; pour les drapeaux disponibles profondeur quantité de bits utilisés pour la couleur Les valeurs possibles pour les arguments flag sont : drapeau descriptif pygame.</description>
    </item>
    
    <item>
      <title>Ajouter une musique de fond et des effets sonores</title>
      <link>https://www.wikiod.com/fr/pygame/ajouter-une-musique-de-fond-et-des-effets-sonores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pygame/ajouter-une-musique-de-fond-et-des-effets-sonores/</guid>
      <description>Essayez de jouer de la musique en &amp;lsquo;.wav&amp;rsquo; au lieu de &amp;lsquo;.mp3&amp;rsquo;. Dans &amp;lsquo;.mp3&amp;rsquo; la musique est décalée.
Exemple pour ajouter de la musique dans pygame # import pygame file = &#39;some.mp3&#39; pygame.init() pygame.mixer.init() pygame.mixer.music.load(file) pygame.mixer.music.play(-1) # If the loops is -1 then the music will repeat indefinitely. Exemple pour ajouter une playlist de musique dans pygame # import pygame import time pygame.mixer.init() pygame.display.init() screen = pygame.display.set_mode ( ( 420 , 240 ) ) playlist = list() playlist.</description>
    </item>
    
    <item>
      <title>Création d&#39;une fenêtre pygame simple</title>
      <link>https://www.wikiod.com/fr/pygame/creation-dune-fenetre-pygame-simple/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pygame/creation-dune-fenetre-pygame-simple/</guid>
      <description>Le code complet # import pygame pygame.init() WIDTH = 300 HEIGHT = 200 SCREEN = pygame.display.set_mode((WIDTH, HEIGHT)) pygame.display.set_caption(&#39;My Game&#39;) WHITE = (255, 255, 255) BLACK = (0, 0, 0) RED = (255, 0, 0) GREEN = (0, 255, 0) BLUE = (0, 0, 255) YELLOW = (255, 255, 255) SCREEN.fill(RED) pygame.display.flip() is_running = True while is_running: for event in pygame.event.get(): if event.type == pygame.QUIT: is_running = False pygame.quit() Importation et initialisation de pygame</description>
    </item>
    
    <item>
      <title>Dessiner sur l&#39;écran</title>
      <link>https://www.wikiod.com/fr/pygame/dessiner-sur-lecran/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pygame/dessiner-sur-lecran/</guid>
      <description>Syntaxe # pygame.draw.rect(Surface, couleur, Rect, largeur=0) pygame.draw.polygon(Surface, couleur, liste de points, largeur=0) pygame.draw.circle(Surface, couleur, pos, rayon, largeur=0) pygame.draw.ellipse(Surface, couleur, Rect, largeur=0) pygame.draw.arc(Surface, color, Rect, start_angle, stop_angle, width=1) pygame.draw.line(Surface, couleur, start_pos, end_pos, width=1) pygame.draw.lines(Surface, couleur, fermée, liste de points, largeur=1) pygame.draw.aaline(Surface, couleur, startpos, endpos, blend=1) pygame.draw.aalines(Surface, couleur, fermée, liste de points, blend=1) Paramètres # Paramètres Détails surface Surface sur laquelle dessiner la forme. couleur Une séquence de 3 ou 4 entiers représentant le rouge, le vert et le bleu (et alpha), chaque valeur étant comprise entre 0 et 255.</description>
    </item>
    
    <item>
      <title>Les essentiels</title>
      <link>https://www.wikiod.com/fr/pygame/les-essentiels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pygame/les-essentiels/</guid>
      <description>Dessin et une animation de base # Ce programme dessine des formes et &amp;lsquo;hello world!&amp;rsquo; et laisse une image aller à chaque coin de la fenêtre.
le code complet : # import pygame,sys from pygame.locals import * pygame.init() FPS = 30 #frames per second setting fpsClock = pygame.time.Clock() #set up the window screen = pygame.display.set_mode((500,400), 0, 32) pygame.display.set_caption(&#39;drawing&#39;) #set up the colors black = ( 0, 0, 0) white = (255, 255, 255) red = (255, 0, 0) green = ( 0, 255, 0) blue = ( 0, 0, 255) imageImg = pygame.</description>
    </item>
    
    <item>
      <title>Création d&#39;une fenêtre pygame</title>
      <link>https://www.wikiod.com/fr/pygame/creation-dune-fenetre-pygame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pygame/creation-dune-fenetre-pygame/</guid>
      <description>Si vous voulez avoir d&amp;rsquo;autres couleurs comme arrière-plan, nommez une nouvelle variable telle que red = (255,0,0) et changez display.fill(black) en display.fill(red). Vous pouvez créer des couleurs en les stockant dans une variable et en vérifiant leurs valeurs RVB sur Internet.
Création de la fenêtre pygame # import pygame background_colour = (255,255,255) # For the background color of your window (width, height) = (300, 200) # Dimension of the window screen = pygame.</description>
    </item>
    
  </channel>
</rss>
