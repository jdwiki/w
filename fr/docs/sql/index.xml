<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel SQL on </title>
    <link>https://www.wikiod.com/fr/docs/sql/</link>
    <description>Recent content in Tutoriel SQL on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec SQL</title>
      <link>https://www.wikiod.com/fr/sql/debuter-avec-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/debuter-avec-sql/</guid>
      <description>Aperçu # Structured Query Language (SQL) est un langage de programmation spécialisé conçu pour gérer les données contenues dans un système de gestion de base de données relationnelle (RDBMS). Les langages de type SQL peuvent également être utilisés dans les systèmes de gestion de flux de données relationnels (RDSMS) ou dans les bases de données &amp;ldquo;non uniquement SQL&amp;rdquo; (NoSQL).
SQL comprend 3 sous-langages principaux :
Data Definition Language (DDL) : pour créer et modifier la structure de la base de données ; Data Manipulation Language (DML) : pour effectuer des opérations de lecture, d&amp;rsquo;insertion, de mise à jour et de suppression sur les données de la base de données ; Data Control Language (DCL) : pour contrôler l&amp;rsquo;accès aux données stockées dans la base de données.</description>
    </item>
    
    <item>
      <title>SÉLECTIONNER</title>
      <link>https://www.wikiod.com/fr/sql/selectionner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/selectionner/</guid>
      <description>L&amp;rsquo;instruction SELECT est au cœur de la plupart des requêtes SQL. Il définit quel ensemble de résultats doit être renvoyé par la requête et est presque toujours utilisé en conjonction avec la clause FROM, qui définit quelle(s) partie(s) de la base de données doit être interrogée.
Syntaxe # SÉLECTIONNER [DISTINCT] [colonne1] [, [colonne2] &amp;hellip; ] DE [tableau] [ Condition OÙ ] [ GROUPER PAR [colonne1] [, [colonne2] &amp;hellip; ] [ AYANT [colonne1] [, [colonne2] &amp;hellip; ]</description>
    </item>
    
    <item>
      <title>REJOINDRE</title>
      <link>https://www.wikiod.com/fr/sql/rejoindre/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/rejoindre/</guid>
      <description>JOIN est une méthode pour combiner (joindre) les informations de deux tables. Le résultat est un ensemble assemblé de colonnes des deux tables, défini par le type de jointure (INNER/OUTER/CROSS et LEFT/RIGHT/FULL, expliqué ci-dessous) et les critères de jointure (comment les lignes des deux tables sont liées).
Une table peut être jointe à elle-même ou à toute autre table. Si des informations provenant de plus de deux tables doivent être accessibles, plusieurs jointures peuvent être spécifiées dans une clause FROM.</description>
    </item>
    
    <item>
      <title>Exemples de bases de données et de tables</title>
      <link>https://www.wikiod.com/fr/sql/exemples-de-bases-de-donnees-et-de-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/exemples-de-bases-de-donnees-et-de-tables/</guid>
      <description>Base de données de l&amp;rsquo;atelier automobile # Dans l&amp;rsquo;exemple suivant - Base de données pour une entreprise d&amp;rsquo;atelier automobile, nous avons une liste de départements, d&amp;rsquo;employés, de clients et de voitures de clients. Nous utilisons des clés étrangères pour créer des relations entre les différentes tables.
Exemple en direct : [violon SQL] [1]
Relations entre les tables # Chaque département peut avoir 0 ou plusieurs employés Chaque Employé peut avoir 0 ou 1 Manager Chaque client peut avoir 0 ou plusieurs voitures Départements # identifiant Nom 1 RH 2 Ventes 3 Technologie Instructions SQL pour créer la table :</description>
    </item>
    
    <item>
      <title>Fonctions de chaîne</title>
      <link>https://www.wikiod.com/fr/sql/fonctions-de-chaine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/fonctions-de-chaine/</guid>
      <description>Les fonctions de chaîne effectuent des opérations sur des valeurs de chaîne et renvoient des valeurs numériques ou de chaîne.
À l&amp;rsquo;aide des fonctions de chaîne, vous pouvez, par exemple, combiner des données, extraire une sous-chaîne, comparer des chaînes ou convertir une chaîne en caractères majuscules ou minuscules.
Syntaxe # CONCAT ( valeur_chaîne1, valeur_chaîne2 [, valeur_chaîneN ] ) - LTRIM ( expression_caractère ) - RTRIM ( expression_caractère ) SUBSTRING (expression, début, longueur ) ASCII ( expression_caractère ) REPLICATE ( expression_chaîne ,expression_entier ) INVERSE ( expression_chaîne ) MAJUSCULE ( expression_caractère ) TRIM ( [ caractères FROM ] chaîne ) STRING_SPLIT ( chaîne , séparateur ) STUFF ( expression_caractère , début , longueur , remplacerPar_expression ) REPLACE ( expression_chaîne , motif_chaîne , remplacement_chaîne ) Référence des fonctions de chaîne pour Transact-SQL / Microsoft</description>
    </item>
    
    <item>
      <title>CAS</title>
      <link>https://www.wikiod.com/fr/sql/cas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/cas/</guid>
      <description>L&amp;rsquo;expression CASE est utilisée pour implémenter la logique si-alors.
Syntaxe # CASE input_expression QUAND comparer1 PUIS résultat1 [QUAND compare2 ALORS résultat2]&amp;hellip; [SINON résultatX] FIN CAS QUAND condition1 ALORS résultat1 [QUAND condition2 ALORS résultat2]&amp;hellip; [SINON résultatX] FIN L&amp;rsquo;expression CASE simple renvoie le premier résultat dont la valeur compareX est égale à input_expression.
L&amp;rsquo;expression CASE recherchée renvoie le premier résultat dont la conditionX est vraie.
Utilisez CASE pour COMPTER le nombre de lignes dans une colonne correspondant à une condition.</description>
    </item>
    
    <item>
      <title>Filtrer les résultats en utilisant WHERE et HAVING</title>
      <link>https://www.wikiod.com/fr/sql/filtrer-les-resultats-en-utilisant-where-et-having/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/filtrer-les-resultats-en-utilisant-where-et-having/</guid>
      <description>Syntaxe # SELECT nom_colonne FROM nom_table WHERE nom_colonne valeur de l&amp;rsquo;opérateur SELECT nom_colonne, fonction_agrégat (nom_colonne) FROM nom_table GROUP BY nom_colonne HAVING valeur de l&amp;rsquo;opérateur de la fonction_agrégé(nom_colonne) Utilisez BETWEEN pour filtrer les résultats # Les exemples suivants utilisent les exemples de bases de données [Item Sales][1] et [Customers][2].
Remarque : L&amp;rsquo;opérateur BETWEEN est inclus.
Utilisation de l&amp;rsquo;opérateur BETWEEN avec des nombres :
SELECT * From ItemSales WHERE Quantity BETWEEN 10 AND 17 Cette requête renverra tous les enregistrements &amp;ldquo;ItemSales&amp;rdquo; dont la quantité est supérieure ou égale à 10 et inférieure ou égale à 17.</description>
    </item>
    
    <item>
      <title>Injection SQL</title>
      <link>https://www.wikiod.com/fr/sql/injection-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/injection-sql/</guid>
      <description>L&amp;rsquo;injection SQL est une tentative d&amp;rsquo;accès aux tables de la base de données d&amp;rsquo;un site Web en injectant du SQL dans un champ de formulaire. Si un serveur Web ne protège pas contre les attaques par injection SQL, un pirate peut inciter la base de données à exécuter le code SQL supplémentaire. En exécutant leur propre code SQL, les pirates peuvent mettre à niveau l&amp;rsquo;accès à leur compte, afficher les informations privées de quelqu&amp;rsquo;un d&amp;rsquo;autre ou apporter toute autre modification à la base de données.</description>
    </item>
    
    <item>
      <title>UNION  UNION TOUS</title>
      <link>https://www.wikiod.com/fr/sql/union--union-tous/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/union--union-tous/</guid>
      <description>Le mot-clé UNION dans SQL est utilisé pour combiner les résultats de l&amp;rsquo;instruction SELECT sans aucun doublon.
Pour utiliser UNION et combiner les résultats, les deux instructions SELECT doivent avoir le même nombre de colonnes avec le même type de données dans le même ordre, mais la longueur de la colonne peut être différente.
Syntaxe # SELECT colonne_1 [, colonne_2 ] FROM table_1 [, table_2 ] [condition WHERE] UNION | UNION TOUS SELECT colonne_1 [, colonne_2 ] FROM table_1 [, table_2 ] [condition WHERE] Les clauses UNION et UNION ALL combinent l&amp;rsquo;ensemble de résultats de deux ou plusieurs instructions SELECT structurées de manière identique en un seul résultat / tableau.</description>
    </item>
    
    <item>
      <title>CRÉER UN TABLEAU</title>
      <link>https://www.wikiod.com/fr/sql/creer-un-tableau/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/sql/creer-un-tableau/</guid>
      <description>L&amp;rsquo;instruction CREATE TABLE est utilisée pour créer une nouvelle table dans la base de données. Une définition de table consiste en une liste de colonnes, leurs types et toutes les contraintes d&amp;rsquo;intégrité.
Syntaxe # CREATE TABLE tableName( [ColumnName1] [datatype1] [, [ColumnName2] [datatype2] &amp;hellip;] ) Paramètres # Paramètre Détails tableName Le nom de la table colonnes Contient une &amp;lsquo;énumération&amp;rsquo; de toutes les colonnes de la table. Voir Créer une nouvelle table pour plus de détails.</description>
    </item>
    
  </channel>
</rss>
