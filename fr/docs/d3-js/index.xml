<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel d3.js on </title>
    <link>https://www.wikiod.com/fr/docs/d3-js/</link>
    <description>Recent content in Tutoriel d3.js on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/d3-js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec d3.js</title>
      <link>https://www.wikiod.com/fr/d3-js/premiers-pas-avec-d3js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/premiers-pas-avec-d3js/</guid>
      <description>Installation # Il existe plusieurs façons de télécharger et d&amp;rsquo;utiliser D3.
Téléchargement direct du script # Téléchargez et extrayez [d3.zip][1] Copiez le dossier résultant dans lequel vous conserverez les dépendances de votre projet Référencez d3.js (pour le développement) ou d3.min.js (pour la production) dans votre code HTML : &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;scripts/d3/d3.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; MNP # Initialisez NPM dans votre projet si vous ne l&amp;rsquo;avez pas déjà fait : npm init NPM install D3 : npm install --save d3 Référencez d3.</description>
    </item>
    
    <item>
      <title>Envoi d&#39;événements avec d3.dispatch</title>
      <link>https://www.wikiod.com/fr/d3-js/envoi-devenements-avec-d3dispatch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/envoi-devenements-avec-d3dispatch/</guid>
      <description>Syntaxe # d3.dispatch - crée un répartiteur d&amp;rsquo;événements personnalisé. dispatch.on - enregistrer ou désenregistrer un écouteur d&amp;rsquo;événement. dispatch.copy - crée une copie d&amp;rsquo;un répartiteur. dispatch.call - envoie un événement aux auditeurs enregistrés. dispatch.apply - envoie un événement aux auditeurs enregistrés. La répartition est un mécanisme pratique pour séparer les problèmes avec du code faiblement couplé : enregistrez des rappels nommés, puis appelez-les avec des arguments arbitraires. Une variété de composants D3, tels que d3-request, utilisent ce mécanisme pour émettre des événements aux auditeurs.</description>
    </item>
    
    <item>
      <title>Utiliser D3 avec JSON et CSV</title>
      <link>https://www.wikiod.com/fr/d3-js/utiliser-d3-avec-json-et-csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/utiliser-d3-avec-json-et-csv/</guid>
      <description>Syntaxe # d3.csv(url[[, ligne], rappel]) d3.tsv(url[[, ligne], rappel]) d3.html(url[, rappel]) d3.json(url[, rappel]) d3.text(url[, rappel]) d3.xml(url[, rappel]) Chargement de données à partir de fichiers CSV # Il existe plusieurs façons d&amp;rsquo;obtenir les données que vous allez lier aux éléments DOM. Le plus simple est d&amp;rsquo;avoir vos données dans votre script sous forme de tableau &amp;hellip;
var data = [ ... ]; Mais D3.js nous permet de charger des données à partir d&amp;rsquo;un fichier externe.</description>
    </item>
    
    <item>
      <title>modèle de mise à jour</title>
      <link>https://www.wikiod.com/fr/d3-js/modele-de-mise-a-jour/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/modele-de-mise-a-jour/</guid>
      <description>Syntaxe # sélection.enter() selection.exit() sélection.merge() Mise à jour des données : exemple de base des sélections d&amp;rsquo;entrée, de mise à jour et de sortie # La création d&amp;rsquo;un graphique qui affiche un ensemble de données statiques est relativement simple. Par exemple, si nous avons ce tableau d&amp;rsquo;objets comme données :
var data = [ {title: &amp;quot;A&amp;quot;, value: 53}, {title: &amp;quot;B&amp;quot;, value: 12}, {title: &amp;quot;C&amp;quot;, value: 91}, {title: &amp;quot;D&amp;quot;, value: 24}, {title: &amp;quot;E&amp;quot;, value: 59} ]; Nous pouvons créer un graphique à barres où chaque barre représente une mesure, nommée &amp;ldquo;titre&amp;rdquo;, et sa largeur représente la valeur de cette mesure.</description>
    </item>
    
    <item>
      <title>Projections D3</title>
      <link>https://www.wikiod.com/fr/d3-js/projections-d3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/projections-d3/</guid>
      <description>Projections d&amp;rsquo;Albers # Une projection d&amp;rsquo;Albers, ou plus exactement une projection conique à aire égale d&amp;rsquo;Albers, est une projection conique commune et une projection officielle d&amp;rsquo;un certain nombre de juridictions et d&amp;rsquo;organisations telles que le bureau de recensement américain et la province de la Colombie-Britannique au Canada. Il préserve la zone au détriment d&amp;rsquo;autres aspects de la carte tels que la forme, l&amp;rsquo;angle et la distance.
Les propriétés générales # La transformation générale est capturée dans le gif suivant :</description>
    </item>
    
    <item>
      <title>Sélections</title>
      <link>https://www.wikiod.com/fr/d3-js/selections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/selections/</guid>
      <description>Syntaxe # d3.select(sélecteur) d3.selectAll(sélecteur) sélection.sélectionner(sélecteur) sélection.selectAll(sélecteur) sélection.filtre(filtre) sélection.fusion(autre) Lectures associées :
Comment fonctionnent les sélections - Mike Bostock [fichier LISEZ-MOI d3-sélection] (https://github.com/d3/d3-selection/blob/master/README.md#selection) Le rôle des espaces réservés dans les sélections &amp;ldquo;enter&amp;rdquo; # Qu&amp;rsquo;est-ce qu&amp;rsquo;une sélection d&amp;rsquo;entrée ?
En D3.js, lorsque l&amp;rsquo;on lie des données à des éléments DOM, trois situations sont possibles :
Le nombre d&amp;rsquo;éléments et le nombre de points de données sont les mêmes ; Il y a plus d&amp;rsquo;éléments que de points de données ; Il y a plus de points de données que d&amp;rsquo;éléments ; Dans la situation #3, tous les points de données sans élément DOM correspondant appartiennent à la sélection enter.</description>
    </item>
    
    <item>
      <title>Concepts SVG de base utilisés dans la visualisation D3.js</title>
      <link>https://www.wikiod.com/fr/d3-js/concepts-svg-de-base-utilises-dans-la-visualisation-d3js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/concepts-svg-de-base-utilises-dans-la-visualisation-d3js/</guid>
      <description>Système de coordonnées # Dans un système de coordonnées mathématique normal, le point x=0, y=0 se trouve dans le coin inférieur gauche du graphique. Mais dans le système de coordonnées SVG, ce point (0,0) se trouve dans le coin supérieur gauche de la &amp;rsquo;toile&amp;rsquo;, il est un peu similaire à CSS lorsque vous spécifiez la position absolue/fixe et utilisez haut et gauche pour contrôler le point exact de l&amp;rsquo;élément.
Il est essentiel de garder à l&amp;rsquo;esprit que lorsque y augmente dans SVG, les formes se déplacent vers le bas.</description>
    </item>
    
    <item>
      <title>Graphiques SVG utilisant D3 js</title>
      <link>https://www.wikiod.com/fr/d3-js/graphiques-svg-utilisant-d3-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/graphiques-svg-utilisant-d3-js/</guid>
      <description>Utilisation de D3 js pour créer des éléments SVG # Bien que D3 ne soit pas spécifique à la gestion des éléments SVG, il est largement utilisé pour créer et manipuler des visualisations de données complexes basées sur SVG. D3 fournit de nombreuses méthodes puissantes qui permettent de créer facilement diverses structures SVG géométriques.
Il est recommandé de comprendre d&amp;rsquo;abord les concepts de base des spécifications SVG, puis d&amp;rsquo;utiliser des exemples complets de D3 js pour créer des visualisations.</description>
    </item>
    
    <item>
      <title>Utiliser D3 avec d&#39;autres frameworks</title>
      <link>https://www.wikiod.com/fr/d3-js/utiliser-d3-avec-dautres-frameworks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/utiliser-d3-avec-dautres-frameworks/</guid>
      <description>D3js avec angulaire # L&amp;rsquo;utilisation de D3js avec Angular peut ouvrir de nouveaux fronts de possibilités telles que la mise à jour en direct des graphiques dès que les données sont mises à jour. Nous pouvons encapsuler la fonctionnalité graphique complète dans une directive angulaire, ce qui la rend facilement réutilisable.
index.html &amp;raquo;
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html ng-app=&amp;quot;myApp&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script data-require=&amp;quot;angular.js@1.4.1&amp;quot; data-semver=&amp;quot;1.4.1&amp;quot; src=&amp;quot;https://code.angularjs.org/1.4.1/angular.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;app.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;bar-chart.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div ng-controller=&amp;quot;MyCtrl&amp;quot;&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>Approches pour créer des graphiques d3.js réactifs</title>
      <link>https://www.wikiod.com/fr/d3-js/approches-pour-creer-des-graphiques-d3js-reactifs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/d3-js/approches-pour-creer-des-graphiques-d3js-reactifs/</guid>
      <description>Syntaxe # var largeur = document.getElementById(&amp;lsquo;chartArea&amp;rsquo;).clientWidth; var hauteur = largeur / 3.236 ; window.onresize = resizeFunctionCall ; Utilisation du bootstrap # Une approche souvent utilisée consiste à utiliser le cadre quadrillé de [bootstrap] [1] afin de définir la zone dans laquelle le graphique existera. En l&amp;rsquo;utilisant conjointement avec la variable [clientWidth][2] et la [ window.onresize][3], il est très facile de créer des SVG d3 réactifs.
Commençons par créer une ligne et une colonne dans lesquelles notre graphique sera intégré.</description>
    </item>
    
  </channel>
</rss>
