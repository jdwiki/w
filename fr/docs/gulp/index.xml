<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel de déglutition on </title>
    <link>https://www.wikiod.com/fr/docs/gulp/</link>
    <description>Recent content in Tutoriel de déglutition on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/gulp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Commencer avec gulp</title>
      <link>https://www.wikiod.com/fr/gulp/commencer-avec-gulp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/commencer-avec-gulp/</guid>
      <description>Dépendance des tâches # Vous pouvez exécuter des tâches en série, en passant un second paramètre à gulp.task().
Ce paramètre est un tableau de tâches à exécuter et à terminer avant que votre tâche ne s&amp;rsquo;exécute :
var gulp = require(&#39;gulp&#39;); gulp.task(&#39;one&#39;, function() { // compile sass css }); gulp.task(&#39;two&#39;, function() { // compile coffeescript }); // task three will execute only after tasks one and two have been completed // note that task one and two run in parallel and order is not guaranteed gulp.</description>
    </item>
    
    <item>
      <title>Afficher les erreurs avec gulp-jslint</title>
      <link>https://www.wikiod.com/fr/gulp/afficher-les-erreurs-avec-gulp-jslint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/afficher-les-erreurs-avec-gulp-jslint/</guid>
      <description>Installation et utilisation # Installation
$ npm install gulp-jslint --save-dev Usage
Dans gulpfile.js, ajoutez :
var gulp = require(&#39;gulp&#39;); var jslint = require(&#39;gulp-jslint&#39;); gulp.task(&#39;lint&#39;, function(){ return gulp.src([&#39;source.js&#39;]) .pipe(jslint({ /* this object represents the JSLint directives being passed down */ })) .pipe(jslint.reporter( &#39;my-reporter&#39; )); }); pour utiliser cette tâche :
$ ./node_modules/gulp/bin/gulp.js lint </description>
    </item>
    
    <item>
      <title>Minification du HTML</title>
      <link>https://www.wikiod.com/fr/gulp/minification-du-html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/minification-du-html/</guid>
      <description>Minifier le HTML en utilisant gulp-htmlmin # Tout d&amp;rsquo;abord, installez gulp et gulp-htmlmin dans le répertoire du projet localement
npm install --save-dev gulp gulp-htmlmin Ajoutez ensuite la tâche minify-html à votre gulpfile.js
var gulp = require(&#39;gulp&#39;); var htmlmin = require(&#39;gulp-htmlmin&#39;); // Task to minify HTML gulp.task(&#39;minify-html&#39;, function() { return gulp.src(&#39;source/*.html&#39;) .pipe(htmlmin()) .pipe(gulp.dest(&#39;public/&#39;)); }); gulp.task(&#39;watch&#39;, function (){ gulp.watch(&#39;source/*.html&#39;, [&#39;minify-html&#39;]); // other tasks }); gulp.task(&#39;default&#39;, [&#39;minify-html&#39;, &#39;watch&#39;]); Cette tâche trouve tous les fichiers dans le répertoire source avec une extension .</description>
    </item>
    
    <item>
      <title>Créer une documentation avec gulp-jsdoc3</title>
      <link>https://www.wikiod.com/fr/gulp/creer-une-documentation-avec-gulp-jsdoc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/creer-une-documentation-avec-gulp-jsdoc3/</guid>
      <description>Installation # Tout d&amp;rsquo;abord, installez gulp et [gulp-jsdoc3][1] sur votre projet :
npm install gulp-jsdoc3 --save-dev Ajoutez-le ensuite à votre gulpfile.js
var gulp = require(&#39;gulp&#39;); var jsdoc = require(&#39;gulp-jsoc3&#39;); gulp.task(&#39;doc&#39;, function (cb){ gulp.src(&#39;src/*.js&#39;) .pipe(jsdoc(cb)); }); Pour documenter, par exemple, une fonction, il faut ajouter un commentaire juste en haut de la fonction, comme ceci :
/** * @function example * @summary This is a short description of example * @author Whoever * @param {any} cb * @returns */ function example(cb){ //Code } Si vous souhaitez en savoir plus sur les balises de bloc à utiliser, veuillez visiter [usejsdoc.</description>
    </item>
    
    <item>
      <title>Minifier JS</title>
      <link>https://www.wikiod.com/fr/gulp/minifier-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/minifier-js/</guid>
      <description>Syntaxe # ext Un objet qui spécifie la source de sortie et les extensions de fichier minifiées. source La chaîne de suffixes des noms de fichiers par lesquels se terminent les fichiers source de sortie. min When string : La chaîne de suffixe des noms de fichiers par lesquels les fichiers de sortie minifiés se terminent. When Array : les expressions régulières à remplacer par les noms de fichiers d&amp;rsquo;entrée. Par exemple : [/.</description>
    </item>
    
    <item>
      <title>Concaténation de fichiers</title>
      <link>https://www.wikiod.com/fr/gulp/concatenation-de-fichiers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/concatenation-de-fichiers/</guid>
      <description>Concat et Uglify JS et fichiers CSS # N&amp;rsquo;oubliez pas d&amp;rsquo;installer npm tous les fichiers dans devDependencies en premier. Par exemple.
npm install --save-dev gulp gulp-concat gulp-rename gulp-uglify gulp-uglifycss Gulpfile.js
var gulp = require(&#39;gulp&#39;); var gulp_concat = require(&#39;gulp-concat&#39;); var gulp_rename = require(&#39;gulp-rename&#39;); var gulp_uglify = require(&#39;gulp-uglify&#39;); var uglifycss = require(&#39;gulp-uglifycss&#39;); var destDir = &#39;./public/assets/dist/&#39;; //or any folder inside your public asset folder var tempDir = &#39;./public/assets/temp/&#39;; //any place where you want to store the concatenated, but unuglified/beautified files //To concat and Uglify All JS files in a particular folder gulp.</description>
    </item>
    
    <item>
      <title>Minification CSS</title>
      <link>https://www.wikiod.com/fr/gulp/minification-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/minification-css/</guid>
      <description>Utiliser gulp-clean-css et gulp-rename # Tout d&amp;rsquo;abord, installez gulp, gulp-clean-css et [gulp-rename](https://www. npmjs.com/package/gulp-rename) dans le répertoire du projet localement
npm install --save-dev gulp gulp-clean-css gulp-rename Ensuite, ajoutez la tâche minify-css suivante à votre gulpfile.js
var gulp = require(&#39;gulp&#39;); var cleanCSS = require(&#39;gulp-clean-css&#39;); var rename = require(&#39;gulp-rename&#39;); gulp.task(&#39;minify-css&#39;, function() { return gulp.src(&#39;css/dist/dist.css&#39;) .pipe(cleanCSS()) .pipe(rename(&#39;dist.min.css&#39;)) .pipe(gulp.dest(&#39;css/dist&#39;)); }); gulp.task(&#39;watch&#39;, function(){ gulp.watch(&#39;css/dist/**/*.css&#39;, [&#39;minify-css&#39;]); // Other watchers }); gulp.task(&#39;default&#39;, [&#39;minify-css&#39;, &#39;watch&#39;]); Ici, .pipe(cleanCSS()) exécute la minification de votre fichier css/dist/dist.</description>
    </item>
    
    <item>
      <title>Créer un observateur</title>
      <link>https://www.wikiod.com/fr/gulp/creer-un-observateur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/creer-un-observateur/</guid>
      <description>Tâche d&amp;rsquo;observation # config.paths.html représente le chemin vers votre fichier HTML.
gulp.task(&amp;quot;watch&amp;quot;, function() { gulp.watch(config.paths.html, [&amp;quot;html&amp;quot;]); }); La tâche doit également être ajoutée par défaut :
gulp.task(&amp;quot;default&amp;quot;, [&amp;quot;html&amp;quot;, &amp;quot;watch&amp;quot;]); </description>
    </item>
    
    <item>
      <title>Guide complet d&#39;automatisation du flux de travail frontal avec Gulpjs -1 sur 2</title>
      <link>https://www.wikiod.com/fr/gulp/guide-complet-dautomatisation-du-flux-de-travail-frontal-avec-gulpjs--1-sur-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/guide-complet-dautomatisation-du-flux-de-travail-frontal-avec-gulpjs--1-sur-2/</guid>
      <description>Syntaxe # npm install [plugin-name] &amp;ndash;save-dev npm install [nom du plugin] &amp;ndash;save Function &amp;lt;function-name&amp;gt; (glob) { $.src(glob).pipe([plugin 1]).pipe([plugin 2])&amp;hellip;.pipe([plugin n]).pipe( $.dest(&amp;lt;destination-name&amp;gt;) } $.task(&amp;lt;nom de la tâche&amp;gt; , [dépendances] , &amp;lt;corps&amp;gt;); [Continuer la lecture - Création d&amp;rsquo;une tâche par défaut et configuration de la synchronisation du navigateur][1]
Références
[Gulp-Clean-Css] [2] [Gulp-Uglify] [3] [Gulp-Autoprefixer - pour les préfixes CSS qui maintiennent la compatibilité du navigateur][4] [Gulp-caché] [5] [Gulp-Remember] [6] [Gulp-Jshint] [7] [Guide étape par étape de l&amp;rsquo;automatisation du flux de travail Gulp pour les débutants absolus que j&amp;rsquo;ai documenté dans mon blog] [8]</description>
    </item>
    
    <item>
      <title>Compression sans perte d&#39;image (avec gulp-imagemin)</title>
      <link>https://www.wikiod.com/fr/gulp/compression-sans-perte-dimage-avec-gulp-imagemin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/gulp/compression-sans-perte-dimage-avec-gulp-imagemin/</guid>
      <description>Syntaxe # imagemin([plugins], {options}) Paramètres # Argumentation Descriptif cheminsource Répertoire source des images (par exemple : /assets/images) buildPath Chemin de destination (par exemple : /static/dist/) Le premier argument du constructeur imagemin est un tableau de plugins. Par défaut, les plugins suivants sont utilisés : [imagemin.gifsicle(), imagemin.jpegtran(), imagemin.optipng(), imagemin.svgo()]
Le deuxième argument sont les options. Dans l&amp;rsquo;exemple ci-dessus, les options suivantes sont utilisées :
{ progressive: true, interlaced: true, svgoPlugins: [{removeUnknownsAndDefaults: false}, {cleanupIDs: false}] } Ceux-ci sont complètement facultatifs.</description>
    </item>
    
  </channel>
</rss>
