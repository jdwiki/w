<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jpa Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/jpa/</link>
    <description>Recent content in jpa Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/jpa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec jpa</title>
      <link>https://www.wikiod.com/fr/jpa/premiers-pas-avec-jpa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/premiers-pas-avec-jpa/</guid>
      <description>Exemple minimal de persistance.xml # Hibernate (et base de données H2 intégrée) # &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;persistence xmlns=&amp;quot;http://java.sun.com/xml/ns/persistence&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_1.xsd&amp;quot; version=&amp;quot;2.1&amp;quot;&amp;gt; &amp;lt;persistence-unit name=&amp;quot;persistenceUnit&amp;quot;&amp;gt; &amp;lt;provider&amp;gt;org.hibernate.ejb.HibernatePersistence&amp;lt;/provider&amp;gt; &amp;lt;class&amp;gt;my.application.entities.MyEntity&amp;lt;/class&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;property name=&amp;quot;javax.persistence.jdbc.driver&amp;quot; value=&amp;quot;org.h2.Driver&amp;quot; /&amp;gt; &amp;lt;property name=&amp;quot;javax.persistence.jdbc.url&amp;quot; value=&amp;quot;jdbc:h2:data/myDB.db&amp;quot; /&amp;gt; &amp;lt;property name=&amp;quot;javax.persistence.jdbc.user&amp;quot; value=&amp;quot;sa&amp;quot; /&amp;gt; &amp;lt;!-- DDL change options --&amp;gt; &amp;lt;property name=&amp;quot;javax.persistence.schema-generation.database.action&amp;quot; value=&amp;quot;drop-and-create&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;hibernate.dialect&amp;quot; value=&amp;quot;org.hibernate.dialect.H2Dialect&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;hibernate.flushMode&amp;quot; value=&amp;quot;FLUSH_AUTO&amp;quot; /&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;/persistence-unit&amp;gt; &amp;lt;/persistence&amp;gt; Eclipselink (et base de données H2 intégrée) # &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;persistence xmlns=&amp;quot;http://java.sun.com/xml/ns/persistence&amp;quot; xmlns:xsi=&amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>Cartographie de base</title>
      <link>https://www.wikiod.com/fr/jpa/cartographie-de-base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/cartographie-de-base/</guid>
      <description>Paramètres # Annotation Détails @Id Marque le champ/la colonne comme clé de l&amp;rsquo;entité @Basique Marque le champ demandé à mapper en tant que type basic. Cela s&amp;rsquo;applique aux types primitifs et à leurs wrappers, String, Date et Calendar. L&amp;rsquo;annotation est en fait facultative si aucun paramètre n&amp;rsquo;est donné, mais un bon style dicterait de rendre vos intentions explicites. @Transient Les champs marqués comme transitoires ne sont pas pris en compte pour la persistance, tout comme le mot-clé &amp;ldquo;transient&amp;rdquo; pour la sérialisation.</description>
    </item>
    
    <item>
      <title>Relation un à plusieurs</title>
      <link>https://www.wikiod.com/fr/jpa/relation-un-a-plusieurs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/relation-un-a-plusieurs/</guid>
      <description>Paramètres # Annotation Objectif @TableGenerator Spécifie le nom du générateur et le nom de la table où le générateur peut être trouvé @GeneratedValue Spécifie la stratégie de génération et fait référence au nom du générateur @ManyToOne Spécifie une relation plusieurs à un entre Employee et Department @OneToMany(mappedBy=&amp;ldquo;département&amp;rdquo;) crée une relation bidirectionnelle entre Employé et Département en se référant simplement à l&amp;rsquo;annotation @ManyToOne dans l&amp;rsquo;entité Employé Relation un à plusieurs # Le mappage un à plusieurs est généralement simplement une relation bidirectionnelle de mappage plusieurs à un.</description>
    </item>
    
    <item>
      <title>Stratégie d&#39;héritage jointe</title>
      <link>https://www.wikiod.com/fr/jpa/strategie-dheritage-jointe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/strategie-dheritage-jointe/</guid>
      <description>Paramètres # Annotation Objectif @Héritage Spécifie le type de stratégie d&amp;rsquo;héritage utilisé @DiscriminatorColumn Spécifie une colonne dans la base de données qui sera utilisée pour identifier différentes entités en fonction de certains identifiants attribués à chaque entité @MappedSuperClass les super classes mappées ne sont pas persistantes et ne sont utilisées que pour conserver l&amp;rsquo;état de ses sous-classes. Les classes Java généralement abstraites sont marquées par @MapperSuperClass Stratégie d&amp;rsquo;héritage joint # Un exemple de diagramme de classes sur la base duquel nous verrons l&amp;rsquo;implémentation de JPA.</description>
    </item>
    
    <item>
      <title>Mappage un à un</title>
      <link>https://www.wikiod.com/fr/jpa/mappage-un-a-un/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/mappage-un-a-un/</guid>
      <description>Paramètres # Annotation Objectif @TableGenerator Spécifie le nom du générateur et le nom de la table où le générateur peut être trouvé @GeneratedValue Spécifie la stratégie de génération et fait référence au nom du générateur @OneToOne Spécifie une relation un à un entre l&amp;rsquo;employé et le bureau, ici l&amp;rsquo;employé est propriétaire de la relation mappedBy Cet élément est fourni au verso de la relation. Cela permet une relation bidirectionnelle Relation One To One entre l&amp;rsquo;employé et le bureau # Envisagez une relation bidirectionnelle un à un entre l&amp;rsquo;employé et le bureau.</description>
    </item>
    
    <item>
      <title>Relations entre entités</title>
      <link>https://www.wikiod.com/fr/jpa/relations-entre-entites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/relations-entre-entites/</guid>
      <description>Bases des relations entre les entités # Une clé étrangère peut être une ou plusieurs colonnes faisant référence à une clé unique, généralement la clé primaire, dans une autre table.
Une clé étrangère et la clé primaire parente à laquelle elle fait référence doivent avoir le même nombre et le même type de champs.
Les clés étrangères représentent les relations entre une ou plusieurs colonnes d&amp;rsquo;une table et une ou plusieurs colonnes d&amp;rsquo;une autre table.</description>
    </item>
    
    <item>
      <title>Mappage plusieurs à plusieurs</title>
      <link>https://www.wikiod.com/fr/jpa/mappage-plusieurs-a-plusieurs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/mappage-plusieurs-a-plusieurs/</guid>
      <description>Un mappage ManyToMany décrit une relation entre des entités où les deux peuvent être liées à plusieurs instances l&amp;rsquo;une de l&amp;rsquo;autre, et est défini par l&amp;rsquo;annotation @ManyToMany.
Contrairement à @OneToMany où une colonne de clé étrangère dans la table de l&amp;rsquo;entité peut être utilisée, ManyToMany nécessite une table de jointure, qui mappe les entités les unes aux autres.
Paramètres # Annotation Objectif @TableGenerator Définit un générateur de clé primaire qui peut être référencé par son nom lorsqu&amp;rsquo;un élément générateur est spécifié pour l&amp;rsquo;annotation GeneratedValue @GeneratedValue Fournit la spécification des stratégies de génération pour les valeurs des clés primaires.</description>
    </item>
    
    <item>
      <title>Tableau par stratégie d&#39;héritage de classe concrète</title>
      <link>https://www.wikiod.com/fr/jpa/tableau-par-strategie-dheritage-de-classe-concrete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/tableau-par-strategie-dheritage-de-classe-concrete/</guid>
      <description>Vehicle, TransportationVehicle et PassengerVehicle sont abstraits classes et ils n&amp;rsquo;auront pas de table séparée dans la base de données. Camion, Voiture et Vélo sont des classes concrètes, elles seront donc mappées à tableaux correspondants. Ces tableaux doivent inclure tous les champs pour classes annotées avec @MappedSuperClass car elles n&amp;rsquo;ont pas tables correspondantes dans la base de données. Ainsi, la table Truck aura des colonnes pour stocker les champs hérités de Véhicule de transport et véhicule.</description>
    </item>
    
    <item>
      <title>Mappage plusieurs à un</title>
      <link>https://www.wikiod.com/fr/jpa/mappage-plusieurs-a-un/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/mappage-plusieurs-a-un/</guid>
      <description>Paramètres # Colonne Colonne @TableGenerator Utilise une stratégie de générateur de table pour la création automatique d&amp;rsquo;identifiants @GeneratedValue Spécifie que la valeur appliquée aux champs est une valeur générée @Identifiant Annote le champ comme identifiant @ManyToOne Spécifie la relation plusieurs à un entre l&amp;rsquo;employé et le service. Cette annotation est marquée sur plusieurs côtés. c&amp;rsquo;est-à-dire que plusieurs employés appartiennent à un même département. Ainsi, Department est annoté avec @ManyToOne dans l&amp;rsquo;entité Employee.</description>
    </item>
    
    <item>
      <title>Stratégie d&#39;héritage de table unique</title>
      <link>https://www.wikiod.com/fr/jpa/strategie-dheritage-de-table-unique/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jpa/strategie-dheritage-de-table-unique/</guid>
      <description>Paramètres # Annotation Objectif @Héritage Spécifie le type de stratégie d&amp;rsquo;héritage utilisé @DiscriminatorColumn Spécifie une colonne dans la base de données qui sera utilisée pour identifier différentes entités en fonction de certains identifiants attribués à chaque entité @MappedSuperClass les super classes mappées ne sont pas persistantes et ne sont utilisées que pour conserver l&amp;rsquo;état de ses sous-classes. Les classes Java généralement abstraites sont marquées par @MapperSuperClass @ValeurDiscriminatrice Une valeur spécifiée dans la colonne définie par @DiscriminatorColumn.</description>
    </item>
    
  </channel>
</rss>
