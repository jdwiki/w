<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel html5-toile on </title>
    <link>https://www.wikiod.com/fr/docs/html5-canvas/</link>
    <description>Recent content in Tutoriel html5-toile on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/html5-canvas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec html5-canvas</title>
      <link>https://www.wikiod.com/fr/html5-canvas/premiers-pas-avec-html5-canvas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/premiers-pas-avec-html5-canvas/</guid>
      <description>Détection de la position de la souris sur le canevas # Cet exemple montre comment obtenir la position de la souris par rapport au canevas, de sorte que (0,0) sera le coin supérieur gauche du canevas HTML5. Le e.clientX et e.clientY obtiendront les positions de la souris par rapport au haut du document, pour changer cela pour qu&amp;rsquo;il soit basé sur le haut du canevas, nous soustrayons les positions gauche et droite du canevas du client X et Y.</description>
    </item>
    
    <item>
      <title>Animation</title>
      <link>https://www.wikiod.com/fr/html5-canvas/animation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/animation/</guid>
      <description>Utilisez requestAnimationFrame() PAS setInterval() pour les boucles d&amp;rsquo;animation # requestAnimationFrame est similaire à setInterval, mais présente ces améliorations importantes :
Le code d&amp;rsquo;animation est synchronisé avec les rafraîchissements d&amp;rsquo;affichage pour plus d&amp;rsquo;efficacité. Le code clair + redessiner est programmé, mais pas immédiatement exécuté. Le navigateur exécutera le code effacer + redessiner uniquement lorsque l&amp;rsquo;affichage est prêt à être actualisé. Cette synchronisation avec le cycle d&amp;rsquo;actualisation augmente les performances de votre animation en donnant à votre code le temps le plus disponible pour se terminer.</description>
    </item>
    
    <item>
      <title>Manipulation de pixels avec getImageData et putImageData</title>
      <link>https://www.wikiod.com/fr/html5-canvas/manipulation-de-pixels-avec-getimagedata-et-putimagedata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/manipulation-de-pixels-avec-getimagedata-et-putimagedata/</guid>
      <description>Introduction à &amp;ldquo;context.getImageData&amp;rdquo; # Html5 Canvas vous donne la possibilité de récupérer et de modifier la couleur de n&amp;rsquo;importe quel pixel sur le canevas.
Vous pouvez utiliser la manipulation de pixels de Canvas pour :
Créez un sélecteur de couleurs pour une image ou sélectionnez une couleur sur une roue chromatique. Créez des filtres d&amp;rsquo;image complexes comme le flou et la détection des contours. Recolorez n&amp;rsquo;importe quelle partie d&amp;rsquo;une image au niveau du pixel (si vous utilisez HSL, vous pouvez même recolorer une image tout en conservant l&amp;rsquo;éclairage et la saturation importants afin que le résultat ne ressemble pas à quelqu&amp;rsquo;un qui a giflé de la peinture sur l&amp;rsquo;image).</description>
    </item>
    
    <item>
      <title>Conception réactive</title>
      <link>https://www.wikiod.com/fr/html5-canvas/conception-reactive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/conception-reactive/</guid>
      <description>Création d&amp;rsquo;un canevas pleine page responsive # Code de démarrage pour créer et supprimer un canevas pleine page qui répond aux événements de redimensionnement via javascript.
var canvas; // Global canvas reference var ctx; // Global 2D context reference // Creates a canvas function createCanvas () { const canvas = document.createElement(&amp;quot;canvas&amp;quot;); canvas.style.position = &amp;quot;absolute&amp;quot;; // Set the style canvas.style.left = &amp;quot;0px&amp;quot;; // Position in top left canvas.style.top = &amp;quot;0px&amp;quot;; canvas.style.zIndex = 1; document.</description>
    </item>
    
    <item>
      <title>Les types de médias et le canevas</title>
      <link>https://www.wikiod.com/fr/html5-canvas/les-types-de-medias-et-le-canevas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/les-types-de-medias-et-le-canevas/</guid>
      <description>Ce sujet est de couvrir les différents types de médias et comment ils peuvent être utilisés avec le canevas dans l&amp;rsquo;interface 2D.
Les types de médias ont des catégories génériques et spécifiques au format
Types de médias
Animations Vidéos Images -Images HD Image vectorielle Images animées Formats multimédias
Jpg/Jpeg png GIF -SVG -M-JPEG Webm Webp Images
Il existe une grande variété de formats d&amp;rsquo;image pris en charge par les navigateurs, bien qu&amp;rsquo;aucun navigateur ne les prenne tous en charge.</description>
    </item>
    
    <item>
      <title>Composition</title>
      <link>https://www.wikiod.com/fr/html5-canvas/composition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/composition/</guid>
      <description>Dessinez derrière les formes existantes avec &amp;ldquo;destination-over&amp;rdquo; # context.globalCompositeOperation = &amp;quot;destination-over&amp;quot; La composition &amp;ldquo;destination-over&amp;rdquo; place le nouveau dessin sous les dessins existants.
context.drawImage(rainy,0,0); context.globalCompositeOperation=&#39;destination-over&#39;; // sunny UNDER rainy context.drawImage(sunny,0,0); [![entrez la description de l&amp;rsquo;image ici][2]][2]
[1] : http://i.stack.imgur.com/tx092.png [2] : http://i.stack.imgur.com/fMvyX.png
Effacer les formes existantes avec &amp;ldquo;destination-out&amp;rdquo; # context.globalCompositeOperation = &amp;quot;destination-out&amp;quot; la composition &amp;ldquo;destination-out&amp;rdquo; utilise de nouvelles formes pour effacer les dessins existants.
La nouvelle forme n&amp;rsquo;est pas réellement dessinée - elle est simplement utilisée comme &amp;ldquo;emporte-pièce&amp;rdquo; pour effacer les pixels existants.</description>
    </item>
    
    <item>
      <title>Images</title>
      <link>https://www.wikiod.com/fr/html5-canvas/images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/images/</guid>
      <description>Recadrage d&amp;rsquo;image à l&amp;rsquo;aide de canvas # Cet exemple montre une fonction de recadrage d&amp;rsquo;image simple qui prend une image et des coordonnées de recadrage et renvoie l&amp;rsquo;image recadrée.
function cropImage(image, croppingCoords) { var cc = croppingCoords; var workCan = document.createElement(&amp;quot;canvas&amp;quot;); // create a canvas workCan.width = Math.floor(cc.width); // set the canvas resolution to the cropped image size workCan.height = Math.floor(cc.height); var ctx = workCan.getContext(&amp;quot;2d&amp;quot;); // get a 2D rendering interface ctx.</description>
    </item>
    
    <item>
      <title>Texte</title>
      <link>https://www.wikiod.com/fr/html5-canvas/texte/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/texte/</guid>
      <description>Dessiner du texte # Dessiner sur toile ne se limite pas aux formes et aux images. Vous pouvez également dessiner du texte sur le canevas.
Pour dessiner du texte sur le canevas, obtenez une référence au canevas, puis appelez la méthode &amp;ldquo;fillText&amp;rdquo; sur le contexte.
var canvas = document.getElementById(&#39;canvas&#39;); var ctx = canvas.getContext(&#39;2d&#39;); ctx.fillText(&amp;quot;My text&amp;quot;, 0, 0); Les trois arguments obligatoires transmis à fillText sont :
Le texte que vous souhaitez afficher La position horizontale (axe x) La position verticale (axe y) De plus, il existe un quatrième argument facultatif, que vous pouvez utiliser pour spécifier la largeur maximale de votre texte en pixels.</description>
    </item>
    
    <item>
      <title>Naviguer le long d&#39;un chemin</title>
      <link>https://www.wikiod.com/fr/html5-canvas/naviguer-le-long-dun-chemin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/naviguer-le-long-dun-chemin/</guid>
      <description>Trouver un point sur la courbe # Cet exemple trouve un point sur une courbe de Bézier ou cubique à position où position est l&amp;rsquo;unité de distance sur la courbe 0 &amp;lt;= position &amp;lt;= 1. La position est fixée à la plage donc si les valeurs &amp;lt; 0 ou &amp;gt; 1 sont passés, ils seront mis à 0,1 respectivement.
Passez la fonction 6 coordonnées pour Bézier quadratique ou 8 pour cubique.</description>
    </item>
    
    <item>
      <title>Collisions et intersections</title>
      <link>https://www.wikiod.com/fr/html5-canvas/collisions-et-intersections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/html5-canvas/collisions-et-intersections/</guid>
      <description>Est-ce que 2 cercles entrent en collision ? # // circle objects: { x:, y:, radius: } // return true if the 2 circles are colliding // c1 and c2 are circles as defined above function CirclesColliding(c1,c2){ var dx=c2.x-c1.x; var dy=c2.y-c1.y; var rSum=c1.radius+c2.radius; return(dx*dx+dy*dy&amp;lt;=rSum*rSum); } Est-ce que 2 rectangles entrent en collision ? # // rectangle objects { x:, y:, width:, height: } // return true if the 2 rectangles are colliding // r1 and r2 are rectangles as defined above function RectsColliding(r1,r2){ return !</description>
    </item>
    
  </channel>
</rss>
