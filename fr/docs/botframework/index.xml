<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel botframework on </title>
    <link>https://www.wikiod.com/fr/docs/botframework/</link>
    <description>Recent content in Tutoriel botframework on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/botframework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec botframework</title>
      <link>https://www.wikiod.com/fr/botframework/premiers-pas-avec-botframework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/botframework/premiers-pas-avec-botframework/</guid>
      <description>Installation ou configuration # C#
Visual Studio 2015 (dernière mise à jour) - vous pouvez télécharger gratuitement la version communautaire ici : [www.VisualStudio.com][1]
Important : mettre à jour toutes les extensions VS vers leurs dernières versions Tools-&amp;gt;Extensions and Updates-&amp;gt;Updates
Téléchargez le modèle d&amp;rsquo;application Bot à partir d&amp;rsquo;ici : [Template Download][2] Enregistrez le fichier zip dans votre répertoire de modèles Visual Studio 2015, qui se trouve traditionnellement dans &amp;ldquo;%USERPROFILE%\Documents\Visual Studio 2015\Templates\ProjectTemplates \Visual C#&amp;quot; Remarque : vous devrez redémarrer Visual Studio après cette étape, afin d&amp;rsquo;utiliser le modèle.</description>
    </item>
    
    <item>
      <title>Premiers pas avec les services QnA</title>
      <link>https://www.wikiod.com/fr/botframework/premiers-pas-avec-les-services-qna/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/botframework/premiers-pas-avec-les-services-qna/</guid>
      <description>Le QnA Maker est un service Web et API REST gratuit et facile à utiliser qui forme l&amp;rsquo;IA à répondre aux questions des utilisateurs de manière plus naturelle et conversationnelle. Grâce à une logique d&amp;rsquo;apprentissage automatique optimisée et à la capacité d&amp;rsquo;intégrer un traitement du langage de pointe, QnA Maker distille des données semi-structurées telles que des paires de questions et de réponses en réponses distinctes et utiles.
Création manuelle de notre propre service QnA # En fournissant les informations d&amp;rsquo;identification de votre compte Microsoft, vous pouvez vous authentifier et recevoir des clés d&amp;rsquo;abonnement pour commencer avec les services.</description>
    </item>
    
    <item>
      <title>Premiers pas avec Azure Bot Service</title>
      <link>https://www.wikiod.com/fr/botframework/premiers-pas-avec-azure-bot-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/botframework/premiers-pas-avec-azure-bot-service/</guid>
      <description>Azure Bot Service fournit un environnement intégré spécialement conçu pour le développement de bots, vous permettant de créer, connecter, tester, déployer et gérer des bots intelligents, le tout à partir d&amp;rsquo;un seul endroit. Vous pouvez écrire votre bot en C# ou Node.js directement dans le navigateur à l&amp;rsquo;aide de l&amp;rsquo;éditeur Azure, sans avoir besoin d&amp;rsquo;une chaîne d&amp;rsquo;outils. Vous pouvez également augmenter la valeur de vos robots avec quelques lignes de code en vous connectant à Cognitive Services pour permettre à vos robots de voir, d&amp;rsquo;entendre, d&amp;rsquo;interpréter et d&amp;rsquo;interagir de manière plus humaine.</description>
    </item>
    
    <item>
      <title>Ajout du traitement du langage naturel</title>
      <link>https://www.wikiod.com/fr/botframework/ajout-du-traitement-du-langage-naturel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/botframework/ajout-du-traitement-du-langage-naturel/</guid>
      <description>Bot Framework prend en charge les &amp;ldquo;Recognizers&amp;rdquo;. Un module de reconnaissance est utilisé pour reconnaître ce qu&amp;rsquo;il faut faire chaque fois qu&amp;rsquo;un utilisateur envoie un message au bot. Par conséquent, vous pouvez concevoir votre bot pour qu&amp;rsquo;il reconnaisse les intentions en fonction de l&amp;rsquo;entrée de l&amp;rsquo;utilisateur. Le module de reconnaissance peut être utilisé avec l&amp;rsquo;API LUIS afin d&amp;rsquo;ajouter une compréhension du langage naturel pour le bot.
Syntaxe # var recognizer = new builder.</description>
    </item>
    
  </channel>
</rss>
