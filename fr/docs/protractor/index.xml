<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rapporteur Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/protractor/</link>
    <description>Recent content in rapporteur Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/protractor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec le rapporteur</title>
      <link>https://www.wikiod.com/fr/protractor/premiers-pas-avec-le-rapporteur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/premiers-pas-avec-le-rapporteur/</guid>
      <description>Installation et configuration du rapporteur (sous Windows) # Exigences : Protractor nécessite l&amp;rsquo;installation des dépendances suivantes avant l&amp;rsquo;installation :
-Java JDK 1.7 ou supérieur
Node.js v4 ou supérieur Installation: Téléchargez et installez Node.js à partir de cette URL : https://nodejs.org/en/
Pour voir si l&amp;rsquo;installation de Node.js est réussie, vous pouvez aller vérifier les variables d&amp;rsquo;environnement. Le &amp;lsquo;Chemin&amp;rsquo; sous Variables système sera automatiquement mis à jour.
[![Variable de chemin pour vérifier l&amp;rsquo;installation de Node.</description>
    </item>
    
    <item>
      <title>Sélecteurs CSS</title>
      <link>https://www.wikiod.com/fr/protractor/selecteurs-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/selecteurs-css/</guid>
      <description>Syntaxe # by.css(&amp;lsquo;css-selector&amp;rsquo;) par.id(&amp;lsquo;id&amp;rsquo;) by.model(&amp;lsquo;modèle&amp;rsquo;) by.binding(&amp;lsquo;binding&amp;rsquo;) Paramètres # Paramètre Détails css-sélecteur Un sélecteur css comme &#39;.class-name&#39; pour sélectionner l&amp;rsquo;élément sur la base du nom de la classe identifiant Id de l&amp;rsquo;élément dom model Modèle utilisé pour l&amp;rsquo;élément dom liaison Nom de la liaison qui est utilisée pour lier à certain élément Comment écrire des sélecteurs CSS ?
Les attributs les plus importants pour écrire des sélecteurs CSS sont la classe et l&amp;rsquo;identifiant de dom.</description>
    </item>
    
    <item>
      <title>Sélecteurs XPath dans Protractor</title>
      <link>https://www.wikiod.com/fr/protractor/selecteurs-xpath-dans-protractor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/selecteurs-xpath-dans-protractor/</guid>
      <description>Sélection d&amp;rsquo;un élément DOM à l&amp;rsquo;aide du rapporteur # Outre les sélecteurs CSS, de modèle et de liaison, le rapporteur peut également localiser des éléments à l&amp;rsquo;aide de xpath Voir
&amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&#39;http://www.google.com&#39;&amp;gt;Go to google&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; Code
var googleLink= element(by.xpath(&#39;//ul/li/a&#39;)); expect(element.getText()).to.eventually.equal(&#39;Go to google&#39;,&#39;The text you mention was not found&#39;); Sélection d&amp;rsquo;éléments avec des attributs spécifiques # Les sélecteurs XPath peuvent être utilisés pour sélectionner des éléments avec des attributs spécifiques, tels que la classe, l&amp;rsquo;identifiant, le titre, etc.</description>
    </item>
    
    <item>
      <title>Attentes explicites avec browser.wait()</title>
      <link>https://www.wikiod.com/fr/protractor/attentes-explicites-avec-browserwait/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/attentes-explicites-avec-browserwait/</guid>
      <description>browser.sleep() vs browser.wait() # Lorsqu&amp;rsquo;il s&amp;rsquo;agit de traiter le problème de synchronisation, il est tentant et facile de mettre un &amp;ldquo;browser.sleep(&amp;lt;timeout_in_milliseconds&amp;gt;)&amp;rdquo; &amp;ldquo;rapide&amp;rdquo; et de passer à autre chose.
Le problème est qu&amp;rsquo;il échouerait un jour. Il n&amp;rsquo;y a pas de règle d&amp;rsquo;or / générique sur le délai de mise en veille à définir et, par conséquent, à un moment donné en raison de problèmes de réseau ou de performances ou d&amp;rsquo;autres problèmes, il peut prendre plus de temps pour qu&amp;rsquo;une page se charge ou qu&amp;rsquo;un élément devienne visible, etc.</description>
    </item>
    
    <item>
      <title>Débogueur de rapporteur</title>
      <link>https://www.wikiod.com/fr/protractor/debogueur-de-rapporteur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/debogueur-de-rapporteur/</guid>
      <description>Syntaxe # navigateur.pause() navigateur.debugger() Cette section explique comment nous pouvons déboguer les tests de rapporteur.
Utilisation du navigateur.pause() # La méthode pause() est l&amp;rsquo;une des solutions les plus simples que Protractor vous propose pour déboguer le code. Pour l&amp;rsquo;utiliser, vous devez l&amp;rsquo;ajouter dans votre code à l&amp;rsquo;endroit où vous souhaitez suspendre l&amp;rsquo;exécution. Une fois l&amp;rsquo;exécution en pause :
Vous pouvez utiliser C (type C) pour avancer. Soyez prudent lorsque vous l&amp;rsquo;utilisez, vous devez écrire cette commande sans délai car vous pourriez obtenir une erreur de délai d&amp;rsquo;attente de votre bibliothèque d&amp;rsquo;assertions si vous avez retardé pour appuyer sur c.</description>
    </item>
    
    <item>
      <title>Fichier de configuration du rapporteur</title>
      <link>https://www.wikiod.com/fr/protractor/fichier-de-configuration-du-rapporteur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/fichier-de-configuration-du-rapporteur/</guid>
      <description>Le fichier de configuration contient des informations que Protractor utilise pour exécuter votre script de test. Ici, je vais essayer de donner quelques variantes différentes.
Fichier de configuration simple - Chrome # var config = {}; var timeout = 120000; config.framework = &#39;jasmine2&#39;; config.allScriptsTimeout = timeout; config.getPageTimeout = timeout; config.jasmineNodeOpts.isVerbose = true; config.jasmineNodeOpts.defaultTimeoutInterval = timeout; config.specs = [&#39;qa/**/*Spec.js&#39;]; config.browserName = &#39;chrome&#39;; exports.config = config; Fichier de configuration avec fonctionnalités - Chrome # var config = {}; var timeout = 120000; config.</description>
    </item>
    
    <item>
      <title>Tester des applications non angulaires avec Protractor</title>
      <link>https://www.wikiod.com/fr/protractor/tester-des-applications-non-angulaires-avec-protractor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/tester-des-applications-non-angulaires-avec-protractor/</guid>
      <description>Protractor est conçu pour tester les applications angulaires. Cependant, il est toujours possible de tester des applications non angulaires avec Protractor si nécessaire.
Modifications nécessaires pour tester l&amp;rsquo;application non angulaire avec Protractor # Utilisez browser.driver au lieu de driver
Utilisez browser.driver.ignoreSynchronization = true
Raison : Protractor attend que les composants angulaires se chargent complètement sur une page Web avant de commencer toute exécution. Cependant, comme nos pages ne sont pas angulaires, Protractor continue d&amp;rsquo;attendre que &amp;lsquo;angular&amp;rsquo; se charge jusqu&amp;rsquo;à ce que le test échoue avec le délai d&amp;rsquo;attente.</description>
    </item>
    
    <item>
      <title>Flux de contrôle et promesses</title>
      <link>https://www.wikiod.com/fr/protractor/flux-de-controle-et-promesses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/flux-de-controle-et-promesses/</guid>
      <description>Protractor/WebDriverJS a ce mécanisme appelé Control Flow - c&amp;rsquo;est une file d&amp;rsquo;attente interne de promesses, il maintient l&amp;rsquo;exécution du code organisée.
Comprendre le flux de contrôle # Considérez le test suivant :
it(&#39;should test something&#39;, function() { browser.get(&#39;/dashboard/&#39;); $(&amp;quot;#myid&amp;quot;).click(); expect(element(by.model(&#39;username&#39;)).getText()).toEqual(&#39;Test&#39;); console.log(&amp;quot;HERE&amp;quot;); }); Dans le test suivant, lorsque console.log() est exécuté et que vous voyez HERE sur la console, aucune des commandes Protractor des lignes précédentes n&amp;rsquo;a été exécutée. Il s&amp;rsquo;agit d&amp;rsquo;un comportement entièrement asynchrone.</description>
    </item>
    
    <item>
      <title>Objets de page</title>
      <link>https://www.wikiod.com/fr/protractor/objets-de-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/objets-de-page/</guid>
      <description>Les objets de page sont un modèle de conception qui se traduit par moins de doublons de code, une maintenance facile et plus de lisibilité.
Objet de la première page # /* save the file in &#39;pages/loginPage&#39; var LoginPage = function(){ }; /*Application object properties*/ LoginPage.prototype = Object.create({}, { userName: { get: function() { return browser.driver.findElement(By.id(&#39;userid&#39;)); } }, userPass: { get: function() { return browser.driver.findElement(By.id(&#39;password&#39;)); } }, submitBtn: { get: function() { return browser.</description>
    </item>
    
    <item>
      <title>Localisation des éléments</title>
      <link>https://www.wikiod.com/fr/protractor/localisation-des-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/protractor/localisation-des-elements/</guid>
      <description>Pour pouvoir interagir avec une page, vous devez indiquer à Protractor exactement quel élément rechercher. La base utilisée pour sélectionner les éléments sont les localisateurs. Protractor, en plus d&amp;rsquo;inclure les sélecteurs génériques Selenium, possède également des localisateurs spécifiques à Angular qui sont plus robustes et persistants aux changements. Cependant, parfois, même dans une application Angular, des localisateurs réguliers doivent être utilisés.
Paramètres # Paramètre Détail sélecteur Une chaîne qui spécifie la valeur du sélecteur (dépend du localisateur) Localisateurs spécifiques au rapporteur (pour les applications basées sur Angular) # Ces localisateurs doivent être utilisés en priorité lorsque cela est possible, car ils sont plus persistants face aux modifications d&amp;rsquo;une application que les localisateurs basés sur css ou xpath, qui peuvent facilement se casser.</description>
    </item>
    
  </channel>
</rss>
