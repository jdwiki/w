<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>composer-php Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/composer-php/</link>
    <description>Recent content in composer-php Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/composer-php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec composer-php</title>
      <link>https://www.wikiod.com/fr/composer-php/premiers-pas-avec-composer-php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/composer-php/premiers-pas-avec-composer-php/</guid>
      <description>Installer Composer sur Ubuntu # Avant de télécharger et d&amp;rsquo;installer Composer, nous devons nous assurer que toutes les dépendances sont installées sur notre serveur.
Tout d&amp;rsquo;abord, mettez à jour le cache du gestionnaire de packages en exécutant :
sudo apt-get update Maintenant, installons les dépendances. Nous aurons besoin de curl pour télécharger Composer et de php5-cli pour l&amp;rsquo;installer et l&amp;rsquo;exécuter. git est utilisé par Composer pour télécharger les dépendances du projet.</description>
    </item>
    
    <item>
      <title>Chargement automatique avec composer</title>
      <link>https://www.wikiod.com/fr/composer-php/chargement-automatique-avec-composer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/composer-php/chargement-automatique-avec-composer/</guid>
      <description>Chargement automatique # Pour les bibliothèques qui spécifient des informations de chargement automatique, Composer génère un fichier vendor/autoload.php. Vous pouvez simplement inclure ce fichier et vous obtiendrez un chargement automatique gratuit.
require __DIR__ . &#39;/vendor/autoload.php&#39;; Cela rend très facile l&amp;rsquo;utilisation de code tiers. Par exemple : si votre projet dépend de Monolog, vous pouvez simplement commencer à utiliser les classes de celui-ci, et elles seront automatiquement chargées.
$log = new Monolog\Logger(&#39;name&#39;); $log-&amp;gt;pushHandler(new Monolog\Handler\StreamHandler(&#39;app.</description>
    </item>
    
    <item>
      <title>Comment utiliser les référentiels privés avec Composer</title>
      <link>https://www.wikiod.com/fr/composer-php/comment-utiliser-les-referentiels-prives-avec-composer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/composer-php/comment-utiliser-les-referentiels-prives-avec-composer/</guid>
      <description>Paramètres # Paramètres Détails dépôts Indique à Composer où il peut télécharger les packages requis. tapez : vcs Indique à Composer comment traiter le référentiel. URL : http://&amp;hellip; Indique à Composer où se trouve le référentiel. Utilisez la syntaxe type : &amp;quot;vcs&amp;quot; pour [utiliser des référentiels privés][1].
Pour gérer l&amp;rsquo;accès au référentiel privé lors du développement sur une machine locale, utilisez un fichier [auth.json][2] et ne le validez pas dans le référentiel de votre projet.</description>
    </item>
    
  </channel>
</rss>
