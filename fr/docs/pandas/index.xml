<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pandas Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/pandas/</link>
    <description>Recent content in pandas Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/pandas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec les pandas</title>
      <link>https://www.wikiod.com/fr/pandas/debuter-avec-les-pandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/debuter-avec-les-pandas/</guid>
      <description>Installation ou configuration # Des instructions détaillées sur la configuration ou l&amp;rsquo;installation des pandas peuvent être trouvées [ici dans la documentation officielle][1].
Installer des pandas avec Anaconda
L&amp;rsquo;installation de pandas et du reste de la pile [NumPy][2] et [SciPy][3] peut être un peu difficile pour les utilisateurs inexpérimentés.
Le moyen le plus simple d&amp;rsquo;installer non seulement des pandas, mais aussi Python et les packages les plus populaires qui composent la pile SciPy (IPython, NumPy, Matplotlib, &amp;hellip;) est avec [Anaconda][4], une plateforme multiplateforme (Linux, Mac OS X, Windows) Distribution Python pour l&amp;rsquo;analyse de données et le calcul scientifique.</description>
    </item>
    
    <item>
      <title>Enregistrer la trame de données pandas dans un fichier csv</title>
      <link>https://www.wikiod.com/fr/pandas/enregistrer-la-trame-de-donnees-pandas-dans-un-fichier-csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/enregistrer-la-trame-de-donnees-pandas-dans-un-fichier-csv/</guid>
      <description>Paramètres # Paramètre Descriptif chemin_ou_buf chaîne ou descripteur de fichier, par défaut Aucun Chemin de fichier ou objet, si Aucun est fourni, le résultat est renvoyé sous forme de chaîne. sep caractère, par défaut &amp;lsquo;,&amp;rsquo; Délimiteur de champ pour le fichier de sortie. na_rep chaîne, par défaut &amp;rsquo;&amp;rsquo; Représentation des données manquantes float_format chaîne, par défaut Aucune Chaîne de format pour les nombres à virgule flottante colonnes séquence, Colonnes facultatives à écrire en-tête booléen ou liste de chaînes, valeur par défaut True Écrire les noms de colonne.</description>
    </item>
    
    <item>
      <title>Lecteur de données Pandas</title>
      <link>https://www.wikiod.com/fr/pandas/lecteur-de-donnees-pandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/lecteur-de-donnees-pandas/</guid>
      <description>Le lecteur de données Pandas est un sous-paquet qui permet de créer une trame de données à partir de diverses sources de données Internet, comprenant actuellement :
-Yahoo! Finance
Google Finances FED de Saint-Louis (FRED) La bibliothèque de données de Kenneth French Banque mondiale Google Analytics Pour plus d&amp;rsquo;informations, [voir ici][1].
[1] : http://pandas.pydata.org/pandas-docs/stable/remote_data.html#remote-data-access
Exemple de base de lecteur de données (Yahoo Finance) # from pandas_datareader import data # Only get the adjusted close.</description>
    </item>
    
    <item>
      <title>Créer des DataFrames</title>
      <link>https://www.wikiod.com/fr/pandas/creer-des-dataframes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/creer-des-dataframes/</guid>
      <description>DataFrame est une structure de données fournie par la bibliothèque pandas, à l&amp;rsquo;exception de Series et Panel. Il s&amp;rsquo;agit d&amp;rsquo;une structure bidimensionnelle et peut être comparée à un tableau de lignes et de colonnes.
Chaque ligne peut être identifiée par un index entier (0..N) ou une étiquette explicitement définie lors de la création d&amp;rsquo;un objet DataFrame. Chaque colonne peut être de type distinct et est identifiée par une étiquette.
Cette rubrique couvre différentes manières de construire/créer un objet DataFrame.</description>
    </item>
    
    <item>
      <title>Regroupement de données</title>
      <link>https://www.wikiod.com/fr/pandas/regroupement-de-donnees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/regroupement-de-donnees/</guid>
      <description>Agrégation par taille versus par nombre # La différence entre size et count est :
size compte NaN valeurs, count ne .
df = pd.DataFrame( {&amp;quot;Name&amp;quot;:[&amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Mallory&amp;quot;, &amp;quot;Mallory&amp;quot;, &amp;quot;Bob&amp;quot; , &amp;quot;Mallory&amp;quot;], &amp;quot;City&amp;quot;:[&amp;quot;Seattle&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Portland&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Portland&amp;quot;], &amp;quot;Val&amp;quot;: [4, 3, 3, np.nan, np.nan, 4]}) df # Output: # City Name Val # 0 Seattle Alice 4.0 # 1 Seattle Bob 3.0 # 2 Portland Mallory 3.0 # 3 Seattle Mallory NaN # 4 Seattle Bob NaN # 5 Portland Mallory 4.</description>
    </item>
    
    <item>
      <title>Calendriers de vacances</title>
      <link>https://www.wikiod.com/fr/pandas/calendriers-de-vacances/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/calendriers-de-vacances/</guid>
      <description>Créer un calendrier personnalisé # Voici comment créer un calendrier personnalisé. L&amp;rsquo;exemple donné est un calendrier français &amp;ndash; il fournit donc de nombreux exemples.
from pandas.tseries.holiday import AbstractHolidayCalendar, Holiday, EasterMonday, Easter from pandas.tseries.offsets import Day, CustomBusinessDay class FrBusinessCalendar(AbstractHolidayCalendar): &amp;quot;&amp;quot;&amp;quot; Custom Holiday calendar for France based on https://en.wikipedia.org/wiki/Public_holidays_in_France - 1 January: New Year&#39;s Day - Moveable: Easter Monday (Monday after Easter Sunday) - 1 May: Labour Day - 8 May: Victory in Europe Day - Moveable Ascension Day (Thursday, 39 days after Easter Sunday) - 14 July: Bastille Day - 15 August: Assumption of Mary to Heaven - 1 November: All Saints&#39; Day - 11 November: Armistice Day - 25 December: Christmas Day &amp;quot;&amp;quot;&amp;quot; rules = [ Holiday(&#39;New Years Day&#39;, month=1, day=1), EasterMonday, Holiday(&#39;Labour Day&#39;, month=5, day=1), Holiday(&#39;Victory in Europe Day&#39;, month=5, day=8), Holiday(&#39;Ascension Day&#39;, month=1, day=1, offset=[Easter(), Day(39)]), Holiday(&#39;Bastille Day&#39;, month=7, day=14), Holiday(&#39;Assumption of Mary to Heaven&#39;, month=8, day=15), Holiday(&#39;All Saints Day&#39;, month=11, day=1), Holiday(&#39;Armistice Day&#39;, month=11, day=11), Holiday(&#39;Christmas Day&#39;, month=12, day=25) ] Utiliser un calendrier personnalisé # Voici comment utiliser le calendrier personnalisé.</description>
    </item>
    
    <item>
      <title>Lire SQL Server dans Dataframe</title>
      <link>https://www.wikiod.com/fr/pandas/lire-sql-server-dans-dataframe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/lire-sql-server-dans-dataframe/</guid>
      <description>Utilisation de pyodbc # import pandas.io.sql import pyodbc import pandas as pd Spécifiez les paramètres
# Parameters server = &#39;server_name&#39; db = &#39;database_name&#39; UID = &#39;user_id&#39; Créer la connexion
# Create the connection conn = pyodbc.connect(&#39;DRIVER={SQL Server};SERVER=&#39; + server + &#39;;DATABASE=&#39; + db + &#39;; UID = &#39; + UID + &#39;; PWD = &#39; + UID + &#39;Trusted_Connection=yes&#39;) Requête dans la trame de données pandas
# Query into dataframe df= pandas.</description>
    </item>
    
    <item>
      <title>Obtenir des informations sur les DataFrames</title>
      <link>https://www.wikiod.com/fr/pandas/obtenir-des-informations-sur-les-dataframes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/obtenir-des-informations-sur-les-dataframes/</guid>
      <description>Obtenir des informations DataFrame et l&amp;rsquo;utilisation de la mémoire # Pour obtenir des informations de base sur un DataFrame, y compris les noms de colonne et les types de données :
import pandas as pd df = pd.DataFrame({&#39;integers&#39;: [1, 2, 3], &#39;floats&#39;: [1.5, 2.5, 3], &#39;text&#39;: [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], &#39;ints with None&#39;: [1, None, 3]}) df.info() &amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt; Int64Index: 3 entries, 0 to 2 Data columns (total 4 columns): floats 3 non-null float64 integers 3 non-null int64 ints with None 2 non-null float64 text 3 non-null object dtypes: float64(2), int64(1), object(1) memory usage: 120.</description>
    </item>
    
    <item>
      <title>Indexation et sélection des données</title>
      <link>https://www.wikiod.com/fr/pandas/indexation-et-selection-des-donnees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/indexation-et-selection-des-donnees/</guid>
      <description>Tranchage dépendant du chemin # Il peut devenir nécessaire de parcourir les éléments d&amp;rsquo;une série ou les lignes d&amp;rsquo;une trame de données de manière à ce que l&amp;rsquo;élément suivant ou la ligne suivante dépende de l&amp;rsquo;élément ou de la ligne précédemment sélectionné(e). C&amp;rsquo;est ce qu&amp;rsquo;on appelle la dépendance au chemin.
Considérons les séries chronologiques suivantes &amp;ldquo;s&amp;rdquo; avec une fréquence irrégulière.
#starting python community conventions import numpy as np import pandas as pd # n is number of observations n = 5000 day = pd.</description>
    </item>
    
    <item>
      <title>Les ratés des pandas</title>
      <link>https://www.wikiod.com/fr/pandas/les-rates-des-pandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/pandas/les-rates-des-pandas/</guid>
      <description>Gotcha en général est une construction bien documentée, mais pas intuitive. Les pièges produisent une sortie qui n&amp;rsquo;est normalement pas attendue en raison de son caractère contre-intuitif.
Le paquet Pandas a plusieurs pièges, qui peuvent dérouter quelqu&amp;rsquo;un qui n&amp;rsquo;en est pas conscient, et certains d&amp;rsquo;entre eux sont présentés sur cette page de documentation.
Détection des valeurs manquantes avec np.nan # Si vous voulez détecter les manquants avec
df=pd.DataFrame({&#39;col&#39;:[1,np.nan]}) df==np.nan vous obtiendrez le résultat suivant :</description>
    </item>
    
  </channel>
</rss>
