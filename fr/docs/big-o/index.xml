<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel big-o on </title>
    <link>https://www.wikiod.com/fr/docs/big-o/</link>
    <description>Recent content in Tutoriel big-o on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/big-o/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec big-o</title>
      <link>https://www.wikiod.com/fr/big-o/premiers-pas-avec-big-o/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/big-o/premiers-pas-avec-big-o/</guid>
      <description>Qu&amp;rsquo;est-ce que la notation Big-O ? # La notation Big-O est une notation utilisée pour parler des taux de croissance à long terme des fonctions. Il est souvent utilisé dans l&amp;rsquo;analyse d&amp;rsquo;algorithmes pour parler de la durée d&amp;rsquo;exécution d&amp;rsquo;un algorithme ou de concepts connexes comme la complexité de l&amp;rsquo;espace.
Dans l&amp;rsquo;usage courant, la notation big-O est utilisée pour parler de la façon dont le temps d&amp;rsquo;exécution d&amp;rsquo;un algorithme évolue en fonction de la taille de l&amp;rsquo;entrée.</description>
    </item>
    
    <item>
      <title>Calcul du Big-O</title>
      <link>https://www.wikiod.com/fr/big-o/calcul-du-big-o/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/big-o/calcul-du-big-o/</guid>
      <description>Fonctions O(n). # Les fonctions qui sont O(n) augmentent le nombre d&amp;rsquo;opérations de manière linéaire, car l&amp;rsquo;entrée devient très grande. Un exemple simple d&amp;rsquo;une fonction qui est O(n) serait l&amp;rsquo;algorithme de recherche linéaire, qui s&amp;rsquo;exécute une fois pour la taille de l&amp;rsquo;entrée.
Le pseudo-code suivant serait O(n), car il sera toujours délimité par la taille d&amp;rsquo;entrée, car l&amp;rsquo;algorithme ne s&amp;rsquo;exécutera jamais plus de fois que la taille d&amp;rsquo;entrée.
function LinearSearch (SearchArray, SearchFor) for each element in SearchArray if the element is SearchFor return the index of element </description>
    </item>
    
  </channel>
</rss>
