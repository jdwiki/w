<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel magento2 on </title>
    <link>https://www.wikiod.com/fr/docs/magento2/</link>
    <description>Recent content in Tutoriel magento2 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/magento2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec magento2</title>
      <link>https://www.wikiod.com/fr/magento2/debuter-avec-magento2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/debuter-avec-magento2/</guid>
      <description>Installez Magento 2 sur Ubuntu 16.04 # REMARQUES : Nous allons installer Magento 2 sur le nouveau serveur Ubuntu 16.04 LTS avec PHP 7.0, MySQL 5.6 et Apache 2.4.
1. Exigences d&amp;rsquo;installation # Apache 2.2 ou 2.4 avec module mod_rewrite (ou) Nginx &amp;gt;= 1.8. PHP 5.5 ou version ultérieure. PHP 7.0 est également pris en charge. Modules PHP requis - PDO/MySQL, mbstring, mcrypt, mhash, SimpleXML, curl, xsl, gd, ImageMagick 6.3.7 (ou version ultérieure) ou les deux, soap, intl, openssl.</description>
    </item>
    
    <item>
      <title>Mettre à jour Magento</title>
      <link>https://www.wikiod.com/fr/magento2/mettre-a-jour-magento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/mettre-a-jour-magento/</guid>
      <description>Mettre à niveau Magento via Composer # Vérifiez votre version actuelle de magento
php bin/magento --version Ajoutez maintenant la dernière version à votre composeur.
composer require magento/product-community-edition 2.1.6 --no-update Exécutez la mise à jour Composer Cela vous demandera le nom d&amp;rsquo;utilisateur et le mot de passe extraits de vos informations d&amp;rsquo;identification de votre compte marketplace.
composer update Cela lancera le processus pour commencer le téléchargement et la mise à niveau de votre magento</description>
    </item>
    
    <item>
      <title>Commandes Magento 2 pour une utilisation quotidienne</title>
      <link>https://www.wikiod.com/fr/magento2/commandes-magento-2-pour-une-utilisation-quotidienne/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/commandes-magento-2-pour-une-utilisation-quotidienne/</guid>
      <description>Toutes les commandes peuvent être exécutées en n&amp;rsquo;écrivant qu&amp;rsquo;une partie d&amp;rsquo;entre elles.
Par exemple:
php bin/magento cache:flush peut être traduit en : php bin/magento c:f php bin/magento ca:f php bin/magento c:fl cache bin/magento php:f php bin/magento c:flush etc. Vous pouvez écrire n&amp;rsquo;importe quelle partie, et si ce n&amp;rsquo;est pas ambigu, il saura automatiquement laquelle vous voulez.
Liste générale des commandes pour Magento 2 # php bin/magento setup:upgrade =&amp;gt; Setup Upgrade php bin/magento setup:di:compile =&amp;gt; Setup: Compile php bin/magento indexer:reindex =&amp;gt; Reindex php bin/magento cache:flush =&amp;gt; Clear Cache php bin/magento deploy:mode:set developer =&amp;gt; Enable Developer Mode Magento (developer/production) php bin/magento deploy:mode:show =&amp;gt; Show Current Mode Magento php bin/magento module:status =&amp;gt; Module: Status php bin/magento module:disable MODULE_NAME =&amp;gt; Module: Disable php bin/magento module:enable MODULE_NAME =&amp;gt; Module: Enable php bin/magento module:uninstall MODULE_NAME =&amp;gt; Module: Uninstall php bin/magento cron:run =&amp;gt; Cronjob: Run Vider le cache # Vider tout le cache Magento</description>
    </item>
    
    <item>
      <title>Structure des modules</title>
      <link>https://www.wikiod.com/fr/magento2/structure-des-modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/structure-des-modules/</guid>
      <description>Structure du module de catalogue # Pour l&amp;rsquo;instant, je pense que le module catalogue contient presque tout ce que vous pouvez ajouter à un module.
Api - Contient les contrats de service. Un ensemble d&amp;rsquo;interfaces qui ne doivent pas être modifiées à moins que la version mineure ne change. Pas obligatoire pour un module personnalisé mais agréable à avoir pour les extensions commerciales. Data - Data interfaces. Each interface must have a model that implements it (example: interface for product model) ProductRepositoryInterface.</description>
    </item>
    
    <item>
      <title>Injection de dépendance</title>
      <link>https://www.wikiod.com/fr/magento2/injection-de-dependance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/injection-de-dependance/</guid>
      <description>Préférence de classe # &amp;lt;!-- &amp;lt;moduleDir&amp;gt;/etc/&amp;lt;area&amp;gt;/di.xml --&amp;gt; &amp;lt;config xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:noNamespaceSchemaLocation=&amp;quot;urn:magento:framework:ObjectManager/etc/config.xsd&amp;quot;&amp;gt; &amp;lt;!-- ... --&amp;gt; &amp;lt;preference for=&amp;quot;Vendor\Namespace\Model\Example&amp;quot; type=&amp;quot;Vendor\Namespace\Model\AnotherExample&amp;quot; /&amp;gt; &amp;lt;!-- ... --&amp;gt; &amp;lt;/config&amp;gt; L&amp;rsquo;exemple ci-dessus est une syntaxe de remplacement du modèle de base.
Voici une liste de points qui vous décrira comment rendre cela possible
moduleDir - Répertoire d&amp;rsquo;extension Comme app/code/custom/extension ici extension est votre répertoire dans lequel tous les dossiers nécessaires de l&amp;rsquo;extension seront placés.
area - la zone sera frontend ou adminhtml</description>
    </item>
    
    <item>
      <title>Événement et observateur dans magento 2</title>
      <link>https://www.wikiod.com/fr/magento2/evenement-et-observateur-dans-magento-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/evenement-et-observateur-dans-magento-2/</guid>
      <description>Comment utiliser l&amp;rsquo;événement personnalisé et l&amp;rsquo;observateur ? # Étape 1 : Créez le fichier events.xml selon vos besoins dans frontend, Backend ou les deux YKM/Banner/etc/frontend/events.xml
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;config xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:noNamespaceSchemaLocation=&amp;quot;../../../../../../lib/internal/Magento/Framework/Event/etc/events.xsd&amp;quot;&amp;gt; &amp;lt;event name=&amp;quot;controller_action_predispatch&amp;quot;&amp;gt; &amp;lt;observer name=&amp;quot;ykm_banner_before&amp;quot; instance=&amp;quot;YKM\Banner\Observer\Help&amp;quot; /&amp;gt; &amp;lt;/event&amp;gt; &amp;lt;/config&amp;gt; Étape 2:
Créer un fichier Observateur YKM/Banner/Observer/Help.php
&amp;lt;?php /** * Copyright © 2015 Magento. All rights reserved. * See COPYING.txt for license details. */ namespace Estdevs\Banner\Observer; use Magento\Framework\Event\ObserverInterface; class Help implements ObserverInterface { public function execute(\Magento\Framework\Event\Observer $observer) { echo &amp;quot;this is good.</description>
    </item>
    
    <item>
      <title>Obtenir des produits de la base de données</title>
      <link>https://www.wikiod.com/fr/magento2/obtenir-des-produits-de-la-base-de-donnees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/obtenir-des-produits-de-la-base-de-donnees/</guid>
      <description>Obtenez des produits à l&amp;rsquo;aide du référentiel de produits # Pour obtenir des produits à partir de la base de données, vous devez utiliser le modèle de conception de référentiel de Magento 2. Chaque module peut être regroupé avec ses propres référentiels, et le module Catalogue de produits n&amp;rsquo;est pas différent.
Vous pouvez utiliser [injection de dépendance][1] dans votre classe pour accéder au référentiel. Un exemple de travail ressemblerait à ceci :</description>
    </item>
    
    <item>
      <title>Thème personnalisé</title>
      <link>https://www.wikiod.com/fr/magento2/theme-personnalise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/theme-personnalise/</guid>
      <description>Thème luma en tant que parent
{ &amp;quot;name&amp;quot;: &amp;quot;magento/luma&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;N/A&amp;quot;, &amp;quot;require&amp;quot;: { &amp;quot;php&amp;quot;: &amp;quot;~5.5.0|~5.6.0|~7.0.0&amp;quot;, &amp;quot;magento/theme-luma&amp;quot;: &amp;quot;100.0.*&amp;quot;, &amp;quot;magento/framework&amp;quot;: &amp;quot;100.0.*&amp;quot; }, &amp;quot;type&amp;quot;: &amp;quot;magento2-theme&amp;quot;, &amp;quot;version&amp;quot;: &amp;quot;100.0.1&amp;quot;, &amp;quot;license&amp;quot;: [ &amp;quot;OSL-3.0&amp;quot;, &amp;quot;AFL-3.0&amp;quot; ], &amp;quot;autoload&amp;quot;: { &amp;quot;files&amp;quot;: [ &amp;quot;registration.php&amp;quot; ] } } à la fin
Exécutez php bin/magento setup:upgrade cette commande après les commandes ci-dessous également nécessaires parfois
php bin/magento setup:static-content:deploy &amp;lt;language_pack_1&amp;gt; &amp;lt;language_pack_2&amp;gt; ... &amp;lt;language_pack_n&amp;gt;
&amp;lt;language_pack&amp;gt; : en_US nl_NL en_GB etc.
php bin/magento cache:flush ou php bin/magento cache:clean</description>
    </item>
    
    <item>
      <title>Utilisation de l&#39;injection de dépendance pour réécrire l&#39;objet</title>
      <link>https://www.wikiod.com/fr/magento2/utilisation-de-linjection-de-dependance-pour-reecrire-lobjet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/utilisation-de-linjection-de-dependance-pour-reecrire-lobjet/</guid>
      <description>https://gielberkers.com/magento-2-why-use-rewrites-when-you-can-use-plugins/
http://devdocs.magento.com/guides/v2.0/extension-dev-guide/plugins.html
Quelques façons de modifier une fonction dans magento 2 # Classe de réécriture # Fichier : Espace de noms/NomModule/etc/di.xml
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;config xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:noNamespaceSchemaLocation=&amp;quot;urn:magento:framework:ObjectManager/etc/config.xsd&amp;quot;&amp;gt; &amp;lt;preference for=&amp;quot;Magento\Catalog\Controller\Product\View&amp;quot; type=&amp;quot;Namespace\ModuleName\Controller\Product\View&amp;quot; /&amp;gt; &amp;lt;/config&amp;gt; Fichier : Namespace\ModuleName\Controller\Product\View.php
class View extends \Magento\Catalog\Block\Product\View { ///Code logic here } Plugin dans l&amp;rsquo;objet. # Fichier : Espace de noms/NomModule/etc/di.xml
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;config xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:noNamespaceSchemaLocation=&amp;quot;urn:magento:framework:ObjectManager/etc/config.xsd&amp;quot;&amp;gt; &amp;lt;type name=&amp;quot;Magento\Catalog\Model\Product&amp;quot;&amp;gt; &amp;lt;plugin name=&amp;quot;name_of_plugin&amp;quot; type=&amp;quot;Namespace\ModuleName\Plugin\Catalog\Model\Product&amp;quot; sortOrder=&amp;quot;1&amp;quot; disabled=&amp;quot;false&amp;quot; /&amp;gt; &amp;lt;/type&amp;gt; &amp;lt;/config&amp;gt; Fichier : Namespace\ModuleName\Plugin\Catalog\Model\Product.php</description>
    </item>
    
    <item>
      <title>Optimiser Magento 2</title>
      <link>https://www.wikiod.com/fr/magento2/optimiser-magento-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/magento2/optimiser-magento-2/</guid>
      <description>Configurations à optimiser # 1. Activer les catégories plates et les produits # L&amp;rsquo;une des principales raisons des problèmes de vitesse de Magento avec la vitesse de lecture de la base de données. Pour accélérer la vitesse de lecture de la base de données, vous devez activer Flat Catalog. Cela réduira le nombre de jointures de bases de données effectuées lors de l&amp;rsquo;affichage des produits et, de ce fait, la complexité des requêtes MySQL sera réduite.</description>
    </item>
    
  </channel>
</rss>
