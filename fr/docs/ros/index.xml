<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ros Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/ros/</link>
    <description>Recent content in ros Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/ros/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec ros</title>
      <link>https://www.wikiod.com/fr/ros/demarrer-avec-ros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ros/demarrer-avec-ros/</guid>
      <description>Installation # ** Selon votre machine cible, vous devez choisir une version ROS prise en charge (ou vice-versa). ** Bien que l&amp;rsquo;installation de ROS soit bien documentée dans le wiki ROS, il peut être difficile de les trouver. Voici donc un tableau de la version ROS, des plates-formes et de l&amp;rsquo;architecture cibles et les liens vers les guides d&amp;rsquo;installation appropriés :
Version ROS Plate-forme Arch État Lien vers le guide d&amp;rsquo;installation Cinétique Ubuntu 16.</description>
    </item>
    
    <item>
      <title>roslaunch</title>
      <link>https://www.wikiod.com/fr/ros/roslaunch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ros/roslaunch/</guid>
      <description>&amp;rsquo;nœud du package&amp;rsquo; doit être &amp;rsquo;nœud du package&#39;
initialement, vous dites &amp;ldquo;démarrer&amp;rdquo; et &amp;ldquo;arrêter&amp;rdquo;, mais vous n&amp;rsquo;expliquez pas comment effectuer un arrêt contrôlé.
lancez les nœuds ros et chargez les paramètres à partir du fichier Yaml # roslaunch est un outil important qui gère le démarrage et l&amp;rsquo;arrêt des nœuds ROS. Il prend un ou plusieurs fichiers &amp;ldquo;*.launch&amp;rdquo; comme arguments.
Pour cet exemple, je me référerai à ce qui suit (comme demandé dans cette [question][1]), alors comment pouvons-nous exécuter ces commandes consécutivement et automatiquement :</description>
    </item>
    
    <item>
      <title>Création d&#39;un paquet</title>
      <link>https://www.wikiod.com/fr/ros/creation-dun-paquet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ros/creation-dun-paquet/</guid>
      <description>Ce tutoriel montre comment créer un package dans ROS. Les packages se trouvent dans les espaces de travail, dans le répertoire src. Chaque répertoire de package doit avoir un fichier CMakeLists.txt et un fichier package.xml.
Création d&amp;rsquo;un paquet avec rospy # En supposant qu&amp;rsquo;un espace de travail nommé workspace_name a été précédemment créé dans le répertoire personnel, un package nommé package_name peut être créé en exécutant les lignes de commande suivantes.</description>
    </item>
    
    <item>
      <title>créer un espace de travail</title>
      <link>https://www.wikiod.com/fr/ros/creer-un-espace-de-travail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/ros/creer-un-espace-de-travail/</guid>
      <description>Ce tutoriel montre comment créer un espace de travail. Un espace de travail est un ensemble de répertoires dans lesquels vit un ensemble de code ROS connexe. On peut avoir plusieurs espaces de travail ROS, mais il est possible de travailler sur un seul à la fois.
Création d&amp;rsquo;un espace de travail # Pour créer un espace de travail, il faut exécuter ce qui suit dans le terminal :
$ mkdir -p ~/workspace_name/src $ cd ~/workspace_name/src $ catkin_init_workspace $ cd ~/workspace_name/ $ catkin_make Les commandes précédentes créent un espace de travail nommé workspace_name.</description>
    </item>
    
  </channel>
</rss>
