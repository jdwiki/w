<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel MySQL on </title>
    <link>https://www.wikiod.com/fr/docs/mysql/</link>
    <description>Recent content in Tutoriel MySQL on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec MySQL</title>
      <link>https://www.wikiod.com/fr/mysql/premiers-pas-avec-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/premiers-pas-avec-mysql/</guid>
      <description>Commencer # Création d&amp;rsquo;une base de données dans MySQL
CREATE DATABASE mydb; Valeur de retour :
Requête OK, 1 ligne affectée (0.05 sec)
Utilisation de la base de données créée mydb
USE mydb; Valeur de retour :
Base de données modifiée
Création d&amp;rsquo;une table dans MySQL
CREATE TABLE mytable ( id int unsigned NOT NULL auto_increment, username varchar(100) NOT NULL, email varchar(100) NOT NULL, PRIMARY KEY (id) ); CREATE TABLE mytable créera une nouvelle table appelée mytable.</description>
    </item>
    
    <item>
      <title>Création de tableau</title>
      <link>https://www.wikiod.com/fr/mysql/creation-de-tableau/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/creation-de-tableau/</guid>
      <description>Syntaxe # CREATE TABLE nom_table ( nom_colonne1 type_données(taille), nom_colonne2 type_données(taille), nom_colonne3 type_données(taille), &amp;hellip;. ); // Création de table de base
CREATE TABLE nom_table [SI NON EXISTE] ( nom_colonne1 type_données(taille), nom_colonne2 type_données(taille), nom_colonne3 type_données(taille), &amp;hellip;. ); // Création de table vérifiant l&amp;rsquo;existant
CREATE [TEMPORARY] TABLE nom_table [SI NON EXISTE] ( nom_colonne1 type_données(taille), nom_colonne2 type_données(taille), nom_colonne3 type_données(taille), &amp;hellip;. ); // Création de table temporaire
CREATE TABLE new_tbl [AS] SELECT * FROM orig_tbl ; // Création de table depuis SELECT</description>
    </item>
    
    <item>
      <title>SÉLECTIONNER</title>
      <link>https://www.wikiod.com/fr/mysql/selectionner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/selectionner/</guid>
      <description>SELECT est utilisé pour récupérer les lignes sélectionnées dans une ou plusieurs tables.
Syntaxe # SELECT DISTINCT [expressions] FROM TableName [WHERE conditions] ; ///Sélection simple
SELECT DISTINCT(a), b &amp;hellip; est identique à SELECT DISTINCT a, b &amp;hellip;
CHOISIR [ TOUT | DISTINCT | DISTINCTROW ] [ HIGH_PRIORITY ] [ STRAIGHT_JOIN ] [ SQL_SMALL_RESULT | SQL_BIG_RESULT ] [ SQL_BUFFER_RESULT ] [ SQL_CACHE | SQL_NO_CACHE ] [ SQL_CALC_FOUND_ROWS ] expressions DE tableaux [OÙ conditions] [expressions GROUPER PAR] [CONDITION D&amp;rsquo;AVOIR] [ORDER PAR expression [ ASC | DESC ]] [LIMIT [offset_value] nombre_lignes | LIMIT nombre_lignes DÉCALAGE valeur_décalage] [PROCÉDURE nom_procédure] Options [INTO [ OUTFILE &amp;rsquo;nom_fichier&#39; | DUMPFILE &amp;lsquo;file_name&amp;rsquo; | @variable1, @variable2, &amp;hellip; @variable_n] [POUR LA MISE À JOUR | VERROUILLER EN MODE PARTAGE] ; ///Syntaxe de sélection complète</description>
    </item>
    
    <item>
      <title>Sauvegarde avec mysqldump</title>
      <link>https://www.wikiod.com/fr/mysql/sauvegarde-avec-mysqldump/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/sauvegarde-avec-mysqldump/</guid>
      <description>Syntaxe # mysqldump -u [username] -p[password] [other options] db_name &amp;gt; dumpFileName.sql /// Pour sauvegarder une seule base de données mysqldump -u [username] -p[password] [other options] db_name [tbl_name1 tbl_name2 tbl_name2 &amp;hellip;] &amp;gt; dumpFileName.sql /// Pour sauvegarder une ou plusieurs tables mysqldump -u [username] -p[password] [other options] &amp;ndash;databases db_name1 db_name2 db_name3 &amp;hellip; &amp;gt; dumpFileName.sql /// Pour sauvegarder une ou plusieurs bases de données complètes mysqldump -u [nom d&amp;rsquo;utilisateur] -p[mot de passe] [autres options] &amp;ndash;all-databases &amp;gt; dumpFileName.</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>https://www.wikiod.com/fr/mysql/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/json/</guid>
      <description>Depuis MySQL 5.7.8, MySQL prend en charge un type de données JSON natif qui permet un accès efficace aux données dans les documents JSON (JavaScript Object Notation).
https://dev.mysql.com/doc/refman/5.7/en/json.html
À partir de MySQL 5.7.8, MySQL est livré avec un type JSON. De nombreux développeurs ont enregistré des données JSON dans des colonnes de texte pendant un certain temps, mais le type JSON est différent, les données sont enregistrées au format binaire après validation.</description>
    </item>
    
    <item>
      <title>INSÉRER</title>
      <link>https://www.wikiod.com/fr/mysql/inserer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/inserer/</guid>
      <description>Syntaxe # INSÉREZ [PRIORITÉ_BASSE | RETARDÉ | HIGH_PRIORITY] [IGNORER] [INTO] tbl_name [PARTITION (partition_name,&amp;hellip;)] [(col_name,&amp;hellip;)] {VALUES | VALUE} ({expr | DEFAULT},&amp;hellip;),(&amp;hellip;),&amp;hellip; [ ON DUPLICATE KEY UPDATE col_name=expr [, col_name=expr] &amp;hellip; ]
INSÉRER [LOW_PRIORITY | RETARDÉ | HIGH_PRIORITY] [IGNORER] [INTO] tbl_name [PARTITION (partition_name,&amp;hellip;)] SET col_name={expr | DEFAULT}, &amp;hellip; [ ON DUPLICATE KEY UPDATE col_name=expr [, col_name=expr] &amp;hellip; ]
INSÉRER [LOW_PRIORITY | HIGH_PRIORITY] [IGNORER] [INTO] tbl_name [PARTITION (partition_name,&amp;hellip;)] [(col_name,&amp;hellip;)] SELECT &amp;hellip; [ ON DUPLICATE KEY UPDATE col_name=expr [, col_name=expr] &amp;hellip; ]</description>
    </item>
    
    <item>
      <title>Jointures</title>
      <link>https://www.wikiod.com/fr/mysql/jointures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/jointures/</guid>
      <description>Syntaxe # INNER et OUTER sont ignorés.
FULL n&amp;rsquo;est pas implémenté dans MySQL.
&amp;ldquo;commajoin&amp;rdquo; (FROM a,b WHERE a.x=b.y) est mal vu ; utilisez FROM a JOIN b ON a.x=b.y à la place.
De JOIN b ON a.x=b.y inclut les lignes qui correspondent dans les deux tables.
De LEFT JOIN b ON a.x=b.y inclut toutes les lignes de a, plus les données correspondantes de b, ou NULLs s&amp;rsquo;il n&amp;rsquo;y a pas de ligne correspondante.</description>
    </item>
    
    <item>
      <title>Routines stockées (procédures et fonctions)</title>
      <link>https://www.wikiod.com/fr/mysql/routines-stockees-procedures-et-fonctions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/routines-stockees-procedures-et-fonctions/</guid>
      <description>Paramètres # Paramètre Détails RETOURS Spécifie le type de données pouvant être renvoyé par une fonction. RETOUR La variable ou la valeur réelle suivant la syntaxe RETURN est ce qui est renvoyé à l&amp;rsquo;endroit d&amp;rsquo;où la fonction a été appelée. Une routine stockée est soit une procédure, soit une fonction.
Une procédure est invoquée à l&amp;rsquo;aide d&amp;rsquo;une instruction CALL et ne peut que renvoyer valeurs à l&amp;rsquo;aide de variables de sortie.</description>
    </item>
    
    <item>
      <title>Codes d&#39;erreur</title>
      <link>https://www.wikiod.com/fr/mysql/codes-derreur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/codes-derreur/</guid>
      <description>Code d&amp;rsquo;erreur 1064 : erreur de syntaxe # select LastName, FirstName, from Person Retourne le message :
Code d&amp;rsquo;erreur : 1064. Vous avez une erreur dans votre syntaxe SQL ; consultez le manuel qui correspond à la version de votre serveur MySQL pour la bonne syntaxe à utiliser près de &amp;lsquo;from Person&amp;rsquo; à la ligne 2.
Obtenir un message &amp;ldquo;erreur 1064&amp;rdquo; de MySQL signifie que la requête ne peut pas être analysée sans erreurs de syntaxe.</description>
    </item>
    
    <item>
      <title>Limite et décalage</title>
      <link>https://www.wikiod.com/fr/mysql/limite-et-decalage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/mysql/limite-et-decalage/</guid>
      <description>Syntaxe # SELECT colonne_1 [, colonne_2 ] DE table_1 COMMANDER PAR colonne_commande LIMIT row_count [OFFSET row_offset] SELECT colonne_1 [, colonne_2 ] DE table_1 COMMANDER PAR colonne_commande LIMITE [décalage_ligne,] nombre_ligne &amp;ldquo;Limite&amp;rdquo; peut signifier &amp;ldquo;Nombre maximum de lignes dans un tableau&amp;rdquo;.
&amp;ldquo;Décalage&amp;rdquo; signifie choisir à partir du numéro de &amp;ldquo;ligne&amp;rdquo; (à ne pas confondre avec la valeur de la clé primaire ou toute autre valeur de données de champ)
Relation limite et décalage # Considérant la table users suivante :</description>
    </item>
    
  </channel>
</rss>
