<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>underscore.js Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/underscore-js/</link>
    <description>Recent content in underscore.js Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/underscore-js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec underscore.js</title>
      <link>https://www.wikiod.com/fr/underscore-js/premiers-pas-avec-underscorejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/underscore-js/premiers-pas-avec-underscorejs/</guid>
      <description>Installation ou configuration # Underscore est une bibliothèque utilitaire de programmation fonctionnelle open source pour JavaScript. Underscore fournit de nombreuses fonctions utiles pour travailler avec des tableaux ou des collections d&amp;rsquo;objets JavaScript, notamment le filtrage, le tri et l&amp;rsquo;interrogation.
Node.js
Assurez-vous que node et npm sont installés, puis tapez la commande suivante
npm install underscore Tonnelle
Assurez-vous que node, npm et bower sont installés, puis tapez la commande suivante
bower install underscore NuGet</description>
    </item>
    
    <item>
      <title>Collections</title>
      <link>https://www.wikiod.com/fr/underscore-js/collections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/underscore-js/collections/</guid>
      <description>carte # La fonction .map accepte un tableau et une fonction iteratee, l&amp;rsquo;iteratee produit une copie transformée de chaque objet tableau.
La fonction iteratee fournit 3 arguments
item - L&amp;rsquo;objet itéré actuel i - L&amp;rsquo;index de l&amp;rsquo;objet itéré list - Une référence au tableau/liste d&amp;rsquo;origine Le nouveau tableau aura la même longueur que l&amp;rsquo;ancien tableau mais contiendra les objets transformés
Exemple:
_.map([1, 2, 3, 4], function(item, i, list) { return (item*item); }); // [1, 4, 9, 16] Une façon plus concise d&amp;rsquo;écrire l&amp;rsquo;exemple ci-dessus en utilisant ES6 serait</description>
    </item>
    
  </channel>
</rss>
