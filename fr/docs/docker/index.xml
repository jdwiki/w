<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel Docker on </title>
    <link>https://www.wikiod.com/fr/docs/docker/</link>
    <description>Recent content in Tutoriel Docker on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec Docker</title>
      <link>https://www.wikiod.com/fr/docker/premiers-pas-avec-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/premiers-pas-avec-docker/</guid>
      <description>Installer Docker sous Windows # Exigences : Version 64 bits de Windows 7 ou version ultérieure sur une machine prenant en charge la technologie de virtualisation matérielle et activée.
Bien que le binaire docker puisse s&amp;rsquo;exécuter de manière native sur Windows, pour créer et héberger des conteneurs, vous devez exécuter une machine virtuelle Linux sur la boîte.
Depuis la version 1.12, vous n&amp;rsquo;avez pas besoin d&amp;rsquo;avoir une machine virtuelle distincte à installer, car Docker peut utiliser la fonctionnalité native Hyper-V de Windows pour démarrer une petite machine Linux pour agir en tant que backend.</description>
    </item>
    
    <item>
      <title>API du moteur Docker</title>
      <link>https://www.wikiod.com/fr/docker/api-du-moteur-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/api-du-moteur-docker/</guid>
      <description>Une API qui vous permet de contrôler chaque aspect de Docker depuis vos propres applications, de créer des outils pour gérer et surveiller les applications exécutées sur Docker, et même de l&amp;rsquo;utiliser pour créer des applications sur Docker lui-même.
Activer l&amp;rsquo;accès à distance à l&amp;rsquo;API Docker sous Linux exécutant systemd # Linux exécutant systemd, comme Ubuntu 16.04, l&amp;rsquo;ajout de -H tcp://0.0.0.0:2375 à /etc/default/docker n&amp;rsquo;a pas l&amp;rsquo;effet qu&amp;rsquo;il avait auparavant.
Au lieu de cela, créez un fichier appelé /etc/systemd/system/docker-tcp.</description>
    </item>
    
    <item>
      <title>Conteneurs en cours d&#39;exécution</title>
      <link>https://www.wikiod.com/fr/docker/conteneurs-en-cours-dexecution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/conteneurs-en-cours-dexecution/</guid>
      <description>Syntaxe # docker exécuter [OPTIONS] IMAGE [COMMANDE] [ARG&amp;hellip;] Supprimer automatiquement un conteneur après l&amp;rsquo;avoir exécuté # Normalement, un conteneur Docker persiste après sa fermeture. Cela vous permet de réexécuter le conteneur, d&amp;rsquo;inspecter son système de fichiers, etc. Cependant, vous souhaitez parfois exécuter un conteneur et le supprimer immédiatement après sa fermeture. Par exemple pour exécuter une commande ou afficher un fichier du système de fichiers. Docker fournit l&amp;rsquo;option de ligne de commande --rm à cette fin :</description>
    </item>
    
    <item>
      <title>Déboguer un conteneur</title>
      <link>https://www.wikiod.com/fr/docker/deboguer-un-conteneur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/deboguer-un-conteneur/</guid>
      <description>Syntaxe # statistiques docker [OPTIONS] [CONTENEUR&amp;hellip;] journaux docker [OPTIONS] CONTENEUR dessus docker [OPTIONS] CONTENEUR [ps OPTIONS] Impression des journaux # Suivre les journaux est le moyen le moins intrusif de déboguer une application en cours d&amp;rsquo;exécution. Cet exemple reproduit le comportement du traditionnel tail -f some-application.log sur le conteneur 7786807d8084.
docker logs --follow --tail 10 7786807d8084 Cette commande affiche essentiellement la sortie standard du processus de conteneur (le processus avec le pid 1).</description>
    </item>
    
    <item>
      <title>Mode essaim Docker</title>
      <link>https://www.wikiod.com/fr/docker/mode-essaim-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/mode-essaim-docker/</guid>
      <description>Un essaim est un certain nombre de moteurs Docker (ou nœuds) qui déploient des services collectivement. Swarm est utilisé pour répartir le traitement sur de nombreuses machines physiques, virtuelles ou cloud.
Syntaxe # [Initialiser un essaim] (https://docs.docker.com/engine/reference/commandline/swarm_init/) : docker swarm init [OPTIONS]
Rejoindre un essaim en tant que nœud et/ou gestionnaire : docker swarm join [OPTIONS] HÔTE : PORT
Créer un nouveau service : service docker créer [OPTIONS] IMAGE [COMMANDE] [ARG&amp;hellip;]</description>
    </item>
    
    <item>
      <title>Fichiers Docker</title>
      <link>https://www.wikiod.com/fr/docker/fichiers-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/fichiers-docker/</guid>
      <description>Les Dockerfiles sont des fichiers utilisés pour créer par programme des images Docker. Ils vous permettent de créer rapidement et de manière reproductible une image Docker, et sont donc utiles pour collaborer. Les Dockerfiles contiennent des instructions pour créer une image Docker. Chaque instruction est écrite sur une ligne, et est donnée sous la forme &amp;lt;INSTRUCTION&amp;gt;&amp;lt;argument(s)&amp;gt;. Les Dockerfiles sont utilisés pour créer des images Docker à l&amp;rsquo;aide de la commande docker build.</description>
    </item>
    
    <item>
      <title>Gestion des conteneurs</title>
      <link>https://www.wikiod.com/fr/docker/gestion-des-conteneurs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/gestion-des-conteneurs/</guid>
      <description>Syntaxe # docker rm [OPTIONS] CONTENEUR [CONTENEUR&amp;hellip;] docker attach [OPTIONS] CONTENEUR docker exec [OPTIONS] COMMANDE DE CONTENEUR [ARG&amp;hellip;] docker ps [OPTIONS] journaux docker [OPTIONS] CONTENEUR docker inspect [OPTIONS] CONTENEUR|IMAGE [CONTENANT|IMAGE&amp;hellip;] Dans les exemples ci-dessus, chaque fois que le conteneur est un paramètre de la commande docker, il est mentionné comme &amp;lt;container&amp;gt; ou container id ou &amp;lt;CONTAINER_NAME&amp;gt;. Dans tous ces endroits, vous pouvez passer un nom de conteneur ou un identifiant de conteneur pour spécifier un conteneur.</description>
    </item>
    
    <item>
      <title>Conteneurs de point de contrôle et de restauration</title>
      <link>https://www.wikiod.com/fr/docker/conteneurs-de-point-de-controle-et-de-restauration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/conteneurs-de-point-de-controle-et-de-restauration/</guid>
      <description>Compiler docker avec point de contrôle et restauration activés (ubuntu) # Pour compiler docker, il est recommandé d&amp;rsquo;avoir au moins 2 Go de RAM. Même avec cela, il échoue parfois, il est donc préférable d&amp;rsquo;opter pour ** 4 Go ** à la place.
assurez-vous que git et make sont installés
sudo apt-get install make git-core -y installer un nouveau noyau (au moins 4.2)
sudo apt-get install linux-generic-lts-xenial redémarrer la machine pour que le nouveau noyau soit actif</description>
    </item>
    
    <item>
      <title>Volumes de données et conteneurs de données</title>
      <link>https://www.wikiod.com/fr/docker/volumes-de-donnees-et-conteneurs-de-donnees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/volumes-de-donnees-et-conteneurs-de-donnees/</guid>
      <description>Conteneurs de données uniquement # Les conteneurs de données uniquement sont obsolètes et sont désormais considérés comme un anti-modèle !
Autrefois, avant la sous-commande &amp;ldquo;volume&amp;rdquo; de Docker et avant qu&amp;rsquo;il ne soit possible de créer des volumes nommés, Docker supprimait les volumes lorsqu&amp;rsquo;il n&amp;rsquo;y avait plus de références à eux dans aucun conteneur. Les conteneurs de données uniquement sont obsolètes car Docker offre désormais la possibilité de créer des volumes nommés, ainsi que de nombreux autres utilitaires via les différentes sous-commandes &amp;ldquo;docker volume&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Construire des images</title>
      <link>https://www.wikiod.com/fr/docker/construire-des-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker/construire-des-images/</guid>
      <description>Paramètres # | Paramètre | Détails | |&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-| | &amp;ndash;pull | S&amp;rsquo;assure que l&amp;rsquo;image de base (FROM) est à jour avant de créer le reste du Dockerfile.|
Construire une image à partir d&amp;rsquo;un Dockerfile # Une fois que vous avez un Dockerfile, vous pouvez créer une image à partir de celui-ci en utilisant docker build. La forme de base de cette commande est :
docker build -t nom-image chemin Si votre Dockerfile ne s&amp;rsquo;appelle pas Dockerfile, vous pouvez utiliser le drapeau -f pour donner le nom du Dockerfile à construire.</description>
    </item>
    
  </channel>
</rss>
