<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jvm Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/jvm/</link>
    <description>Recent content in jvm Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/jvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Démarrer avec jvm</title>
      <link>https://www.wikiod.com/fr/jvm/demarrer-avec-jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jvm/demarrer-avec-jvm/</guid>
      <description>Installation ou configuration # Instructions détaillées sur la configuration ou l&amp;rsquo;installation de jvm.
Activation du GC parallèle # Parallel GC est un collecteur Stop-The-World (STW) qui arrête tous les threads d&amp;rsquo;application lors de l&amp;rsquo;exécution du ramasse-miettes.
Lorsque Parallel GC a été introduit, il n&amp;rsquo;était activé que le GC parallèle dans le collecteur de jeune génération et OldGeneration Collector était un collecteur stop-the-world à thread unique, mais a ensuite introduit une option de ligne de commande distincte pour activer l&amp;rsquo;ancien parallèle.</description>
    </item>
    
    <item>
      <title>Tas JVM</title>
      <link>https://www.wikiod.com/fr/jvm/tas-jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jvm/tas-jvm/</guid>
      <description>Définition de la taille de tas maximale. # La plupart des JVM ont une option pour définir la taille de tas maximale, par ex.
-Xmx64m -Xmx8g Dans Java 1.0 à 1.2, vous pouvez utiliser
-mx64m et cela est toujours disponible sur certaines JVM pour une compatibilité descendante (par exemple, Oracle JVM).
Il existe quelques idées fausses courantes à propos de ce paramètre.
Il ne définit pas la taille du tas, seulement le maximum.</description>
    </item>
    
    <item>
      <title>Vidage de tas JVM</title>
      <link>https://www.wikiod.com/fr/jvm/vidage-de-tas-jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/jvm/vidage-de-tas-jvm/</guid>
      <description>Génération d&amp;rsquo;un vidage de tas sur OutOfMemoryError # Remarque : Cet exemple est basé sur l&amp;rsquo;implémentation d&amp;rsquo;Oracle JVM.
Des outils intégrés tels que jmap, jconsole et jvisualvm sont disponibles dans un JDK et peuvent être utilisés pour générer et analyser des vidages de mémoire de tas provenant d&amp;rsquo;une application JVM en cours d&amp;rsquo;exécution. Cependant, une option pour générer un vidage de tas sans utiliser les outils JDK consiste à ajouter l&amp;rsquo;argument VM -XX:+HeapDumpOnOutOfMemoryError qui indique à la JVM de générer automatiquement un vidage de tas lorsqu&amp;rsquo;une OutOfMemoryError se produit, et l&amp;rsquo;argument -XX:HeapDumpPath pour spécifier le chemin du vidage de tas.</description>
    </item>
    
  </channel>
</rss>
