<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel phpunit on </title>
    <link>https://www.wikiod.com/fr/docs/phpunit/</link>
    <description>Recent content in Tutoriel phpunit on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/phpunit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Assertions</title>
      <link>https://www.wikiod.com/fr/phpunit/assertions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/phpunit/assertions/</guid>
      <description>Assert qu&amp;rsquo;une exception est levée # PHPUnit fournit les [fonctions suivantes][1] pour surveiller les exceptions levées, qui ont été publiées avec 5.2.0 :
attendreException($exception) attendreExceptionMessage($message) attendreExceptionCode($code) attendreExceptionMessageRegExp($messageRegExp) Ceux-ci sont utilisés pour surveiller la levée d&amp;rsquo;une exception et inspecter les propriétés de cette exception.
Commençons par une fonction mathématique qui divise (juste pour simplifier). Il lèvera une exception si le dénominateur est zéro.
function divide($numerator, $denominator) { if ($denominator !== 0) { return $numerator/$denominator; } else { throw new \Exception(&amp;quot;Cannot divide by zero&amp;quot;, 100); } } Maintenant pour le code de test.</description>
    </item>
    
    <item>
      <title>Doubles de test (simulacres et stubs)</title>
      <link>https://www.wikiod.com/fr/phpunit/doubles-de-test-simulacres-et-stubs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/phpunit/doubles-de-test-simulacres-et-stubs/</guid>
      <description>Moquerie simple # Introduction # Le [Manuel PHPUnit][1] décrit la moquerie comme telle :
La pratique consistant à remplacer un objet par un double test qui vérifie attentes, par exemple affirmer qu&amp;rsquo;une méthode a été appelée, est appelé moquerie.
Ainsi, au lieu de supprimer le code, un observateur est créé qui non seulement remplace le code qui doit être réduit au silence, mais observe qu&amp;rsquo;une activité spécifique se serait produite dans le monde réel.</description>
    </item>
    
    <item>
      <title>Premiers pas avec PHPUnit</title>
      <link>https://www.wikiod.com/fr/phpunit/premiers-pas-avec-phpunit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/phpunit/premiers-pas-avec-phpunit/</guid>
      <description>Installation sous Linux ou MacOSX # Installation globale à l&amp;rsquo;aide de l&amp;rsquo;archive PHP # wget https://phar.phpunit.de/phpunit.phar # download the archive file chmod +x phpunit.phar # make it executable sudo mv phpunit.phar /usr/local/bin/phpunit # move it to /usr/local/bin phpunit --version # show installed version number Installation globale à l&amp;rsquo;aide de Composer # # If you have composer installed system wide composer global require phpunit/phpunit # set PHPUnit as a global dependency phpunit --version # show installed version number # If you have the .</description>
    </item>
    
  </channel>
</rss>
