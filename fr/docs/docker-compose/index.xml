<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker-compose Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/docker-compose/</link>
    <description>Recent content in docker-compose Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec docker-compose</title>
      <link>https://www.wikiod.com/fr/docker-compose/premiers-pas-avec-docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker-compose/premiers-pas-avec-docker-compose/</guid>
      <description>Ruby on Rails avec docker-compose # Si vous souhaitez utiliser l&amp;rsquo;application docker for rails et utiliser la base de données, vous devez savoir que toutes les données du conteneur docker seront détruites (sauf si vous configurez le conteneur spécifiquement pour conserver les données) Parfois, vous devez créer un conteneur Docker avec une application et l&amp;rsquo;attacher à un ancien conteneur avec une base de données.
Comme exemple d&amp;rsquo;application de rails, j&amp;rsquo;ai utilisé une application simple.</description>
    </item>
    
    <item>
      <title>Exemple multi-conteneurs Docker-compose avec réseau par défaut</title>
      <link>https://www.wikiod.com/fr/docker-compose/exemple-multi-conteneurs-docker-compose-avec-reseau-par-defaut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker-compose/exemple-multi-conteneurs-docker-compose-avec-reseau-par-defaut/</guid>
      <description>Par défaut, Compose configure un réseau unique pour votre application. Chaque le conteneur d&amp;rsquo;un service rejoint le réseau par défaut et est à la fois accessible par d&amp;rsquo;autres conteneurs sur ce réseau, et détectable par eux à un nom d&amp;rsquo;hôte identique au nom du conteneur.
Les liens vous permettent de définir des alias supplémentaires par lesquels un service est joignable depuis un autre service. Ils ne sont pas tenus d&amp;rsquo;activer services pour communiquer – par défaut, n&amp;rsquo;importe quel service peut atteindre n&amp;rsquo;importe quel autre service au nom de ce service.</description>
    </item>
    
    <item>
      <title>Fichier externe des variables d&#39;environnement</title>
      <link>https://www.wikiod.com/fr/docker-compose/fichier-externe-des-variables-denvironnement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/docker-compose/fichier-externe-des-variables-denvironnement/</guid>
      <description>Il existe plusieurs façons d&amp;rsquo;inclure des variables d&amp;rsquo;environnement dans l&amp;rsquo;application Docker. Voici quelques exemples:
Via un fichier externe # docker-composer.yml
web: ... env_file: - ./filename nom de fichier
variable=value dans le docker-compose lui-même # app: ... environment: - var=value </description>
    </item>
    
  </channel>
</rss>
