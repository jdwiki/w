<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel de Roslyn on </title>
    <link>https://www.wikiod.com/fr/docs/roslyn/</link>
    <description>Recent content in Tutoriel de Roslyn on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/roslyn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Commencer avec Roslyn</title>
      <link>https://www.wikiod.com/fr/roslyn/commencer-avec-roslyn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/roslyn/commencer-avec-roslyn/</guid>
      <description>Installation ou configuration # Pour commencer à bricoler avec Roslyn, vous aurez besoin des packages NuGet suivants :
Les compilateurs C# et VB - Microsoft.Net.Compilers. Pour l&amp;rsquo;installer, vous pouvez exécuter la commande suivante dans la console du gestionnaire de packages :
nuget install Microsoft.Net.Compilers
Les API et services de langage - Microsoft.CodeAnalysis. Pour l&amp;rsquo;installer, vous pouvez exécuter la commande suivante dans la console du gestionnaire de packages :
nuget install Microsoft.</description>
    </item>
    
    <item>
      <title>Utilisation des espaces de travail</title>
      <link>https://www.wikiod.com/fr/roslyn/utilisation-des-espaces-de-travail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/roslyn/utilisation-des-espaces-de-travail/</guid>
      <description>L&amp;rsquo;espace de travail est une représentation programmatique de la hiérarchie C# qui se compose d&amp;rsquo;une solution, de projets enfants et de documents enfants.
Actuellement, aucun espace de travail MSBuild ne prend en charge les projets conformes à la norme .NET. Pour plus d&amp;rsquo;informations, voir [ici][1]. [1] : http://stackoverflow.com/questions/42395336/roslyn-workspace-for-net-cores-new-csproj-format
Création d&amp;rsquo;un MSBuildWorspace, chargement d&amp;rsquo;une solution et obtention de tous les documents de toute cette solution # Le MSBuildWorspace est construit autour du concept de gestion des solutions MSBuild (fichiers .</description>
    </item>
    
    <item>
      <title>Analyser le code source avec Roslyn</title>
      <link>https://www.wikiod.com/fr/roslyn/analyser-le-code-source-avec-roslyn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/roslyn/analyser-le-code-source-avec-roslyn/</guid>
      <description>Analyser une simple application &amp;ldquo;Hello World&amp;rdquo; en C# # Créez une nouvelle application console avec une ligne dans la méthode Main : Console.WriteLine(&amp;quot;Hello World&amp;quot;)
Rappelez-vous le chemin d&amp;rsquo;accès au fichier .csproj et remplacez-le dans l&amp;rsquo;exemple.
Créez une nouvelle application console et installez le package NuGet &amp;ldquo;Microsoft.CodeAnalysis&amp;rdquo; et essayez le code suivant :
const string projectPath = @&amp;quot;C:\HelloWorldApplication\HelloWorldProject.csproj&amp;quot;; // Creating a build workspace. var workspace = MSBuildWorkspace.Create(); // Opening the Hello World project.</description>
    </item>
    
    <item>
      <title>Modifier le code source avec Roslyn</title>
      <link>https://www.wikiod.com/fr/roslyn/modifier-le-code-source-avec-roslyn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/roslyn/modifier-le-code-source-avec-roslyn/</guid>
      <description>Exemples pratiques d&amp;rsquo;utilisation de Roslyn pour les transformations de code source.
Les arbres de syntaxe de Roslyn sont immuables. En appelant une méthode comme ReplaceNodes, nous générons un nouveau nœud plutôt que de modifier celui existant. Cela vous oblige à toujours changer l&amp;rsquo;objet sur lequel vous avez travaillé. Remplacer les attributs existants pour toutes les méthodes en C# à l&amp;rsquo;aide de l&amp;rsquo;arbre de syntaxe # L&amp;rsquo;extrait de code suivant remplace tous les attributs appelés &amp;ldquo;PreviousAttribute&amp;rdquo; par un attribut appelé &amp;ldquo;ReplacementAttribute&amp;rdquo; pour une solution complète.</description>
    </item>
    
    <item>
      <title>Arbre de syntaxe</title>
      <link>https://www.wikiod.com/fr/roslyn/arbre-de-syntaxe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/roslyn/arbre-de-syntaxe/</guid>
      <description>L&amp;rsquo;API de syntaxe est l&amp;rsquo;une des principales parties du compilateur Roslyn. Il expose les arbres de syntaxe que les compilateurs utilisent pour comprendre les programmes Visual Basic et C#.
L&amp;rsquo;arbre de syntaxe est un [arbre d&amp;rsquo;analyse] [1] dans le contexte du compilateur Roslyn. [1] : https://en.wikipedia.org/wiki/Parse_tree
Parcours de l&amp;rsquo;arbre de syntaxe à l&amp;rsquo;aide de LINQ # Vous pouvez facilement naviguer dans une arborescence de syntaxe à l&amp;rsquo;aide de LINQ. Par exemple, il est facile d&amp;rsquo;obtenir tous les nœuds ClassDeclarationSyntax (classes déclarées), dont le nom commence par la lettre A :</description>
    </item>
    
    <item>
      <title>Modèle sémantique</title>
      <link>https://www.wikiod.com/fr/roslyn/modele-semantique/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/roslyn/modele-semantique/</guid>
      <description>Contrairement à l&amp;rsquo;API de syntaxe, elle expose toutes sortes d&amp;rsquo;informations au niveau de la syntaxe, le modèle sémantique donne plus de &amp;ldquo;sens&amp;rdquo; à notre code et nous permet de répondre à des questions telles que &amp;ldquo;Quels noms sont concernés à cet emplacement ?&amp;rdquo;, &amp;ldquo;Quels membres sont accessibles à partir de cette méthode ?&amp;rdquo;, &amp;ldquo;Quelles variables sont utilisées dans ce bloc de texte ?&amp;rdquo;, &amp;ldquo;À quoi ce nom/expression fait-il référence ?&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
