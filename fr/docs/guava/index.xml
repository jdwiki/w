<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>goyave Tutoriel on </title>
    <link>https://www.wikiod.com/fr/docs/guava/</link>
    <description>Recent content in goyave Tutoriel on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/guava/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Débuter avec la goyave</title>
      <link>https://www.wikiod.com/fr/guava/debuter-avec-la-goyave/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/guava/debuter-avec-la-goyave/</guid>
      <description>Installer # La dépendance à Guava peut être ajoutée dans votre projet Java en utilisant n&amp;rsquo;importe quel système de construction.
Maven :
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.google.guava&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;guava&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;19.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Grade :
dependencies { compile &#39;com.google.guava:guava:19.0&#39; } Lierre
&amp;lt;dependency org=&amp;quot;com.google.guava&amp;quot; name=&amp;quot;guava&amp;quot; rev=&amp;quot;19.0&amp;quot; /&amp;gt; Constructeur
compile.with &#39;com.google.guava:guava:jar:19.0&#39; Dépendance manuelle
Vous pouvez également simplement [télécharger les JARs][1] manuellement à partir de la page de publication de Guava pour les classes, les sources et les javadocs.</description>
    </item>
    
    <item>
      <title>Cordes</title>
      <link>https://www.wikiod.com/fr/guava/cordes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/guava/cordes/</guid>
      <description>Vérification d&amp;rsquo;une chaîne pour les caractères indésirables # En tant que développeur, vous vous retrouvez souvent à gérer des chaînes qui ne sont pas créées par votre propre code.
Ceux-ci seront souvent fournis par des bibliothèques tierces, des systèmes externes ou même des utilisateurs finaux. La validation de chaînes dont la provenance n&amp;rsquo;est pas claire est considérée comme l&amp;rsquo;une des caractéristiques de la programmation défensive et, dans la plupart des cas, vous souhaiterez rejeter les entrées de chaîne qui ne répondent pas à vos attentes.</description>
    </item>
    
    <item>
      <title>ES</title>
      <link>https://www.wikiod.com/fr/guava/es/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/guava/es/</guid>
      <description>Gestion des InputStreams et OutputStreams existants # Lire le contenu d&amp;rsquo;un InputStream en tant que tableau byte :
// Reading from a file try (InputStream in = new FileInputStream(&amp;quot;in.dat&amp;quot;)) { byte[] content = ByteStreams.toByteArray(in); // do something with content } Copier un InputStream vers un OutputStream :
// Copying the content from a file in.dat to out.dat. try (InputStream in = new FileInputStream(&amp;quot;in.dat&amp;quot;); OutputStream out = new FileOutputStream(&amp;quot;out.dat&amp;quot;)) { ByteStreams.copy(in, out); } Remarque : pour copier directement les fichiers, il est préférable d&amp;rsquo;utiliser Files.</description>
    </item>
    
  </channel>
</rss>
