<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel de Cordoue on </title>
    <link>https://www.wikiod.com/fr/docs/cordova/</link>
    <description>Recent content in Tutoriel de Cordoue on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/cordova/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cordoue de notification push Firebase</title>
      <link>https://www.wikiod.com/fr/cordova/cordoue-de-notification-push-firebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/cordoue-de-notification-push-firebase/</guid>
      <description>Notification push Firebase dans Cordova Android # Ajouter Firebase à votre projet Android
Ajouter Firebase à votre application
Pour ajouter Firebase à votre application, vous aurez besoin d&amp;rsquo;un projet Firebase et d&amp;rsquo;un fichier de configuration Firebase pour votre application.
Créez un projet Firebase dans la console Firebase, si vous n&amp;rsquo;en avez pas déjà un. Si vous avez déjà un projet Google existant associé à votre application mobile, cliquez sur Importer un projet Google.</description>
    </item>
    
    <item>
      <title>Plugin d&#39;image de recadrage Cordova</title>
      <link>https://www.wikiod.com/fr/cordova/plugin-dimage-de-recadrage-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/plugin-dimage-de-recadrage-cordova/</guid>
      <description>Recadrer l&amp;rsquo;image après avoir cliqué avec l&amp;rsquo;appareil photo ou sélectionné l&amp;rsquo;image. # Il recadre les images en forme de carré.
Ce projet cordova utilise deux plugins :
Plugin de caméra Cordova &amp;ndash; https://github.com/apache/cordova-plugin-camera
Plugin d&amp;rsquo;image de recadrage Cordova &amp;ndash; https://github.com/jeduan/cordova-plugin-crop
Le plug-in Camera est combiné avec le plug-in Crop Image en plaçant le code du plug-in Cop Image dans le rappel de réussite du code du plug-in Camera.
/*Camera Plugin Code*/ navigator.</description>
    </item>
    
    <item>
      <title>Comment détecter l&#39;état de la connexion réseau</title>
      <link>https://www.wikiod.com/fr/cordova/comment-detecter-letat-de-la-connexion-reseau/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/comment-detecter-letat-de-la-connexion-reseau/</guid>
      <description>Utilisation du plug-in cordova-plugin-network-information # La détection de l&amp;rsquo;état actuel de la connexion réseau et la réponse à tout changement pouvant survenir peuvent être effectuées en utilisant l&amp;rsquo;un des nombreux plugins. Cet exemple concerne le plugin [cordova-plugin-network-information][1].
Ajoutez le plug-in au projet :
cordova plugin add cordova-plugin-network-information Après l&amp;rsquo;événement Cordova [deviceready] [2], un objet de connexion est disponible via navigator.connection. La propriété type contient l&amp;rsquo;état actuel du réseau :
document.addEventListener(&amp;quot;deviceready&amp;quot;, function() { var networkState = navigator.</description>
    </item>
    
    <item>
      <title>Signer la version Android avec Cordova 5</title>
      <link>https://www.wikiod.com/fr/cordova/signer-la-version-android-avec-cordova-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/signer-la-version-android-avec-cordova-5/</guid>
      <description>Ajoutez la configuration de build pour signer le fichier .apk # Ajoutez un magasin de clés en utilisant :
keytool -genkey -v -keystore example.keystore -alias example -keyalg RSA -keysize 2048 -validity 10000 Remarque : Cela devrait être à la racine du projet. Bien qu&amp;rsquo;il ne s&amp;rsquo;agisse pas d&amp;rsquo;une exigence stricte, cela facilite le référencement des fichiers
Ajoutez un build.json avec la configuration release/dev pour le keystore, à la racine du projet :</description>
    </item>
    
    <item>
      <title>Créer votre première application avec Cordova</title>
      <link>https://www.wikiod.com/fr/cordova/creer-votre-premiere-application-avec-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/creer-votre-premiere-application-avec-cordova/</guid>
      <description>En cas d&amp;rsquo;échec de l&amp;rsquo;exécution de &amp;ldquo;cordova run android&amp;rdquo;. Assurez-vous que votre appareil Android est connecté à votre ordinateur et exécutez &amp;ldquo;adb devices&amp;rdquo; pour vous assurer que les outils de développement Android (ADT) peuvent détecter votre appareil.
Utilisation de l&amp;rsquo;outil de ligne de commande # Commencez par créer un nouveau projet Cordova :
cordova create HelloWorld my.application.identifier AppName Cela créera un projet Cordova vierge
dans le dossier HelloWorld avec l&amp;rsquo;identifiant my.</description>
    </item>
    
    <item>
      <title>Débogage de l&#39;application</title>
      <link>https://www.wikiod.com/fr/cordova/debogage-de-lapplication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/debogage-de-lapplication/</guid>
      <description>Chose importante à retenir lors du débogage des applications cordova, si vous avez un événement OnDeviceReady et un code qui s&amp;rsquo;y exécute, au moment où l&amp;rsquo;application se lance, votre débogueur ne sera toujours pas attaché (contrairement au débogage Visual Studio C# où l&amp;rsquo;application attend que le processus de débogage joindre avant de poursuivre le lancement du programme).
Cela signifie que tous les messages ou points d&amp;rsquo;arrêt de la console de configuration initiale ne seront pas capturés.</description>
    </item>
    
    <item>
      <title>Comment personnaliser le dossier www spécifique à la plate-forme dans cordova</title>
      <link>https://www.wikiod.com/fr/cordova/comment-personnaliser-le-dossier-www-specifique-a-la-plate-forme-dans-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/comment-personnaliser-le-dossier-www-specifique-a-la-plate-forme-dans-cordova/</guid>
      <description>créer des css/js spécifiques à une plateforme (android/ios) # Supposons que vous souhaitiez créer un fichier css/js spécifique à une plate-forme. Pour cela, vous devez créer un dossier merges dans le dossier racine de votre projet Cordova. Dans le dossier de fusion, créez un répertoire pour chaque plate-forme (android/ios..). puis dans un dossier de plate-forme spécifique, créez un dossier css/js et placez votre fichier css/js spécifique au dossier de la plate-forme.</description>
    </item>
    
    <item>
      <title>Notification push sur Android et iOS</title>
      <link>https://www.wikiod.com/fr/cordova/notification-push-sur-android-et-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/notification-push-sur-android-et-ios/</guid>
      <description>Utilisation du nouveau phonegap-plugin-push # Dans le but d&amp;rsquo;envoyer des notifications push aux applications Cordova. La première étape consiste à obtenir un jeton d&amp;rsquo;appareil. Un « device token » est propre à chaque appareil et à chaque projet.
Prérequis:
Numéro de projet Google Cloud Messaging Pour cela, accédez à [Google Developer Console][1] et créez un nouveau projet.
Sous Informations sur le projet se trouve le numéro de projet
Clé API Google Cloud Messaging pour le projet ci-dessus (nécessaire pour le serveur) Accédez à Bibliothèque -&amp;gt; Google Cloud Messaging -&amp;gt; Activer.</description>
    </item>
    
    <item>
      <title>Outils Visual Studio pour Apache Cordova</title>
      <link>https://www.wikiod.com/fr/cordova/outils-visual-studio-pour-apache-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/outils-visual-studio-pour-apache-cordova/</guid>
      <description>Mettre à jour les outils Apache Cordova dans Visual Studio # Dans Visual Studio, choisissez Outils-&amp;gt;Extensions et mises à jour. Dans l&amp;rsquo;onglet Mises à jour de la boîte de dialogue Extensions et mises à jour, choisissez Product Updates. Si une mise à jour de Visual Studio Tools pour Apache apparaît, sélectionnez-la, puis choisissez le bouton Mettre à jour. Obtenir les outils Apache Cordova dans Visual Studio # Ouvrez le Panneau de configuration -&amp;gt; Programmes et fonctionnalités, choisissez le visuel Studio 2015 item, and then choose the Change button.</description>
    </item>
    
    <item>
      <title>Démarrer avec Cordoue</title>
      <link>https://www.wikiod.com/fr/cordova/demarrer-avec-cordoue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/cordova/demarrer-avec-cordoue/</guid>
      <description>Développement d&amp;rsquo;applications mobiles avec Cordova
Apache Cordova est un framework de développement mobile open source. Il vous permet d&amp;rsquo;utiliser les technologies Web standard - HTML5, CSS3 et JavaScript pour le développement multiplateforme.
Création d&amp;rsquo;une version Android (.apk) # Installez cordova à l&amp;rsquo;aide de la commande suivante npm install -g cordova.
Utilisez cordova -version pour vérifier la version cordova.
Définissez les variables de chemin ANDROID_HOME et JAVA_HOME.
Exemple:
exporter ANDROID_HOME = /home/geethu/android-sdk-linux</description>
    </item>
    
  </channel>
</rss>
