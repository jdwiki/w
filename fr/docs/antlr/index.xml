<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel ANTLR on </title>
    <link>https://www.wikiod.com/fr/docs/antlr/</link>
    <description>Recent content in Tutoriel ANTLR on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/antlr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec ANTLR</title>
      <link>https://www.wikiod.com/fr/antlr/premiers-pas-avec-antlr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/antlr/premiers-pas-avec-antlr/</guid>
      <description>Bonjour le monde # </description>
    </item>
    
    <item>
      <title>Introduction à ANTLR v4</title>
      <link>https://www.wikiod.com/fr/antlr/introduction-a-antlr-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/antlr/introduction-a-antlr-v4/</guid>
      <description>ANTLR v4 est un outil puissant utilisé pour créer de nouveaux langages de programmation et traiter/traduire du texte structuré ou des fichiers binaires. ANTLR utilise une grammaire que vous créez pour générer un analyseur qui peut construire et traverser un arbre d&amp;rsquo;analyse (ou arbre de syntaxe abstraite, AST). L&amp;rsquo;analyseur se compose de fichiers de sortie dans une langue cible que vous spécifiez. ANTLR v4 prend en charge plusieurs cibles, notamment : Java, C#, JavaScript, Python2 et Python3.</description>
    </item>
    
    <item>
      <title>Banc d&#39;essai  grun</title>
      <link>https://www.wikiod.com/fr/antlr/banc-dessai--grun/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/antlr/banc-dessai--grun/</guid>
      <description>Configurer le banc d&amp;rsquo;essai # ANTLR contient un outil de test dans sa bibliothèque d&amp;rsquo;exécution, cet outil peut être utilisé pour afficher des informations détaillant la façon dont l&amp;rsquo;analyse est effectuée pour faire correspondre l&amp;rsquo;entrée aux règles définies dans votre fichier de grammaire.
Pour utiliser cet outil contenu dans le fichier jar ANTLR, vous devez configurer le chemin de classe de votre système pour autoriser l&amp;rsquo;accès à la fois à l&amp;rsquo;outil ANTLR et à la bibliothèque d&amp;rsquo;exécution :</description>
    </item>
    
    <item>
      <title>Règles de lexer dans la v4</title>
      <link>https://www.wikiod.com/fr/antlr/regles-de-lexer-dans-la-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/antlr/regles-de-lexer-dans-la-v4/</guid>
      <description>Règles de priorité # Plusieurs règles d&amp;rsquo;analyseur lexical peuvent correspondre au même texte d&amp;rsquo;entrée. Dans ce cas, le type de jeton sera choisi comme suit :
Tout d&amp;rsquo;abord, sélectionnez la règle de lexer qui correspond à l&amp;rsquo;entrée la plus longue Si le texte correspond à un jeton implicitement défini (comme &#39;{&#39;), utilisez la règle implicite Si plusieurs règles de lexer correspondent à la même longueur d&amp;rsquo;entrée, choisissez la première, en fonction de l&amp;rsquo;ordre de définition La grammaire combinée suivante :</description>
    </item>
    
    <item>
      <title>Cibles ANTLRExécutions de langage</title>
      <link>https://www.wikiod.com/fr/antlr/cibles-antlrexecutions-de-langage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/antlr/cibles-antlrexecutions-de-langage/</guid>
      <description>Support linguistique # ANTLR est capable de générer des analyseurs pour un certain nombre de langages de programmation :
C# Cible Cible Python Cible JavaScript Cible Java Par défaut, ANTLR générera un analyseur à partir de la ligne de commande dans le langage de programmation Java :
Java -jar antlr-4.5.3-complete.jar yourGrammar.g4 //Will output a java parser Pour changer la langue cible, vous pouvez exécuter la commande suivante à partir du terminal/de la ligne de commande du système d&amp;rsquo;exploitation :</description>
    </item>
    
    <item>
      <title>Visiteurs</title>
      <link>https://www.wikiod.com/fr/antlr/visiteurs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/antlr/visiteurs/</guid>
      <description>Quelle est la différence entre un auditeur et un visiteur ? La différence entre les mécanismes d&amp;rsquo;écoute et de visiteur est que les méthodes d&amp;rsquo;écoute sont appelées par l&amp;rsquo;objet marcheur fourni par ANTLR, tandis que les méthodes de visiteur doivent accompagner leurs enfants avec des appels de visite explicites. Oublier d&amp;rsquo;invoquer visit() sur les enfants d&amp;rsquo;un nœud signifie que ces sous-arbres ne sont pas visités. En visiteur, nous avons la possibilité de marcher dans les arbres tandis qu&amp;rsquo;en auditeur, vous ne réagissez qu&amp;rsquo;au promeneur d&amp;rsquo;arbres.</description>
    </item>
    
    <item>
      <title>Les auditeurs</title>
      <link>https://www.wikiod.com/fr/antlr/les-auditeurs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/antlr/les-auditeurs/</guid>
      <description>## Événements d&amp;rsquo;écoute utilisant des étiquettes L&amp;rsquo;étiquetage des alternatives à l&amp;rsquo;intérieur d&amp;rsquo;une règle commençant par l&amp;rsquo;opérateur # indique à ANTLR de générer des méthodes d&amp;rsquo;écoute pour chaque étiquette correspondant à l&amp;rsquo;alternative.
En spécifiant un libellé pour chaque alternative dans la règle suivante :
// Rule type : int #typeInt | short #typeShort | long #typeLong | string #typeString ; // Tokens int : &#39;int&#39; ; short : &#39;short&#39; ; long : &#39;long&#39; ; string : &#39;string&#39; ; Génèrera les méthodes suivantes dans l&amp;rsquo;interface générée qui étend [ParseTreeListener][1] :</description>
    </item>
    
    <item>
      <title>Introduction à ANTLR v3</title>
      <link>https://www.wikiod.com/fr/antlr/introduction-a-antlr-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/antlr/introduction-a-antlr-v3/</guid>
      <description>Installation et configuration # Comment installer ANTLR dans Eclipse # (Dernier test sur Indigo et ANTLR IDE 2.1.2)
Installez Éclipse. Téléchargez [ANTLR complete binaries jar that includes ANTLR v2.][1] Extrayez dans un répertoire temporaire. Copiez le antlr-n.n folder to an appropriate permanent location, for example the same folder that Eclipse is installed in. Ajoutez le site de mise à jour ANTLR IDE à Eclipse. In Eclipse, click on Help and select Install New Software.</description>
    </item>
    
  </channel>
</rss>
