<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel asp.net-web-api2 on </title>
    <link>https://www.wikiod.com/fr/docs/asp-dotnet-web-api2/</link>
    <description>Recent content in Tutoriel asp.net-web-api2 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/asp-dotnet-web-api2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec asp.net-web-api2</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-web-api2/premiers-pas-avec-aspnet-web-api2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-web-api2/premiers-pas-avec-aspnet-web-api2/</guid>
      <description>Quoi et pourquoi Asp.Net Web API2 ? # Quoi et pourquoi ?
L&amp;rsquo;API Web2 d&amp;rsquo;Asp.Net est la dernière version de l&amp;rsquo;API Web. C&amp;rsquo;est un moyen simple d&amp;rsquo;implémenter un service Web RESTful en utilisant toutes les qualités fournies par le framework Asp.Net. Une fois que vous aurez compris les principes de base de REST, une API Web Asp.net2 sera très facile à mettre en œuvre. Web API2 est construit sur le modèle de pipeline modulaire et enfichable d&amp;rsquo;Asp.</description>
    </item>
    
    <item>
      <title>OAuth 2.0 dans l&#39;API Web ASP.NET</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-web-api2/oauth-20-dans-lapi-web-aspnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-web-api2/oauth-20-dans-lapi-web-aspnet/</guid>
      <description>Enregistrement dans une application Android
Voici les étapes que j&amp;rsquo;ai suivies pour me connecter/s&amp;rsquo;inscrire à l&amp;rsquo;aide d&amp;rsquo;une application Android :
Avoir une activité de connexion qui interroge la route ExternalLogins, obtenant les prestataires disponibles. Cette activité doit avoir le drapeau NoHistory activé et lancé en tant qu&amp;rsquo;instance unique. En appuyant sur le bouton d&amp;rsquo;un utilisateur, lancez un onglet Chrome personnalisé avec le URL du fournisseur. L&amp;rsquo;utilisateur doit être connecté et redirigé vers votre site publié à l&amp;rsquo;URL de retour donnée.</description>
    </item>
    
    <item>
      <title>Routage d&#39;attribut dans l&#39;API Web ASP.NET 2</title>
      <link>https://www.wikiod.com/fr/asp-dotnet-web-api2/routage-dattribut-dans-lapi-web-aspnet-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/asp-dotnet-web-api2/routage-dattribut-dans-lapi-web-aspnet-2/</guid>
      <description>Comme son nom l&amp;rsquo;indique, cela utilise des attributs pour router. Cela donne à l&amp;rsquo;utilisateur plus de contrôle sur les URI dans l&amp;rsquo;API Web. Par exemple, vous pouvez décrire les hiérarchies de la ressource. Cependant, l&amp;rsquo;ancien &amp;ldquo;routage conventionnel&amp;rdquo; est entièrement pris en charge. Les utilisateurs peuvent également avoir un mélange des deux.
Syntaxe # [RoutePrefix(&amp;ldquo;api/books&amp;rdquo;)] - pour la classe contrôleur [Route(&amp;ldquo;getById&amp;rdquo;)] - pour les actions [Route(&amp;quot;~/api/authors/{authorId:int}/books&amp;quot;)] - pour remplacer le préfixe de route Paramètres # Nom du paramètre Détails Préfixe d&amp;rsquo;itinéraire attribut à la classe contrôleur.</description>
    </item>
    
  </channel>
</rss>
