<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriel fabricjs on </title>
    <link>https://www.wikiod.com/fr/docs/fabricjs/</link>
    <description>Recent content in Tutoriel fabricjs on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/fr/docs/fabricjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiers pas avec fabricjs</title>
      <link>https://www.wikiod.com/fr/fabricjs/premiers-pas-avec-fabricjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/fabricjs/premiers-pas-avec-fabricjs/</guid>
      <description>Installation ou configuration # Fabric.js est comme n&amp;rsquo;importe quelle autre bibliothèque JS spécifique à canvas. Facile à configurer et à démarrer. Tout ce que vous avez à faire est de télécharger le fabric.js depuis [HERE][1] et de l&amp;rsquo;inclure dans votre projet comme n&amp;rsquo;importe quelle autre bibliothèque JS, par exemple comme vous le faites pour jQuery. Créez ensuite le fichier html supposons index.html comme :
&amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;fabric.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;canvas id=&amp;quot;canvas&amp;quot; width=&amp;quot;400&amp;quot; height=&amp;quot;400&amp;quot; style=&amp;quot;border:2px solid #000000&amp;lt;/canvas&amp;gt; &amp;lt;script&amp;gt; var canvas = new fabric.</description>
    </item>
    
    <item>
      <title>Événements de toile Fabricjs</title>
      <link>https://www.wikiod.com/fr/fabricjs/evenements-de-toile-fabricjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/fabricjs/evenements-de-toile-fabricjs/</guid>
      <description>Syntaxe # on(eventName, handler) - Attache un écouteur d&amp;rsquo;événement avec un rappel à l&amp;rsquo;objet.
off(eventName, handler) - Supprime l&amp;rsquo;écouteur d&amp;rsquo;événement de l&amp;rsquo;objet. L&amp;rsquo;appel de cette fonction sans aucun argument supprimera tous les écouteurs d&amp;rsquo;événements sur l&amp;rsquo;objet.
trigger(eventName, optionsopt) - Déclenche l&amp;rsquo;événement et l&amp;rsquo;objet d&amp;rsquo;options facultatives.
Paramètres # Paramètre Descriptif eventName Le nom de l&amp;rsquo;événement auquel vous souhaitez vous abonner, tel que &amp;lsquo;object:moving&amp;rsquo; eventHandler La fonction que vous souhaitez exécuter lorsque cet événement particulier est déclenché optionopt Objet Options Fabric prend en charge un certain nombre d&amp;rsquo;événements pour permettre l&amp;rsquo;interactivité et l&amp;rsquo;extensibilité.</description>
    </item>
    
    <item>
      <title>Sérialisation de canevas FabricJS</title>
      <link>https://www.wikiod.com/fr/fabricjs/serialisation-de-canevas-fabricjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/fr/fabricjs/serialisation-de-canevas-fabricjs/</guid>
      <description>Une fois que vous avez commencé à créer une application avec FabricJS, il ne sera pas tard lorsque vous vous rendrez compte que vous devrez enregistrer les résultats du canevas/son contenu sur le serveur. Ou peut les exporter sous forme de fichiers vers le client. À cette fin, vous aurez besoin de la sérialisation de canevas. Maintenant, certains d&amp;rsquo;entre vous pourraient demander pourquoi la sérialisation, nous pouvons l&amp;rsquo;enregistrer en tant qu&amp;rsquo;image.</description>
    </item>
    
  </channel>
</rss>
