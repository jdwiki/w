<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial jQuery on </title>
    <link>https://www.wikiod.com/pt/docs/jquery/</link>
    <description>Recent content in tutorial jQuery on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/jquery/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com jQuery</title>
      <link>https://www.wikiod.com/pt/jquery/comecando-com-jquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/comecando-com-jquery/</guid>
      <description>Começando # Crie um arquivo hello.html com o seguinte conteúdo:
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Hello, World!&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div&amp;gt; &amp;lt;p id=&amp;quot;hello&amp;quot;&amp;gt;Some random text&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-2.2.4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; $(document).ready(function() { $(&#39;#hello&#39;).text(&#39;Hello, World!&#39;); }); &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Demonstração ao vivo no JSBin
Abra este arquivo em um navegador da web. Como resultado, você verá uma página com o texto: Hello, World!
Explicação do código # Carrega a biblioteca jQuery do jQuery CDN:</description>
    </item>
    
    <item>
      <title>Ajax</title>
      <link>https://www.wikiod.com/pt/jquery/ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/ajax/</guid>
      <description>Sintaxe # var jqXHR = $.ajax(url [,configurações]) var jqXHR = $.ajax([configurações]) jqXHR.done(function( data, textStatus, jqXHR ) {}); jqXHR.fail(function( jqXHR, textStatus, errorThrown ) {}); jqXHR.always(function( jqXHR ) {}); Parâmetros # Parâmetro Detalhes URL Especifica a URL para a qual a solicitação será enviada configurações um objeto contendo vários valores que afetam o comportamento da solicitação tipo O método HTTP a ser usado para a solicitação dados Dados a enviar pelo pedido sucesso Uma função de retorno de chamada a ser chamada se a solicitação for bem-sucedida erro Um retorno de chamada para lidar com o erro código de estado Um objeto de códigos e funções HTTP numéricos a ser chamado quando a resposta tiver o código correspondente dataType O tipo de dados que você espera do servidor contentType Tipo de conteúdo dos dados a serem enviados ao servidor.</description>
    </item>
    
    <item>
      <title>Seletores</title>
      <link>https://www.wikiod.com/pt/jquery/seletores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/seletores/</guid>
      <description>Um seletor jQuery seleciona ou encontra um elemento DOM (document object model) em um documento HTML. Ele é usado para selecionar elementos HTML com base em id, nome, tipos, atributos, classe e etc. É baseado em seletores CSS existentes.
Sintaxe # Tag: Sem marcador, use a tag diretamente Código: #id Classe: .className Atributo: [attributeName] Atributo com valor: [attributeName =&#39;value&#39;] O atributo começa com o valor ^=: [attributeName ^= &#39;value&#39;] O atributo termina com o valor $=: [attributeName $=&#39;value&#39;] O atributo contém o valor *= : [attributeName *= &#39;value&#39;] Pseudo-seletor: :pseudo-seletor Qualquer descendente: Espaço entre seletores Filhos diretos: &amp;gt; entre seletores Irmão adjacente após o primeiro: + Irmão não adjacente após o primeiro: ~ Ou: , ​​(vírgula) entre seletor Ao escrever selectors para class ou id ou attribute que contém alguns caracteres especiais como</description>
    </item>
    
    <item>
      <title>evento pronto para documento</title>
      <link>https://www.wikiod.com/pt/jquery/evento-pronto-para-documento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/evento-pronto-para-documento/</guid>
      <description>O que é document-ready e como devo usá-lo? # O código jQuery geralmente é encapsulado em jQuery(function($) { ... }); para que ele seja executado somente após o DOM terminar de carregar.
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; jQuery(function($) { // this will set the div&#39;s text to &amp;quot;Hello&amp;quot;. $(&amp;quot;#myDiv&amp;quot;).text(&amp;quot;Hello&amp;quot;); }); &amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;myDiv&amp;quot;&amp;gt;Text&amp;lt;/div&amp;gt; Isso é importante porque jQuery (e JavaScript em geral) não pode selecionar um elemento DOM que não foi renderizado na página.</description>
    </item>
    
    <item>
      <title>Método jQuery .animate()</title>
      <link>https://www.wikiod.com/pt/jquery/metodo-jquery-animate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/metodo-jquery-animate/</guid>
      <description>Sintaxe # (seletor).animate({estilos},{opções}) Parâmetros # Parâmetro Detalhes propriedades Um objeto de propriedades e valores CSS para o qual a animação se moverá duration (padrão: 400) Uma string ou número determinando por quanto tempo a animação será executada easing (padrão: swing) Uma string indicando qual função de atenuação deve ser usada para a transição completo Uma função a ser chamada assim que a animação for concluída, chamada uma vez por elemento correspondente.</description>
    </item>
    
    <item>
      <title>Eventos</title>
      <link>https://www.wikiod.com/pt/jquery/eventos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/eventos/</guid>
      <description>jQuery lida internamente com eventos através da função addEventListener. Isso significa que é perfeitamente legal ter mais de uma função vinculada ao mesmo evento para o mesmo elemento DOM.
Eventos delegados # Vamos começar com exemplo. Aqui está um exemplo muito simples de HTML.
Exemplo de HTML &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;some_url/&amp;quot;&amp;gt;Link 1&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;some_url/&amp;quot;&amp;gt;Link 2&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;some_url/&amp;quot;&amp;gt;Link 3&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; O problema Agora, neste exemplo, queremos adicionar um ouvinte de evento a todos os elementos &amp;lt;a&amp;gt;.</description>
    </item>
    
    <item>
      <title>Manipulação de DOM</title>
      <link>https://www.wikiod.com/pt/jquery/manipulacao-de-dom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/manipulacao-de-dom/</guid>
      <description>Criando elementos DOM # A função jQuery (geralmente conhecida como $) pode ser usada tanto para selecionar elementos quanto para criar novos elementos.
var myLink = $(&#39;&amp;lt;a href=&amp;quot;http://stackexchange.com&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&#39;); Opcionalmente, você pode passar um segundo argumento com atributos de elemento:
var myLink = $(&#39;&amp;lt;a&amp;gt;&#39;, { &#39;href&#39;: &#39;http://stackexchange.com&#39; }); &#39;&amp;lt;a&amp;gt;&#39; &amp;ndash;&amp;gt; O primeiro argumento especifica o tipo de elemento DOM que você deseja criar. Neste exemplo é uma âncora, mas pode ser qualquer coisa nesta lista.</description>
    </item>
    
    <item>
      <title>Manipulação de CSS</title>
      <link>https://www.wikiod.com/pt/jquery/manipulacao-de-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/manipulacao-de-css/</guid>
      <description>Sintaxe # .css( cssProperty ) // Obtém o valor da propriedade CSS renderizada .css( [cssProperty , &amp;hellip;] ) // Obtém valores do Array de cssProperties .css( cssProperty, value ) // Definir valor .css( {cssProperty:value, &amp;hellip;} ) // Definir propriedades e valores .css( cssProperty, function ) // Expor a cssProperty a uma função de retorno de chamada Valores renderizados
Se uma unidade responsiva for usada (como &amp;quot;auto&amp;quot;, &amp;quot;%&amp;quot;, &amp;quot;vw&amp;quot; etc.), .css() retornará o valor renderizado real em px</description>
    </item>
    
    <item>
      <title>Travessia do DOM</title>
      <link>https://www.wikiod.com/pt/jquery/travessia-do-dom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/travessia-do-dom/</guid>
      <description>Selecione os filhos do elemento # Para selecionar os filhos de um elemento, você pode usar o método children().
&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt; &amp;lt;h2&amp;gt;A headline&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;Lorem ipsum dolor sit amet...&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Praesent quis dolor turpis...&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; Altere a cor de todos os filhos do elemento .parent:
$(&#39;.parent&#39;).children().css(&amp;quot;color&amp;quot;, &amp;quot;green&amp;quot;); O método aceita um argumento selector opcional que pode ser usado para filtrar os elementos que são retornados.
// Only get &amp;quot;p&amp;quot; children $(&#39;.parent&#39;).children(&amp;quot;p&amp;quot;).css(&amp;quot;color&amp;quot;, &amp;quot;green&amp;quot;); Iterando sobre a lista de elementos jQuery # Quando você precisa iterar sobre a lista de elementos jQuery.</description>
    </item>
    
    <item>
      <title>Plug-ins</title>
      <link>https://www.wikiod.com/pt/jquery/plug-ins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jquery/plug-ins/</guid>
      <description>Plugins - Introdução # A API do jQuery pode ser estendida adicionando ao seu protótipo. Por exemplo, a API existente já tem muitas funções disponíveis como .hide(), .fadeIn(), .hasClass(), etc.
O protótipo do jQuery é exposto através de $.fn, o código fonte contém a linha
jQuery.fn = jQuery.prototype Adicionar funções a este protótipo permitirá que essas funções estejam disponíveis para serem chamadas de qualquer objeto jQuery construído (o que é feito implicitamente com cada chamada para jQuery, ou cada chamada para $, se você preferir).</description>
    </item>
    
  </channel>
</rss>
