<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial epplus on </title>
    <link>https://www.wikiod.com/pt/docs/epplus/</link>
    <description>Recent content in Tutorial epplus on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/epplus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao epplus</title>
      <link>https://www.wikiod.com/pt/epplus/introducao-ao-epplus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/introducao-ao-epplus/</guid>
      <description>Instalação # Baixe os arquivos do CodePlex e adicione-os ao projeto.
Ou instale os arquivos com o Gerenciador de Pacotes.
PM&amp;gt; Install-Package EPPlus Começando # //Create a new ExcelPackage using (ExcelPackage excelPackage = new ExcelPackage()) { //Set some properties of the Excel document excelPackage.Workbook.Properties.Author = &amp;quot;VDWWD&amp;quot;; excelPackage.Workbook.Properties.Title = &amp;quot;Title of Document&amp;quot;; excelPackage.Workbook.Properties.Subject = &amp;quot;EPPlus demo export data&amp;quot;; excelPackage.Workbook.Properties.Created = DateTime.Now; //Create the WorkSheet ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(&amp;quot;Sheet 1&amp;quot;); //Add some text to cell A1 worksheet.</description>
    </item>
    
    <item>
      <title>Criar fórmulas e calcular intervalos</title>
      <link>https://www.wikiod.com/pt/epplus/criar-formulas-e-calcular-intervalos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/criar-formulas-e-calcular-intervalos/</guid>
      <description>Exemplos básicos de como criar células com uma fórmula para cálculos na planilha do Excel.
Adicionar fórmulas a uma célula # //set the total value of cells in range A1 - A25 into A27 worksheet.Cells[&amp;quot;A27&amp;quot;].Formula = &amp;quot;=SUM(A1:A25)&amp;quot;; //set the number of cells with content in range C1 - C25 into C27 worksheet.Cells[&amp;quot;C27&amp;quot;].Formula = &amp;quot;=COUNT(C1:C25)&amp;quot;; //fill column K with the sum of each row, range A - J for (int i = 1; i &amp;lt;= 25; i++) { var cell = worksheet.</description>
    </item>
    
    <item>
      <title>Salvando o documento do Excel</title>
      <link>https://www.wikiod.com/pt/epplus/salvando-o-documento-do-excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/salvando-o-documento-do-excel/</guid>
      <description>Exemplos de como salvar a planilha Excel criada no Disco ou enviá-la para o Navegador.
Salvar em disco # //Using File.WriteAllBytes using (ExcelPackage excelPackage = new ExcelPackage()) { //create a new Worksheet ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(&amp;quot;Sheet 1&amp;quot;); //add some text to cell A1 worksheet.Cells[&amp;quot;A1&amp;quot;].Value = &amp;quot;My second EPPlus spreadsheet!&amp;quot;; //convert the excel package to a byte array byte[] bin = excelPackage.GetAsByteArray(); //the path of the file string filePath = &amp;quot;C:\\ExcelDemo.xlsx&amp;quot;; //or if you use asp.</description>
    </item>
    
    <item>
      <title>Importando dados de um arquivo existente</title>
      <link>https://www.wikiod.com/pt/epplus/importando-dados-de-um-arquivo-existente/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/importando-dados-de-um-arquivo-existente/</guid>
      <description>Como importar dados de um arquivo Excel ou CSV existente.
Importar dados do arquivo Excel # //create a list to hold all the values List&amp;lt;string&amp;gt; excelData = new List&amp;lt;string&amp;gt;(); //read the Excel file as byte array byte[] bin = File.ReadAllBytes(&amp;quot;C:\\ExcelDemo.xlsx&amp;quot;); //or if you use asp.net, get the relative path byte[] bin = File.ReadAllBytes(Server.MapPath(&amp;quot;ExcelDemo.xlsx&amp;quot;)); //create a new Excel package in a memorystream using (MemoryStream stream = new MemoryStream(bin)) using (ExcelPackage excelPackage = new ExcelPackage(stream)) { //loop all worksheets foreach (ExcelWorksheet worksheet in excelPackage.</description>
    </item>
    
    <item>
      <title>Validação de entrada do usuário</title>
      <link>https://www.wikiod.com/pt/epplus/validacao-de-entrada-do-usuario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/validacao-de-entrada-do-usuario/</guid>
      <description>Como validar as entradas do usuário. A validação restringe os valores que um usuário pode inserir em uma célula e/ou definir uma caixa de combinação para o usuário selecionar o valor para a célula. Opcionalmente, uma mensagem pode ser exibida quando o usuário clica em uma célula e uma mensagem de erro, quando a validação falha.
Validação de lista # //Add a List validation to B column. Values should be in a list var val = worksheet.</description>
    </item>
    
    <item>
      <title>Tabelas</title>
      <link>https://www.wikiod.com/pt/epplus/tabelas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/tabelas/</guid>
      <description>Este tópico descreve como adicionar e estilizar tabelas
Adicionando e formatando uma tabela # //Using statement for ExcelTable and TableStyles using OfficeOpenXml.Table; //Defining the tables parameters int firstRow =1; int lastRow = worksheet.Dimension.End.Row; int firstColumn = 1; int lastColumn = worksheet.Dimension.End.Column; ExcelRange rg = worksheet.Cells[firstRow, firstColumn, lastRow, LastColumn]; string tableName = &amp;quot;Table1&amp;quot;; //Ading a table to a Range ExcelTable tab = worksheet.Tables.Add(rg, tableName); //Formating the table style tab.TableStyle = TableStyles.Light8; </description>
    </item>
    
    <item>
      <title>Tabela Dinâmica</title>
      <link>https://www.wikiod.com/pt/epplus/tabela-dinamica/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/tabela-dinamica/</guid>
      <description>A tabela dinâmica é um tipo de tabela interativa, que pode ser usada para calcular dados, como obter soma ou contar dados. Além disso, os usuários podem alterar o layout da tabela dinâmica para analisar dados de diferentes maneiras ou reatribuir o rótulo de linha/coluna. Sempre que os usuários alterarem o layout, os dados serão recalculados na tabela dinâmica.
Criando uma tabela dinâmica # //create a new ExcelPackage using (ExcelPackage excelPackage = new ExcelPackage()) { //create 2 WorkSheets.</description>
    </item>
    
    <item>
      <title>Anexar dados ao documento existente</title>
      <link>https://www.wikiod.com/pt/epplus/anexar-dados-ao-documento-existente/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/anexar-dados-ao-documento-existente/</guid>
      <description>Como anexar dados a um documento do Excel já existente.
Anexando dados # //the path of the file string filePath = &amp;quot;C:\\ExcelDemo.xlsx&amp;quot;; //or if you use asp.net, get the relative path filePath = Server.MapPath(&amp;quot;ExcelDemo.xlsx&amp;quot;); //create a fileinfo object of an excel file on the disk FileInfo file = new FileInfo(filePath); //create a new Excel package from the file using (ExcelPackage excelPackage = new ExcelPackage(file)) { //create an instance of the the first sheet in the loaded file ExcelWorksheet worksheet = excelPackage.</description>
    </item>
    
    <item>
      <title>Valores de formatação</title>
      <link>https://www.wikiod.com/pt/epplus/valores-de-formatacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/valores-de-formatacao/</guid>
      <description>Como obter a formatação desejada dos valores DateTime e Numeric.
Formatação de números # //integer (not really needed unless you need to round numbers, Excel with use default cell properties) worksheet.Cells[&amp;quot;A1:A25&amp;quot;].Style.Numberformat.Format = &amp;quot;0&amp;quot;; //integer without displaying the number 0 in the cell worksheet.Cells[&amp;quot;A1:A25&amp;quot;].Style.Numberformat.Format = &amp;quot;#&amp;quot;; //number with 1 decimal place worksheet.Cells[&amp;quot;A1:A25&amp;quot;].Style.Numberformat.Format = &amp;quot;0.0&amp;quot;; //number with 2 decimal places worksheet.Cells[&amp;quot;A1:A25&amp;quot;].Style.Numberformat.Format = &amp;quot;0.00&amp;quot;; //number with 2 decimal places and thousand separator worksheet.Cells[&amp;quot;A1:A25&amp;quot;].Style.Numberformat.Format = &amp;quot;#,##0.</description>
    </item>
    
    <item>
      <title>Colunas e Linhas</title>
      <link>https://www.wikiod.com/pt/epplus/colunas-e-linhas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/epplus/colunas-e-linhas/</guid>
      <description>Este tópico contém informações sobre como trabalhar com colunas e linhas, como redimensionamento, ocultação, ajuste automático
Colunas de ajuste automático # //Make all text fit the cells worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns(); //Autofit with minimum size for the column. double minimumSize = 10; worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns(minimumSize); //Autofit with minimum and maximum size for the column. double maximumSize = 50; worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns(minimumSize, maximumSize); //optional use this to make all columms just a bit wider, text would sometimes still overflow after AutoFitColumns().</description>
    </item>
    
  </channel>
</rss>
