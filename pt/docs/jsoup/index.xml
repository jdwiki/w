<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Jsoup on </title>
    <link>https://www.wikiod.com/pt/docs/jsoup/</link>
    <description>Recent content in Tutorial Jsoup on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/jsoup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com Jsoup</title>
      <link>https://www.wikiod.com/pt/jsoup/comecando-com-jsoup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsoup/comecando-com-jsoup/</guid>
      <description>Extraia as URLs e títulos dos links # Jsoup pode ser usado para extrair facilmente todos os links de uma página da web. Neste caso, podemos usar Jsoup para extrair apenas links específicos que queremos, aqui, aqueles em um cabeçalho h3 em uma página. Também podemos obter o texto dos links.
Document doc = Jsoup.connect(&amp;quot;http://stackoverflow.com&amp;quot;).userAgent(&amp;quot;Mozilla&amp;quot;).get(); for (Element e: doc.select(&amp;quot;a.question-hyperlink&amp;quot;)) { System.out.println(e.attr(&amp;quot;abs:href&amp;quot;)); System.out.println(e.text()); System.out.println(); } Isso dá a seguinte saída:
http://stackoverflow.com/questions/12920296/past-5-week-calculation-in-webi-bo-4-0 Past 5 week calculation in WEBI (BO 4.</description>
    </item>
    
    <item>
      <title>Seletores</title>
      <link>https://www.wikiod.com/pt/jsoup/seletores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsoup/seletores/</guid>
      <description>Um seletor é uma cadeia de seletores simples, separados por combinadores. Os seletores não diferenciam maiúsculas de minúsculas (inclusive em relação a elementos, atributos e valores de atributo).
O seletor universal (*) está implícito quando nenhum seletor de elemento é fornecido (ou seja, *.header e .header são equivalentes).
Padrão Partidas Exemplo * qualquer elemento * marca elementos com o nome de tag fornecido div ns|E elementos do tipo E no namespace ns fb|name encontra elementos fb:name #id elementos com ID de atributo de &amp;ldquo;id&amp;rdquo; div#wrap, #logo .</description>
    </item>
    
    <item>
      <title>Entrando em sites com Jsoup</title>
      <link>https://www.wikiod.com/pt/jsoup/entrando-em-sites-com-jsoup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsoup/entrando-em-sites-com-jsoup/</guid>
      <description>Uma solicitação POST de autenticação mais abrangente com Jsoup # A maioria dos sites requer um processo muito mais complicado do que o demonstrado acima.
As etapas comuns para fazer login em um site são:
Obtenha o &amp;lsquo;cookie&amp;rsquo; exclusivo do formulário de login inicial. Inspecione o formulário de login para ver qual é o URL de destino para a solicitação de autenticação Analise o formulário de login para verificar se há algum token de segurança que precise ser enviado junto com o nome de usuário e a senha.</description>
    </item>
    
    <item>
      <title>Rastreamento da Web com Jsoup</title>
      <link>https://www.wikiod.com/pt/jsoup/rastreamento-da-web-com-jsoup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsoup/rastreamento-da-web-com-jsoup/</guid>
      <description>Extraindo endereços de e-mail e links para outras páginas # O Jsoup pode ser usado para extrair links e endereços de e-mail de uma página da Web, portanto, &amp;ldquo;bot coletor de endereços de e-mail da Web&amp;rdquo; a página.
public class JSoupTest { public static void main(String[] args) throws IOException { Document doc = Jsoup.connect(&amp;quot;http://stackoverflow.com/questions/15893655/&amp;quot;).userAgent(&amp;quot;Mozilla&amp;quot;).get(); Pattern p = Pattern.compile(&amp;quot;[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+&amp;quot;); Matcher matcher = p.matcher(doc.text()); Set&amp;lt;String&amp;gt; emails = new HashSet&amp;lt;String&amp;gt;(); while (matcher.find()) { emails.</description>
    </item>
    
    <item>
      <title>Formatando a saída HTML</title>
      <link>https://www.wikiod.com/pt/jsoup/formatando-a-saida-html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsoup/formatando-a-saida-html/</guid>
      <description>Parâmetros # Parâmetro Detalhe contorno booleano() Obter se o modo de estrutura de tópicos estiver ativado. O padrão é falso. Se habilitado, os métodos de saída HTML considerarão todas as tags como bloco. Document.OutputSettings outline(boolean) Ative ou desative o modo de estrutura de tópicos HTML. Jsoup 1.9.2 API
Exibe todos os elementos como bloco # Por padrão, o Jsoup exibirá apenas elementos em nível de bloco com uma quebra de linha à direita.</description>
    </item>
    
    <item>
      <title>Analisando páginas geradas por Javascript</title>
      <link>https://www.wikiod.com/pt/jsoup/analisando-paginas-geradas-por-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsoup/analisando-paginas-geradas-por-javascript/</guid>
      <description>Analisando a página gerada por JavaScript com Jsoup e HtmUnit # page.html - código-fonte
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;loadData.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body onLoad=&amp;quot;loadData()&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;table id=&amp;quot;data&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;col1&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;col2&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; loadData.js
// append rows and cols to table.data in page.html function loadData() { data = document.getElementById(&amp;quot;data&amp;quot;); for (var row = 0; row &amp;lt; 2; row++) { var tr = document.createElement(&amp;quot;tr&amp;quot;); for (var col = 0; col &amp;lt; 2; col++) { td = document.</description>
    </item>
    
  </channel>
</rss>
