<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial PubNub on </title>
    <link>https://www.wikiod.com/pt/docs/pubnub/</link>
    <description>Recent content in Tutorial PubNub on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/pubnub/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao PubNub</title>
      <link>https://www.wikiod.com/pt/pubnub/introducao-ao-pubnub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/introducao-ao-pubnub/</guid>
      <description>Publicar no sucesso da assinatura (conectar) # Este exemplo mostra como se inscrever e, uma vez bem-sucedido, publicar uma mensagem nesse canal. Ele também demonstra o conjunto completo de parâmetros que podem ser incluídos na função de retorno de chamada message do subscribe.
pubnub = PUBNUB({ publish_key : &#39;your_pub_key&#39;, subscribe_key : &#39;your_sub_key&#39; }); pubnub.subscribe({ channel : &amp;quot;channel-1&amp;quot;, message : function (message, envelope, channelOrGroup, time, channel) { console.log( &amp;quot;Message Received.&amp;quot; + &amp;quot;\n&amp;quot; + &amp;quot;Channel or Group: &amp;quot; + JSON.</description>
    </item>
    
    <item>
      <title>Presença</title>
      <link>https://www.wikiod.com/pt/pubnub/presenca/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/presenca/</guid>
      <description>Presença em JavaScript # A presença funciona enviando mensagens quando um usuário entra, sai ou expira em um canal específico. Você pode ouvir essas mensagens para rastrear quem está em um canal e há quanto tempo eles fizeram alguma coisa.
Primeiro, certifique-se de que cada usuário seja um UUID. Defina isso ao inicializar o PubNub:
var pubnub = PUBNUB({ publish_key: &#39;my_pub_key&#39;, subscribe_key: &#39;my_sub_key&#39;, uuid: &#39;1234_some_uuid&#39; }); Agora, quando você se conectar a um canal, adicione um ouvinte extra para eventos join.</description>
    </item>
    
    <item>
      <title>Olá Mundo</title>
      <link>https://www.wikiod.com/pt/pubnub/ola-mundo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/ola-mundo/</guid>
      <description>&amp;lt;init&amp;gt; (ou seja, require (&amp;quot;pubnub&amp;quot;))
Inicialize uma instância do PubNub para invocar operações.
Parâmetro Detalhes publicar_chave String - sua chave de publicação da sua conta do PubNub Admin Dashboard chave_de_assinatura String - sua chave de publicação da sua conta do PubNub Admin Dashboard subscrever
Assine um(s) canal(is) e forneça um meio para receber mensagens publicadas no(s) canal(is).
Parâmetro Detalhes canal String - nome do canal ou lista de nomes de canais delimitada por vírgulas mensagem function - a função de retorno de chamada que receberá as mensagens publicadas nos canais de assinatura conectar function - a função de retorno de chamada que será chamada quando a assinatura dos canais for bem-sucedida publicar</description>
    </item>
    
    <item>
      <title>UUIDs</title>
      <link>https://www.wikiod.com/pt/pubnub/uuids/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/uuids/</guid>
      <description>JavaScript/SDK da Web # Para JavaScript, aqui está o código que recomendamos para gerar, persistir e recuperar um UUID. Isso pode ser encapsulado em uma função pode ser chamada diretamente da função PUBNUB.init em vez da solução em linha de duas etapas abaixo.
// get/create/store UUID var UUID = PUBNUB.db.get(&#39;session&#39;) || (function(){ var uuid = PUBNUB.uuid(); PUBNUB.db.set(&#39;session&#39;, uuid); return uuid; })(); // init PUBNUB object with UUID value var pubnub = PUBNUB.</description>
    </item>
    
    <item>
      <title>Filtragem de mensagens</title>
      <link>https://www.wikiod.com/pt/pubnub/filtragem-de-mensagens/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/filtragem-de-mensagens/</guid>
      <description>Stream Filter fornece a capacidade de filtrar mensagens no servidor antes de serem enviadas a um assinante, é uma solicitação popular. Com a introdução de nossos SDKs v4.x, agora você pode fazer isso usando metadados de mensagens.
Evite receber suas próprias mensagens usando Objective-C # A configuração de um filtro se aplica a todos os canais nos quais você se inscreverá desse cliente específico. Este filtro de cliente exclui mensagens que possuem o UUID deste assinante definido no UUID do remetente:</description>
    </item>
    
    <item>
      <title>Gerenciador de acesso</title>
      <link>https://www.wikiod.com/pt/pubnub/gerenciador-de-acesso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/gerenciador-de-acesso/</guid>
      <description>gerenciador de acesso pubnub no lado do servidor # O PubNub Access Manager (PAM) estende a estrutura de segurança existente do PubNub, permitindo que os desenvolvedores criem e imponham acesso seguro a canais em toda a PubNub Real Time Network.
O Access Manager permite que você gerencie permissões granulares para seus aplicativos e fluxos de dados em tempo real, crie vários níveis de permissão, conceda e revogue acesso e audite o acesso do usuário.</description>
    </item>
    
    <item>
      <title>Callbacks específicos do canal para SDKs v4</title>
      <link>https://www.wikiod.com/pt/pubnub/callbacks-especificos-do-canal-para-sdks-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/callbacks-especificos-do-canal-para-sdks-v4/</guid>
      <description>Retornos de chamada específicos do canal do SDK do JavaScript v4 # No PubNub JavaScript v3, você pode implementar um retorno de chamada exclusivo para cada canal em que se inscreveu, desde que tenha chamado a função de inscrição para cada canal e implementado o retorno de chamada nessa inscrição assim:
var pubnub = new PubNub({ publishKey: &amp;quot;your-pub-key&amp;quot;, subscribeKey: &amp;quot;your-sub-key&amp;quot; }); pubnub.subscribe({ channel: &#39;ch1&#39;, message: function (m) { console.log(m + &amp;quot; ch1 callback&amp;quot;); } }); pubnub.</description>
    </item>
    
    <item>
      <title>Grupos de canais do controlador de fluxo</title>
      <link>https://www.wikiod.com/pt/pubnub/grupos-de-canais-do-controlador-de-fluxo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/grupos-de-canais-do-controlador-de-fluxo/</guid>
      <description>Ao usar grupos de canais, você não deve adicionar ou remover canais em seus aplicativos do lado do cliente. Este exemplo mostra a adição de canais a um grupo de canais e a inscrição nesse grupo de canais para simplificar. Mas em um cenário do mundo real, você deve fazer com que seu servidor faça toda a adição/remoção de canais de/para grupos de canais. Ao habilitar o Access Manager, você precisará da permissão gerenciar para adicionar/remover canais de/para grupos de canais e nunca deve conceder a permissão gerenciar aos clientes por motivos de segurança.</description>
    </item>
    
    <item>
      <title>webhook</title>
      <link>https://www.wikiod.com/pt/pubnub/webhook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/webhook/</guid>
      <description>webhook do pubnub # Webhook Overview Um WebHook é um retorno de chamada HTTP: um HTTP POST que ocorre quando algo acontece; uma simples notificação de evento via HTTP POST. Um aplicativo da Web que implementa WebHooks POST uma mensagem para uma URL quando certas coisas acontecem.
PubNub Presence Presença Pubnub tudo sobre a presença do usuário na plataforma pubnub. fornece a presença do usuário quando ele está entrando, saindo de um canal ou quando há mudança de estado do usuário.</description>
    </item>
    
    <item>
      <title>Armazenamento e reprodução</title>
      <link>https://www.wikiod.com/pt/pubnub/armazenamento-e-reproducao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pubnub/armazenamento-e-reproducao/</guid>
      <description>Parâmetros # Parâmetro Tipo / Obrigatório / Padrão Descrição canal String / Yes Especifica o canal do qual retornar as mensagens do histórico. reverso Boolean / No / false Definir como true irá percorrer a linha do tempo em sentido inverso, começando com a mensagem mais antiga primeiro. O padrão é falso. Se os argumentos inicial e final forem fornecidos, reverse será ignorado e as mensagens serão retornadas começando com a mensagem mais recente.</description>
    </item>
    
  </channel>
</rss>
