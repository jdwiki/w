<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial apache-poi on </title>
    <link>https://www.wikiod.com/pt/docs/apache-poi/</link>
    <description>Recent content in Tutorial apache-poi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/apache-poi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com apache-poi</title>
      <link>https://www.wikiod.com/pt/apache-poi/comecando-com-apache-poi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/apache-poi/comecando-com-apache-poi/</guid>
      <description>Instalação ou configuração # Instruções detalhadas sobre como configurar ou instalar o apache-poi.</description>
    </item>
    
    <item>
      <title>Criação simples do Excel (XLSX)</title>
      <link>https://www.wikiod.com/pt/apache-poi/criacao-simples-do-excel-xlsx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/apache-poi/criacao-simples-do-excel-xlsx/</guid>
      <description>Excel básico # String fileName = &amp;quot;Fruit.xlsx&amp;quot;; String sheetName = &amp;quot;Apples&amp;quot;; XSSFWorkbook wb = new XSSFWorkbook(); XSSFSheet sheet = wb.createSheet(sheetName) ; for (int r=0;r &amp;lt; 3; r++ ) { XSSFRow row = sheet.createRow(r); //iterating c number of columns for (int c=0;c &amp;lt; 3; c++ ) { XSSFCell cell = row.createCell(c); cell.setCellValue(&amp;quot;Nice apple, in row: &amp;quot;+r+&amp;quot; and col: &amp;quot;+c); } } try(FileOutputStream fos = new FileOutputStream(fileName)) { wb.write(fos); } </description>
    </item>
    
    <item>
      <title>Introdução ao NPOI</title>
      <link>https://www.wikiod.com/pt/apache-poi/introducao-ao-npoi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/apache-poi/introducao-ao-npoi/</guid>
      <description>É a versão .NET do projeto POI Java. permite ler/escrever arquivos xls, doc, ppt sem o Microsoft Office instalado. Detalhes sobre a documentação estão disponíveis aqui: https://github.com/tonyqus/npoi
Instalando NPOI # A melhor maneira de incluir todas as bibliotecas relacionadas ao NPOI é o NUGet Package Manager. Procure por NPOI na janela do gerenciador de pacotes NUGet.
Uma vez instalado com sucesso, toda a biblioteca necessária aparecerá na seção de referência do seu projeto atual Em seguida, inclua o NPOI em seu arquivo assim</description>
    </item>
    
    <item>
      <title>Abordagem de restrição de validação de dados NPOI para data, hora, item de lista, e-mail etc. para arquivo excel XSSF(.xslx) usando c#</title>
      <link>https://www.wikiod.com/pt/apache-poi/abordagem-de-restricao-de-validacao-de-dados-npoi-para-data-hora-item-de-lista-e-mail-etc-para-arquivo-excel-xssfxslx-usando-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/apache-poi/abordagem-de-restricao-de-validacao-de-dados-npoi-para-data-hora-item-de-lista-e-mail-etc-para-arquivo-excel-xssfxslx-usando-c/</guid>
      <description>Criar a restrição de validação de dados pode ser complicado e demorado no NPOI. Eu compartilhei um pouco da minha abordagem viável. Essas abordagens darão uma boa ideia para personalizar seus próprios tipos de restrição.
Defina as restrições de data para valores de campo de data entre 01/01/1900 a 31/12/2119 com formato de data mm/dd//yyyyy; # int DVRowLimit = (Int16.MaxValue); CellRangeAddressList cellRangeFieldsType1 = new CellRangeAddressList(1, DVRowLimit, targetFirstCol, targetLastCol); XSSFDataValidationConstraint dvConstraint = (XSSFDataValidationConstraint)validationHelper.</description>
    </item>
    
    <item>
      <title>Abordagem de validação de dados NPOI para arquivo excel XSSF (.xslx) usando c#</title>
      <link>https://www.wikiod.com/pt/apache-poi/abordagem-de-validacao-de-dados-npoi-para-arquivo-excel-xssf-xslx-usando-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/apache-poi/abordagem-de-validacao-de-dados-npoi-para-arquivo-excel-xssf-xslx-usando-c/</guid>
      <description>A validação de dados permite que o usuário crie uma lista suspensa e restrinja os valores na célula a essas entradas. Devido à limitação, o Excel não pode vincular mais de 256 caracteres programaticamente. Para vincular mais de 256 caracteres, pode-se seguir a abordagem explicada.
Quando a soma da contagem total de caracteres de todos os itens da lista for inferior a 256 # Você pode ler todos os itens de qualquer arquivo de configuração ou digitá-lo em linha.</description>
    </item>
    
  </channel>
</rss>
