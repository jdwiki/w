<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de bioinformática on </title>
    <link>https://www.wikiod.com/pt/docs/bioinformatics/</link>
    <description>Recent content in Tutorial de bioinformática on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/bioinformatics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução à bioinformática</title>
      <link>https://www.wikiod.com/pt/bioinformatics/introducao-a-bioinformatica/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bioinformatics/introducao-a-bioinformatica/</guid>
      <description>Usando o mapeamento de sequências de DNA para responder a questões biológicas # Muitas questões biológicas podem ser traduzidas em um problema de sequenciamento de DNA. Por exemplo, se você quiser saber o nível de expressão de um gene, você pode: copiar seus mRNAs em moléculas de DNA complementares, sequenciar cada uma das moléculas de DNA resultantes, mapear essas sequências de volta ao genoma de referência e então usar a contagem de alinhamentos sobrepostos o gene como um proxy de sua expressão (ver RNA-seq).</description>
    </item>
    
    <item>
      <title>Linearização de uma sequência FASTA.</title>
      <link>https://www.wikiod.com/pt/bioinformatics/linearizacao-de-uma-sequencia-fasta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bioinformatics/linearizacao-de-uma-sequencia-fasta/</guid>
      <description>Linearize uma sequência FASTA com AWK # Lendo linha por linha # awk &#39;/^&amp;gt;/ {printf(&amp;quot;%s%s\t&amp;quot;,(N&amp;gt;0?&amp;quot;\n&amp;quot;:&amp;quot;&amp;quot;),$0);N++;next;} {printf(&amp;quot;%s&amp;quot;,$0);} END {printf(&amp;quot;\n&amp;quot;);}&#39; &amp;lt; input.fa pode-se ler este script awk como:
se a linha atual ($0) começar como um cabeçalho fasta (^&amp;gt;). Em seguida, imprimimos um retorno de carro se esta não for a primeira sequência. (N&amp;gt;0?&amp;quot;\n&amp;quot;:&amp;quot;&amp;quot;) seguido pela própria linha ($0), seguido por uma tabulação (\t). E procuramos a próxima linha (next;) se a linha atual ($0) não iniciar como um cabeçalho fasta, este é o padrão awk padrão.</description>
    </item>
    
    <item>
      <title>Formatos de arquivo comuns</title>
      <link>https://www.wikiod.com/pt/bioinformatics/formatos-de-arquivo-comuns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bioinformatics/formatos-de-arquivo-comuns/</guid>
      <description>JEJUM # O formato de arquivo FASTA é usado para representar uma ou mais sequências de nucleotídeos ou aminoácidos como uma sequência contínua de caracteres. As sequências são anotadas com uma linha de comentário, que começa com o caractere &amp;gt;, que precede cada sequência. A linha de comentário normalmente é formatada de maneira uniforme, ditada pelo banco de dados de origem da sequência ou pelo software gerador. Por exemplo:
&amp;gt;gi|62241013|ref|NP_001014431.1| RAC-alpha serine/threonine-protein kinase [Homo sapiens] MSDVAIVKEGWLHKRGEYIKTWRPRYFLLKNDGTFIGYKERPQDVDQREAPLNNFSVAQCQLMKTERPRP NTFIIRCLQWTTVIERTFHVETPEEREEWTTAIQTVADGLKKQEEEEMDFRSGSPSDNSGAEEMEVSLAK PKHRVTMNEFEYLKLLGKGTFGKVILVKEKATGRYYAMKILKKEVIVAKDEVAHTLTENRVLQNSRHPFL TALKYSFQTHDRLCFVMEYANGGELFFHLSRERVFSEDRARFYGAEIVSALDYLHSEKNVVYRDLKLENL MLDKDGHIKITDFGLCKEGIKDGATMKTFCGTPEYLAPEVLEDNDYGRAVDWWGLGVVMYEMMCGRLPFY NQDHEKLFELILMEEIRFPRTLGPEAKSLLSGLLKKDPKQRLGGGSEDAKEIMQHRFFAGIVWQHVYEKK LSPPFKPQVTSETDTRYFDEEFTAQMITITPPDQDDSMECVDSERRPHFPQFSYSASGTA O exemplo acima ilustra a sequência de aminoácidos de uma isoforma dos genes AKT1 humanos, conforme obtido no banco de dados de proteínas NCBI.</description>
    </item>
    
    <item>
      <title>EXPLOSÃO</title>
      <link>https://www.wikiod.com/pt/bioinformatics/explosao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bioinformatics/explosao/</guid>
      <description>Crie um blastdb de DNA # Para comparar sequências de consulta com sequências de referência, você deve criar um blastdb de sua(s) referência(s). Isso é feito usando makeblastdb que é incluído quando você instala o blast.
makeblastdb -in &amp;lt;input fasta&amp;gt; -dbtype nucl -out &amp;lt;label for database&amp;gt; Então, se você tivesse um arquivo reference.fasta contendo os seguintes registros:
&amp;gt;reference_1 ATCGATAAA &amp;gt;reference_2 ATCGATCCC Você executaria o seguinte:
makeblastdb -in reference.fasta -dbtype nucl -out my_database Isso criaria os seguintes arquivos:</description>
    </item>
    
    <item>
      <title>Análise de sequência</title>
      <link>https://www.wikiod.com/pt/bioinformatics/analise-de-sequencia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bioinformatics/analise-de-sequencia/</guid>
      <description>Calcular o GC% de uma sequência # Em biologia molecular e genética, o conteúdo de GC (ou conteúdo de guanina-citosina, GC% em suma) é a porcentagem de bases nitrogenadas em uma molécula de DNA que são guanina ou citosina (de uma possibilidade de quatro diferentes, incluindo também adenina e timina).
Usando BioPython:
&amp;gt;&amp;gt;&amp;gt; from Bio.Seq import Seq &amp;gt;&amp;gt;&amp;gt; from Bio.Alphabet import IUPAC &amp;gt;&amp;gt;&amp;gt; from Bio.SeqUtils import GC &amp;gt;&amp;gt;&amp;gt; my_seq = Seq(&#39;GATCGATGGGCCTATATAGGATCGAAAATCGC&#39;, IUPAC.</description>
    </item>
    
    <item>
      <title>Samtools Básicos</title>
      <link>https://www.wikiod.com/pt/bioinformatics/samtools-basicos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bioinformatics/samtools-basicos/</guid>
      <description>Contar o número de registros por referência no bamfile # samtools idxstats thing.bam Converta sam em bam (e vice-versa) # Samtools pode ser usado para converter entre sam e bam:
-b indica que o arquivo de entrada estará no formato BAM -S indica que o stdout deve estar no formato SAM samtools view -sB thing.bam &amp;gt; thing.sam E para converter entre sam e bam:
samtools view thing.sam &amp;gt; thing.bam samtools sort thing.</description>
    </item>
    
    <item>
      <title>Linearizando um arquivo fastq</title>
      <link>https://www.wikiod.com/pt/bioinformatics/linearizando-um-arquivo-fastq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bioinformatics/linearizando-um-arquivo-fastq/</guid>
      <description>Usando Colar # $ gunzip -c input.fastq.gz | paste - - - - | head @IL31_4368:1:1:996:8507/2 TCCCTTACCCCCAAGCTCCATACCCTCCTAATGCCCACACCTCTTACCTTAGGA + FFCEFFFEEFFFFFFFEFFEFFFEFCFC&amp;lt;EEFEFFFCEFF&amp;lt;;EEFF=FEE?FCE @IL31_4368:1:1:996:21421/2 CAAAAACTTTCACTTTACCTGCCGGGTTTCCCAGTTTACATTCCACTGTTTGAC + &amp;gt;DBDDB,B9BAA4AAB7BB?7BBB=91;+*@;5&amp;lt;87+*=/*@@?9=73=.7)7* @IL31_4368:1:1:997:10572/2 GATCTTCTGTGACTGGAAGAAAATGTGTTACATATTACATTTCTGTCCCCATTG + E?=EECE&amp;lt;EEEE98EEEEAEEBD??BE@AEAB&amp;gt;&amp;lt;EEABCEEDEC&amp;lt;&amp;lt;EBDA=DEE @IL31_4368:1:1:997:15684/2 CAGCCTCAGATTCAGCATTCTCAAATTCAGCTGCGGCTGAAACAGCAGCAGGAC + EEEEDEEE9EAEEDEEEEEEEEEECEEAAEEDEE&amp;lt;CD=D=*BCAC?;CB,&amp;lt;D@, @IL31_4368:1:1:997:15249/2 AATGTTCTGAAACCTCTGAGAAAGCAAATATTTATTTTAATGAAAAATCCTTAT + EDEEC;EEE;EEE?EECE;7AEEEEEE07EECEA;D6D&amp;gt;+EE4E7EEE4;E=EA @IL31_4368:1:1:997:6273/2 ACATTTACCAAGACCAAAGGAAACTTACCTTGCAAGAATTAGACAGTTCATTTG + EEAAFFFEEFEFCFAFFAFCCFFEFEF&amp;gt;EFFFFB?ABA@ECEE=&amp;lt;F@DE@DDF; @IL31_4368:1:1:997:1657/2 CCCACCTCTCTCAATGTTTTCCATATGGCAGGGACTCAGCACAGGTGGATTAAT + A;0A?AA+@A&amp;lt;7A7019/&amp;lt;65,3A;&#39;&#39;&#39;07&amp;lt;A=&amp;lt;=&amp;gt;?7=?6&amp;amp;)&#39;9(&#39;*%,&amp;gt;/(&amp;lt; @IL31_4368:1:1:997:5609/2 TCACTATCAGAAACAGAATGTATAACTTCCAAATCAGTAGGAAACACAAGGAAA + AEECECBEC@A;AC=&amp;lt;AEEEEAEEEE&amp;gt;AC,CE?ECCE9EAEC4E:&amp;lt;C&amp;gt;AC@EE) @IL31_4368:1:1:997:14262/2 TGTTTTTTCTTTTTCTTTTTTTTTTGACAGTGCAGAGATTTTTTATCTTTTTAA + 97&#39;&amp;lt;2&amp;lt;.64.?7/3(891?=(6??6+&amp;lt;6&amp;lt;++/*..3(:&#39;/&#39;9::&#39;&#39;&amp;amp;(1&amp;lt;&amp;gt;.(, @IL31_4368:1:1:998:19914/2 GAATGAAAGCAGAGACCCTGATCGAGCCCCAGAAAGATACACCTCCAGATTTTA + C?=CECE4CD&amp;lt;?8@==;EBE&amp;lt;=0@:@@92@???6&amp;lt;991&amp;gt;.&amp;lt;?A=@5?@99;971 Usando Awk # $ gunzip -c input.fastq.gz | awk &#39;{printf(&amp;quot;%s%s&amp;quot;,$0,((NR+1)%4==1?&amp;quot;\n&amp;quot;:&amp;quot;\t&amp;quot;));}&#39; | head @IL31_4368:1:1:996:8507/2 TCCCTTACCCCCAAGCTCCATACCCTCCTAATGCCCACACCTCTTACCTTAGGA + FFCEFFFEEFFFFFFFEFFEFFFEFCFC&amp;lt;EEFEFFFCEFF&amp;lt;;EEFF=FEE?</description>
    </item>
    
  </channel>
</rss>
