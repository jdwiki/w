<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial do google-app-engine on </title>
    <link>https://www.wikiod.com/pt/docs/google-app-engine/</link>
    <description>Recent content in Tutorial do google-app-engine on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/google-app-engine/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao google-app-engine</title>
      <link>https://www.wikiod.com/pt/google-app-engine/introducao-ao-google-app-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-app-engine/introducao-ao-google-app-engine/</guid>
      <description>Configurar # Google AppEngine (GAE) é uma plataforma como serviço (PaaS) que oferece a capacidade de implantar aplicativos na &amp;ldquo;escala do Google&amp;rdquo;. É um dos muitos serviços no Google Cloud Platform (GCP). Os desenvolvedores podem integrar facilmente outros serviços, como Google Cloud Storage (GCS) e Google Cloud SQL no GCP. Os desenvolvedores podem escrever um conjunto de código que é executado localmente e pode ser facilmente implantado no Google Cloud Platform.</description>
    </item>
    
    <item>
      <title>EdgeCache</title>
      <link>https://www.wikiod.com/pt/google-app-engine/edgecache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-app-engine/edgecache/</guid>
      <description>Detalhes
Quando o Edge Cache está ativado e funcionando, o App Engine envia um cabeçalho age cujo valor é o tempo (em segundos) desde que a resposta foi armazenada em cache. Por exemplo, se a resposta foi armazenada em cache por dois minutos até agora, a resposta incluirá um cabeçalho de age: 120. Se nenhum cabeçalho age estiver sendo enviado, é um bom sinal de que você ainda não conseguiu que o Edge Cache funcione.</description>
    </item>
    
    <item>
      <title>Guia de início rápido do Google App Engine para Java</title>
      <link>https://www.wikiod.com/pt/google-app-engine/guia-de-inicio-rapido-do-google-app-engine-para-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-app-engine/guia-de-inicio-rapido-do-google-app-engine-para-java/</guid>
      <description>Antes de você começar # Antes de executar este exemplo, você deve:
Baixe e instale o Java SE Development Kit (JDK):
Baixar JDK
Baixe Apache Maven versão 3.3.9 ou superior:
Instale e configure o Maven para seu ambiente de desenvolvimento local.
Baixe o aplicativo Hello World # Criamos um aplicativo Hello World simples para Java para que você possa ter uma ideia rápida de como implantar um aplicativo no Google Cloud Platform.</description>
    </item>
    
    <item>
      <title>Exemplos de tempo de execução do Python para o Google Appengine</title>
      <link>https://www.wikiod.com/pt/google-app-engine/exemplos-de-tempo-de-execucao-do-python-para-o-google-appengine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-app-engine/exemplos-de-tempo-de-execucao-do-python-para-o-google-appengine/</guid>
      <description>NDB com Python no AppEngine # O NDB relaciona modelos como objetos python, que podem ser armazenados e acessados ​​no datastore Appengine NoSQL, disponível para todos os aplicativos AppEngine.
modelos.py
from google.appengine.ext import ndb # https://cloud.google.com/appengine/docs/python/ndb/properties class Series(ndb.Model): &amp;quot;&amp;quot;&amp;quot;TV Series Object&amp;quot;&amp;quot;&amp;quot; folder_name = ndb.StringProperty() title = ndb.StringProperty() rating = ndb.StringProperty() banner_blob_key = ndb.BlobKeyProperty() year = ndb.IntegerProperty() plot = ndb.TextProperty() genre = ndb.StringProperty(repeated=True) json_of_show = ndb.JsonProperty() date_added = ndb.DateTimeProperty(auto_now_add=True) date_updated = ndb.</description>
    </item>
    
    <item>
      <title>Início rápido com a API Users Python, autenticação do App Engine</title>
      <link>https://www.wikiod.com/pt/google-app-engine/inicio-rapido-com-a-api-users-python-autenticacao-do-app-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-app-engine/inicio-rapido-com-a-api-users-python-autenticacao-do-app-engine/</guid>
      <description>Usar a API de usuários é uma maneira muito simples e flexível de trabalhar a autenticação no App Engine, mas certifique-se de que seu aplicativo casos não requerem mais elementos para o ambiente de autenticação.
Observação: se você precisar de mais informações sobre a estrutura tradicional de um aplicativo do App Engine, consulte estas [informações](https://cloud.google.com/appengine/docs/standard/python/getting-started/ criando-livro de visitas).
A API de usuários permite:
Detectar se o usuário atual está conectado. Redirecione o usuário para a página de login apropriada para fazer login.</description>
    </item>
    
    <item>
      <title>Teste de unidade com armazenamento de dados</title>
      <link>https://www.wikiod.com/pt/google-app-engine/teste-de-unidade-com-armazenamento-de-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-app-engine/teste-de-unidade-com-armazenamento-de-dados/</guid>
      <description>Crie um contexto com um armazenamento de dados fortemente consistente. # Ao testar com a biblioteca de testes do Google App Engine, os desafios de consistência eventual estão presentes da mesma maneira que estarão na produção. Portanto, para gravar algo no armazenamento de dados para testar a recuperação, você precisa criar um contexto que seja fortemente consistente.
type Foo struct { Bar string } func TestDataStore(t *testing.T) { inst, err := aetest.</description>
    </item>
    
  </channel>
</rss>
