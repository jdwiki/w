<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sas Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/sas/</link>
    <description>Recent content in sas Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/sas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com sas</title>
      <link>https://www.wikiod.com/pt/sas/comecando-com-sas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/comecando-com-sas/</guid>
      <description>Instalação ou Configuração # O SAS pode ser executado no modelo cliente-servidor, usando o cliente thin do Enterprise Guide ou o cliente thin do SAS Studio (habilitado para web), ou no modo &amp;ldquo;servidor local&amp;rdquo;, onde um sistema SAS totalmente funcional está presente em uma máquina local (Windows ou desktop ou servidor Unix/Linux executando no modo interativo) e executado no modo Display Manager (o cliente local) ou por meio de um dos clientes cliente-servidor acima (conectado ao servidor instalado localmente).</description>
    </item>
    
    <item>
      <title>Formatos SAS</title>
      <link>https://www.wikiod.com/pt/sas/formatos-sas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/formatos-sas/</guid>
      <description>Informats e formatos são usados ​​para informar ao SAS como ler e gravar os dados, respectivamente. Informats são comumente usados ​​em uma etapa de dados ao ler dados de um arquivo externo. Informats raramente são usados ​​em PROCs. Os formatos são comumente usados ​​em etapas de dados e PROCs.
Os formatos SAS convertem valores numéricos ou de caracteres em valores de caracteres. Um formato pode ser aplicado usando uma instrução format ou put, que altera a forma como um valor é exibido, ou usando a função put para armazenar o valor formatado em uma nova variável.</description>
    </item>
    
    <item>
      <title>Enviando um e-mail com SAS</title>
      <link>https://www.wikiod.com/pt/sas/enviando-um-e-mail-com-sas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/enviando-um-e-mail-com-sas/</guid>
      <description>Existem várias razões pelas quais você pode encontrar para precisar de recursos de e-mail no SAS. Você pode estar enviando um e-mail para notificar alguém que um processo passou/falhou, você pode estar enviando um e-mail contendo Variáveis ​​de Macro que mostram quantos registros foram carregados no final do seu feed de dados, ou talvez você precise enviar alguns arquivos que conter relatórios. Seja qual for a sua necessidade, existem várias maneiras de enviar e-mails e arquivos no SAS.</description>
    </item>
    
    <item>
      <title>Resolvendo variáveis ​​de macro entre aspas nas passagens PROC SQL</title>
      <link>https://www.wikiod.com/pt/sas/resolvendo-variaveis-de-macro-entre-aspas-nas-passagens-proc-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/resolvendo-variaveis-de-macro-entre-aspas-nas-passagens-proc-sql/</guid>
      <description>Um dos desafios que enfrentei quando comecei a usar o SAS não era apenas passar dados de variáveis ​​de macro para uma passagem PROC SQL, mas resolvê-los corretamente se precisasse de aspas. Ao passar uma string como value ou date/datetime em uma passagem PROC SQL, é provável que ela precise ter aspas simples quando for resolvida.
Encontrei os melhores resultados ao usar a função %BQUOTE para fazer isso.
Mais informações sobre a função %BQUOTE podem ser encontradas aqui: https://v8doc.</description>
    </item>
    
    <item>
      <title>Criando variáveis ​​de macro</title>
      <link>https://www.wikiod.com/pt/sas/criando-variaveis-de-macro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/criando-variaveis-de-macro/</guid>
      <description>Usar variáveis ​​de macro em seus programas SAS é uma funcionalidade básica com a qual todo programador SAS deve estar familiarizado. O uso de variáveis ​​de macro pode ajudá-lo a manter seu código simples e genérico. Código genérico é código reutilizável.
Usando %LET # Eu descreveria %LET como sendo a maneira mais simples de criar uma variável de macro no SAS.
%LET variableName = variableValue; Agora, em qualquer lugar que você usar &amp;amp;variableName, ele será resolvido para variableValue.</description>
    </item>
    
    <item>
      <title>DO Loop</title>
      <link>https://www.wikiod.com/pt/sas/do-loop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/do-loop/</guid>
      <description>Faça Loop # DATA salary; /*define variables*/ raise=0.1; salary=50000; year=1; /*do loop*/ DO year=1 to 20 by 2; salary + salary*raise; output; /*generates an observation for each iteration of the do loop, optional*/ END; RUN; Macro faz loop # %macro doloop; %do age=11 %to 15 %by 2; title Age=&amp;amp;age.; proc print data=sashelp.class(where=(age=&amp;amp;age.)); run; %end; %mend; %doloop; </description>
    </item>
    
    <item>
      <title>Proc SQL</title>
      <link>https://www.wikiod.com/pt/sas/proc-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/proc-sql/</guid>
      <description>Crie um conjunto de dados vazio com base em um conjunto de dados existente # Método 1:
proc sql; create table foo like sashelp.class; quit; Método 2:
proc sql; create table bar as select * from sashelp.class (obs=0); quit; O método 1 deve ser a opção preferida
Sintaxe SELECT # PROC SQL options; SELECT column(s) FROM table-name | view-name WHERE expression GROUP BY column(s) HAVING expression ORDER BYcolumn(s); QUIT; Exemplo 1:</description>
    </item>
    
    <item>
      <title>Lendo dados</title>
      <link>https://www.wikiod.com/pt/sas/lendo-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/lendo-dados/</guid>
      <description>A leitura de dados em um conjunto de dados SAS pode ser realizada usando várias abordagens, incluindo a instrução datalines, de um arquivo externo usando uma instrução infile na etapa de dados ou lendo dados de um arquivo externo usando proc import. Além disso, você pode ler dados de fontes externas compatíveis com odbc (por exemplo, bancos de dados SQL) usando os drivers odbc.
PROC IMPORT para Excel, importando uma planilha específica # Haverá momentos em que você deseja importar apenas uma planilha específica de um arquivo do Excel com várias planilhas.</description>
    </item>
    
    <item>
      <title>Copiar um arquivo, byte por byte</title>
      <link>https://www.wikiod.com/pt/sas/copiar-um-arquivo-byte-por-byte/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/copiar-um-arquivo-byte-por-byte/</guid>
      <description>Se você estiver usando o SAS para produzir algum tipo de relatório, precisará copiar um arquivo em algum momento. Eu usei principalmente esse método para copiar um modelo do Excel e, em seguida, despejar dados via PROC EXPORT no novo arquivo que criei.
Este é um ótimo exemplo que encontrei de Chris Hemedinger (http://blogs.sas.com/content/sasdummy/2011/06/17/how-to-use-sas-data-step-to-copy-a -arquivo de qualquer lugar/).
Copiando qualquer arquivo, byte por byte # /* these IN and OUT filerefs can point to anything */ filename in &amp;quot;anyfilehere.</description>
    </item>
    
    <item>
      <title>Usando junções no SAS</title>
      <link>https://www.wikiod.com/pt/sas/usando-juncoes-no-sas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sas/usando-juncoes-no-sas/</guid>
      <description>Cada banco de dados é uma coleção de tabelas diferentes e cada tabela contém dados diferentes de forma organizada. Ao trabalhar com dados, na maioria das vezes as informações de que precisamos estão espalhadas em mais de uma tabela. Precisamos de joins/merge para obter a saída desejada.
No SAS, usamos joins enquanto trabalhamos com Proc SQL e usamos merge enquanto trabalhamos com Data step. Agora falaremos apenas sobre joins dentro de Proc SQL.</description>
    </item>
    
  </channel>
</rss>
