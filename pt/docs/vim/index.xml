<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial vim on </title>
    <link>https://www.wikiod.com/pt/docs/vim/</link>
    <description>Recent content in tutorial vim on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o vim</title>
      <link>https://www.wikiod.com/pt/vim/comecando-com-o-vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/comecando-com-o-vim/</guid>
      <description>Saindo do Vim # Para sair do Vim, primeiro certifique-se de estar no modo Normal pressionando Esc.
:q Enter (irá evitar que você saia se tiver alterações não salvas - abreviação de :quit) Para descartar alterações e sair do Vim:
:q! Enter para forçar a saída e descartar as alterações (abreviação de :quit!, não deve ser confundido com :!q), ZQ é um atalho que faz o mesmo que :q!, :cq Enter quit e retornar erro (descartar todas as alterações para que o compilador não recompile este arquivo) Para salvar as alterações e sair do Vim:</description>
    </item>
    
    <item>
      <title>Ovos de Páscoa</title>
      <link>https://www.wikiod.com/pt/vim/ovos-de-pascoa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/ovos-de-pascoa/</guid>
      <description>Quando você está se sentindo pra baixo # Problema: os usuários do Vim nem sempre estão satisfeitos.
Solução: Faça-os felizes.
:sorriso
Observação: requer a versão do patch ≥7.4.1005
Ajuda! # Para o usuário angustiado, o vim fornece palavras de sabedoria.
:help! Procurando o Santo Graal # Veja isso:
:help holy-grail A resposta # Vim sabe a resposta:
:ajuda 42
O Vim abrirá o documento usr_42.txt do manual e mostrará o seguinte texto:</description>
    </item>
    
    <item>
      <title>Dicas e truques para aumentar a produtividade</title>
      <link>https://www.wikiod.com/pt/vim/dicas-e-truques-para-aumentar-a-produtividade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/dicas-e-truques-para-aumentar-a-produtividade/</guid>
      <description>Sintaxe # :definir número relativo :definir número :set nonumber / :set nove :pwd Este recarregamento automático só acontecerá se você editar seu vimrc em uma versão completa do vim que suporte autocmd.
Ativar números de linha relativos # Para excluir algumas linhas de texto quando você não sabe o número exato de linhas a serem excluídas, tente 10dd , 5dd , 3dd até remover todas as linhas.
Números de linha relativos resolve este problema, suponha que temos um arquivo contendo:</description>
    </item>
    
    <item>
      <title>Convertendo arquivos de texto de DOS para UNIX com vi</title>
      <link>https://www.wikiod.com/pt/vim/convertendo-arquivos-de-texto-de-dos-para-unix-com-vi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/convertendo-arquivos-de-texto-de-dos-para-unix-com-vi/</guid>
      <description>O caractere ^M representa um retorno de carro no Vim (&amp;lt;c-m&amp;gt; ou apenas &amp;lt;CR&amp;gt;). O Vim exibe este caractere quando pelo menos a linha no arquivo usa terminações de linha LF. Em outras palavras, quando o Vim considera que um arquivo tem fileformat=unix mas algumas linhas possuem retornos de carro (CR), os retornos de carro são exibidos como ^M.
Um arquivo que tem uma única linha com final de linha LF e várias linhas com final de linha CRLF é mais frequentemente criado pela edição incorreta de um arquivo criado em um sistema baseado em MSDOS.</description>
    </item>
    
    <item>
      <title>Inserindo texto</title>
      <link>https://www.wikiod.com/pt/vim/inserindo-texto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/inserindo-texto/</guid>
      <description>Executando comandos normais no modo de inserção # Enquanto estiver no modo de inserção, pressione &amp;lt;C-o&amp;gt; para sair temporariamente do modo de inserção e execute um comando normal único.
Exemplo # &amp;lt;C-o&amp;gt;2w salta para a segunda palavra à esquerda e retorna ao modo de inserção.
Observação: Repetir com . só repetirá as ações de retornar ao modo de inserção
Isso permite alguns mapeamentos úteis, por exemplo.
inoremap &amp;lt;C-f&amp;gt; &amp;lt;Right&amp;gt; inoremap &amp;lt;C-b&amp;gt; &amp;lt;Left&amp;gt; inoremap &amp;lt;C-a&amp;gt; &amp;lt;C-o&amp;gt;^ inoremap &amp;lt;C-e&amp;gt; &amp;lt;C-o&amp;gt;$ Agora ctrl+a colocará o cursor no início da linha e ctrl+e - no final da linha.</description>
    </item>
    
    <item>
      <title>Movimento</title>
      <link>https://www.wikiod.com/pt/vim/movimento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/movimento/</guid>
      <description>Movimento Básico # Observações # Todo movimento pode ser utilizado após um comando do operador, então o comando opera sobre o texto compreendido pelo alcance do movimento. Assim como os comandos do operador, os movimentos podem incluir uma contagem, então você pode mover por 2wordas, por exemplo. Setas; flechas # No Vim, as teclas normais de seta/cursor (←↓↑→) funcionam como esperado. No entanto, para digitadores de toque, é mais fácil usar as teclas alternativas hjkl.</description>
    </item>
    
    <item>
      <title>Janelas divididas</title>
      <link>https://www.wikiod.com/pt/vim/janelas-divididas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/janelas-divididas/</guid>
      <description>Sintaxe # :dividir &amp;lt;arquivo&amp;gt; :vsplit &amp;lt;arquivo&amp;gt; :sp &amp;lt;- abreviação para divisão :vsp &amp;lt;- abreviação de vsplit Quando chamado a partir da linha de comando, vários arquivos podem ser fornecidos no argumento e o vim criará uma divisão para cada arquivo. Quando chamado do modo ex, apenas um arquivo pode ser aberto por invocação do comando.
Abrindo vários arquivos em divisões a partir da linha de comando # Horizontalmente # vim -o file1.</description>
    </item>
    
    <item>
      <title>Configurando o Vim</title>
      <link>https://www.wikiod.com/pt/vim/configurando-o-vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/configurando-o-vim/</guid>
      <description>Arquivos e diretórios # O que quer que você faça para personalizar o Vim, isso NUNCA deve acontecer fora de $HOME:
no Linux, BSD e Cygwin, $HOME geralmente é /home/username/, no Mac OS X, $HOME é /Users/username/, no Windows, $HOME geralmente é C:\Users\username\. A localização canônica para seu diretório vimrc e vim está em a raiz desse diretório $HOME:
em sistemas do tipo Unix
$HOME/.vimrc &amp;lt;-- the file $HOME/.vim/ &amp;lt;-- the directory no Windows</description>
    </item>
    
    <item>
      <title>Macros</title>
      <link>https://www.wikiod.com/pt/vim/macros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/macros/</guid>
      <description>Gravando uma macro # Uma maneira de criar uma macro é gravá-la.
Comece a gravar uma macro e salve-a em um registro (neste exemplo, usaremos a, mas pode ser qualquer registro para o qual você normalmente poderia puxar o texto):
qa Em seguida, execute os comandos que deseja gravar na macro (aqui, cercaremos o conteúdo de uma linha com as tags &amp;lt;li&amp;gt;):
I&amp;lt;li&amp;gt;&amp;lt;ESC&amp;gt;A&amp;lt;/li&amp;gt; Quando terminarmos com os comandos que queremos gravar na macro, pare a gravação:</description>
    </item>
    
    <item>
      <title>Estendendo o Vim</title>
      <link>https://www.wikiod.com/pt/vim/estendendo-o-vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vim/estendendo-o-vim/</guid>
      <description>Um plugin é um script ou conjunto de scripts que altera o comportamento padrão do Vim, adicionando recursos inexistentes ou estendendo recursos existentes.
Muitas vezes adicionados &amp;ldquo;recursos inexistentes&amp;rdquo; incluem:
comentando, detecção de recuo, preenchimento automático, correspondência difusa, suporte para um idioma específico, etc Muitas vezes, os &amp;ldquo;recursos existentes&amp;rdquo; estendidos incluem:
omnicompleção, objetos de texto e movimentos, puxando e colocando, linha de estado, pesquisar e substituir, comutação de página de buffer/janela/aba, dobrando, etc Coelho # Vundle é um gerenciador de plugins para o Vim.</description>
    </item>
    
  </channel>
</rss>
