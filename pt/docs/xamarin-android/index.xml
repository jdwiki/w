<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Xamarin.Android on </title>
    <link>https://www.wikiod.com/pt/docs/xamarin-android/</link>
    <description>Recent content in Tutorial Xamarin.Android on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/xamarin-android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao Xamarin.Android</title>
      <link>https://www.wikiod.com/pt/xamarin-android/introducao-ao-xamarinandroid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/introducao-ao-xamarinandroid/</guid>
      <description>Introdução ao Visual Studio # Navegue até File &amp;gt; New &amp;gt; Project para abrir a caixa de diálogo New Project. Navegue até Visual C# &amp;gt; Android e selecione Blank App: Dê um Nome ao seu aplicativo e pressione OK para criar seu projeto. Configure seu dispositivo para implantação ou configure um emulador Para executar seu aplicativo, selecione a configuração Debug e pressione o botão Iniciar: Comece no Xamarin Studio # Navegue até Arquivo &amp;gt; Novo &amp;gt; Solução para abrir a nova caixa de diálogo do projeto.</description>
    </item>
    
    <item>
      <title>Xamarin.Android - Como criar uma barra de ferramentas</title>
      <link>https://www.wikiod.com/pt/xamarin-android/xamarinandroid---como-criar-uma-barra-de-ferramentas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/xamarinandroid---como-criar-uma-barra-de-ferramentas/</guid>
      <description>Querida equipe,
Eu acho que é bom mencionar sobre a documentação oficial do Android, onde o controle da barra de ferramentas é explicado em detalhes:
https://developer.android.com/reference/android/support/v7/widget/Toolbar.html
Também há conteúdo interessante sobre a biblioteca Android.Support.v7 usada no exemplo:
https://developer.android.com/training/appbar/index.html
Adicionar barra de ferramentas ao aplicativo Xamarin.Android # Em primeiro lugar, você deve adicionar a biblioteca Xamarin.Android.Support.V7.AppCompat para NuGet: https://www.nuget.org/packages/Xamarin.Android.Support.v7.AppCompat/
Na pasta &amp;ldquo;values&amp;rdquo; em &amp;ldquo;Resources&amp;rdquo;, adicione um novo arquivo xml chamado &amp;ldquo;styles.xml&amp;rdquo;: O arquivo &amp;ldquo;styles.</description>
    </item>
    
    <item>
      <title>Visualização do Reciclador</title>
      <link>https://www.wikiod.com/pt/xamarin-android/visualizacao-do-reciclador/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/visualizacao-do-reciclador/</guid>
      <description>Noções básicas do RecyclerView # Este é um exemplo de uso do Android Support Library V7 RecyclerView. As bibliotecas de suporte são geralmente recomendadas porque fornecem versões compatíveis com versões anteriores de novos recursos, fornecem elementos de interface do usuário úteis que não estão incluídos na estrutura e fornecem uma variedade de utilitários que os aplicativos podem utilizar.
Para obter o RecyclerView, instalaremos os pacotes Nuget necessários. Primeiro, vamos procurar por v7 recyclerview.</description>
    </item>
    
    <item>
      <title>Ciclo de vida do aplicativo - Xamarin.Andorid</title>
      <link>https://www.wikiod.com/pt/xamarin-android/ciclo-de-vida-do-aplicativo---xamarinandorid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/ciclo-de-vida-do-aplicativo---xamarinandorid/</guid>
      <description>O ciclo de vida do aplicativo Xamarin.Android é o mesmo do aplicativo Android normal. Ao falar sobre ciclo de vida, precisamos falar sobre: ​​Ciclo de vida do aplicativo, Ciclo de vida da atividade e Ciclo de vida do fragmento.
A seguir, tentarei fornecer uma boa descrição e maneira de usá-los. Eu obtive esta documentação da documentação oficial do Android e do Xamarin e muitos recursos úteis da Web fornecidos na seção de comentários abaixo.</description>
    </item>
    
    <item>
      <title>Encadernações</title>
      <link>https://www.wikiod.com/pt/xamarin-android/encadernacoes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/encadernacoes/</guid>
      <description>Removendo Tipos # É possível instruir o Xamarin.Android Bindings Generator para ignorar um tipo Java e não vinculá-lo. Isso é feito adicionando um elemento XML remove-node ao arquivo metadata.xml:
&amp;lt;remove-node path=&amp;quot;/api/package[@name=&#39;{package_name}&#39;]/class[@name=&#39;{name}&#39;]&amp;quot; /&amp;gt; Implementando interfaces Java # Se uma biblioteca java contém interfaces que devem ser implementadas pelo usuário (por exemplo, ouvintes de clique como View.IOnClickListener ou retornos de chamada), a classe de implementação deve herdar &amp;ndash; direta ou indiretamente &amp;ndash; de Java.</description>
    </item>
    
    <item>
      <title>Publicando seu APK Xamarin.Android</title>
      <link>https://www.wikiod.com/pt/xamarin-android/publicando-seu-apk-xamarinandroid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/publicando-seu-apk-xamarinandroid/</guid>
      <description>Este tópico mostra informações sobre como preparar seu aplicativo Xamarin.Android para o modo de lançamento e como otimizá-lo.
Preparando seu APK no Visual Studio # Você terminou seu aplicativo, testou no modo de depuração e está funcionando perfeitamente. Agora, você deseja prepará-lo para publicar na Google Play Store.
A documentação do Xamarin fornece boas informações aqui:
https://developer.xamarin.com/guides/android/deployment,_testing,_and_metrics/publishing_an_application/
Manifesto Android
Primeiro, no Visual Studio, clique com o botão direito do mouse no projeto Xamarin.</description>
    </item>
    
    <item>
      <title>Diálogos</title>
      <link>https://www.wikiod.com/pt/xamarin-android/dialogos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/dialogos/</guid>
      <description>Parâmetros # Método público comumente usado Usar SetTitle(String) Define o título para o diálogo SetIcon(Desenhável) Definir ícone para a caixa de diálogo de alerta SetMessage(string) Defina a mensagem a ser exibida. SetNegativeButton(String, EventHandler) Defina um ouvinte a ser invocado quando o botão negativo do diálogo for pressionado. SetPositiveButton(String, EventHandler) Defina um ouvinte a ser invocado quando o botão positivo do diálogo for pressionado. SetNeutralButton(String, EventHandler) Defina um ouvinte a ser invocado quando o botão neutro da caixa de diálogo for pressionado.</description>
    </item>
    
    <item>
      <title>Torradas</title>
      <link>https://www.wikiod.com/pt/xamarin-android/torradas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/torradas/</guid>
      <description>Mensagem básica de brinde # Primeiro, instancie um objeto Toast com um dos métodos MakeText(). Esse método recebe três parâmetros: o aplicativo Context, a mensagem de texto e a duração do brinde. Ele retorna um objeto Toast inicializado corretamente. Você pode exibir a notificação do sistema com Show(), conforme mostrado no exemplo a seguir:
Context context = Application.Context; string text = &amp;quot;Hello toast!&amp;quot;; ToastLength duration = ToastLength.Short; var toast = Toast.</description>
    </item>
    
    <item>
      <title>Xamarin.Android - comunicação Bluetooth</title>
      <link>https://www.wikiod.com/pt/xamarin-android/xamarinandroid---comunicacao-bluetooth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/xamarinandroid---comunicacao-bluetooth/</guid>
      <description>No Xamarin.Android, as propriedades BluetoothSocket.InputStream e BluetoothSocket.OutputStream são automaticamente convertidas em System.IO.Stream. No caso do chamado protocolo de comunicação interativo, quando o servidor responde apenas quando o cliente fala com ele, o System.IO.Stream não é bom porque não possui método ou propriedade para obter o número de bytes de resposta disponíveis antes de ler a resposta.
Parâmetros # Parâmetro Detalhes tomada Uma instância do objeto BluetoothSocket. Socket deve ser aberto antes de chamar este método.</description>
    </item>
    
    <item>
      <title>Visualização de lista personalizada</title>
      <link>https://www.wikiod.com/pt/xamarin-android/visualizacao-de-lista-personalizada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-android/visualizacao-de-lista-personalizada/</guid>
      <description>Custom Listview é composto por linhas que são projetadas de acordo com as necessidades dos usuários. # Para o layout acima, seu arquivo customrow.axml é mostrado abaixo
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; &amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; android:layout_width=&amp;quot;fill_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:padding=&amp;quot;8dp&amp;quot;&amp;gt; &amp;lt;ImageView android:id=&amp;quot;@+id/Image&amp;quot; android:layout_width=&amp;quot;80dp&amp;quot; android:layout_height=&amp;quot;80dp&amp;quot; android:layout_alignParentLeft=&amp;quot;true&amp;quot; android:layout_marginRight=&amp;quot;8dp&amp;quot; android:src=&amp;quot;@drawable/icon&amp;quot; /&amp;gt; &amp;lt;TextView android:id=&amp;quot;@+id/Text1&amp;quot; android:layout_width=&amp;quot;wrap_content&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:layout_alignTop=&amp;quot;@id/Image&amp;quot; android:layout_toRightOf=&amp;quot;@id/Image&amp;quot; android:layout_marginTop=&amp;quot;5dip&amp;quot; android:text=&amp;quot;This is Line1&amp;quot; android:textSize=&amp;quot;20dip&amp;quot; android:textStyle=&amp;quot;bold&amp;quot; /&amp;gt; &amp;lt;TextView android:id=&amp;quot;@+id/Text2&amp;quot; android:layout_width=&amp;quot;fill_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:layout_below=&amp;quot;@id/Text1&amp;quot; android:layout_marginTop=&amp;quot;1dip&amp;quot; android:text=&amp;quot;This is line2&amp;quot; android:textSize=&amp;quot;15dip&amp;quot; android:layout_toRightOf=&amp;quot;@id/Image&amp;quot; /&amp;gt; &amp;lt;/RelativeLayout&amp;gt; Em seguida, você pode projetar seu main.</description>
    </item>
    
  </channel>
</rss>
