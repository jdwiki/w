<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de pagamentos por faixa on </title>
    <link>https://www.wikiod.com/pt/docs/stripe-payments/</link>
    <description>Recent content in Tutorial de pagamentos por faixa on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/stripe-payments/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeiros passos com os pagamentos por faixa</title>
      <link>https://www.wikiod.com/pt/stripe-payments/primeiros-passos-com-os-pagamentos-por-faixa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/stripe-payments/primeiros-passos-com-os-pagamentos-por-faixa/</guid>
      <description>Introdução à API do Stripe # Um fluxo de pagamento típico com Stripe pode ser dividido em duas etapas:
Do lado do cliente, em seu código de front-end (HTML + Javascript), você coleta as informações de pagamento do cliente usando o formulário pré-construído Checkout do Stripe ou o(s) campo(s) do formulário Elements. Isso retornará um token que você enviará ao seu servidor.
No lado do servidor, em seu código de back-end (em PHP, Python, Ruby ou qualquer linguagem de programação do lado do servidor que você preferir), você usa o token em uma solicitação de criação de cobrança para realmente cobrar o cartão.</description>
    </item>
    
    <item>
      <title>Documentação do PHP-Stripe Connect para Symfony2</title>
      <link>https://www.wikiod.com/pt/stripe-payments/documentacao-do-php-stripe-connect-para-symfony2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/stripe-payments/documentacao-do-php-stripe-connect-para-symfony2/</guid>
      <description>Parâmetros # Parâmetro Detalhes montante obrigatório - Um número inteiro positivo na menor unidade monetária (por exemplo, 100 centavos para cobrar $ 1,00 ou 100 para cobrar ¥ 100, uma moeda 0 decimal) representando quanto cobrar do cartão. O valor mínimo é de US$ 0,50 ou equivalente na moeda de cobrança. moeda obrigatório - código ISO de 3 letras para moeda. descrição opcional, o padrão é nulo - Uma string arbitrária que você pode anexar a um objeto de cobrança.</description>
    </item>
    
    <item>
      <title>Introdução ao Stripe.Net</title>
      <link>https://www.wikiod.com/pt/stripe-payments/introducao-ao-stripenet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/stripe-payments/introducao-ao-stripenet/</guid>
      <description>Sintaxe # var stripeSubscriptionOptions = new StripeSubscriptionCreateOptions(); //cria uma variável para armazenar o objeto de opções
stripeSubscriptionOptions.Quantity = model.update; //exemplo de opção de quantidade de lugares para uma assinatura
var subscriptionService = new StripeSubscriptionService(); //cria um serviço para fazer a chamada da API
var stripeSubscription = subscriptionService.Create(user.CustomerIdentifier, planId, stripeSubscriptionOptions);
// service.create( string CustID, string PlanID, Object Opções de assinatura)
// O ID do cliente deve ser salvo do seu banco de dados, você pode recuperar planID da faixa usando um PlanService e crie o objeto de opções como acima.</description>
    </item>
    
    <item>
      <title>Stripe Adicionar vários cartões ao mesmo usuário</title>
      <link>https://www.wikiod.com/pt/stripe-payments/stripe-adicionar-varios-cartoes-ao-mesmo-usuario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/stripe-payments/stripe-adicionar-varios-cartoes-ao-mesmo-usuario/</guid>
      <description>Criar cliente na faixa # public function createCustomer($data , $token)//pass form data and token id { $customer=Customer::create(array( &amp;quot;email&amp;quot;=&amp;gt;$data[&#39;email&#39;], &amp;quot;description&amp;quot; =&amp;gt; $data[&#39;name&#39;], &amp;quot;source&amp;quot; =&amp;gt; $token // obtained with Stripe.js )); return $customer[&#39;id&#39;]; } Para mais informações siga este Link
Como recuperar o cliente e adicionar cartões no Stripe # public function addCard($cust_id, $token) { $retriveResult=Customer::retrieve($cust_id); $tokendata = Token::retrieve($token); $newcard = $tokendata[&#39;card&#39;]; $flag = 1; foreach ($retriveResult[&#39;sources&#39;][&#39;data&#39;] as $card) { if($card[&#39;fingerprint&#39;] === $newcard[&#39;fingerprint&#39;]) { $cardid = $card[&#39;id&#39;]; $flag = 0; break; } } if($flag) { $savecard = $retriveResult-&amp;gt;sources-&amp;gt;create(array(&amp;quot;source&amp;quot; =&amp;gt;$token)); $cardid = $savecard[&#39;id&#39;]; } return $cardid; } </description>
    </item>
    
  </channel>
</rss>
