<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de Córdoba on </title>
    <link>https://www.wikiod.com/pt/docs/cordova/</link>
    <description>Recent content in Tutorial de Córdoba on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/cordova/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Firebase Push Notification Cordova</title>
      <link>https://www.wikiod.com/pt/cordova/firebase-push-notification-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/firebase-push-notification-cordova/</guid>
      <description>Notificação por push do Firebase no Cordova Android # Adicione o Firebase ao seu projeto Android
Adicione o Firebase ao seu aplicativo
Para adicionar o Firebase ao seu aplicativo, você precisará de um projeto do Firebase e de um arquivo de configuração do Firebase para seu aplicativo.
Crie um projeto do Firebase no console do Firebase, caso ainda não tenha um. Se você já tiver um projeto do Google existente associado ao seu aplicativo para dispositivos móveis, clique em Importar projeto do Google.</description>
    </item>
    
    <item>
      <title>Plugin Cordova para Cortar Imagem</title>
      <link>https://www.wikiod.com/pt/cordova/plugin-cordova-para-cortar-imagem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/plugin-cordova-para-cortar-imagem/</guid>
      <description>Cortar imagem depois de clicar usando a câmera ou selecionar a imagem. # Recorta as imagens em formato quadrado.
Este projeto cordova usa dois plugins:
Plugin de câmera Cordova &amp;ndash; https://github.com/apache/cordova-plugin-camera
Plugin Cordova Crop Image &amp;ndash; https://github.com/jeduan/cordova-plugin-crop
O plug-in Camera é combinado com o plug-in Crop Image, colocando o código do plug-in Cop Image no retorno de chamada de sucesso do código do plug-in da câmera.
/*Camera Plugin Code*/ navigator.camera.getPicture(onSuccess, onFail, { quality: 50, destinationType: Camera.</description>
    </item>
    
    <item>
      <title>Como detectar o estado da conexão de rede</title>
      <link>https://www.wikiod.com/pt/cordova/como-detectar-o-estado-da-conexao-de-rede/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/como-detectar-o-estado-da-conexao-de-rede/</guid>
      <description>Usando o plug-in cordova-plugin-network-information # Detectar o estado atual da conexão de rede e responder a quaisquer alterações que possam ocorrer pode ser feito usando um dos vários plugins. Este exemplo é sobre o plugin cordova-plugin-network-information.
Adicione o plugin ao projeto:
cordova plugin add cordova-plugin-network-information Após o evento deviceready do Cordova, um objeto de conexão está disponível através do navigator.connection. A propriedade type contém o estado atual da rede:
document.addEventListener(&amp;quot;deviceready&amp;quot;, function() { var networkState = navigator.</description>
    </item>
    
    <item>
      <title>Assine a versão do Android com o Cordova 5</title>
      <link>https://www.wikiod.com/pt/cordova/assine-a-versao-do-android-com-o-cordova-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/assine-a-versao-do-android-com-o-cordova-5/</guid>
      <description>Adicione a configuração de compilação para assinar o arquivo .apk # Adicione um keystore usando:
keytool -genkey -v -keystore example.keystore -alias example -keyalg RSA -keysize 2048 -validity 10000 Nota: Isso deve estar na raiz do projeto. Embora não seja um requisito difícil, facilita a referência de arquivo
Adicione um build.json com configuração de release/dev para keystore, na raiz do projeto:
{ &amp;quot;android&amp;quot;: { &amp;quot;debug&amp;quot;: { &amp;quot;keystore&amp;quot;: &amp;quot;..\android.keystore&amp;quot;, &amp;quot;storePassword&amp;quot;: &amp;quot;android&amp;quot;, &amp;quot;alias&amp;quot;: &amp;quot;mykey1&amp;quot;, &amp;quot;password&amp;quot; : &amp;quot;password&amp;quot;, &amp;quot;keystoreType&amp;quot;: &amp;quot;&amp;quot; }, &amp;quot;release&amp;quot;: { &amp;quot;keystore&amp;quot;: &amp;quot;.</description>
    </item>
    
    <item>
      <title>Criando seu primeiro aplicativo com o Cordova</title>
      <link>https://www.wikiod.com/pt/cordova/criando-seu-primeiro-aplicativo-com-o-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/criando-seu-primeiro-aplicativo-com-o-cordova/</guid>
      <description>Caso a execução do cordova run android falhe. Certifique-se de que seu dispositivo Android esteja conectado ao seu computador e execute adb devices para garantir que as Ferramentas de Desenvolvimento Android (ADT) possam detectar seu dispositivo.
Usando a ferramenta de linha de comando # Primeiro você cria um novo projeto Cordova:
cordova create HelloWorld my.application.identifier AppName Isso criará um projeto Cordova em branco
na pasta HelloWorld com identificador my.application.identifier (que deve ser único para cada aplicação) com o nome AppName.</description>
    </item>
    
    <item>
      <title>Depurando o aplicativo</title>
      <link>https://www.wikiod.com/pt/cordova/depurando-o-aplicativo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/depurando-o-aplicativo/</guid>
      <description>É importante lembrar ao depurar aplicativos cordova, se você tiver um evento OnDeviceReady e um código executado lá, no momento em que o aplicativo for iniciado, seu depurador ainda não será anexado (diferentemente da depuração do Visual Studio C#, onde o aplicativo aguarda o processo de depuração para anexar antes de continuar com o lançamento do programa).
Isso significa que quaisquer mensagens ou pontos de interrupção do console de configuração inicial não serão capturados.</description>
    </item>
    
    <item>
      <title>Como personalizar a pasta www específica da plataforma no cordova</title>
      <link>https://www.wikiod.com/pt/cordova/como-personalizar-a-pasta-www-especifica-da-plataforma-no-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/como-personalizar-a-pasta-www-especifica-da-plataforma-no-cordova/</guid>
      <description>criar css/js específico para uma plataforma (android/ios) # Digamos que você queira criar um arquivo css/js específico para uma plataforma. Para isso você tem que criar uma pasta merge na pasta raiz do seu projeto cordova. Na pasta merges crie um diretório para cada plataforma (android/ios..). em seguida, na pasta da plataforma específica, crie uma pasta css/js e coloque seu arquivo css/js específico para a pasta da plataforma. É isso, uma vez que você execute o comando cordova build, todos os arquivos js/css correspondentes a cada plataforma serão colocados na pasta da plataforma respeitada</description>
    </item>
    
    <item>
      <title>Push Notification no Android e iOS</title>
      <link>https://www.wikiod.com/pt/cordova/push-notification-no-android-e-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/push-notification-no-android-e-ios/</guid>
      <description>Usando o novo phonegap-plugin-push # Com o objetivo de enviar notificações push para aplicativos cordova. A primeira etapa é obter um token de dispositivo. Um &amp;ldquo;token de dispositivo&amp;rdquo; é específico para cada dispositivo e cada projeto.
Pré-requisito:
Número do projeto do Google Cloud Messaging Para isso, acesse Google Developer Console e crie um novo projeto.
Em Informações do Projeto está o Número do Projeto
Chave de API do Google Cloud Messaging para o projeto acima (necessário para o servidor) Vá para Biblioteca -&amp;gt; Google Cloud Messaging -&amp;gt; Ativar.</description>
    </item>
    
    <item>
      <title>Ferramentas do Visual Studio para Apache Cordova</title>
      <link>https://www.wikiod.com/pt/cordova/ferramentas-do-visual-studio-para-apache-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/ferramentas-do-visual-studio-para-apache-cordova/</guid>
      <description>Atualizar as ferramentas do Apache Cordova no Visual Studio # No Visual Studio, escolha Ferramentas-&amp;gt;Extensões e Atualizações. Na guia Atualizações da caixa de diálogo Extensões e atualizações, escolha Product Updates. Se uma atualização do Visual Studio Tools for Apache for exibida, selecione-a e escolha o botão Atualizar. Obtenha as ferramentas do Apache Cordova no Visual Studio # Abra o Painel de Controle -&amp;gt; Programas e Recursos, escolha o Visual Studio 2015 item, and then choose the Change button.</description>
    </item>
    
    <item>
      <title>Introdução ao Cordova</title>
      <link>https://www.wikiod.com/pt/cordova/introducao-ao-cordova/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/cordova/introducao-ao-cordova/</guid>
      <description>Desenvolvimento de aplicativos móveis usando Cordova
Apache Cordova é uma estrutura de desenvolvimento móvel de código aberto. Ele permite que você use tecnologias padrão da Web - HTML5, CSS3 e JavaScript para desenvolvimento multiplataforma.
Criando build do Android (.apk) # Instale o cordova usando o seguinte comando npm install -g cordova.
Use cordova -version para verificar a versão cordova.
Defina as variáveis ​​de caminho ANDROID_HOME e JAVA_HOME.
Exemplo:
export ANDROID_HOME = /home/geethu/android-sdk-linux</description>
    </item>
    
  </channel>
</rss>
