<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ros Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/ros/</link>
    <description>Recent content in ros Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/ros/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com ros</title>
      <link>https://www.wikiod.com/pt/ros/comecando-com-ros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/ros/comecando-com-ros/</guid>
      <description>Instalação # Dependendo da sua máquina de destino, você precisa escolher uma versão do ROS compatível (ou vice-versa). Embora a instalação do ROS esteja bem documentada no wiki do ROS, pode ser confuso encontrá-los. Então, aqui está uma tabela da versão do ROS, plataformas e arquitetura de destino e os links para os guias de instalação apropriados:
Versão ROS Plataforma Arch Status Instalar Link do Guia Cinética Ubuntu 16.04 (Xenial) amd64 / i386 / armhf Suportado Kinetic-Xenial-guide Ubuntu 15.</description>
    </item>
    
    <item>
      <title>roslaunch</title>
      <link>https://www.wikiod.com/pt/ros/roslaunch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/ros/roslaunch/</guid>
      <description>&amp;rsquo;node form the package&amp;rsquo; deve ser &amp;rsquo;node from the package&#39;
inicialmente você diz &amp;ldquo;iniciando&amp;rdquo; e &amp;ldquo;Parando&amp;rdquo;, mas você não explica como fazer um desligamento controlado.
iniciar nós ros e carregar parâmetros do arquivo Yaml # roslaunch é uma ferramenta importante que gerencia o início e a parada dos nós ROS. Leva um ou mais arquivos &amp;ldquo;*.launch&amp;rdquo; como argumentos.
Para este exemplo, vou me referir ao seguinte (como solicitado nesta pergunta), então como podemos executar esses comandos consecutivamente e automaticamente:</description>
    </item>
    
    <item>
      <title>criando um espaço de trabalho</title>
      <link>https://www.wikiod.com/pt/ros/criando-um-espaco-de-trabalho/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/ros/criando-um-espaco-de-trabalho/</guid>
      <description>Este tutorial mostra como criar um espaço de trabalho. Um espaço de trabalho é um conjunto de diretórios nos quais reside um conjunto relacionado de código ROS. Pode-se ter vários espaços de trabalho ROS, mas é possível trabalhar apenas em um de cada vez.
Criando um espaço de trabalho # Para criar um espaço de trabalho, deve-se executar o seguinte no terminal:
$ mkdir -p ~/workspace_name/src $ cd ~/workspace_name/src $ catkin_init_workspace $ cd ~/workspace_name/ $ catkin_make Os comandos anteriores criam um espaço de trabalho chamado workspace_name.</description>
    </item>
    
    <item>
      <title>Criando um pacote</title>
      <link>https://www.wikiod.com/pt/ros/criando-um-pacote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/ros/criando-um-pacote/</guid>
      <description>Este tutorial mostra como criar um pacote no ROS. Os pacotes ficam dentro dos espaços de trabalho, no diretório src. Cada diretório de pacote deve ter arquivos CMakeLists.txt e package.xml.
Criando um pacote usando rospy # Supondo que um espaço de trabalho chamado workspace_name tenha sido criado anteriormente no diretório inicial, um pacote chamado package_name pode ser criado executando as seguintes linhas de comando.
$ cd ~/workspace_name/src/ $ catkin_create_pkg package_name rospy </description>
    </item>
    
  </channel>
</rss>
