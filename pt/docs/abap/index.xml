<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial ABAP on </title>
    <link>https://www.wikiod.com/pt/docs/abap/</link>
    <description>Recent content in Tutorial ABAP on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/abap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao ABAP</title>
      <link>https://www.wikiod.com/pt/abap/introducao-ao-abap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/introducao-ao-abap/</guid>
      <description>Olá Mundo # PROGRAM zhello_world. START-OF-SELECTION. WRITE &#39;Hello, World!&#39;. Em vez de imprimir no console, o ABAP grava os valores em uma lista que será exibida assim que a lógica principal for executada.
Olá Mundo em Objetos ABAP # PROGRAM zhello_world. CLASS main DEFINITION FINAL CREATE PRIVATE. PUBLIC SECTION. CLASS-METHODS: start. ENDCLASS. CLASS main IMPLEMENTATION. METHOD start. cl_demo_output=&amp;gt;display( &#39;Hello World!&#39; ). ENDMETHOD. ENDCLASS. START-OF-SELECTION. main=&amp;gt;start( ). </description>
    </item>
    
    <item>
      <title>Objetos ABAP</title>
      <link>https://www.wikiod.com/pt/abap/objetos-abap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/objetos-abap/</guid>
      <description>Declaração de classe # As classes ABAP podem ser declaradas Globalmente ou Localmente. Uma classe global pode ser usada por qualquer objeto dentro do repositório ABAP. Por outro lado, uma classe local só pode ser usada dentro do escopo em que foi declarada. # CLASS lcl_abap_class DEFINITION. PUBLIC SECTION. PROTECTED SECTION. PRIVATE SECTION. ENDCLASS. CLASS lcl_abap_class IMPLEMENTATION. ENDCLASS. Construtor, métodos # Implementação da classe:
CLASS lcl_abap_class DEFINITION. PUBLIC SECTION. METHODS: constructor, method1.</description>
    </item>
    
    <item>
      <title>Tabelas internas</title>
      <link>https://www.wikiod.com/pt/abap/tabelas-internas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/tabelas-internas/</guid>
      <description>Tipos de tabelas internas # DATA: &amp;lt;TABLE NAME&amp;gt; TYPE &amp;lt;SORTED|STANDARD|HASHED&amp;gt; TABLE OF &amp;lt;TYPE NAME&amp;gt; WITH &amp;lt;UNIQUE|NON-UNIQUE&amp;gt; KEY &amp;lt;FIELDS FOR KEY&amp;gt;. Tabela Padrão
Esta tabela possui todas as entradas armazenadas de forma linear e os registros são acessados ​​de forma linear. Para tamanhos de mesa grandes, o acesso à mesa pode ser lento.
Tabela Classificada
Requer a adição WITH UNIQUE|NON-UNIQUE KEY. A pesquisa é rápida devido à execução de uma pesquisa binária.</description>
    </item>
    
    <item>
      <title>Cordas</title>
      <link>https://www.wikiod.com/pt/abap/cordas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/cordas/</guid>
      <description>Modelos de string # Os modelos de string são uma maneira conveniente de misturar strings literais com valores de variáveis:
WRITE |Hello, { lv_name }, nice to meet you!|. Também pode formatar coisas como datas. Para usar o formato de data do usuário conectado:
WRITE |The order was completed on { lv_date DATE = USER } and can not be changed|. Chamadas de métodos funcionais e expressões são suportadas:
WRITE |Your token is { to_upper( lv_token ) }|.</description>
    </item>
    
    <item>
      <title>Visualizador de lista ABAP GRID (ALV)</title>
      <link>https://www.wikiod.com/pt/abap/visualizador-de-lista-abap-grid-alv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/visualizador-de-lista-abap-grid-alv/</guid>
      <description>Criando e exibindo um ALV # Este exemplo retrata a criação de ALV mais simples usando a classe cl_salv_table e sem opções de formatação adicionais. Opções de formatação adicionais seriam incluídas após o bloco TRY ENDTRY e antes da chamada do método alv-&amp;gt;display( ).
Todos os exemplos subsequentes usando a abordagem de Objetos ABAP para a criação de ALV usarão este exemplo como ponto de partida.
DATA: t_spfli TYPE STANDARD TABLE OF spfli, alv TYPE REF TO cl_salv_table, error_message TYPE REF TO cx_salv_msg.</description>
    </item>
    
    <item>
      <title>Programaçao dinamica</title>
      <link>https://www.wikiod.com/pt/abap/programacao-dinamica/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/programacao-dinamica/</guid>
      <description>Símbolos de campo # Field-Symbols são equivalentes do ABAP aos ponteiros, exceto que Field-Symbols são sempre desreferenciados (não é possível alterar o endereço real na memória).
Declaração
Para declarar um Field-Symbol a palavra chave FIELD-SYMBOLS deve ser usada. Os tipos podem ser genéricos (ANY [... TABLE]) para lidar com uma grande variedade de variáveis.
FIELD-SYMBOLS: &amp;lt;fs_line&amp;gt; TYPE any, &amp;quot;generic &amp;lt;fs_struct&amp;gt; TYPE kna1. &amp;quot;non-generic Atribuindo
Field-Symbols são &amp;rsquo;não atribuídos&amp;rsquo; na declaração, o que significa que eles não estão apontando para nada.</description>
    </item>
    
    <item>
      <title>rotações</title>
      <link>https://www.wikiod.com/pt/abap/rotacoes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/rotacoes/</guid>
      <description>Ao fazer um loop em tabelas internas, geralmente é preferível &amp;lsquo;ASSIGN&amp;rsquo; para um símbolo de campo em vez de fazer um loop &amp;lsquo;INTO&amp;rsquo; em uma área de trabalho. A atribuição de símbolos de campo simplesmente atualiza sua referência para apontar para a próxima linha da tabela interna durante cada iteração, enquanto o uso de INTO resulta na cópia da linha da tabela para a área de trabalho, o que pode ser caro para tabelas longas/largas.</description>
    </item>
    
    <item>
      <title>Declaração de dados</title>
      <link>https://www.wikiod.com/pt/abap/declaracao-de-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/declaracao-de-dados/</guid>
      <description>Declaração de dados em linha # Em determinadas situações, as declarações de dados podem ser realizadas inline.
LOOP AT lt_sflight INTO DATA(ls_sflight). WRITE ls_sflight-carrid. ENDLOOP. Declaração de variável única # DATA begda TYPE sy-datum. Declaração de Múltiplas Variáveis # DATA: begda TYPE sy-datum, endda TYPE sy-datum. Declaração de dados em linha na instrução SELECT # Ao usar uma declaração de dados embutido dentro de um bloco SELECT...ENDSELECT ou instrução SELECT SINGLE, o caractere @ deve ser usado como um caractere de escape para a expressão DATA(lv_cityto).</description>
    </item>
    
    <item>
      <title>Expressões regulares</title>
      <link>https://www.wikiod.com/pt/abap/expressoes-regulares/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/expressoes-regulares/</guid>
      <description>Avaliando expressões regulares com uma função de predicado # A função de predicado matches pode ser usada para avaliar strings em tempo real sem o uso de nenhuma declaração de objeto.
IF matches( val = &#39;Not a hex string&#39; regex = &#39;[0-9a-f]*&#39; ). cl_demo_output=&amp;gt;display( &#39;This will not display&#39; ). ELSEIF matches( val = &#39;6c6f7665&#39; regex = &#39;[0-9a-f]*&#39; ). cl_demo_output=&amp;gt;display( &#39;This will display&#39; ). ENDIF. Substituindo # A instrução REPLACE pode funcionar diretamente com expressões regulares:</description>
    </item>
    
    <item>
      <title>Abrir SQL</title>
      <link>https://www.wikiod.com/pt/abap/abrir-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/abap/abrir-sql/</guid>
      <description>Instrução SELECIONAR # SELECT é uma instrução Open-SQL para ler dados de uma ou várias tabelas de banco de dados em objetos de dados.
Selecionando todos os registros
* This returns all records into internal table lt_mara. SELECT * FROM mara INTO lt_mara. Selecionando Registro Único
* This returns single record if table consists multiple records with same key. SELECT SINGLE * INTO TABLE lt_mara FROM mara WHERE matnr EQ &#39;400-500&#39;.</description>
    </item>
    
  </channel>
</rss>
