<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial db2 on </title>
    <link>https://www.wikiod.com/pt/docs/db2/</link>
    <description>Recent content in Tutorial db2 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/db2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com db2</title>
      <link>https://www.wikiod.com/pt/db2/comecando-com-db2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/comecando-com-db2/</guid>
      <description>Instalação # Existem diferentes sabores de DB2. Um deles é o LUW: Linux, UNIX e Windows.
DB2 LUW em Linux / UNIX pode ser instalado com ou sem root. Quando instalado com root, você pode criar diferentes instâncias associando-as a diferentes usuários.
Ao instalar o DB2 LUW sem privilégios de root, você pode instalar o DB2 em seu diretório inicial e seu usuário será automaticamente a única instância que esta instalação pode ter.</description>
    </item>
    
    <item>
      <title>Olá Mundo;</title>
      <link>https://www.wikiod.com/pt/db2/ola-mundo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/ola-mundo/</guid>
      <description>Criando um banco de dados no DB2 # CREATE DATABASE SAMPLEDB; Isso criará um novo banco de dados chamado sampledb.
Conectando-se a um banco de dados no DB2 # CONNECT TO SAMPLEDB; Na linha de comando (db2clp, terminal, db2cmd) você pode escrever:
db2 CONNECT TO SAMPLEDB Crie uma tabela no DB2 chamada &amp;ldquo;employee&amp;rdquo; # A instrução a seguir criará uma nova tabela chamada empregado:
CREATE TABLE EMPLOYEE ( EMPNO CHAR(6) NOT NULL, FIRSTNME VARCHAR(12) NOT NULL, LASTNAME VARCHAR(15) NOT NULL, SALARY DECIMAL(9,2) , PRIMARY KEY (EMPNO) ) Isso criará uma nova tabela chamada empregado.</description>
    </item>
    
    <item>
      <title>Analisar valores separados por vírgulas em uma coluna em várias linhas</title>
      <link>https://www.wikiod.com/pt/db2/analisar-valores-separados-por-virgulas-em-uma-coluna-em-varias-linhas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/analisar-valores-separados-por-virgulas-em-uma-coluna-em-varias-linhas/</guid>
      <description>Sintaxe # COM CTE_name (column_name[,&amp;hellip;]) AS ( SELECT column_name[,&amp;hellip;] FROM base_table UNIÃO TODOS SELECT column_name[,&amp;hellip;] FROM CTE_name WHERE &amp;lt;condição limite de recursão&amp;gt; ) SELECT column_name[,&amp;hellip;] FROM CTE_name Consulta recursiva para analisar valores separados por vírgula # Embora armazenar vários valores em uma única coluna viole as regras de normalização, às vezes é preciso lidar com tabelas herdadas mal projetadas. Uma consulta recursiva pode ajudar a converter valores separados por vírgulas em linhas distintas.</description>
    </item>
    
    <item>
      <title>Onde não em várias colunas</title>
      <link>https://www.wikiod.com/pt/db2/onde-nao-em-varias-colunas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/onde-nao-em-varias-colunas/</guid>
      <description>Filtre várias combinações de valores # Digamos que você queira filtrar uma consulta por duas colunas, mas apenas algumas combinações dessas colunas. Por exemplo, não há problema em ter a conta 60400 com a referência JE, mas você não pode ter a conta 60400 com a referência ED, mas pode ter a conta 60500 com a referência ED.
select * from schema.table where (acct, ref) not in ( values (60400, &#39;ED&#39;), (60600, &#39;ED&#39;), (60701, &#39;ED&#39;), (70400, &#39;ED&#39;), (70500, &#39;ED&#39;), (70600, &#39;ED&#39;), (80800, &#39;ED&#39;) ); </description>
    </item>
    
    <item>
      <title>dashDB</title>
      <link>https://www.wikiod.com/pt/db2/dashdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/dashdb/</guid>
      <description>IBM dashDB é uma família de bancos de dados SQL. Seu mecanismo é uma mistura de DB2, Netezza e o [mecanismo de memória BLU] 1. Qualquer driver DB2 suportado funcionará; é um substituto para o DB2.
As 3 linhas de produtos para dashDB são: (1) IBM dashDB for Transactions: Um banco de dados SQL em nuvem de uso geral e totalmente gerenciado. (2) IBM dashDB for Analytics: Um armazém de dados SQL em nuvem.</description>
    </item>
    
    <item>
      <title>Inserir em uma tabela selecionando em outra tabela</title>
      <link>https://www.wikiod.com/pt/db2/inserir-em-uma-tabela-selecionando-em-outra-tabela/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/inserir-em-uma-tabela-selecionando-em-outra-tabela/</guid>
      <description>Insira em uma tabela selecionando de outra tabela # insert into schema.table (field1, field2) select &#39;Static Value&#39;, foreignField from schema.otherTable; </description>
    </item>
    
    <item>
      <title>Combine várias linhas em um único valor separado por vírgula</title>
      <link>https://www.wikiod.com/pt/db2/combine-varias-linhas-em-um-unico-valor-separado-por-virgula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/combine-varias-linhas-em-um-unico-valor-separado-por-virgula/</guid>
      <description>Usando a função listagg() # Digamos que você tenha uma tabela de empréstimos e outra tabela de parcelas relacionada, onde cada empréstimo pode ter uma ou mais parcelas associadas a ele. Se você deseja que uma consulta mostre cada empréstimo e uma lista de todas as parcelas associadas, mas deseja que cada empréstimo apareça apenas uma vez, você pode usar algo assim:
select loan.loannumber, parcel_agg.p_list as parcel_list from schema.loan loan left join ( select loannumber, listagg(parcelnum, &#39;, &#39;) from schema.</description>
    </item>
    
    <item>
      <title>Copiar tabela com ou sem dados</title>
      <link>https://www.wikiod.com/pt/db2/copiar-tabela-com-ou-sem-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/copiar-tabela-com-ou-sem-dados/</guid>
      <description>Exemplo de como copiar estrutura de tabela existente com/sem dados
Sintaxe # CREATE TABLE schemaName.table AS (SELECT colunas FROM schemaName.table) WITH DATA Copiar Tabela com Dados # CREATE TABLE myschema.tableNew AS ( SELECT * FROM myschema.tableOld ) WITH DATA Copiar Tabela sem dados # CREATE TABLE myschema.tableNew AS ( SELECT * FROM myschema.tableOld ) WITHOUT DATA Copiar tabela com cláusula where # CREATE TABLE myschema.tableNew AS ( SELECT * FROM myschema.</description>
    </item>
    
    <item>
      <title>Informações de Restrição do DB2</title>
      <link>https://www.wikiod.com/pt/db2/informacoes-de-restricao-do-db2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/informacoes-de-restricao-do-db2/</guid>
      <description>Esta documentação ajudará quem estiver procurando por todas as restrições em uma coluna de uma tabela. A consulta pode ser modificada para localizar a tabela/colunas com base no nome da restrição.
Obter restrições com base no nome da coluna # select cst.constraint_schema, cst.constraint_name, fk.table_name, fk.ordinal_position, fk.column_name, pk.table_name, pk.column_name from qsys2.syscst cst join qsys2.syskeycst fk on fk.constraint_schema = cst.constraint_schema and fk.constraint_name = cst.constraint_name join qsys2.sysrefcst ref on ref.constraint_schema = cst.constraint_schema and ref.</description>
    </item>
    
    <item>
      <title>Soltar tabela</title>
      <link>https://www.wikiod.com/pt/db2/soltar-tabela/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/db2/soltar-tabela/</guid>
      <description>Instruções básicas para eliminar uma tabela no DB2.
Sintaxe básica da tabela de descarte # db2 connect to {databaseName} db2 drop table {schema}.{table} db2 connect reset O esquema não é necessário se corresponder ao nome de usuário atual. O prefixo &amp;ldquo;db2&amp;rdquo; não é necessário se você já estiver em um prompt de comandos do DB2.</description>
    </item>
    
  </channel>
</rss>
