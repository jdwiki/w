<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jade Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/jade/</link>
    <description>Recent content in Jade Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/jade/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com jade</title>
      <link>https://www.wikiod.com/pt/jade/comecando-com-jade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jade/comecando-com-jade/</guid>
      <description>Sintaxe # Pug (o nome antigo é Jade) é uma sintaxe limpa e sensível a espaços em branco para escrever HTML. Aqui está um exemplo simples:
doctype html html(lang=&amp;quot;en&amp;quot;) head title= pageTitle script(type=&#39;text/javascript&#39;). if (foo) bar(1 + 5) body h1 Pug - node template engine #container.col if youAreUsingPug p You are amazing else p Get on it! p. Pug is a terse and simple templating language with a strong focus on performance and powerful features.</description>
    </item>
    
    <item>
      <title>Atributos</title>
      <link>https://www.wikiod.com/pt/jade/atributos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jade/atributos/</guid>
      <description>&amp;amp;atributos # Pronunciado &amp;ldquo;and attribute&amp;rdquo;, a sintaxe &amp;amp;attributes pode ser usada para explodir um objeto em atributos de um elemento.
Código: # div#foo(data-bar=&amp;quot;foo&amp;quot;)&amp;amp;attributes({&#39;data-foo&#39;: &#39;bar&#39;})
Resultado: # &amp;lt;div id=&amp;quot;foo&amp;quot; data-bar=&amp;quot;foo&amp;quot; data-foo=&amp;quot;bar&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
O objeto não precisa ser um literal de objeto. Também pode ser apenas uma variável que tenha um objeto como seu valor (consulte também Mixin Attributes)
Código: # - var attributes = {&#39;data-foo&#39;: &#39;bar&#39;}; div#foo(data-bar=&amp;quot;foo&amp;quot;)&amp;amp;attributes(attributes) Resultado: # &amp;lt;div id=&amp;quot;foo&amp;quot; data-bar=&amp;quot;foo&amp;quot; data-foo=&amp;quot;bar&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;</description>
    </item>
    
    <item>
      <title>Caso</title>
      <link>https://www.wikiod.com/pt/jade/caso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jade/caso/</guid>
      <description>Caso # - var friends = 10 case friends when 0 p you have no friends when 1 p you have a friend default p you have #{friends} friends Resultado é:
&amp;lt;p&amp;gt;você tem 10 amigos&amp;lt;/p&amp;gt;</description>
    </item>
    
    <item>
      <title>harpa js</title>
      <link>https://www.wikiod.com/pt/jade/harpa-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jade/harpa-js/</guid>
      <description>Harp é um servidor web estático com pré-processamento embutido. O Harp pode compilar seu projeto em ativos estáticos, HTML, CSS e JavaScript, sem necessidade de configuração. Você também pode usar o Harp como uma biblioteca Node para compilar ou executar como servidor.
O Harp inclui os pré-processadores comuns e úteis por padrão. Serve Jade (Pug), Markdown, EJS, CoffeeScript, LESS, Sass e Stylus.
Como configurar a Harpa # O Harp não requer nenhuma configuração para começar.</description>
    </item>
    
  </channel>
</rss>
