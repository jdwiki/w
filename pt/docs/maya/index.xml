<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial maya on </title>
    <link>https://www.wikiod.com/pt/docs/maya/</link>
    <description>Recent content in tutorial maya on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/maya/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com Maya</title>
      <link>https://www.wikiod.com/pt/maya/comecando-com-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/maya/comecando-com-maya/</guid>
      <description>Instalação # O Maya suporta 3 ambientes de programação principais. Cada um tem diferentes requisitos de configuração.
MEL # A linguagem de script MEL está incluída no aplicativo Maya. Habilitado por padrão, os usuários podem testar o MEL na janela do ouvinte de script em uma cópia em execução do Maya.
Os arquivos MEL são arquivos de texto com a extensão .mel. Eles podem ser carregados em uma sessão Maya em execução usando o comando source no listener ou em outro script MEL.</description>
    </item>
    
    <item>
      <title>Caminhos do Maya Python</title>
      <link>https://www.wikiod.com/pt/maya/caminhos-do-maya-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/maya/caminhos-do-maya-python/</guid>
      <description>Esta página deve cobrir várias maneiras de configurar caminhos python do Maya - userSetup, maya.env, variáveis ​​de ambiente e assim por diante
Usando userSetup.py # Adicione caminhos arbitrários ao ambiente do Maya Python no arquivo userSetup.py. userSetup.py é um arquivo Python (não um módulo) que é executado automaticamente na inicialização do Maya. O userSetup.py pode residir em vários locais, dependendo do sistema operacional e das variáveis ​​de ambiente.
Quando o Maya for iniciado, ele executará o conteúdo do arquivo userSetup.</description>
    </item>
    
    <item>
      <title>Criando IU do Maya</title>
      <link>https://www.wikiod.com/pt/maya/criando-iu-do-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/maya/criando-iu-do-maya/</guid>
      <description>Parâmetros # parâmetro detalhes e/editar diz ao Maya que você deseja alterar o valor de uma propriedade existente q/consulta diz ao Maya que você deseja obter o valor de uma propriedade existente O Maya vem com um kit de ferramentas de interface do usuário bastante completo que inclui janelas, layouts e uma variedade de controles. Isso é implementado usando a estrutura QT em C++, mas exposto a usuários de MEL e Python por meio do conjunto de comandos padrão do Maya.</description>
    </item>
    
    <item>
      <title>Criando GUI PyQt com Maya</title>
      <link>https://www.wikiod.com/pt/maya/criando-gui-pyqt-com-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/maya/criando-gui-pyqt-com-maya/</guid>
      <description>Criando janela PyQt # Este é um exemplo muito básico de como carregar um arquivo pyqt ui para o maya com pyqt libs. Nesta solução, você realmente não precisa converter seu arquivo pyqt ui em um arquivo python. Você pode simplesmente carregar sua interface do usuário pyqt.
from PyQt4 import QtCore, QtGui, uic import maya.OpenMayaUI as mui import sip baseUI = &amp;quot;/user/foo/bar/basic.ui&amp;quot; baseUIClass, baseUIWidget = uic.loadUiType(baseUI) class Ui_MainWindow(baseUIWidget, baseUIClass): def __init__(self,parent=None): super(baseUIWidget, self).</description>
    </item>
    
    <item>
      <title>Encontrando objetos de cena</title>
      <link>https://www.wikiod.com/pt/maya/encontrando-objetos-de-cena/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/maya/encontrando-objetos-de-cena/</guid>
      <description>Localizar objetos pelo nome # Use os comandos ls() para encontrar objetos por nome:
freds = cmds.ls(&amp;quot;fred&amp;quot;) #finds all objects in the scene named exactly &#39;fred&#39;, ie [u&#39;fred&#39;, u&#39;|group1|fred&#39;] Use * como um curinga:
freds = cmds.ls(&amp;quot;fred*&amp;quot;) # finds all objects whose name starts with &#39;fred&#39; # [u&#39;fred&#39;, u&#39;frederick&#39;, u&#39;fred2&#39;] has_fred = cmds.ls(&amp;quot;*fred*&amp;quot;) # [u&#39;fred&#39;, u&#39;alfred&#39;, u&#39;fredericka&#39;] ls() recebe vários argumentos de string de filtro:
cmds.ls(&amp;quot;fred&amp;quot;, &amp;quot;barney&amp;quot;) # [u&#39;fred&#39;, u&#39;|group1|barney&#39;] Ele também pode aceitar um argumento iterável:</description>
    </item>
    
    <item>
      <title>Comandos básicos do Maya explicados</title>
      <link>https://www.wikiod.com/pt/maya/comandos-basicos-do-maya-explicados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/maya/comandos-basicos-do-maya-explicados/</guid>
      <description>O que é definido/obtido Attr # setAttr
Basicamente, como qualquer outra linguagem, setAttr pode definir um valor para um atributo especificado de um nó ou qualquer contexto. E suporta uma gama muito ampla de opções. Para obter instruções detalhadas, visite a documentação oficial do próprio maya aqui.
Aqui está um exemplo mínimo de setAttr
nodeName = &amp;quot;pSphere1&amp;quot; cmds.setAttr(&amp;quot;%s.tx&amp;quot; % nodeName, 10) getAttr O mesmo que setAttr aqui, ele retornará o valor de um atributo específico de um nó.</description>
    </item>
    
    <item>
      <title>Tutoriais em vídeo on-line do Maya</title>
      <link>https://www.wikiod.com/pt/maya/tutoriais-em-video-on-line-do-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/maya/tutoriais-em-video-on-line-do-maya/</guid>
      <description>Tutoriais em vídeo on-line disponíveis # Existem muitos tutoriais em vídeo online para maya, python e pyqt. O que lhe dará acesso a algum conhecimento profundo da programação maya e python no maya. Alguns são cobertos com pyqt também. Aqui estão alguns e sinta-se à vontade para adicionar mais aqui.
https://www.udemy.com/python-for-maya/learn/v4/overview Por Dhruv Govil https://cmivfx.com/products/316-pyqt4-ui-development-for-maya Por Justin https://cmivfx.com/products/167-python-introduction-vol-01&amp;mdash;maya Por Justin https://cmivfx.com/products/173-python-for-maya-vol-02 Por Justin https://www.cgcircuit.com/bundle-details.php?val=21 API de matemática e Maya </description>
    </item>
    
  </channel>
</rss>
