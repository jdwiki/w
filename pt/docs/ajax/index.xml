<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de ajax on </title>
    <link>https://www.wikiod.com/pt/docs/ajax/</link>
    <description>Recent content in Tutorial de ajax on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/ajax/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com ajax</title>
      <link>https://www.wikiod.com/pt/ajax/comecando-com-ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/ajax/comecando-com-ajax/</guid>
      <description>Exemplo simples de jQuery para se comunicar com o servidor # Extraído do site jQuery.ajax API:
$.ajax({ method: &amp;quot;POST&amp;quot;, url: &amp;quot;some.php&amp;quot;, data: { name: &amp;quot;John&amp;quot;, location: &amp;quot;Boston&amp;quot; }, success: function(msg) { alert(&amp;quot;Data Saved: &amp;quot; + msg); }, error: function(e) { alert(&amp;quot;Error: &amp;quot; + e); } }); Este pedaço de código, devido ao jQuery, é fácil de ler e entender o que está acontecendo.
$.ajax - este bit chama a funcionalidade ajax do jQuery.</description>
    </item>
    
    <item>
      <title>Retornos de chamada</title>
      <link>https://www.wikiod.com/pt/ajax/retornos-de-chamada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/ajax/retornos-de-chamada/</guid>
      <description>Interpretando erros com callback &amp;ldquo;error&amp;rdquo; # Os erros, quando gerenciados adequadamente pelo servidor, serão retornados ao seu cliente com um código de status HTTP específico diferente de 2xx (consulte RFC 2616 section 10).
É aconselhável capturar globalmente seus erros de seu $.ajaxSetup() como demonstrado no exemplo abaixo. Portanto, todos os erros provenientes de suas chamadas ajax serão interpretados automaticamente a partir da configuração do ajax.
$.ajaxSetup({ error: function (jqXHR, exception, errorThrown) { var message; var statusErrorMap = { &#39;400&#39;: &amp;quot;Server understood the request, but request content was invalid.</description>
    </item>
    
  </channel>
</rss>
