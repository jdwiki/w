<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de selênio on </title>
    <link>https://www.wikiod.com/pt/docs/selenium/</link>
    <description>Recent content in Tutorial de selênio on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/selenium/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao selênio</title>
      <link>https://www.wikiod.com/pt/selenium/introducao-ao-selenio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/introducao-ao-selenio/</guid>
      <description>Teste simples de Selenium em Java # O código abaixo é um programa java simples usando selenium. A jornada do código abaixo é
Abra o navegador Firefox
Abra a página do Google
Imprimir título da página do Google
Encontre o local da caixa de pesquisa
Passe o valor como Selenium na caixa de pesquisa
Envie o formulário
Desligue o navegador
package org.openqa.selenium.example;
import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import java.</description>
    </item>
    
    <item>
      <title>Fábrica de Drivers da Web</title>
      <link>https://www.wikiod.com/pt/selenium/fabrica-de-drivers-da-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/fabrica-de-drivers-da-web/</guid>
      <description>WebDriver Factory C# # using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Firefox; using OpenQA.Selenium.IE; /// &amp;lt;summary&amp;gt; /// Factory for creating WebDriver for various browsers. /// &amp;lt;/summary&amp;gt; public static class WebDriverFactory { /// &amp;lt;summary&amp;gt; /// Initilizes IWebDriver base on the given WebBrowser name. /// &amp;lt;/summary&amp;gt; /// &amp;lt;param name=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt; public static IWebDriver CreateWebDriver(WebBrowser name) { switch (name) { case WebBrowser.Firefox: return new FirefoxDriver(); case WebBrowser.IE: case WebBrowser.InternetExplorer: InternetExplorerOptions ieOption = new InternetExplorerOptions(); ieOption.</description>
    </item>
    
    <item>
      <title>Fazer uma captura de tela de uma página da web</title>
      <link>https://www.wikiod.com/pt/selenium/fazer-uma-captura-de-tela-de-uma-pagina-da-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/fazer-uma-captura-de-tela-de-uma-pagina-da-web/</guid>
      <description>Java Selenium tira/salva a captura de tela da página da Web e adiciona no relatório # public void Screenshot() throws Throwable{ final byte[] screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES); scenario.embed(screenshot, &amp;quot;image/png&amp;quot;); // ... and embed it in the report. Thread.sleep(1000); } Alternativamente
public static void captureScreenShot(WebDriver ldriver){ // Take screenshot and store as a file format File src= ((TakesScreenshot)ldriver).getScreenshotAs(OutputType.FILE); try { // now copy the screenshot to desired location using copyFile method FileUtils.</description>
    </item>
    
    <item>
      <title>Esperando em Selênio</title>
      <link>https://www.wikiod.com/pt/selenium/esperando-em-selenio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/esperando-em-selenio/</guid>
      <description>Um dos obstáculos mais comuns para os usuários mais novos do Selenium é esperar até que uma página seja totalmente carregada. Usuários humanos podem facilmente dizer se uma página foi totalmente carregada ou se ainda está carregando. O selênio, no entanto, apenas espera por um determinado período de tempo. Portanto, geralmente é conveniente ter uma boa maneira de esperar por elementos em uma página. Embora seja possível fazer isso com um loop e funções sleep(), existem maneiras muito mais limpas já incorporadas ao Selenium.</description>
    </item>
    
    <item>
      <title>Aceitando alertas pop-up com o Selenium</title>
      <link>https://www.wikiod.com/pt/selenium/aceitando-alertas-pop-up-com-o-selenium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/aceitando-alertas-pop-up-com-o-selenium/</guid>
      <description>Exemplo Python de Aceitando alerta # from selenium import webdriver # Create a new webdriver driver = webdriver.Chrome() # Get a page that has a popup window (Use mouse to click &amp;quot;try it&amp;quot; button) driver.get(&amp;quot;http://www.w3schools.com/js/tryit.asp?filename=tryjs_alert&amp;quot;) # Accept the opened alert driver.switch_to.alert.accept() Extensões C# para WebDriver # public static IWebDriver dismissAlert(this IWebDriver driver) { try { IAlert alert = driver.SwitchTo().Alert(); alert.Dismiss(); } catch {} return driver; } public static IWebDriver acceptAlert(this IWebDriver driver) { try { IAlert alert = driver.</description>
    </item>
    
    <item>
      <title>Primeiro projeto em selênio com Java</title>
      <link>https://www.wikiod.com/pt/selenium/primeiro-projeto-em-selenio-com-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/primeiro-projeto-em-selenio-com-java/</guid>
      <description>Esta é uma introdução ao Selenium, usando Java. Embora não esperemos que você saiba nada sobre o Selenium, você precisa ter conhecimento prévio de Java para seguir este curso.
Links para download :
Selenium
IntelliJ IDEA
ChromeDriver
JDK 8
Obtendo elementos no selênio # Cada Html-Element no Selenium é chamado de WebElement. Por exemplo, uma tag p seria um WebElement, uma tag a seria um WebElement, etc. Considere a seguinte estrutura html:</description>
    </item>
    
    <item>
      <title>Começando com Selenium em python</title>
      <link>https://www.wikiod.com/pt/selenium/comecando-com-selenium-em-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/comecando-com-selenium-em-python/</guid>
      <description>O que é selênio?
Selenium é uma biblioteca de comandos para ajudar um programador a interagir com um navegador como um usuário real.
Coisas que o Selenium faz:
Encontrando elemento(s) no html de uma página da web
Encontra um único elemento:
driver.find_element_by_css_selector(&amp;quot;css.selector.of.element&amp;quot;) CSS Selector help driver.find_element_by_xpath(&amp;quot;//xpath//of//element&amp;quot;) XPATH help driver.find_element_by_name(&amp;quot;name_of_element&amp;quot;) driver.find_element_by_id(&amp;quot;id_of_element&amp;quot;) driver.find_element_by_partial_link_text(&amp;quot;element_link_text&amp;quot;) driver.find_element_by_class_name(&amp;quot;class_name_of_element&amp;quot;) driver.find_element_by_tag_name(&amp;quot;tag_name_of_element&amp;quot;) Encontra uma lista de elementos:
driver.find_elements_by_css_selector(&amp;quot;css.selector.of.elements&amp;quot;) driver.find_elements_by_xpath(&amp;quot;//xpath//of//elements&amp;quot;) driver.find_elements_by_name(&amp;quot;name_of_elements&amp;quot;) driver.find_elements_by_partial_link_text(&amp;quot;elements_link_text&amp;quot;) driver.find_elements_by_class_name(&amp;quot;class_name_of_elements&amp;quot;) driver.find_elements_by_tag_name(&amp;quot;tag_name_of_elements&amp;quot;) Documentação oficial: selenium-python leia os documentos</description>
    </item>
    
    <item>
      <title>Selenium IDE</title>
      <link>https://www.wikiod.com/pt/selenium/selenium-ide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/selenium-ide/</guid>
      <description>Experimente um script Selenium simples: pesquise na Wikipedia no Google # Pré-requisitos:
Instale o Firefox Instale o complemento Selenium IDE (https://addons.mozilla.org/fr/firefox/addon/selenium-ide/) Abra o plug-in. Um botão exibindo um círculo vermelho deve ser mostrado. Se estiver pressionado, significa que você pode iniciar seu cenário. O plug-in está gravando tudo o que você faz nesta instância do Firefox.
Faça o que quiser para ser gravado.
No final, salve seu cenário; você notará que os cenários do Selenium IDE são arquivos html.</description>
    </item>
    
    <item>
      <title>WebDriverManager for Selenium - uma ferramenta muito legal de Boni Garcia</title>
      <link>https://www.wikiod.com/pt/selenium/webdrivermanager-for-selenium---uma-ferramenta-muito-legal-de-boni-garcia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/webdrivermanager-for-selenium---uma-ferramenta-muito-legal-de-boni-garcia/</guid>
      <description>Mudei para o Selenium 3 e comecei a usar o Chrome em vez do Firefox. Descobri que para o Chrome preciso baixar um binário para o WebDriver lidar com o navegador. Para que isso funcione, preciso definir o caminho absoluto para esse binário como variável Java. Se o binário for atualizado, preciso atualizar esse binário manualmente na minha estrutura de teste - o que leva tempo e é realmente irritante. Descobri uma biblioteca Java muito legal que faz isso por mim: https://github.</description>
    </item>
    
    <item>
      <title>Automação de aplicativos móveis</title>
      <link>https://www.wikiod.com/pt/selenium/automacao-de-aplicativos-moveis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/selenium/automacao-de-aplicativos-moveis/</guid>
      <description>Android + Chrome + Python # Para poder executar testes, o Broser Chrome deve estar pré-instalado no dispositivo Android,
Python + Chrome + Android # Para poder trabalhar com o aplicativo da web em um dispositivo Android usando Selenium, as pré-condições abaixo devem ser atendidas:
Android SDK instalado no computador Navegador Chrome instalado no dispositivo Android Modo de depuração ativado no dispositivo Android Inicie o servidor adb e chromedriver com os comandos abaixo de cmd/Terminal:</description>
    </item>
    
  </channel>
</rss>
