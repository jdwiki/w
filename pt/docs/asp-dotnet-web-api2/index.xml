<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial asp.net-web-api2 on </title>
    <link>https://www.wikiod.com/pt/docs/asp-dotnet-web-api2/</link>
    <description>Recent content in tutorial asp.net-web-api2 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/asp-dotnet-web-api2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com asp.net-web-api2</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-web-api2/comecando-com-aspnet-web-api2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-web-api2/comecando-com-aspnet-web-api2/</guid>
      <description>O que e por que Asp.Net Web API2? # Oque e porque ?
A Web API2 do Asp.Net é a versão mais recente da Web API. É uma maneira fácil de implementar um serviço web RESTful usando todas as vantagens que o framework Asp.Net oferece. Uma vez que você entenda os princípios básicos do REST, então uma API da Web Asp.net2 será muito fácil de implementar. O Web API2 é construído no modelo de pipeline modular e conectável do Asp.</description>
    </item>
    
    <item>
      <title>OAuth 2.0 na API da Web ASP.NET</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-web-api2/oauth-20-na-api-da-web-aspnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-web-api2/oauth-20-na-api-da-web-aspnet/</guid>
      <description>Registrando em um aplicativo Android
Estas são as etapas que fiz para fazer login/registrar usando um aplicativo Android:
Ter uma atividade de login que consulte a rota ExternalLogins, obtendo os provedores disponíveis. Esta atividade deve ter o sinalizador NoHistory habilitado e executado como uma única instância. Ao pressionar o botão de um usuário, inicie uma guia personalizada do Chrome com o URL do provedor. O usuário deve estar logado e redirecionado de volta para seu site publicado no URL de retorno fornecido.</description>
    </item>
    
    <item>
      <title>Roteamento de atributo no ASP.NET Web API 2</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-web-api2/roteamento-de-atributo-no-aspnet-web-api-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-web-api2/roteamento-de-atributo-no-aspnet-web-api-2/</guid>
      <description>Como o nome sugere, isso usa atributos para rotear. Isso dá ao usuário mais controle sobre os URIs na WebAPI. Por exemplo, você pode descrever hierarquias do recurso. No entanto, o &amp;lsquo;Roteamento Convencional&amp;rsquo; anterior é totalmente suportado. Os usuários também podem ter uma mistura de ambos.
Sintaxe # [RoutePrefix(&amp;ldquo;api/books&amp;rdquo;)] - para a classe do controlador [Route(&amp;ldquo;getById&amp;rdquo;)] - para ações [Route(&amp;quot;~/api/authors/{authorId:int}/books&amp;quot;)] - para substituir o prefixo da rota Parâmetros # Nome do parâmetro Detalhes RoutePrefix atributo para a classe do controlador.</description>
    </item>
    
  </channel>
</rss>
