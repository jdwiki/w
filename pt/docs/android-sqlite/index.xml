<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial android-sqlite on </title>
    <link>https://www.wikiod.com/pt/docs/android-sqlite/</link>
    <description>Recent content in tutorial android-sqlite on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/android-sqlite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao android-sqlite</title>
      <link>https://www.wikiod.com/pt/android-sqlite/introducao-ao-android-sqlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-sqlite/introducao-ao-android-sqlite/</guid>
      <description>Uso básico # Para incluir um banco de dados em seu aplicativo, você normalmente deriva uma classe de SQLiteOpenHelper:
public class HelloDBHelper extends SQLiteOpenHelper { private static final int DATABASE_VERSION = 1; private static final int DATABASE_NAME = &amp;quot;hello&amp;quot;; HelloDBHelper(Context context) { super(context, DATABASE_NAME, null, DATABASE_VERSION); } @Override public void onCreate(SQLiteDatabase db) { db.execSQL(&amp;quot;CREATE TABLE ...&amp;quot;); ... } } Essa classe auxiliar é responsável por abrir (e criar/atualizar, se necessário) o banco de dados.</description>
    </item>
    
    <item>
      <title>SQLiteOpenHelper</title>
      <link>https://www.wikiod.com/pt/android-sqlite/sqliteopenhelper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-sqlite/sqliteopenhelper/</guid>
      <description>SQLiteOpenHelper com nome de caminho de banco de dados totalmente qualificado/banco de dados na pasta pública # Normalmente, o Android-SQLiteOpenHelper não permite nomes de caminho totalmente qualificados onde o banco de dados deve ser armazenado. Portanto, arquivos de banco de dados públicos não são possíveis.
Você pode usar o SQLiteOpenHelper com um caminho personalizado se fornecer um ContextClass personalizado e se tiver acesso de gravação no diretório de destino.
public class DatabaseHelper extends SQLiteOpenHelper { private static final int DATABASE_VERSION = 3; .</description>
    </item>
    
  </channel>
</rss>
