<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial neo4j on </title>
    <link>https://www.wikiod.com/pt/docs/neo4j/</link>
    <description>Recent content in Tutorial neo4j on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/neo4j/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao neo4j</title>
      <link>https://www.wikiod.com/pt/neo4j/introducao-ao-neo4j/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/neo4j/introducao-ao-neo4j/</guid>
      <description>Linguagem de consulta criptografada # Esta é a Cypher, a linguagem de consulta do Neo4j. De muitas maneiras, Cypher é semelhante ao SQL, se você estiver familiarizado com ele, exceto que SQL se refere a itens armazenados em uma tabela, enquanto Cypher se refere a itens armazenados em um gráfico.
Primeiro, devemos começar aprendendo como criar um gráfico e adicionar relacionamentos, já que é essencialmente disso que trata o Neo4j.</description>
    </item>
    
    <item>
      <title>Cifra</title>
      <link>https://www.wikiod.com/pt/neo4j/cifra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/neo4j/cifra/</guid>
      <description>Cypher é a linguagem de consulta usada pelo Neo4j. Você usa o Cypher para executar tarefas e correspondências com um gráfico Neo4j.
Cypher é &amp;ldquo;inspirado por SQL&amp;rdquo; e foi projetado para ser intuitivo na maneira como você descreve os relacionamentos, ou seja, normalmente o desenho do padrão será semelhante à representação Cypher do padrão.
Exclusão # Excluir todos os nós # MATCH (n) DETACH DELETE n DETACH não funciona em versões mais antigas (menos de 2.</description>
    </item>
    
    <item>
      <title>Pitão</title>
      <link>https://www.wikiod.com/pt/neo4j/pitao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/neo4j/pitao/</guid>
      <description>Instale o neo4jrestclient # pip install neo4jrestclient Conecte-se ao neo4j # from neo4jrestclient.client import GraphDatabase db = GraphDatabase(&amp;quot;http://localhost:7474&amp;quot;, username=&amp;quot;neo4j&amp;quot;, password=&amp;quot;mypass&amp;quot;) Crie alguns nós com rótulos # user = db.labels.create(&amp;quot;User&amp;quot;) u1 = db.nodes.create(name=&amp;quot;user1&amp;quot;) user.add(u1) u2 = db.nodes.create(name=&amp;quot;user2&amp;quot;) user.add(u2) Você pode associar um rótulo a vários nós de uma só vez # Language = db.labels.create(&amp;quot;Language&amp;quot;) b1 = db.nodes.create(name=&amp;quot;C++&amp;quot;) b2 = db.nodes.create(name=&amp;quot;Python&amp;quot;) beer.add(b1, b2) Crie relacionamentos # u1.relationships.create(&amp;quot;likes&amp;quot;, b1) u1.relationships.create(&amp;quot;likes&amp;quot;, b2) u2.relationships.create(&amp;quot;likes&amp;quot;, b1) Relacionamentos bidirecionais # u1.</description>
    </item>
    
  </channel>
</rss>
