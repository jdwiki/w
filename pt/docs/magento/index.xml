<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Magento on </title>
    <link>https://www.wikiod.com/pt/docs/magento/</link>
    <description>Recent content in Tutorial Magento on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/magento/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o magento</title>
      <link>https://www.wikiod.com/pt/magento/comecando-com-o-magento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/comecando-com-o-magento/</guid>
      <description>Instalação e configuração # Pré-requisitos e requisitos para Magento Community Edition 1.9 ================================================== ==============
Hospedagem
Apache 2.x (com mod_rewrite) ou Nginx 1.7.x
Devido às demandas de processamento das operações do Magento, é recomendável que você instale o Magento em um servidor com pelo menos 2 GB de RAM. Isso garantirá que todos os softwares envolvidos no gerenciamento da loja tenham memória suficiente para funcionar.
Capacidade de executar tarefas agendadas (crontab) com PHP 5.</description>
    </item>
    
    <item>
      <title>Obter produtos do banco de dados</title>
      <link>https://www.wikiod.com/pt/magento/obter-produtos-do-banco-de-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/obter-produtos-do-banco-de-dados/</guid>
      <description>Obter produto por sku # $sku = &#39;sku-goes-here&#39;; $product = Mage::getModel(&#39;catalog/product&#39;)-&amp;gt;loadByAttribute(&#39;sku&#39;, $sku); Obter produto por ID # $id = 1; $product = Mage::getModel(&#39;catalog/product&#39;)-&amp;gt;load($id); if($product-&amp;gt;getId()){ //product was found } Obter coleção de produtos por atributo # $collection = Mage::getModel(&#39;catalog/product&#39;)-&amp;gt;getCollection(); // Using operator $collection-&amp;gt;addAttributeToFilter(&#39;status&#39;, array(&#39;eq&#39; =&amp;gt; 1)); // Without operator (automatically uses &#39;equal&#39; operator $collection-&amp;gt;addAttributeToFilter(&#39;status&#39;, 1); Coleção de produtos - consulta LIKE # $collection = Mage::getModel(&#39;catalog/product&#39;)-&amp;gt;getCollection(); $collection-&amp;gt;addAttributeToFilter(&#39;sku&#39;, array(&#39;like&#39; =&amp;gt; &#39;UX%&#39;)); Coleção de produtos - com atributos # //all attributes $collection = Mage::getModel(&#39;catalog/product&#39;) -&amp;gt;getCollection() -&amp;gt;addAttributeToSelect(&#39;*&#39;); //specific attributes $collection = Mage::getModel(&#39;catalog/product&#39;) -&amp;gt;getCollection() -&amp;gt;addAttributeToSelect(&#39;name&#39;); //certain attributes are special, such as price and images //for images, then you can use &#39;getMediaGalleryImages&#39; $product-&amp;gt;load(&#39;media_galley&#39;); Obtenha a coleção de produtos de uma lista de SKUs # $ skuList = array (&#39;SKU-1&#39;, &#39;SKU-2&#39;, .</description>
    </item>
    
    <item>
      <title>Estrutura do módulo</title>
      <link>https://www.wikiod.com/pt/magento/estrutura-do-modulo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/estrutura-do-modulo/</guid>
      <description>Os módulos existem para serem estendidos. Você não pode alterar os arquivos the app/code/ sem proibir quaisquer atualizações futuras. Em vez disso, adicionamos um módulo ao diretório app/code/local (o diretório local pode estar faltando, se estiver, ele precisa ser criado manualmente. Isso é comum em versões posteriores do Magento) para adicionar funcionalidade local personalizada.
Todos os arquivos de configuração do módulo começam com uma tag &amp;lt;config&amp;gt;. O novo módulo é declarado dentro da tag &amp;lt;modules&amp;gt;.</description>
    </item>
    
    <item>
      <title>Estrutura MVC</title>
      <link>https://www.wikiod.com/pt/magento/estrutura-mvc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/estrutura-mvc/</guid>
      <description>MVC significa Model-View-Controller. Qualquer aplicativo que separe seu acesso a dados, lógica de negócios e interface de usuário é chamado de MVC. Pode haver dois tipos de MVC: baseado em convenção e baseado em configuração. Exemplo, cakePHP é baseado em convenções, ou seja, você só precisa seguir as instruções do sistema principal para deixar seu módulo pronto em apenas algumas linhas. O Magento é baseado em configuração, ou seja, você precisa especificar cada coisa no arquivo de configuração do seu módulo para que funcione.</description>
    </item>
    
    <item>
      <title>EAV (Valor do Atributo da Entidade)</title>
      <link>https://www.wikiod.com/pt/magento/eav-valor-do-atributo-da-entidade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/eav-valor-do-atributo-da-entidade/</guid>
      <description>Entidade
Armazena informações sobre o tipo de dados que estão sendo armazenados. No caso do Magento isso é cliente, produto, categoria, etc.
Atributo
As propriedades individuais de cada uma das entidades, e. nome, peso, endereço de e-mail etc.
Valor
O valor de uma determinada entidade e atributo. Por exemplo, podemos especificar a entidade do cliente e o atributo de email e, em seguida, atribuir a ele o valor hello@example.com.
Esquema de banco de dados</description>
    </item>
    
    <item>
      <title>Pedidos</title>
      <link>https://www.wikiod.com/pt/magento/pedidos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/pedidos/</guid>
      <description>Obter pedido por ID # $orderid = 12345; $order = Mage::getModel(&#39;sales/order&#39;)-&amp;gt;load($orderid); O código acima é aproximadamente análogo à seguinte consulta SQL.
select * from sales_flat_order where entity_id=12345; Obter pedido por ID de incremento # $incrementid = 100000000; $order = Mage::getModel(&#39;sales/order&#39;)-&amp;gt;loadByIncrementId($incrementid); O código acima é aproximadamente análogo à seguinte consulta SQL.
select * from sales_flat_order where increment_id=100000000; O increment_id é o identificador de pedido voltado para o cliente, enquanto o entity_id é o identificador de nível de banco de dados para o pedido.</description>
    </item>
    
    <item>
      <title>Shell, CLI</title>
      <link>https://www.wikiod.com/pt/magento/shell-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/shell-cli/</guid>
      <description>Fundamentos # Você precisa ter uma linha de comando do Linux ou conectar-se usando SSH ao seu servidor para usar scripts de shell. Vá para o seu MAGENTO_ROOT/shell O script pode ser executado digitando, ou seja, php -f indexer.php help Métodos do shell do núcleo por arquivos # resumo.php
indexador.php
compilador.php
log.php
Scripts de shell php personalizados # Às vezes, precisamos acessar o Magento fora de um navegador da Web para ommit os tempos de execução ou definir coisas diferentes que não afetarão o frontend.</description>
    </item>
    
    <item>
      <title>Entendendo os tipos de produtos</title>
      <link>https://www.wikiod.com/pt/magento/entendendo-os-tipos-de-produtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/entendendo-os-tipos-de-produtos/</guid>
      <description>Existem seis tipos de produtos diferentes integrados ao Magento.
Simples Uma única unidade de estoque
Configurável Primeiro dos produtos compostos. Permita que os clientes configurem seus produtos e adicionem um único produto simples à cesta.
Agrupado O segundo produto composto, um produto agrupado, relaciona produtos simples e oferece ao cliente a possibilidade de escolher as quantidades de cada item.
Pacote O terceiro tipo de produto composto , um pacote relaciona produtos simples para serem adquiridos como um único item.</description>
    </item>
    
    <item>
      <title>Manipulação de erros, mensagens e relatórios do Magento</title>
      <link>https://www.wikiod.com/pt/magento/manipulacao-de-erros-mensagens-e-relatorios-do-magento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/manipulacao-de-erros-mensagens-e-relatorios-do-magento/</guid>
      <description>Locais de registro de erros # /var/log/ # Normalmente os arquivos system.log e exception.log existirão na pasta /var/log/. Estes contêm a maioria das informações que você vai precisar. Você pode verificar se eles estão habilitados e quais são os nomes da exceção e do log do sistema indo em Sistema &amp;gt; Configuração &amp;gt; Sistema &amp;gt; Desenvolvedor &amp;gt; Configurações de log.
/var/relatório/ # Os arquivos de relatório são gerados nesta pasta depois que um usuário encontra um erro.</description>
    </item>
    
    <item>
      <title>Obter usuário atual</title>
      <link>https://www.wikiod.com/pt/magento/obter-usuario-atual/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/magento/obter-usuario-atual/</guid>
      <description>Obter cliente atual # Mage::helper(&#39;customer&#39;)-&amp;gt;getCustomer(); ou
Mage::getSingleton(&#39;customer/session&#39;)-&amp;gt;getCustomer(); Obter usuário administrador atual # Mage::getSingleton(&#39;admin/session&#39;)-&amp;gt;getUser(); Verifique se o usuário está logado # Mage::getSingleton(&#39;customer/session&#39;)-&amp;gt;isLoggedIn() </description>
    </item>
    
  </channel>
</rss>
