<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pygame Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/pygame/</link>
    <description>Recent content in pygame Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/pygame/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com pygame</title>
      <link>https://www.wikiod.com/pt/pygame/comecando-com-pygame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pygame/comecando-com-pygame/</guid>
      <description>Um simples &amp;lsquo;jogo&amp;rsquo; # Importar e inicializar # Cada módulo precisa ser importado e o pygame não é exceção. Embora precisemos chamar a função pygame.init() para que todos os módulos importados no pygame sejam inicializados corretamente. Se esquecermos disso, alguns módulos não funcionarão. A função também retorna uma tupla de todas as inicializações bem-sucedidas e com falha (não gerará um erro se um módulo falhar ao inicializar).
import pygame successes, failures = pygame.</description>
    </item>
    
    <item>
      <title>Manipulação de eventos</title>
      <link>https://www.wikiod.com/pt/pygame/manipulacao-de-eventos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pygame/manipulacao-de-eventos/</guid>
      <description>Ciclo de eventos # O Pygame registrará todos os eventos do usuário em uma fila de eventos que pode ser recebida com o código pygame.event.get(). Cada elemento nesta fila é um objeto Event e todos eles terão o atributo type, que é um número inteiro que representa que tipo de evento é. No módulo pygame existem constantes inteiras predefinidas que representam o tipo. Exceto por este atributo, os eventos possuem atributos diferentes.</description>
    </item>
    
    <item>
      <title>Criando uma janela no pygame - pygame.display.set_mode()</title>
      <link>https://www.wikiod.com/pt/pygame/criando-uma-janela-no-pygame---pygamedisplayset_mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pygame/criando-uma-janela-no-pygame---pygamedisplayset_mode/</guid>
      <description>Sintaxe # pygame.display.set_mode(resolution=(0,0), flags=0, depth=0) # Retorna um pygame.Surface representando a janela na tela flags = pygame.FULLSCREEN | pygame.OPENGL # As bandeiras podem ser combinadas usando o &amp;ldquo;|&amp;rdquo; (OR bit a bit ou &amp;ldquo;pipe&amp;rdquo;). Parâmetros # parâmetro explicação resolução um par de números representando a largura e a altura da janela bandeiras opções adicionais que alteram o tipo de janela - veja &amp;ldquo;Observações&amp;rdquo; para sinalizadores disponíveis profundidade quantidade de bits usados ​​para cor Os valores possíveis para os argumentos flag são: bandeira descrição pygame.</description>
    </item>
    
    <item>
      <title>Adicionando música de fundo e efeitos sonoros</title>
      <link>https://www.wikiod.com/pt/pygame/adicionando-musica-de-fundo-e-efeitos-sonoros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pygame/adicionando-musica-de-fundo-e-efeitos-sonoros/</guid>
      <description>Tente tocar música em &amp;lsquo;.wav&amp;rsquo; em vez de &amp;lsquo;.mp3&amp;rsquo;. Em &amp;lsquo;.mp3&amp;rsquo; a música fica lenta.
Exemplo para adicionar música no pygame # import pygame file = &#39;some.mp3&#39; pygame.init() pygame.mixer.init() pygame.mixer.music.load(file) pygame.mixer.music.play(-1) # If the loops is -1 then the music will repeat indefinitely. Exemplo para adicionar playlist de música no pygame # import pygame import time pygame.mixer.init() pygame.display.init() screen = pygame.display.set_mode ( ( 420 , 240 ) ) playlist = list() playlist.</description>
    </item>
    
    <item>
      <title>Criando uma janela pygame simples</title>
      <link>https://www.wikiod.com/pt/pygame/criando-uma-janela-pygame-simples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pygame/criando-uma-janela-pygame-simples/</guid>
      <description>O código completo # import pygame pygame.init() WIDTH = 300 HEIGHT = 200 SCREEN = pygame.display.set_mode((WIDTH, HEIGHT)) pygame.display.set_caption(&#39;My Game&#39;) WHITE = (255, 255, 255) BLACK = (0, 0, 0) RED = (255, 0, 0) GREEN = (0, 255, 0) BLUE = (0, 0, 255) YELLOW = (255, 255, 255) SCREEN.fill(RED) pygame.display.flip() is_running = True while is_running: for event in pygame.event.get(): if event.type == pygame.QUIT: is_running = False pygame.quit() Importando e inicializando pygame</description>
    </item>
    
    <item>
      <title>Desenho na tela</title>
      <link>https://www.wikiod.com/pt/pygame/desenho-na-tela/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pygame/desenho-na-tela/</guid>
      <description>Sintaxe # pygame.draw.rect(Superfície, cor, Rect, largura=0) pygame.draw.polygon(Superfície, cor, lista de pontos, largura=0) pygame.draw.circle(Superfície, cor, posição, raio, largura=0) pygame.draw.ellipse(Superfície, cor, Rect, largura=0) pygame.draw.arc(Superfície, cor, Rect, start_angle, stop_angle, largura=1) pygame.draw.line(Superfície, cor, start_pos, end_pos, largura=1) pygame.draw.lines(Superfície, cor, fechado, lista de pontos, largura=1) pygame.draw.aaline(Surface, color, startpos, endpos, blend=1) pygame.draw.aalines(Superfície, cor, fechado, lista de pontos, mistura=1) Parâmetros # Parâmetros Detalhes Superfície A superfície para desenhar a forma. cor Uma sequência de 3 ou 4 inteiros representando vermelho, verde e azul (e alfa), cada valor variando entre 0-255.</description>
    </item>
    
    <item>
      <title>Os essenciais</title>
      <link>https://www.wikiod.com/pt/pygame/os-essenciais/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pygame/os-essenciais/</guid>
      <description>Desenho e uma animação básica # Este programa desenha algumas formas e &amp;lsquo;hello world!&amp;rsquo; e deixa uma imagem ir para cada canto da janela.
o código completo: # import pygame,sys from pygame.locals import * pygame.init() FPS = 30 #frames per second setting fpsClock = pygame.time.Clock() #set up the window screen = pygame.display.set_mode((500,400), 0, 32) pygame.display.set_caption(&#39;drawing&#39;) #set up the colors black = ( 0, 0, 0) white = (255, 255, 255) red = (255, 0, 0) green = ( 0, 255, 0) blue = ( 0, 0, 255) imageImg = pygame.</description>
    </item>
    
    <item>
      <title>Criando uma janela pygame</title>
      <link>https://www.wikiod.com/pt/pygame/criando-uma-janela-pygame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pygame/criando-uma-janela-pygame/</guid>
      <description>Se você quiser ter outras cores como fundo, então nomeie uma nova variável como red = (255,0,0) e mude display.fill(black) para display.fill(red). Você pode criar cores armazenando-as em uma variável e verificando seus valores RGB na internet.
Criando a janela pygame # import pygame background_colour = (255,255,255) # For the background color of your window (width, height) = (300, 200) # Dimension of the window screen = pygame.display.set_mode((width, height)) # Making of the screen pygame.</description>
    </item>
    
  </channel>
</rss>
