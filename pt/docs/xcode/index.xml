<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Xcode on </title>
    <link>https://www.wikiod.com/pt/docs/xcode/</link>
    <description>Recent content in Tutorial Xcode on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/xcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o Xcode</title>
      <link>https://www.wikiod.com/pt/xcode/comecando-com-o-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/comecando-com-o-xcode/</guid>
      <description>Use várias versões do Xcode # Você pode ter várias versões do Xcode instaladas ao mesmo tempo (incluindo versões beta). Basta renomear o aplicativo no Finder para evitar conflitos.
Observação: a instalação do Xcode da App Store tenderá a substituir uma versão existente em sua máquina. Você também pode instalar o Xcode a partir de um download direto para ter mais controle sobre quais versões você tem.
Cada cópia do Xcode inclui ferramentas de linha de comando (clang, xcodebuild, etc.</description>
    </item>
    
    <item>
      <title>Ferramentas de linha de comando</title>
      <link>https://www.wikiod.com/pt/xcode/ferramentas-de-linha-de-comando/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/ferramentas-de-linha-de-comando/</guid>
      <description>Listar alvos, esquemas e configurações de compilação disponíveis # Para listar todos os esquemas disponíveis para o projeto em seu diretório atual
xcodebuild -list Opcionalmente, você pode passar um caminho para um projeto ou arquivo de espaço de trabalho
xcodebuild -list -workspace ./MyApp.xcworkspace xcodebuild -list -project ./MyApp.xcodeproj Exemplo de saída
Information about project &amp;quot;Themoji&amp;quot;: Targets: Themoji ThemojiUITests Unit Build Configurations: Debug Release If no build configuration is specified and -scheme is not passed then &amp;quot;Release&amp;quot; is used.</description>
    </item>
    
    <item>
      <title>Projetos e espaços de trabalho</title>
      <link>https://www.wikiod.com/pt/xcode/projetos-e-espacos-de-trabalho/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/projetos-e-espacos-de-trabalho/</guid>
      <description>Crie, execute, crie perfil, teste e analise seu projeto # Clique no botão Executar na barra de ferramentas (ou pressione ⌘R) para compilar e executar seu projeto. Clique em Parar (ou pressione ⌘.) para interromper a execução.
Clique e segure para ver as outras ações, Testar (⌘U), Perfil (⌘I) e Analisar (⇧⌘B). Mantenha pressionadas as teclas modificadoras ⌥ option, ⇧ shift e ⌃ control para mais variantes.
As mesmas ações estão disponíveis no menu Produto:</description>
    </item>
    
    <item>
      <title>Criando controles personalizados no Interface Builder com @IBDesignable</title>
      <link>https://www.wikiod.com/pt/xcode/criando-controles-personalizados-no-interface-builder-com-ibdesignable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/criando-controles-personalizados-no-interface-builder-com-ibdesignable/</guid>
      <description>Ficou muito mais fácil criar controles personalizados no Interface Builder com a introdução das diretivas @IBDesignable e @IBInspectable no Swift. Os desenvolvedores agora podem criar controles ricos, complexos e totalmente animados usando apenas algumas linhas extras de código. Estou surpreso com a quantidade de desenvolvedores que ainda não adotaram totalmente esse recurso, e frequentemente descubro que adicionar apenas algumas linhas de código a classes existentes pode torná-las muito mais fáceis de trabalhar.</description>
    </item>
    
    <item>
      <title>Dicas do Xcode</title>
      <link>https://www.wikiod.com/pt/xcode/dicas-do-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/dicas-do-xcode/</guid>
      <description>Reutilize trechos de código no Xcode # Você pode salvar seus trechos de código para uso posterior simplesmente arrastando e soltando. Por exemplo: se você tiver uma instrução NSLog usada para tantos lugares em outro lugar no projeto, poderá salvar as instruções NSLog na biblioteca de trechos de código.
Arraste a instrução NSLog para a biblioteca de trechos de código.
Agora você pode simplesmente reutilizar o trecho de código em qualquer outro lugar no projeto.</description>
    </item>
    
    <item>
      <title>Certificados, perfis de provisionamento e assinatura de código</title>
      <link>https://www.wikiod.com/pt/xcode/certificados-perfis-de-provisionamento-e-assinatura-de-codigo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/certificados-perfis-de-provisionamento-e-assinatura-de-codigo/</guid>
      <description>Escolha a abordagem de assinatura de código correta # Se você está apenas começando um novo projeto, é importante pensar em como deseja lidar com a assinatura de código.
Se você é novo na assinatura de código, confira a sessão WWDC que descreve os fundamentos da assinatura de código no Xcode.
Para assinar o código corretamente em seu aplicativo, você precisa ter os seguintes recursos em sua máquina local:
A chave privada (arquivo .</description>
    </item>
    
    <item>
      <title>Desenvolvimento multiplataforma</title>
      <link>https://www.wikiod.com/pt/xcode/desenvolvimento-multiplataforma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/desenvolvimento-multiplataforma/</guid>
      <description>TargetConditionals # O cabeçalho do sistema TargetConditionals.h define várias macros que você pode usar em C e Objective-C para determinar qual plataforma você está usando.
#import &amp;lt;TargetConditionals.h&amp;gt; // imported automatically with Foundation - (void)doSomethingPlatformSpecific { #if TARGET_OS_IOS // code that is compiled for iPhone / iPhone Simulator #elif TARGET_OS_MAC &amp;amp;&amp;amp; !TARGET_OS_IPHONE // code that is compiled for OS X only #else // code that is compiled for other platforms #endif } Os valores das macros são:</description>
    </item>
    
    <item>
      <title>Personalizando o IDE do Xcode</title>
      <link>https://www.wikiod.com/pt/xcode/personalizando-o-ide-do-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/personalizando-o-ide-do-xcode/</guid>
      <description>Esta é uma coleção de dicas e truques diferentes, para personalizar e melhorar seu Xcode IDE
Abra o Terminal na pasta atual do projeto Xcode # Xcode tem capacidade de executar qualquer script com hotkey.
Aqui está um exemplo de como atribuir a tecla de atalho ⌘+⌥+⌃+⇧+T para abrir o aplicativo Terminal na pasta do projeto atual.
Crie um script bash e salve-o em alguma pasta
#!/bin/bash
Project Name: $XcodeProject # Project Dir: $XcodeProjectPath # Workspace Dir: $XcodeWorkspacePath # open -a Terminal &amp;ldquo;$(dirname $XcodeProjectPath)&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Playgrounds</title>
      <link>https://www.wikiod.com/pt/xcode/playgrounds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/playgrounds/</guid>
      <description>Introdução ao Playground # Crie um novo arquivo de playground:
First option: From Xcode welcome screen, select the first option (Get started with a playground). Second option: From menu select File → New → Playground (⌥⇧⌘N). Dê um nome ao seu playground e selecione a plataforma (iOS/macOS/tvOS) e clique em Avançar.
Na próxima tela, escolha onde deseja salvar seu playground e clique em Criar. Último valor, histórico de valores e gráfico # Usando o Playground é fácil ver o que acontece dentro de loops ou objetos enquanto a mudança está acontecendo.</description>
    </item>
    
    <item>
      <title>Recursos do Xcode 8</title>
      <link>https://www.wikiod.com/pt/xcode/recursos-do-xcode-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xcode/recursos-do-xcode-8/</guid>
      <description>Isso só funciona com projetos usando Swift 3+
Literais de cor e imagem # O Xcode 8 reconhecerá automaticamente todas as imagens que você tiver em um Asset Catalog e as oferecerá como sugestão dentro de um inicializador UIImage.
Então você pode basicamente declarar uma nova variável e então adicionar um nome de ativo que você adicionou ao seu catálogo de ativos. Por exemplo let img = dog. img agora contém a imagem de dog que está no catálogo de ativos.</description>
    </item>
    
  </channel>
</rss>
