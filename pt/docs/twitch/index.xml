<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Twitch Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/twitch/</link>
    <description>Recent content in Twitch Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/twitch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o twitch</title>
      <link>https://www.wikiod.com/pt/twitch/comecando-com-o-twitch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twitch/comecando-com-o-twitch/</guid>
      <description>Obtenha o token OAuth do fragmento de URL # Se o usuário autorizar seu aplicativo, ele será redirecionado para a seguinte URL:
https://[your registered redirect URI]/#access_token=[an access token] &amp;amp;scope=[authorized scopes] Observe que o token de acesso está no fragmento de URL e não na string de consulta. Isso significa que o valor não aparecerá em solicitações HTTP para seu servidor. Fragmentos de URL podem ser acessados ​​de JavaScript com document.location.hash.</description>
    </item>
    
    <item>
      <title>Listas de streamers por jogo</title>
      <link>https://www.wikiod.com/pt/twitch/listas-de-streamers-por-jogo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twitch/listas-de-streamers-por-jogo/</guid>
      <description>Obtendo a primeira página em Ruby # Este exemplo Ruby usa [Mechanize][mechanize], uma biblioteca para automatizar interações na web.
client_id é um client_id OAuth.
game é o diretório do jogo a ser listado.
require &#39;mechanize&#39; master_agent = Mechanize.new client_id = &amp;quot;123&amp;quot; game = &amp;quot;Minecraft&amp;quot; url = &amp;quot;https://api.twitch.tv/kraken/streams?game=#{game}&amp;amp;client_id=#{client_id}&amp;quot; final_list = [] master_agent.get(url) do |page| master_list = JSON.parse(page.body) master_list[&amp;quot;streams&amp;quot;].each do |stream| final_list &amp;lt;&amp;lt; stream[&amp;quot;channel&amp;quot;][&amp;quot;name&amp;quot;] end end </description>
    </item>
    
    <item>
      <title>Player de vídeo incorporado interativo</title>
      <link>https://www.wikiod.com/pt/twitch/player-de-video-incorporado-interativo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twitch/player-de-video-incorporado-interativo/</guid>
      <description>Reprodutor de vídeo de transmissão ao vivo # Implementação básica:
&amp;lt;script src= &amp;quot;http://player.twitch.tv/js/embed/v1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;PLAYER_DIV_ID&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var options = { width: 854, height: 480, channel: &amp;quot;monstercat&amp;quot;, }; var player = new Twitch.Player(&amp;quot;PLAYER_DIV_ID&amp;quot;, options); player.setVolume(0.5); &amp;lt;/script&amp;gt; Com controles ocultos:
&amp;lt;script src= &amp;quot;http://player.twitch.tv/js/embed/v1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;PLAYER_DIV_ID&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var options = { width: 854, height: 480, channel: &amp;quot;monstercat&amp;quot;, controls: false, }; var player = new Twitch.Player(&amp;quot;PLAYER_DIV_ID&amp;quot;, options); player.setVolume(0.5); &amp;lt;/script&amp;gt; Reprodutor de vídeo gravado (não ao vivo) # &amp;lt;script src= &amp;quot;http://player.</description>
    </item>
    
    <item>
      <title>Chamando APIs do Twitch</title>
      <link>https://www.wikiod.com/pt/twitch/chamando-apis-do-twitch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twitch/chamando-apis-do-twitch/</guid>
      <description>Este tópico tem como objetivo mostrar uma maneira geral de chamar a API do Twitch sem OAuth. Você pode chamar qualquer API encontrada na documentação da API REST do Twitch usando este padrão. Você simplesmente alteraria a URL para o ponto de extremidade correto.
Um Client-ID é necessário para todas as chamadas para a API do Twitch. Nestes exemplos, o Client-ID é adicionado como um cabeçalho para cada chamada. Você também pode adicioná-lo com o parâmetro de string de consulta client_id.</description>
    </item>
    
    <item>
      <title>Bot do Twitch Chat (IRC)</title>
      <link>https://www.wikiod.com/pt/twitch/bot-do-twitch-chat-irc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twitch/bot-do-twitch-chat-irc/</guid>
      <description>O Twitch Chat é um chat IRC simples. Para qualquer desenvolvimento sério, existem vários documentos para isso, incluindo o recurso mais abrangente e geral: http://ircdocs.horse/
Conexão, aperto de mão # O IRC é um protocolo TCP básico baseado em texto simples. Conectar-se ao Twitch funciona como qualquer serviço regular de IRC com uma diferença na autenticação:
Iniciação da Conexão &amp;gt; Aperto de Mão &amp;gt; Uso
O aperto de mão é regularmente a parte mais difícil de acertar:</description>
    </item>
    
    <item>
      <title>Como obter um token OAuth usando o fluxo de código de autorização</title>
      <link>https://www.wikiod.com/pt/twitch/como-obter-um-token-oauth-usando-o-fluxo-de-codigo-de-autorizacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twitch/como-obter-um-token-oauth-usando-o-fluxo-de-codigo-de-autorizacao/</guid>
      <description>Envie o usuário para o endpoint de autorização para obter o código de autorização # Você primeiro enviará o usuário para o endpoint de autorização do Twitch. Essa URL é composta por uma URL de autorização básica (https://api.twitch.tv/kraken/oauth2/authorize) e parâmetros de string de consulta que definem o que você está solicitando. Os parâmetros necessários são response_type, client_id, redirect_uri e scope.
Para o fluxo de código de autorização, o parâmetro response_type é sempre definido como code.</description>
    </item>
    
  </channel>
</rss>
