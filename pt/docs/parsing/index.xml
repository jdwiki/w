<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de análise on </title>
    <link>https://www.wikiod.com/pt/docs/parsing/</link>
    <description>Recent content in Tutorial de análise on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/parsing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução à análise</title>
      <link>https://www.wikiod.com/pt/parsing/introducao-a-analise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/parsing/introducao-a-analise/</guid>
      <description>Um analisador simples # A maneira mais simples de escrever um analisador sintático é usar a técnica de descida recursiva. Isso cria um analisador de cima para baixo (que pode ser formalmente descrito como LL(1)). Para iniciar o exemplo, primeiro temos que estabelecer as regras gramaticais para nossa linguagem. Neste exemplo, usaremos atribuições de expressões aritméticas simples para expressões que só podem usar o operador mais:
Assignment --&amp;gt; Identifier := Expression Expression --&amp;gt; Expression + Term | Term Term --&amp;gt; Identifier | (Expression) Identifier --&amp;gt; x | y | z Para cada regra da gramática podemos escrever um procedimento para reconhecer os tokens de entrada para a regra.</description>
    </item>
    
  </channel>
</rss>
