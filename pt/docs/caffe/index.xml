<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Café Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/caffe/</link>
    <description>Recent content in Café Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/caffe/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o café</title>
      <link>https://www.wikiod.com/pt/caffe/comecando-com-o-cafe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/caffe/comecando-com-o-cafe/</guid>
      <description>Instalação e configuração # Ubuntu # Abaixo estão instruções detalhadas para instalar o Caffe, pycaffe e suas dependências no Ubuntu 14.04 x64 ou 14.10 x64.
Execute o script a seguir, por exemplo. &amp;ldquo;bash compile_caffe_ubuntu_14.sh&amp;rdquo; (~30 a 60 minutos em um novo Ubuntu).
# This script installs Caffe and pycaffe. # CPU only, multi-threaded Caffe. # Usage: # 0. Set up here how many cores you want to use during the installation: # By default Caffe will use all these cores.</description>
    </item>
    
    <item>
      <title>Normalização em lote</title>
      <link>https://www.wikiod.com/pt/caffe/normalizacao-em-lote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/caffe/normalizacao-em-lote/</guid>
      <description>De os documentos:
&amp;ldquo;Normaliza a entrada para ter média 0 e/ou variação de unidade (1) em todo o lote.
Esta camada calcula a normalização em lote conforme descrito em 1.
[&amp;hellip;]
1 S. Ioffe e C. Szegedy, &amp;ldquo;Normalização em lote: Acelerando o treinamento de rede profunda reduzindo o deslocamento covariável interno&amp;rdquo;. arXiv pré-impressão arXiv:1502.03167 (2015).&amp;rdquo;
Parâmetros # Parâmetro Detalhes use_global_stats Do post de rohrbach de 2 de março de 2016 - talvez ele saiba: (use_global_stats) &amp;ldquo;Por padrão, durante o tempo de treinamento, a rede está calculando as estatísticas globais de média/variância por meio de uma média em execução, que é usada no momento do teste para permitir saídas determinísticas para cada entrada.</description>
    </item>
    
    <item>
      <title>Preparar dados para treinamento</title>
      <link>https://www.wikiod.com/pt/caffe/preparar-dados-para-treinamento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/caffe/preparar-dados-para-treinamento/</guid>
      <description>Preparar conjunto de dados de imagem para tarefa de classificação de imagem # O Caffe possui uma camada de entrada integrada sob medida para tarefas de classificação de imagem (ou seja, um único rótulo inteiro por imagem de entrada). Esta camada &amp;quot;Data&amp;quot; de entrada é construída sobre uma estrutura de dados [tag:lmdb] ou [tag:leveldb]. Para usar a camada &amp;quot;Data&amp;quot; é preciso construir a estrutura de dados com todos os dados de treinamento.</description>
    </item>
    
    <item>
      <title>Treinando um modelo Caffe com pycaffe</title>
      <link>https://www.wikiod.com/pt/caffe/treinando-um-modelo-caffe-com-pycaffe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/caffe/treinando-um-modelo-caffe-com-pycaffe/</guid>
      <description>Treinando uma rede no conjunto de dados Iris # Abaixo está um exemplo simples para treinar um modelo Caffe no conjunto de dados Iris em Python, usando PyCaffe. Ele também fornece as saídas previstas dadas algumas entradas definidas pelo usuário.
iris_tuto.py
import subprocess import platform import copy from sklearn.datasets import load_iris import sklearn.metrics import numpy as np from sklearn.cross_validation import StratifiedShuffleSplit import matplotlib.pyplot as plt import h5py import caffe import caffe.</description>
    </item>
    
    <item>
      <title>Objetos básicos do Caffe - Solver, Net, Layer e Blob</title>
      <link>https://www.wikiod.com/pt/caffe/objetos-basicos-do-caffe---solver-net-layer-e-blob/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/caffe/objetos-basicos-do-caffe---solver-net-layer-e-blob/</guid>
      <description>Um usuário caffe envia instruções para realizar operações específicas para objetos caffe. Esses objetos interagem entre si com base em suas especificações de projeto e realizam a(s) operação(ões). Este é um paradigma OOP de princípio básico.
Embora existam muitos tipos de objetos caffe (ou classes C++), para uma compreensão básica inicial, focamos em 4 objetos caffe importantes. Nosso objetivo neste estágio é simplesmente observar a interação entre esses objetos em um nível altamente abstrato, onde a implementação específica e os detalhes do projeto são obscurecidos e, em vez disso, uma visão aérea da operação é focada.</description>
    </item>
    
    <item>
      <title>Camadas Python personalizadas</title>
      <link>https://www.wikiod.com/pt/caffe/camadas-python-personalizadas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/caffe/camadas-python-personalizadas/</guid>
      <description>Este tutorial guiará as etapas para criar uma camada personalizada simples para o Caffe usando python. Ao final, há alguns exemplos de camadas personalizadas. Normalmente, você criaria uma camada personalizada para implementar uma funcionalidade que não está disponível no Caffe, ajustando-a aos seus requisitos.
Criar uma camada personalizada python adiciona alguma sobrecarga à sua rede e provavelmente não é tão eficiente quanto uma camada personalizada C++. No entanto, desta forma, você não terá que compilar todo o café com sua nova camada.</description>
    </item>
    
  </channel>
</rss>
