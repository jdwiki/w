<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial wxpython on </title>
    <link>https://www.wikiod.com/pt/docs/wxpython/</link>
    <description>Recent content in Tutorial wxpython on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/wxpython/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao wxpython</title>
      <link>https://www.wikiod.com/pt/wxpython/introducao-ao-wxpython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/wxpython/introducao-ao-wxpython/</guid>
      <description>Instalação do wxPython Phoenix # wxPython Phoenix é a versão mais recente do wxPython, (atualmente Setembro de 2016 sem um lançamento oficial). Ele suporta Python 2 e Python 3. Você pode baixar uma compilação de instantâneo (ou seja, uma roda Python) para sua plataforma e versão Python aqui.
wxPython Phoenix utiliza um mecanismo amplamente automatizado para gerar as ligações python para a biblioteca wxWidgets e a documentação. Documentação do Phoenix wxPython é gerado especificamente para si mesmo usando Sphinx.</description>
    </item>
    
    <item>
      <title>Arraste e Solte</title>
      <link>https://www.wikiod.com/pt/wxpython/arraste-e-solte/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/wxpython/arraste-e-solte/</guid>
      <description>wxPython fornece vários tipos diferentes de arrastar e soltar. Você pode ter um dos seguintes tipos: wx.FileDropTarget, wx.TextDropTarget ou wx.PyDropTarget.
Os dois primeiros são bastante autoexplicativos. O último, wx.PyDropTarget, é apenas um wrapper solto em torno do próprio wx.DropTarget. Ele adiciona alguns métodos extras de conveniência que o wx.DropTarget simples não possui. Começaremos com um exemplo wx.FileDropTarget.
FileDropTarget # import wx class MyFileDropTarget(wx.FileDropTarget): &amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; def __init__(self, window): &amp;quot;&amp;quot;&amp;quot;Constructor&amp;quot;&amp;quot;&amp;quot; wx.FileDropTarget.__init__(self) self.window = window def OnDropFiles(self, x, y, filenames): &amp;quot;&amp;quot;&amp;quot; When files are dropped, write where they were dropped and then the file paths themselves &amp;quot;&amp;quot;&amp;quot; self.</description>
    </item>
    
  </channel>
</rss>
