<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial android-asynctask on </title>
    <link>https://www.wikiod.com/pt/docs/android-asynctask/</link>
    <description>Recent content in tutorial android-asynctask on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/android-asynctask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao android-asynctask</title>
      <link>https://www.wikiod.com/pt/android-asynctask/introducao-ao-android-asynctask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-asynctask/introducao-ao-android-asynctask/</guid>
      <description>AsyncTask do conceito à implementação # Conceito AsyncTask é uma classe que permite a execução de operações em segundo plano, com os resultados sendo publicados no thread da interface do usuário. O objetivo principal é eliminar todo o código clichê para iniciar/executar um encadeamento, eliminando os manipuladores e todas as coisas necessárias para manipular os encadeamentos. Além disso, o objetivo do AsyncTask é ter operações de curta duração em um thread em segundo plano (alguns segundos no máximo), não operações de longa duração.</description>
    </item>
    
    <item>
      <title>Cancelando uma AsyncTask</title>
      <link>https://www.wikiod.com/pt/android-asynctask/cancelando-uma-asynctask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-asynctask/cancelando-uma-asynctask/</guid>
      <description>Cancelando uma AsyncTask
Cancelando uma AsyncTask # No exemplo a seguir, se alguém pressionar o botão home enquanto a tarefa estiver em execução, a tarefa será cancelada. Neste cancelamento específico, ele deve interromper se estiver em execução.
public class MainActivity extends AppCompatActivity { private static AtomicBoolean inWork; private CustomAsyncTask asyncTask; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); inWork = new AtomicBoolean(false); FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab); fab.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View view) { Snackbar.</description>
    </item>
    
  </channel>
</rss>
