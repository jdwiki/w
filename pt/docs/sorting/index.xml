<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de classificação on </title>
    <link>https://www.wikiod.com/pt/docs/sorting/</link>
    <description>Recent content in Tutorial de classificação on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/sorting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com a classificação</title>
      <link>https://www.wikiod.com/pt/sorting/comecando-com-a-classificacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sorting/comecando-com-a-classificacao/</guid>
      <description>Instalação ou configuração # Instruções detalhadas sobre como configurar ou instalar a classificação.</description>
    </item>
    
    <item>
      <title>Seleção</title>
      <link>https://www.wikiod.com/pt/sorting/selecao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sorting/selecao/</guid>
      <description>Na ciência da computação, uma ordenação por seleção é um algoritmo de ordenação, especificamente uma ordenação por comparação no local. Ele tem complexidade de tempo O(n2), tornando-o ineficiente em listas grandes e geralmente tem um desempenho pior do que a classificação por inserção semelhante. A ordenação por seleção é conhecida por sua simplicidade e tem vantagens de desempenho sobre algoritmos mais complicados em certas situações, particularmente onde a memória auxiliar é limitada.</description>
    </item>
    
    <item>
      <title>Ordenação rápida</title>
      <link>https://www.wikiod.com/pt/sorting/ordenacao-rapida/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/sorting/ordenacao-rapida/</guid>
      <description>Pitão # A imagem abaixo mostra o funcionamento de uma classificação rápida.
O exemplo abaixo mostra o programa de trabalho para classificação rápida em python:
def quickSort(alist): quickSortHelper(alist,0,len(alist)-1) def quickSortHelper(alist,first,last): if first&amp;lt;last: splitpoint = partition(alist,first,last) quickSortHelper(alist,first,splitpoint-1) quickSortHelper(alist,splitpoint+1,last) def partition(alist,first,last): pivotvalue = alist[first] leftmark = first+1 rightmark = last done = False while not done: while leftmark &amp;lt;= rightmark and alist[leftmark] &amp;lt;= pivotvalue: leftmark = leftmark + 1 while alist[rightmark] &amp;gt;= pivotvalue and rightmark &amp;gt;= leftmark: rightmark = rightmark -1 if rightmark &amp;lt; leftmark: done = True else: temp = alist[leftmark] alist[leftmark] = alist[rightmark] alist[rightmark] = temp temp = alist[first] alist[first] = alist[rightmark] alist[rightmark] = temp return rightmark alist = [54,26,93,17,77,31,44,55,20] print(&amp;quot;Input:&amp;quot;) print(alist) quickSort(alist) print(&amp;quot;Output:&amp;quot;) print(alist) Segue abaixo a saída do código:</description>
    </item>
    
  </channel>
</rss>
