<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de composição do docker on </title>
    <link>https://www.wikiod.com/pt/docs/docker-compose/</link>
    <description>Recent content in Tutorial de composição do docker on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao docker-compose</title>
      <link>https://www.wikiod.com/pt/docker-compose/introducao-ao-docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/docker-compose/introducao-ao-docker-compose/</guid>
      <description>Ruby on Rails com docker-compose # Se você quiser usar o aplicativo docker for rails e usar o banco de dados, você precisa saber que todos os dados no contêiner docker serão destruídos (a menos que você configure o contêiner especificamente para manter os dados) Às vezes, você precisa criar um contêiner docker com um aplicativo e anexá-lo a um contêiner antigo com um banco de dados.
Como exemplo de aplicação Rails, usei um aplicativo simples.</description>
    </item>
    
    <item>
      <title>Exemplo de vários contêineres de composição do Docker com rede padrão</title>
      <link>https://www.wikiod.com/pt/docker-compose/exemplo-de-varios-conteineres-de-composicao-do-docker-com-rede-padrao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/docker-compose/exemplo-de-varios-conteineres-de-composicao-do-docker-com-rede-padrao/</guid>
      <description>Por padrão, o Compose configura uma única rede para seu aplicativo. Cada container para um serviço se junta à rede padrão e é ambos acessível por outros contêineres nessa rede e detectável por eles em um nome de host idêntico ao nome do contêiner.
Os links permitem definir aliases extras pelos quais um serviço é acessível a partir de outro serviço. Eles não são obrigados a habilitar serviços para se comunicar – por padrão, qualquer serviço pode chegar a qualquer outro serviço em nome desse serviço.</description>
    </item>
    
    <item>
      <title>Arquivo externo de variáveis ​​de ambiente</title>
      <link>https://www.wikiod.com/pt/docker-compose/arquivo-externo-de-variaveis-de-ambiente/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/docker-compose/arquivo-externo-de-variaveis-de-ambiente/</guid>
      <description>Existem várias maneiras de incluir variáveis ​​de ambiente no aplicativo docker. aqui estão alguns exemplos:
Via arquivo externo # docker-composer.yml
web: ... env_file: - ./filename nome do arquivo
variable=value dentro do próprio docker-compose # app: ... environment: - var=value </description>
    </item>
    
  </channel>
</rss>
