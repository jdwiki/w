<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de Expressões Regulares on </title>
    <link>https://www.wikiod.com/pt/docs/regex/</link>
    <description>Recent content in Tutorial de Expressões Regulares on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/regex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução às expressões regulares</title>
      <link>https://www.wikiod.com/pt/regex/introducao-as-expressoes-regulares/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/introducao-as-expressoes-regulares/</guid>
      <description>Guia de personagens # Observe que alguns elementos de sintaxe têm comportamento diferente dependendo da expressão.
Sintaxe Descrição ? Corresponde ao caractere ou subexpressão anterior 0 ou 1 vezes. Também usado para grupos sem captura e grupos de captura nomeados. * Corresponde ao caractere ou subexpressão anterior 0 ou mais vezes. + Corresponde ao caractere ou subexpressão anterior 1 ou mais vezes. {n} Corresponde ao caractere ou subexpressão anterior exatamente n vezes.</description>
    </item>
    
    <item>
      <title>Acento circunflexo de caracteres (^)</title>
      <link>https://www.wikiod.com/pt/regex/acento-circunflexo-de-caracteres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/acento-circunflexo-de-caracteres/</guid>
      <description>Terminologia
O caractere Caret (^) também é referido pelos seguintes termos:
chapéu ao controle seta ascendente divisa acento circunflexo Uso
Ele tem dois usos em expressões regulares:
Para denotar o início da linha Se usado imediatamente após um colchete ([^) ele age para negar o conjunto de caracteres permitidos (ou seja, [123] significa que o caractere 1, 2 ou 3 é permitido, enquanto a instrução [^123] significa que qualquer caractere diferente de 1, 2 ou 3 é permitido.</description>
    </item>
    
    <item>
      <title>Quantificadores gananciosos e preguiçosos</title>
      <link>https://www.wikiod.com/pt/regex/quantificadores-gananciosos-e-preguicosos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/quantificadores-gananciosos-e-preguicosos/</guid>
      <description>Parâmetros # Quantificadores Descrição ? Corresponde ao caractere ou subexpressão anterior 0 ou 1 vezes (de preferência 1). * Corresponde ao caractere ou subexpressão anterior 0 ou mais vezes (o máximo possível). + Corresponde ao caractere ou subexpressão anterior 1 ou mais vezes (o máximo possível). {n} Corresponde ao caractere ou subexpressão anterior exatamente n vezes. {min,} Corresponde ao caractere ou subexpressão anterior min ou mais vezes (o maior número possível).</description>
    </item>
    
    <item>
      <title>Olhe para frente e para trás</title>
      <link>https://www.wikiod.com/pt/regex/olhe-para-frente-e-para-tras/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/olhe-para-frente-e-para-tras/</guid>
      <description>Sintaxe # Antecipação positiva: (?=padrão) Antecipação negativa: (?!pattern) Olhar por trás positivo: (?&amp;lt;=padrão) Olhar para trás negativo: (?&amp;lt;!pattern) Não suportado por todos os mecanismos regex.
Além disso, muitos mecanismos regex limitam os padrões dentro de lookbehinds a strings de comprimento fixo. Por exemplo, o padrão (?&amp;lt;=a+)b deve corresponder ao b em aaab, mas gera um erro em Python.
Grupos de captura são permitidos e funcionam conforme o esperado, incluindo referências anteriores.</description>
    </item>
    
    <item>
      <title>Modificadores Regex (sinalizadores)</title>
      <link>https://www.wikiod.com/pt/regex/modificadores-regex-sinalizadores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/modificadores-regex-sinalizadores/</guid>
      <description>Padrões de expressão regular são frequentemente usados ​​com modificadores (também chamados de flags) que redefinem o comportamento regex. Os modificadores Regex podem ser regulares (por exemplo, /abc/i) e inline (ou incorporados) (por exemplo, (?i)abc). Os modificadores mais comuns são modificadores globais, não diferenciam maiúsculas de minúsculas, multilinhas e dotall. No entanto, os tipos de regex diferem no número de modificadores de regex suportados e seus tipos.
Modificadores de PCRE Modificador Em linha Descrição PCRE_CASELESS (?</description>
    </item>
    
    <item>
      <title>Grupos de captura</title>
      <link>https://www.wikiod.com/pt/regex/grupos-de-captura/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/grupos-de-captura/</guid>
      <description>Grupos básicos de captura # Um grupo é uma seção de uma expressão regular entre parênteses (). Isso é comumente chamado de &amp;ldquo;subexpressão&amp;rdquo; e serve a dois propósitos:
Torna a subexpressão atômica, ou seja, corresponderá, falhará ou repetirá como um todo. A parte do texto correspondente fica acessível no restante da expressão e no restante do programa. Os grupos são numerados em mecanismos de regex, começando com 1. Tradicionalmente, o número máximo de grupo é 9, mas muitos tipos de regex modernos suportam contagens de grupos mais altas.</description>
    </item>
    
    <item>
      <title>Classes de personagens</title>
      <link>https://www.wikiod.com/pt/regex/classes-de-personagens/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/classes-de-personagens/</guid>
      <description>aulas simples # Regex Partidas [abc] Qualquer um dos seguintes caracteres: a, b ou c [a-z] Qualquer caractere de a a z, inclusive (isso é chamado de intervalo) [0-9] Qualquer dígito de 0 a 9, inclusive Aulas comuns # Alguns grupos/intervalos de caracteres são usados ​​com tanta frequência que possuem abreviações especiais:
Regex Partidas \w Caracteres alfanuméricos mais o sublinhado (também conhecido como &amp;ldquo;caracteres de palavra&amp;rdquo;) \W Caracteres não-palavra (igual a [^\w]) \d Dígitos (mais largos que [0-9] já que incluem dígitos persas, indianos etc.</description>
    </item>
    
    <item>
      <title>Limite da palavra</title>
      <link>https://www.wikiod.com/pt/regex/limite-da-palavra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/limite-da-palavra/</guid>
      <description>Sintaxe # Estilo POSIX, fim da palavra: [[:&amp;gt;:]] Estilo POSIX, início da palavra: [[:&amp;lt;:]] Estilo POSIX, limite de palavra: [[:&amp;lt;:][:&amp;gt;:]] SVR4/GNU, fim da palavra: \&amp;gt; SVR4/GNU, início da palavra: \&amp;lt; Perl/GNU, limite de palavra: \b Tcl, fim da palavra: \M Tcl, início da palavra: \m Tcl, limite da palavra: \y ERE portátil, início da palavra: (^|[^[:alnum:]_]) ERE portátil, fim da palavra: ([^[:alnum:]_]|$) Recursos adicionais # Capítulo POSIX sobre expressões regulares Documentação da expressão regular Perl Tcl re_syntax página de manual Expressões de barra invertida GNU grep BSD re_format Mais leitura Limites de palavras # O metacaractere \b # Para facilitar a localização de palavras inteiras, podemos usar o metacaractere \b.</description>
    </item>
    
    <item>
      <title>Reinicializar Correspondência K</title>
      <link>https://www.wikiod.com/pt/regex/reinicializar-correspondencia-k/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/reinicializar-correspondencia-k/</guid>
      <description>O Regex101 define a funcionalidade \K como:
\K redefine o ponto inicial da correspondência relatada. Quaisquer caracteres consumidos anteriormente não são mais incluídos na partida final
A sequência de escape \K é suportada por vários mecanismos, linguagens ou ferramentas, como:
impulso (desde ???) grep -P ← usa PCRE Oniguruma (desde 5.13.3) PCRE (desde 7.2) Perl (desde 5.10.0) PHP (desde 5.2.4) Ruby (desde 2.0.0) &amp;hellip;e (até agora) não suportado por:
.NET awk bash GNU ICU Java -Javascript Bloco de notas++ Objetivo-C POSIX Pitão Qt/QRegExp sed Tcl vim XML XPath Pesquise e substitua usando o operador \K # Dado o texto:</description>
    </item>
    
    <item>
      <title>Vitrine útil de Regex</title>
      <link>https://www.wikiod.com/pt/regex/vitrine-util-de-regex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/regex/vitrine-util-de-regex/</guid>
      <description>Corresponder a um endereço de e-mail # Fazer a correspondência de um endereço de e-mail em uma string é uma tarefa difícil, porque o especificação que o define, o RFC2822, é complexo, tornando-o difícil de implementar como um regex. Para mais detalhes porque é não é uma boa ideia combinar um e-mail com um regex, consulte o exemplo de antipadrão [quando não usar um regex: para correspondência e-mails](https://www.wikiod.com/pt/regex/quando-voce-nao-deve-usar-expressoes-regulares number-or-credit-card-number-or#t=201607301200162540574). O melhor conselho a ser observado nessa página é usar um relatório revisado por pares e amplamente biblioteca em seu idioma favorito para implementar isso.</description>
    </item>
    
  </channel>
</rss>
