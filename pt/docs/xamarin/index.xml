<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial do xamarin on </title>
    <link>https://www.wikiod.com/pt/docs/xamarin/</link>
    <description>Recent content in Tutorial do xamarin on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/xamarin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao xamarin</title>
      <link>https://www.wikiod.com/pt/xamarin/introducao-ao-xamarin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin/introducao-ao-xamarin/</guid>
      <description>Instalando o Xamarin Studio no OS X # O primeiro passo para iniciar o desenvolvimento do Xamarin em uma máquina OS X é baixar e instalar a versão Xamarin Studio Community do site oficial. Alguns campos precisam ser preenchidos para fazer o download do instalador conforme mostrado na figura abaixo.
O instalador do Xamarin Unified se encarrega de identificar e instalar todos os componentes não-Xamarin necessários (por exemplo, Android SDK) no Xamarin.</description>
    </item>
    
    <item>
      <title>Compartilhamento de código entre projetos</title>
      <link>https://www.wikiod.com/pt/xamarin/compartilhamento-de-codigo-entre-projetos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin/compartilhamento-de-codigo-entre-projetos/</guid>
      <description>O Padrão da Ponte # O padrão Bridge é um dos padrões de projeto de Inversão de Controle mais básicos. Para Xamarin, esse padrão é usado para fazer referência a código dependente de plataforma de um contexto independente de plataforma. Por exemplo: usando o AlertDialog do Android de uma biblioteca de classes portátil ou Xamarin Forms. Nenhum desses contextos sabe o que é um objeto AlertDialog, então você deve envolvê-lo em uma caixa para eles usarem.</description>
    </item>
    
    <item>
      <title>Validação de objetos por anotações</title>
      <link>https://www.wikiod.com/pt/xamarin/validacao-de-objetos-por-anotacoes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin/validacao-de-objetos-por-anotacoes/</guid>
      <description>mvc.net introduz anotações de dados para validação de modelo. Isso também pode ser feito no Xamarin
Exemplo simples # Adicione o pacote nuget System.ComponentModel.Annotations
Defina uma classe:
public class BankAccount { public enum AccountType { Saving, Current } [Required(ErrorMessage=&amp;quot;First Name Required&amp;quot;)] [MaxLength(15,ErrorMessage=&amp;quot;First Name should not more than 1`5 character&amp;quot;)] [MinLength(3,ErrorMessage=&amp;quot;First Name should be more than 3 character&amp;quot;)] public string AccountHolderFirstName { get; set; } [Required(ErrorMessage=&amp;quot;Last Name Required&amp;quot;)] [MaxLength(15,ErrorMessage=&amp;quot;Last Name should not more than 1`5 character&amp;quot;)] [MinLength(3,ErrorMessage=&amp;quot;Last Name should be more than 3 character&amp;quot;)] public string AccountHolderLastName { get; set; } [Required] [RegularExpression(&amp;quot;^[0-9]+$&amp;quot;, ErrorMessage = &amp;quot;Only Number allowed in AccountNumber&amp;quot;)] public string AccountNumber { get; set; } public AccountType AcType { get; set; } } Defina um validador:</description>
    </item>
    
  </channel>
</rss>
