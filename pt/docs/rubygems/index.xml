<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial rubygems on </title>
    <link>https://www.wikiod.com/pt/docs/rubygems/</link>
    <description>Recent content in tutorial rubygems on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/rubygems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com rubygems</title>
      <link>https://www.wikiod.com/pt/rubygems/comecando-com-rubygems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rubygems/comecando-com-rubygems/</guid>
      <description>Instalação ou Configuração # Se você não tiver nenhum RubyGems instalado, ainda existe a abordagem pré-gem para obter o software, fazendo-o manualmente:
Baixe de RubyGems
Descompacte em um diretório e cd lá
Instale com: ruby setup.rb (você pode precisar de privilégios de administrador/root)
sudo ruby setup.rb Para mais detalhes e outras opções, consulte:
ruby setup.rb --help Instalação no Linux # Certifique-se de ter o ruby ​​instalado antes de instalar o rubygems e, em seguida:</description>
    </item>
    
    <item>
      <title>Alterar a fonte da gem no Gemfile</title>
      <link>https://www.wikiod.com/pt/rubygems/alterar-a-fonte-da-gem-no-gemfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rubygems/alterar-a-fonte-da-gem-no-gemfile/</guid>
      <description>Use o repositório do github para gem específica no Gemfile # Ao invés de
gem &#39;trilhos&#39;
Você pode especificar uma combinação de usuário/repo do github com
gem &#39;rails&#39;, github: &#39;rails/rails&#39;
Faça uso de ref, branch, git para gem específica no gemfile # gem &#39;any gem&#39;,git: &#39;any repo&#39;,branch: &#39;specific branch of that repo&#39;,ref: &#39;reference no.&#39; ref especifica o commit individual. branch especifica o branch git para extrair.</description>
    </item>
    
    <item>
      <title>Anêmona</title>
      <link>https://www.wikiod.com/pt/rubygems/anemona/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rubygems/anemona/</guid>
      <description>Sintaxe # Use Anemone::Core.new(url, options) para inicializar o rastreador Use o bloco on_every_page para executar o código em todas as páginas visitadas Use o método .run para iniciar o rastreamento. Nenhum código de antemão realmente iniciará qualquer chamada GET. Parâmetros # Parâmetro Detalhes URL URL (incluindo protocolo a ser rastreado) opções hash opcional, veja todas as opções aqui O rastreador visitará apenas links que estejam no mesmo domínio que o URL inicial.</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>https://www.wikiod.com/pt/rubygems/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rubygems/json/</guid>
      <description>A gem json para Ruby permite a análise e criação de JSON.
Sintaxe # JSON.parse(json_document_string) =&amp;gt; retorna um Hash do documento JSON JSON.generate(ruby_hash) =&amp;gt; retorna um documento JSON na forma de uma String Parâmetros # Parâmetro Detalhes json_document_string Um documento JSON na forma de uma String ruby_hash Qualquer objeto Hash Hash para JSON # require &#39;json&#39; data = {&amp;quot;test&amp;quot; =&amp;gt; 123} puts JSON.generate(data) JSON para hash # require &#39;json&#39; document = &amp;quot;{\&amp;quot;test\&amp;quot;:123}&amp;quot; puts JSON.</description>
    </item>
    
    <item>
      <title>Maruku</title>
      <link>https://www.wikiod.com/pt/rubygems/maruku/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rubygems/maruku/</guid>
      <description>Maruku é um interpretador Markdown para Ruby. Permite exportar Markdown para HTML e PDF.
Sintaxe # Maruku.new(str) =&amp;gt; analisa Markdown em um objeto Maruku Maruku#to_html_document =&amp;gt; retorna o objeto Maruku como um documento HTML completo (como uma string) Parâmetros # Parâmetro Uso str String de redução a ser analisada Lendo Markdown em Maruku # require &#39;maruku&#39; str = &amp;quot; # Title * List 1 * List 2 * List 3 &amp;quot; markdown = Maruku.</description>
    </item>
    
  </channel>
</rss>
