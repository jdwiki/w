<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de lista encadeada on </title>
    <link>https://www.wikiod.com/pt/docs/linked-list/</link>
    <description>Recent content in Tutorial de lista encadeada on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/linked-list/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução à lista vinculada</title>
      <link>https://www.wikiod.com/pt/linked-list/introducao-a-lista-vinculada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/linked-list/introducao-a-lista-vinculada/</guid>
      <description>Instalação ou configuração # Instruções detalhadas sobre como configurar ou instalar a lista vinculada.
Design usando o Sentry Node # Ao projetar uma lista vinculada, você pode evitar todos os casos especiais (lista vazia, primeiro nó, último nó, etc) usando um nó sentinela. Vejamos como isso é feito:
struct Node { Node* next; Node* prev; T data; }; // helper function to link 2 nodes void Link(Node* n1, Node* n2) { n1-&amp;gt;next = n2; n2-&amp;gt;prev = n1; } // this inserts new data before &#39;here&#39; Node* Insert(Node* here, const T&amp;amp; data) { Node* item = new Node{0,0,data}; // create new item.</description>
    </item>
    
  </channel>
</rss>
