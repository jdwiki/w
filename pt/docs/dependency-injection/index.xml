<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de injeção de dependência on </title>
    <link>https://www.wikiod.com/pt/docs/dependency-injection/</link>
    <description>Recent content in Tutorial de injeção de dependência on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/dependency-injection/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução à injeção de dependência</title>
      <link>https://www.wikiod.com/pt/dependency-injection/introducao-a-injecao-de-dependencia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/dependency-injection/introducao-a-injecao-de-dependencia/</guid>
      <description>O que é um exemplo básico de injeção de dependência? # Aqui está uma classe (Dog) criando sua própria dependência (Food):
class Dog { public Dog() { var food = new Food(); this.eat(food); } } Aqui está a mesma classe sendo injetada com sua dependência usando injeção de construtor:
class Dog { public Dog(Food food) { this.eat(food); } } </description>
    </item>
    
    <item>
      <title>.NET - Exemplos puros de DI</title>
      <link>https://www.wikiod.com/pt/dependency-injection/net---exemplos-puros-de-di/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/dependency-injection/net---exemplos-puros-de-di/</guid>
      <description>Um exemplo de como usar injeção de dependência em .net sem usar um container. Baseado em exemplos de Mark Seemann http://blog.ploeh.dk/
API da Web # public interface ISingleton : IDisposable { } public class TransientDependency { } public class Singleton : ISingleton { public void Dispose() { } } public class CompositionRoot : IDisposable, IHttpControllerActivator { private readonly ISingleton _singleton; // pass in any true singletons i.e. cross application instance singletons public CompositionRoot() { // intitialise any application instance singletons _singleton = new Singleton(); } public void Dispose() { _singleton.</description>
    </item>
    
    <item>
      <title>Injeção de Construtor</title>
      <link>https://www.wikiod.com/pt/dependency-injection/injecao-de-construtor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/dependency-injection/injecao-de-construtor/</guid>
      <description>Injeção de Construtor # As classes possuem variáveis ​​de instância (dependências), nas quais chamam métodos.
Exemplo retirado de http://www.jamesshore.com/Blog/Dependency-Injection-Demystified.html para referência
public class Example { private DatabaseThingie myDatabase; public Example() { myDatabase = new DatabaseThingie(); } public void DoStuff() { ... myDatabase.GetData(); ... } } Esta classe tem uma dependência chamada DatabaseThingie. Aqui neste exemplo a classe Example é responsável por criar suas próprias dependências, violando assim o Princípio de Responsabilidade Única.</description>
    </item>
    
    <item>
      <title>Injeção de método</title>
      <link>https://www.wikiod.com/pt/dependency-injection/injecao-de-metodo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/dependency-injection/injecao-de-metodo/</guid>
      <description>Um exemplo simples de injeção de método em c# # using System; namespace ConsoleApplication1 { class Program { static void Main(string[] args) { var foo = new Dependency(); var bar = new ClassWithDependency(); bar.DoSomething(foo); //Inject dependency as method parameter Console.ReadLine(); } } public interface IDependency { void DoSomething(); } public class Dependency: IDependency { public void DoSomething() { Console.WriteLine(&amp;quot;Hello&amp;quot;); } } public class ClassWithDependency { public void DoSomething(IDependency dependency) { dependency.</description>
    </item>
    
    <item>
      <title>Injeção de propriedade</title>
      <link>https://www.wikiod.com/pt/dependency-injection/injecao-de-propriedade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/dependency-injection/injecao-de-propriedade/</guid>
      <description>Um exemplo muito simples de injeção de propriedade com C# com um padrão local carregado com atraso # using System; namespace ConsoleApplication1 { class Program { static void Main(string[] args) { var foo = new ClassWithDependency(); foo.DoSomething(); var bar = new InjectedDependency(); foo.Dependency = bar; //Injecting the dependency via a property foo.DoSomething(); Console.ReadLine(); } } public interface IDependency { void DoSomething(); } public class DefaultDependency: IDependency { public void DoSomething() { Console.</description>
    </item>
    
  </channel>
</rss>
