<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de automação on </title>
    <link>https://www.wikiod.com/pt/docs/automation/</link>
    <description>Recent content in Tutorial de automação on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução à automação</title>
      <link>https://www.wikiod.com/pt/automation/introducao-a-automacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/automation/introducao-a-automacao/</guid>
      <description>Identificação de Abordagens de Tipos de Objetivos de Automação de Testes # Automação de Testes é um tópico amplo. O DEV/QA deve se aprofundar nessas questões primeiro:
Qual é a natureza do produto? (Web, Mobile, Nuvem, IOT, Analytics) O que é estágio de desenvolvimento? (Desenvolvido-Legado, Em Desenvolvimento) O que é pilha de tecnologia? (Java, C#, Python, Ruby, Node, React) É baseado em SOA/Micro-serviços? Qual seria a melhor abordagem para automação que pode fornecer feedback mais rápido ou ?</description>
    </item>
    
    <item>
      <title>Automação de IU</title>
      <link>https://www.wikiod.com/pt/automation/automacao-de-iu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/automation/automacao-de-iu/</guid>
      <description>O foco desta seção seria listar ferramentas, abordagens de design e desafios comuns para qualquer esforço de automação de interface do usuário.
Automação de IU da Web # Abordagens de design # Fator de condução: Qual deve ser o nosso motor de condução? Deve ser funções de teste, palavras-chave, dados ou comportamento? Aqui listamos diferentes abordagens com exemplos. Orientado a dados/Acionado por palavra-chave/Híbrido: Acionado por código: BDD/TDD/ATDD: Pepino-Java com abordagem de fábrica de páginas # Passos para começar: # Baixar Eclipse Crie um projeto Java Maven com a seguinte organização de pacotes de exemplo src/test/java com.</description>
    </item>
    
  </channel>
</rss>
