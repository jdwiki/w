<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial asp.net-mvc-5 on </title>
    <link>https://www.wikiod.com/pt/docs/asp-dotnet-mvc-5/</link>
    <description>Recent content in tutorial asp.net-mvc-5 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/asp-dotnet-mvc-5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com asp.net-mvc-5</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-mvc-5/comecando-com-aspnet-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-mvc-5/comecando-com-aspnet-mvc-5/</guid>
      <description>O que há de novo no ASP.NET MVC 5 # Filtros de autenticação Are a new kind of filter added in ASP.NET MVC 5.0 .That run prior to authorization filters in the ASP.NET MVC pipeline and allow you to specify authentication logic per-action, per-controller, or globally for all controllers. Authentication filters process credentials in the request and provide a corresponding principal. Authentication filters can also add authentication challenges in response to unauthorized requests.</description>
    </item>
    
    <item>
      <title>Roteamento de atributo em mvc-5</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-mvc-5/roteamento-de-atributo-em-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-mvc-5/roteamento-de-atributo-em-mvc-5/</guid>
      <description>Sintaxe # {productId:int}/{productTitle} Mapeado para ProductsController.Show(int id)
{username} mapeado para ProfilesController.Show(string username)
{username}/catalogs/{catalogId:int}/{catalogTitle} Mapeado para CatalogsController.Show(string username, int catalogId)
Roteamento é como o ASP.NET MVC combina um URI com uma ação. O MVC 5 suporta um novo tipo de roteamento, chamado roteamento de atributo. Como o nome indica, o roteamento de atributo usa atributos para definir rotas. O roteamento de atributo oferece mais controle sobre os URIs em seu aplicativo da web.</description>
    </item>
    
    <item>
      <title>Criar auxiliares de HTML</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-mvc-5/criar-auxiliares-de-html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-mvc-5/criar-auxiliares-de-html/</guid>
      <description>Html helpers são uma maneira muito útil de criar elementos html em views usando o framework MVC. Com um pouco de tempo, sua equipe pode realmente se beneficiar ao usá-los. Isso ajuda a manter o código limpo e sujeito a erros.
Para usar os helpers você precisa primeiro adicionar uma diretiva @using dentro da view, ou adicionar o namespace dentro do arquivo Web.config localizado na pasta Views.
Crie um auxiliar simples - um div com um texto nele # public static class MyHelpers { public static MvcHtmlString MyCustomDiv(this HtmlHelper htmlHelper, string text, object htmlAttributes = null) { var mainTag = new TagBuilder(&amp;quot;div&amp;quot;); mainTag.</description>
    </item>
    
    <item>
      <title>Controlador assíncrono em MVC 5</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-mvc-5/controlador-assincrono-em-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-mvc-5/controlador-assincrono-em-mvc-5/</guid>
      <description>Definição # Usando um controlador assíncrono no ASP.NET MVC. A classe AsyncController permite escrever métodos de ação assíncronos. Você pode usar métodos de ação assíncrona para solicitações de longa duração e não vinculadas à CPU. Isso evita que o servidor Web bloqueie o trabalho enquanto a solicitação está sendo processada.
Controlador assíncrono # public async Task&amp;lt;actionresult&amp;gt; Index() { return View(&amp;quot;View&amp;quot;, await db.UserMasers.ToListAsync()); } </description>
    </item>
    
  </channel>
</rss>
