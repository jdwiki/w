<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial asp-classic on </title>
    <link>https://www.wikiod.com/pt/docs/asp-classic/</link>
    <description>Recent content in tutorial asp-classic on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/asp-classic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com asp-classic</title>
      <link>https://www.wikiod.com/pt/asp-classic/comecando-com-asp-classic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-classic/comecando-com-asp-classic/</guid>
      <description>Estrutura de uma página ASP simples # &amp;lt;%@ Language=&amp;quot;VBScript&amp;quot; CodePage = 65001 %&amp;gt; &amp;lt;% Option Explicit Response.Charset = &amp;quot;UTF-8&amp;quot; Response.CodePage = 65001 %&amp;gt; &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;My First Classic ASP Page&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;%=&amp;quot;Hello World&amp;quot;%&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Este é um exemplo muito básico de uma página ASP clássica que retorna a frase &amp;ldquo;Hello World&amp;rdquo; para o navegador junto com o restante do HTML padrão. As partes HTML são estáticas, ou seja, o servidor as enviará para o navegador como estão.</description>
    </item>
    
    <item>
      <title>Variáveis</title>
      <link>https://www.wikiod.com/pt/asp-classic/variaveis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-classic/variaveis/</guid>
      <description>Declarando # A criação de variáveis ​​em VBScript pode ser feita usando a instrução Dim, Public ou Private. É uma boa prática colocar no topo do script &amp;ldquo;Option Explicit&amp;rdquo; que força você a definir explicitamente uma variável.
Você pode declarar uma variável assim:
Option Explicit Dim firstName Ou você pode várias variáveis ​​como esta:
Option Explicit Dim firstName, middleName, lastName Se você não tiver a instrução option explicit, poderá criar variáveis ​​assim:</description>
    </item>
    
    <item>
      <title>Conectando-se a um banco de dados</title>
      <link>https://www.wikiod.com/pt/asp-classic/conectando-se-a-um-banco-de-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-classic/conectando-se-a-um-banco-de-dados/</guid>
      <description>O ASP clássico utiliza uma tecnologia chamada ActiveX Data Objects ao exigir acesso a fontes de dados externas. A Biblioteca ADODB fornece três objetos principais para esta finalidade, ADODB.Connection, ADODB .Command e o [ADODB.Recordset](https://msdn.microsoft. com/en-us/library/ms681510(v=vs.85).aspx).
Preenchendo uma lista suspensa do banco de dados # (Caveat emptor: há muitos, muitos programadores que entram em ataques absolutos se encontrarem código que usa conjuntos de registros em vez de comandos e procedimentos armazenados.)</description>
    </item>
    
    <item>
      <title>Loop</title>
      <link>https://www.wikiod.com/pt/asp-classic/loop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-classic/loop/</guid>
      <description>Para Loop # No ASP clássico, podemos especificar um loop for com a palavra-chave for. Com a instrução for, precisamos da instrução next que incrementará o contador.
For i = 0 To 10 Response.Write(&amp;quot;Index: &amp;quot; &amp;amp; i) Next A palavra-chave step pode ser usada para alterar como a instrução next modificará o contador.
For i = 10 To 1 Step -1 &#39;VBS Comment Next Para sair de um loop for, use a instrução Exit For</description>
    </item>
    
  </channel>
</rss>
