<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compositor-php Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/composer-php/</link>
    <description>Recent content in Compositor-php Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/composer-php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o composer-php</title>
      <link>https://www.wikiod.com/pt/composer-php/comecando-com-o-composer-php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/composer-php/comecando-com-o-composer-php/</guid>
      <description>Instalando o Composer no Ubuntu # Antes de baixar e instalar o Composer, precisamos ter certeza de que nosso servidor tem todas as dependências instaladas.
Primeiro, atualize o cache do gerenciador de pacotes executando:
sudo apt-get update Agora, vamos instalar as dependências. Vamos precisar do curl para baixar o Composer e php5-cli para instalá-lo e executá-lo. git é usado pelo Composer para baixar as dependências do projeto. Tudo pode ser instalado com o seguinte comando:</description>
    </item>
    
    <item>
      <title>Carregamento automático com compositor</title>
      <link>https://www.wikiod.com/pt/composer-php/carregamento-automatico-com-compositor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/composer-php/carregamento-automatico-com-compositor/</guid>
      <description>Carregamento automático # Para bibliotecas que especificam informações de carregamento automático, o Composer gera um arquivo vendor/autoload.php. Você pode simplesmente incluir este arquivo e obterá o carregamento automático gratuitamente.
require __DIR__ . &#39;/vendor/autoload.php&#39;; Isso torna muito fácil usar o código de terceiros. Por exemplo: Se o seu projeto depende do Monolog, você pode simplesmente começar a usar as classes dele, e elas serão carregadas automaticamente.
$log = new Monolog\Logger(&#39;name&#39;); $log-&amp;gt;pushHandler(new Monolog\Handler\StreamHandler(&#39;app.</description>
    </item>
    
    <item>
      <title>Como usar repositórios privados com o Composer</title>
      <link>https://www.wikiod.com/pt/composer-php/como-usar-repositorios-privados-com-o-composer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/composer-php/como-usar-repositorios-privados-com-o-composer/</guid>
      <description>Parâmetros # Parâmetros Detalhes repositórios Diz ao Composer onde ele pode baixar os pacotes necessários. tipo: vcs Diz ao Composer como tratar o repositório. URL: http://&amp;hellip; Diz ao Composer onde está o repositório. Use a sintaxe type: &amp;quot;vcs&amp;quot; para usar repositórios privados.
Para gerenciar o acesso ao repositório privado durante o desenvolvimento em uma máquina local, use um arquivo auth.json e não o confirme no repositório do seu projeto. Em vez disso, dê acesso a cada desenvolvedor individual ao repositório privado para que, usando cada um seu próprio arquivo NOT COMMITTED auth.</description>
    </item>
    
  </channel>
</rss>
