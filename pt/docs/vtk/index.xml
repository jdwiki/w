<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial vtk on </title>
    <link>https://www.wikiod.com/pt/docs/vtk/</link>
    <description>Recent content in Tutorial vtk on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/vtk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com vtk</title>
      <link>https://www.wikiod.com/pt/vtk/comecando-com-vtk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vtk/comecando-com-vtk/</guid>
      <description>Instalação ou Configuração # Construindo e instalando no Windows 7 # Pré-requisitos # Se você deseja compilar o VTK a partir das fontes mais recentes, você precisa do git de Aqui ou você pode baixar um instantâneo do código como um zip e descompactar em sua unidade de disco CMake *Microsoft Visual Studio 2015 Muito espaço livre - pelo menos alguns GB para estar no lado seguro, realmente dependendo do que você deseja construir Preparando-se # Eu gosto de manter as coisas limpas, então costumo criar 3 pastas assim: c:\vtk # c:\vtk\src # &#39;code base&#39; folder c:\vtk\build # &#39;out of source&#39; build folder c:\vtk\install # &#39;install folder&#39; where the &#39;installed&#39; files will reside Se estiver usando o método git,</description>
    </item>
    
    <item>
      <title>Olá Mundo</title>
      <link>https://www.wikiod.com/pt/vtk/ola-mundo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/vtk/ola-mundo/</guid>
      <description>Exemplo de Olá Mundo # #include &amp;lt;vtkAutoInit.h&amp;gt; VTK_MODULE_INIT(vtkRenderingOpenGL2); VTK_MODULE_INIT(vtkRenderingFreeType); VTK_MODULE_INIT(vtkInteractionStyle); #include &amp;lt;vtkSmartPointer.h&amp;gt; #include &amp;lt;vtkTextActor.h&amp;gt; #include &amp;lt;vtkRenderer.h&amp;gt; #include &amp;lt;vtkRenderWindow.h&amp;gt; #include &amp;lt;vtkRenderWindowInteractor.h&amp;gt; int main(int /*argc*/, char ** /*argv*/) { auto textActor = vtkSmartPointer&amp;lt;vtkTextActor&amp;gt;::New(); textActor-&amp;gt;SetInput(&amp;quot;Hello World&amp;quot;); auto renderer = vtkSmartPointer&amp;lt;vtkRenderer&amp;gt;::New(); renderer-&amp;gt;AddActor(textActor); renderer-&amp;gt;ResetCamera(); auto interactor = vtkSmartPointer&amp;lt;vtkRenderWindowInteractor&amp;gt;::New(); auto renderWindow = vtkSmartPointer&amp;lt;vtkRenderWindow&amp;gt;::New(); renderWindow-&amp;gt;AddRenderer(renderer); renderWindow-&amp;gt;SetInteractor(interactor); interactor-&amp;gt;Start(); return 0; } Discriminação: # #include &amp;lt;vtkAutoInit.h&amp;gt; VTK_MODULE_INIT(vtkRenderingOpenGL2); VTK_MODULE_INIT(vtkRenderingFreeType); VTK_MODULE_INIT(vtkInteractionStyle); O design VTK usa um padrão de design método de fábrica para criar novas instâncias de [vtkObject](http://www.</description>
    </item>
    
  </channel>
</rss>
