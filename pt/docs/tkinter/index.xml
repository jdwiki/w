<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial tkinter on </title>
    <link>https://www.wikiod.com/pt/docs/tkinter/</link>
    <description>Recent content in Tutorial tkinter on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/tkinter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao tkinter</title>
      <link>https://www.wikiod.com/pt/tkinter/introducao-ao-tkinter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/introducao-ao-tkinter/</guid>
      <description>Instalação ou Configuração # O Tkinter vem pré-instalado com os binários do instalador Python para Mac OS X e a plataforma Windows. Portanto, se você instalar o Python a partir dos binários oficiais para Mac OS X ou plataforma Windows, é bom usar o Tkinter.
Para versões Debian do Linux, você precisa instalá-lo manualmente usando os seguintes comandos.
Para Python 3
sudo apt-get install python3-tk
Para Python 2.7
sudo apt-get install python-tk</description>
    </item>
    
    <item>
      <title>Várias janelas (widgets TopLevel)</title>
      <link>https://www.wikiod.com/pt/tkinter/varias-janelas-widgets-toplevel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/varias-janelas-widgets-toplevel/</guid>
      <description>Diferença entre Tk e Toplevel # Tk é a raiz absoluta do aplicativo, é o primeiro widget que precisa ser instanciado e a GUI será desligada quando for destruída.
Toplevel é uma janela no aplicativo, fechar a janela destruirá todos os widgets filhos colocados nessa janela{1} mas não encerrará o programa.
try: import tkinter as tk #python3 except ImportError: import Tkinter as tk #python2 #root application, can only have one of these.</description>
    </item>
    
    <item>
      <title>O widget de entrada do Tkinter</title>
      <link>https://www.wikiod.com/pt/tkinter/o-widget-de-entrada-do-tkinter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/o-widget-de-entrada-do-tkinter/</guid>
      <description>Sintaxe # entrada = tk.Entry(pai, **kwargs) entrada.get() entry.insert(index, &amp;ldquo;valor&amp;rdquo;) entry.delete(start_index, end_index) entry.bind(evento, retorno de chamada) Parâmetros # Parâmetro Descrição pai Os widgets tkinter existem em uma hierarquia. Com exceção da janela raiz, todos os widgets têm um pai. Alguns tutoriais online chamam isso de &amp;ldquo;mestre&amp;rdquo;. Quando o widget é adicionado à tela com pack, place ou grid, ele aparecerá dentro deste widget pai largura A largura especifica a largura desired do widget com base em uma largura média de caracteres.</description>
    </item>
    
    <item>
      <title>Gerenciadores de Geometria Tkinter</title>
      <link>https://www.wikiod.com/pt/tkinter/gerenciadores-de-geometria-tkinter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/gerenciadores-de-geometria-tkinter/</guid>
      <description>Existem três gerenciadores de geometria para posicionar widgets: pack(), grid() e place().
pacote() # O gerenciador de geometria pack() organiza os widgets em blocos antes de colocá-los no widget pai. Ele usa as opções fill, expand e side.
Sintaxe
widget.pack(opção)
Preencher
Determina se o widget mantém o espaço mínimo necessário ou ocupa algum espaço extra alocado a ele. Atributos: NONE (padrão), X (preencher horizontalmente), Y (preencher verticalmente) ou BOTH (preencher horizontal e verticalmente).</description>
    </item>
    
    <item>
      <title>Widgets de rolagem</title>
      <link>https://www.wikiod.com/pt/tkinter/widgets-de-rolagem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/widgets-de-rolagem/</guid>
      <description>Barras de rolagem podem ser adicionadas aos widgets Listbox, Canvas e Text. Além disso, os widgets de entrada podem ser rolados horizontalmente. Para poder rolar outro tipo de widget, você precisa colocá-los dentro de um widget Canvas ou Text.
Sintaxe # barra de rolagem = tk.Barra de rolagem(pai, **kwargs) Parâmetros # Parâmetro Descrição pai Os widgets tkinter existem em uma hierarquia. Com exceção da janela raiz, todos os widgets têm um pai.</description>
    </item>
    
    <item>
      <title>Atrasando uma função</title>
      <link>https://www.wikiod.com/pt/tkinter/atrasando-uma-funcao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/atrasando-uma-funcao/</guid>
      <description>Sintaxe # widget.after(delay_ms, callback, *args) Parâmetros # Parâmetro Descrição atraso_ms Tempo (milissegundos) que atrasa a chamada da função callback retorno de chamada Função que é chamada após o delay_ms fornecido. Se este parâmetro não for fornecido, .after age de forma semelhante a time.sleep (em milissegundos) A sintaxe assume que um widget aceito pelo método .after foi criado anteriormente (ou seja, widget=tk.Label(parent))
.depois() # .after(delay, callback=None) é um método definido para todos os widgets tkinter.</description>
    </item>
    
    <item>
      <title>O widget do botão de opção Tkinter</title>
      <link>https://www.wikiod.com/pt/tkinter/o-widget-do-botao-de-opcao-tkinter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/o-widget-do-botao-de-opcao-tkinter/</guid>
      <description>Sintaxe # radiobutton = tk.Radiobutton(pai, **kwargs) Parâmetros # Parâmetro Descrição pai Os widgets tkinter existem em uma hierarquia. Com exceção da janela raiz, todos os widgets têm um pai. Alguns tutoriais online chamam isso de &amp;ldquo;mestre&amp;rdquo;. Quando o widget for adicionado à tela com pack, place ou grid, ele aparecerá dentro deste widget pai. comando função chamada cada vez que o usuário altera o estado do botão de opção indicador 1 ou True para botões de opção, 0 ou False para caixas de botão texto Texto a ser exibido ao lado do botão de opção.</description>
    </item>
    
    <item>
      <title>Widgets Ttk</title>
      <link>https://www.wikiod.com/pt/tkinter/widgets-ttk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/widgets-ttk/</guid>
      <description>Exemplos dos diferentes widgets ttk. Ttk tem um total de 17 widgets, onze dos quais já existiam no tkinter (tk).
O uso do módulo ttk dá ao seu aplicativo uma aparência mais moderna e aprimorada.
Sintaxe # tree=ttk.Treeview(master,**kwargs) Parâmetros # Parâmetro Descrição mestre Os widgets tkinter existem em uma hierarquia. Com exceção da janela raiz, todos os widgets têm um pai (também chamado de &amp;ldquo;mestre&amp;rdquo;). Quando o widget for adicionado à tela com pack, place ou grid, ele aparecerá dentro deste widget pai Esses exemplos assumem que tkinter foi importado com import tkinter as tk (python 3) ou import Tkinter as tk (python 2).</description>
    </item>
    
    <item>
      <title>Adicionando imagens ao rótulobotão</title>
      <link>https://www.wikiod.com/pt/tkinter/adicionando-imagens-ao-rotulobotao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/adicionando-imagens-ao-rotulobotao/</guid>
      <description>Isso mostra o uso adequado de imagens e como exibi-las corretamente.
Formatos de arquivo suportados pelo Tkinter # Tkinter suporta arquivos .ppm de PIL (Python Imaging Library), .JPG, .PNG e .GIF.
Para importar uma imagem, primeiro você precisa criar uma referência assim:
Image = PhotoImage(filename = [Your Image here]) Agora, podemos adicionar esta imagem a Button e Labels usando o callback &amp;ldquo;img&amp;rdquo;:
Lbl = Label (width=490, img=image) Uso de formatos .</description>
    </item>
    
    <item>
      <title>Personalizar estilos ttk</title>
      <link>https://www.wikiod.com/pt/tkinter/personalizar-estilos-ttk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/tkinter/personalizar-estilos-ttk/</guid>
      <description>O estilo dos novos widgets ttk é um dos aspectos mais poderosos do ttk. Além de ser uma forma de trabalhar completamente diferente do tradicional pacote tk, permite realizar um alto grau de customização em seus widgets.
Personalizar uma visualização em árvore # Ao pegar https://www.wikiod.com/pt/tkinter/widgets-ttk#Treeview: exemplo básico pode ser mostrado como personalizar uma visualização em árvore básica.
Neste caso, criamos um estilo &amp;ldquo;mystyle.Treeview&amp;rdquo; com o seguinte código (veja os comentários para entender o que cada linha faz):</description>
    </item>
    
  </channel>
</rss>
