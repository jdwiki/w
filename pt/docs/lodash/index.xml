<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lodash Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/lodash/</link>
    <description>Recent content in lodash Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/lodash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao lodash</title>
      <link>https://www.wikiod.com/pt/lodash/introducao-ao-lodash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/lodash/introducao-ao-lodash/</guid>
      <description>Configurar # O Lodash funciona igualmente bem em ambos os servidores (como node.js) e navegadores.
node.js com npm # Baixe com npm da CLI:
npm install lodash Em seguida, em seus scripts de nó:
var _ = require(&amp;quot;lodash&amp;quot;); // use lodash in your program... Faça o download da própria cópia para o lado do cliente no site (ou seja, no navegador) # Baixe o lodash ou use um gerenciador de pacotes como npm, jspm ou bower.</description>
    </item>
    
    <item>
      <title>Encadeamento</title>
      <link>https://www.wikiod.com/pt/lodash/encadeamento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/lodash/encadeamento/</guid>
      <description>O encadeamento implícito com _(arr1) e o encadeamento explícito com _.chain(arr1) funcionam de maneira semelhante. Os exemplos abaixo mostram como eles diferem um pouco.
Encadeamento explícito com _.chain(...) # var arr1 = [10, 15, 20, 25, 30, 15, 25, 35]; var sumOfUniqueValues = _.chain(arr1) .uniq() .sum() // sum returns a single value .value(); // which must be unwrapped manually with explicit chaining // sumOfUniqueValues is now 135 Encadeamento implícito com _(.</description>
    </item>
    
    <item>
      <title>Trabalhando com listas e arrays</title>
      <link>https://www.wikiod.com/pt/lodash/trabalhando-com-listas-e-arrays/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/lodash/trabalhando-com-listas-e-arrays/</guid>
      <description>Sintaxe # _.map(coleção, Função) =&amp;gt; newCollection _.filter(coleção, Predicado) =&amp;gt; newCollection _.some(collection, Predicate) =&amp;gt; true ou false _.reduce(coleção, BiFunction, seed) =&amp;gt; valor acumulado Parâmetros # Parâmetro Significado Coleção Um grupo iterável de elementos. Isso pode ser uma matriz ou um objeto. Função Uma função que recebe 1 entrada e retorna uma saída. BiFunção Uma função que recebe 2 entradas e retorna uma saída. Predicado Uma função que recebe 1 entrada e retorna um valor booleano.</description>
    </item>
    
    <item>
      <title>Trabalhando com objetos</title>
      <link>https://www.wikiod.com/pt/lodash/trabalhando-com-objetos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/lodash/trabalhando-com-objetos/</guid>
      <description>.tem # Determine se um objeto tem (ou contém) uma chave. Se a chave a ser pesquisada for expressa como um caminho (com notação de ponto), ela percorrerá estruturas de objetos aninhados para determinar se a chave existe.
var obj = { a: 2, b: 3, c: { dd:40, ee:{ fff:500 } } }; var res1 = _.has(obj, &amp;quot;a&amp;quot;); // true var res2 = _.has(obj, &amp;quot;a.b&amp;quot;); // false var res3 = _.</description>
    </item>
    
    <item>
      <title>Útil</title>
      <link>https://www.wikiod.com/pt/lodash/util/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/lodash/util/</guid>
      <description>_.identidade # Este método apenas retorna o primeiro argumento.
var res1 = _.identity(10, 20); // res1 now is 10 var res2 = _.identity(&amp;quot;hello&amp;quot;, &amp;quot;world&amp;quot;); // res2 now is &amp;quot;hello&amp;quot; O que significa _.identity na documentação do lodash? # Este método é usado em toda a documentação lodash em vez de function(x){return x;} (ou equivalente ES6 x =&amp;gt; x).
Geralmente significa &amp;ldquo;sem transformação&amp;rdquo; ou quando usado como predicado: a veracidade do valor.</description>
    </item>
    
  </channel>
</rss>
