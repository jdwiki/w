<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial odoo-8 on </title>
    <link>https://www.wikiod.com/pt/docs/odoo-8/</link>
    <description>Recent content in Tutorial odoo-8 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/odoo-8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com odoo-8</title>
      <link>https://www.wikiod.com/pt/odoo-8/comecando-com-odoo-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/comecando-com-odoo-8/</guid>
      <description>O que é Odoo? # Odoo (anteriormente conhecido como OpenERP e antes disso, TinyERP) é um conjunto de aplicativos de gerenciamento empresarial de núcleo aberto. Visando empresas de todos os portes, o conjunto de aplicativos cobre todas as necessidades de negócios, desde site/comércio eletrônico até fabricação, estoque e contabilidade, tudo perfeitamente integrado. É a primeira vez que um editor de software consegue alcançar uma cobertura tão funcional. Odoo é o software empresarial mais instalado no mundo.</description>
    </item>
    
    <item>
      <title>RPC usando a API Odoo v8 (Chame a função Python do JavaScript)</title>
      <link>https://www.wikiod.com/pt/odoo-8/rpc-usando-a-api-odoo-v8-chame-a-funcao-python-do-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/rpc-usando-a-api-odoo-v8-chame-a-funcao-python-do-javascript/</guid>
      <description>Se você está pensando em adicionar novos métodos em Python para usá-los em RPC a partir de JavaScript, então considere as seguintes opções de decoradores de métodos: se você tiver que lidar com ids/recordsets então para definição de método python escolha decorator:
@api.multi - para obter recordset em seu método @api.one - para obter browse_records um por um em seu método nos exemplos acima @api.multi é usado, mas @api.one também pode ser usado para lidar com ids, dependendo dos requisitos (no entanto, é altamente recomendável usar @api.</description>
    </item>
    
    <item>
      <title>Como ativar o modo de desenvolvedor OpenERP</title>
      <link>https://www.wikiod.com/pt/odoo-8/como-ativar-o-modo-de-desenvolvedor-openerp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/como-ativar-o-modo-de-desenvolvedor-openerp/</guid>
      <description>Modo de desenvolvedor
O modo de desenvolvedor Odoo permite que você faça modificações substanciais no banco de dados Odoo, como adicionar campos aos seus documentos e visualizações. Você altera as visualizações padrão de suas ações e pode até criar formulários dinâmicos com base em outros campos dentro de seus modelos.
Vantagem
Embora o Odoo seja uma estrutura de aplicativo poderosa, o ciclo de desenvolvimento pode ser brutal para testar as alterações em seu aplicativo.</description>
    </item>
    
    <item>
      <title>Configurar e-mail - Office 365 no Odoo</title>
      <link>https://www.wikiod.com/pt/odoo-8/configurar-e-mail---office-365-no-odoo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/configurar-e-mail---office-365-no-odoo/</guid>
      <description>Configurar e-mail # - Verifique inicialmente suas configurações de e-mail
No Odoo vá para Configurações &amp;ndash;&amp;gt; Email . Digite os valores dos campos nas opções &amp;ldquo;Servidores de e-mail de entrada&amp;rdquo; e &amp;ldquo;Servidores de e-mail de saída&amp;rdquo;. </description>
    </item>
    
    <item>
      <title>Quais são os métodos e detalhes do ORM?</title>
      <link>https://www.wikiod.com/pt/odoo-8/quais-sao-os-metodos-e-detalhes-do-orm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/quais-sao-os-metodos-e-detalhes-do-orm/</guid>
      <description>Método de criação: cria um novo registro com o valor especificado. Recebe vários valores de campo e retorna um conjunto de registros contendo o registro criado
def create(self,vals): return super(class_name, self).create(vals) Método de gravação: atualiza os registros com os IDs fornecidos com os valores de campo fornecidos. Pega vários valores de campo, grava-os em todos os registros em seu conjunto de registros. Não retorna nada
def write(self,vals): return super(class_name, self).write(vals) Método de pesquisa: pesquisa de registros com base em um domínio de pesquisa.</description>
    </item>
    
    <item>
      <title>Adicione arquivos CSS e Javascript ao módulo Odoo</title>
      <link>https://www.wikiod.com/pt/odoo-8/adicione-arquivos-css-e-javascript-ao-modulo-odoo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/adicione-arquivos-css-e-javascript-ao-modulo-odoo/</guid>
      <description>Sintaxe # Nota sobre a sintaxe XML: Como o registro é feito dentro do arquivo XML, você não pode deixar nenhuma tag aberta como faria em um HTML simples, como: &amp;lt;link rel=&amp;lsquo;stylesheet&amp;rsquo; href=&amp;quot;&amp;hellip;&amp;quot; ** &amp;gt;**, feche a tag do link, como: &amp;lt;link rel=&amp;lsquo;stylesheet&amp;rsquo; href=&amp;quot;&amp;hellip;&amp;quot; /&amp;gt; Parâmetros # Valores possíveis do parâmetro inherit_id significado web.assets_backend Usado apenas em páginas internas, NÃO incluído em um site público. website.assets_frontend Usado apenas em um site público (através do módulo &amp;ldquo;website&amp;rdquo;).</description>
    </item>
    
    <item>
      <title>Widgets personalizados para campos</title>
      <link>https://www.wikiod.com/pt/odoo-8/widgets-personalizados-para-campos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/widgets-personalizados-para-campos/</guid>
      <description>certifique-se de adicionar arquivo javascript ao seu módulo não esqueça de adicionar &amp;lsquo;web&amp;rsquo; como dependência em __openerp__.py: &#39;depends&#39;: [&#39;web&#39;,....] Widget personalizado para campos numéricos para uso em TreeView # O widget de exemplo abaixo demonstra como formatar células individuais de uma coluna TreeView condicionalmente, dependendo do valor do campo na célula específica. Se o valor do campo for negativo, ele será exibido na cor vermelha e o símbolo de menos ficará oculto, caso contrário, será exibido na cor normal .</description>
    </item>
    
    <item>
      <title>Campos usados ​​no Odoo 8</title>
      <link>https://www.wikiod.com/pt/odoo-8/campos-usados-no-odoo-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/campos-usados-no-odoo-8/</guid>
      <description>Esta é a seção onde você pode encontrar os detalhes sobre os campos que estão sendo usados ​​no Odoo 8
Parâmetros # Parâmetros Descrição string=&amp;ldquo;Nome&amp;rdquo; Rótulo opcional do campo computa=&amp;quot;_compute_name_custom&amp;quot; Transforme os campos em campos computados loja=Verdadeiro Se calculado, armazenará o resultado selecione=Verdadeiro Forçar índice no campo readonly=True O campo será somente leitura nas visualizações inverse=&amp;quot;_write_name&amp;quot; No gatilho de atualização requerido=Verdadeiro Campo obrigatório traduzir=Verdadeiro Ativar tradução help=&amp;lsquo;blabla&amp;rsquo; Texto da dica de ferramenta de ajuda comodel_name=&amp;ldquo;model.</description>
    </item>
    
    <item>
      <title>Criar funções automatizadas para modelo</title>
      <link>https://www.wikiod.com/pt/odoo-8/criar-funcoes-automatizadas-para-modelo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/odoo-8/criar-funcoes-automatizadas-para-modelo/</guid>
      <description>Muitas vezes precisamos executar algum código automaticamente durante a instalação do módulo. Isso tem muitas razões, por exemplo, configurar as configurações do módulo Sale para atender aos requisitos do nosso projeto.
Neste tópico, você aprenderá como executar funções automatizadas na instalação do módulo.
Antes de tudo você precisa criar o arquivo xml para fazer chamada de função # &amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;openerp&amp;gt; &amp;lt;data noupdate=&amp;quot;1&amp;quot;&amp;gt; &amp;lt;function model=&amp;quot;*model_name*&amp;quot; name=&amp;quot;_configure_sales&amp;quot;/&amp;gt; &amp;lt;/data&amp;gt; &amp;lt;/openerp&amp;gt; Este arquivo xml simples chama a função _configure_sales do modelo model_name.</description>
    </item>
    
  </channel>
</rss>
