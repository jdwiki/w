<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jsp tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/jsp/</link>
    <description>Recent content in jsp tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/jsp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com jsp</title>
      <link>https://www.wikiod.com/pt/jsp/comecando-com-jsp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsp/comecando-com-jsp/</guid>
      <description>Olá Mundo # O conteúdo foi movido de volta para o bom &amp;lsquo;ol página wiki JSP
Instalando JSP # O conteúdo foi movido de volta para o bom &amp;lsquo;ol página wiki JSP
##Javascript O conteúdo foi movido de volta para o bom &amp;lsquo;ol página wiki JSP</description>
    </item>
    
    <item>
      <title>Criando bibliotecas de tags personalizadas usando JSP 2.0 (sem classes java)</title>
      <link>https://www.wikiod.com/pt/jsp/criando-bibliotecas-de-tags-personalizadas-usando-jsp-20-sem-classes-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsp/criando-bibliotecas-de-tags-personalizadas-usando-jsp-20-sem-classes-java/</guid>
      <description>Para usar tags personalizadas em JSP, costumávamos ter arquivos TLD, juntamente com uma classe Java para definir as tags personalizadas, mas pós especificações JSP 2.0, o mesmo pode ser alcançado, sem a necessidade de arquivos de código-fonte, facilitando para manter e também pode ser criado por alguém com conhecimento básico de tags JSP sem necessidade de código java.
Normalmente, para adicionar conteúdo estático a uma página HTML, usamos
link rel=&amp;ldquo;importar&amp;rdquo; tag (em HTML5) ou jQuery .</description>
    </item>
    
    <item>
      <title>Diretivas</title>
      <link>https://www.wikiod.com/pt/jsp/diretivas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsp/diretivas/</guid>
      <description>Sintaxe # &amp;lt;%@ DirectiveName attributeName=&amp;ldquo;value&amp;rdquo;%&amp;gt; Exemplo simples # Diretivas, como o nome sugere, são direções ou instruções para o contêiner seguir ao traduzir uma JSP para um servlet. Existem 3 diretivas chamadas page, include e taglib que você pode usar em seu JSP.
Abaixo está um exemplo simples de uso da diretiva page:
&amp;lt;%@ page isErrorPage=&amp;quot;true&amp;quot; %&amp;gt; Isso instruiria o contêiner de que o arquivo JSP que contém essa linha é uma página de erro.</description>
    </item>
    
    <item>
      <title>Comentários em JSP</title>
      <link>https://www.wikiod.com/pt/jsp/comentarios-em-jsp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsp/comentarios-em-jsp/</guid>
      <description>Existem várias maneiras de adicionar comentários na página JSP, pois é a tecnologia de visualização java que se concentra principalmente na visualização de parte do aplicativo da Web que inclui principalmente html e, sendo a tecnologia java, ela também pode conter código java. Portanto, é preciso entender como usar comentários adequados em jsp.
Existem 3 tipos de comentários que podemos usar na página JSP:
Comentário JSP
Comentário HTML
Comentário Java (que pode ser usado dentro de scripts)</description>
    </item>
    
    <item>
      <title>Objetos implícitos</title>
      <link>https://www.wikiod.com/pt/jsp/objetos-implicitos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/jsp/objetos-implicitos/</guid>
      <description>Objetos Java que são criados pelo contêiner da web. Existem 9 objetos implícitos
objeto Tipo fora JspWriter pedido HttpServletRequest resposta HttpServletResposta configuração ServletConfig aplicação ServletContext sessão HttpSession pageContext PageContext página Objeto exceção Jogável JSP para fora do objeto implícito - simplesmente exibindo data e hora. # &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;% out.print(&amp;quot;Today is:&amp;quot;+java.util.Calendar.getInstance().getTime()); %&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; solicitar objeto em JSP # usado para obter informações de solicitação, como parâmetro, informações de cabeçalho, endereço remoto, nome do servidor, porta do servidor, tipo de conteúdo, codificação de caracteres.</description>
    </item>
    
  </channel>
</rss>
