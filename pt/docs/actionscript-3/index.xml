<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial do ActionScript 3 on </title>
    <link>https://www.wikiod.com/pt/docs/actionscript-3/</link>
    <description>Recent content in Tutorial do ActionScript 3 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/actionscript-3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao ActionScript 3</title>
      <link>https://www.wikiod.com/pt/actionscript-3/introducao-ao-actionscript-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/introducao-ao-actionscript-3/</guid>
      <description>Visão geral da instalação # O ActionScript 3 pode ser usado instalando o Adobe AIR SDK ou Apache Flex SDK ou como parte do produto Adobe Animate CC (anteriormente conhecido como Flash Professional).
Adobe Animate CC é uma solução de software profissional que pode ser usada para criar projetos AS3 usando ferramentas visuais - uma vez instalado, não são necessárias mais etapas para começar a criar projetos AS3.
O AIR SDK e o Flex SDK podem ser usados ​​com ferramentas de linha de comando ou com vários IDEs de terceiros.</description>
    </item>
    
    <item>
      <title>Geração de valor aleatória</title>
      <link>https://www.wikiod.com/pt/actionscript-3/geracao-de-valor-aleatoria/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/geracao-de-valor-aleatoria/</guid>
      <description>Número aleatório entre os valores mínimo e máximo # function randomMinMax(min:Number, max:Number):Number { return (min + (Math.random() * Math.abs(max - min))); } Essa função é chamada passando um intervalo de valores mínimo e máximo.
Exemplo:
randomMinMax(1, 10); Saídas de exemplo:
1.661770915146917 2.5521070677787066 9.436270965728909 Crie uma cor aleatória # Para obter qualquer cor aleatória:
function randomColor():uint { return Math.random() * 0xFFFFFF; } Se você precisar de mais controle sobre os canais vermelho, verde e azul:</description>
    </item>
    
    <item>
      <title>Enviando e recebendo dados de servidores</title>
      <link>https://www.wikiod.com/pt/actionscript-3/enviando-e-recebendo-dados-de-servidores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/enviando-e-recebendo-dados-de-servidores/</guid>
      <description>Fazendo uma solicitação do Flash # O URLRequest e o [URLLoader](http://help.adobe. com/en_US/FlashPlatform/reference/actionscript/3/flash/net/URLLoader.html) trabalham juntas para fazer solicitações do Flash para recursos externos. O URLRequest define informações sobre a solicitação, por exemplo. o corpo da solicitação e o tipo de método de solicitação, e o URLLoader faz referência a isso para executar a solicitação real e fornecer um meio de ser notificado quando uma resposta for recebida do recurso.
Exemplo:
var request:URLRequest = new URLRequest(&#39;http://stackoverflow.</description>
    </item>
    
    <item>
      <title>Padrão Singleton</title>
      <link>https://www.wikiod.com/pt/actionscript-3/padrao-singleton/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/padrao-singleton/</guid>
      <description>O padrão singleton tem o objetivo de permitir que apenas uma instância de uma classe exista em um determinado momento.
Impedir a instanciação direta via construtor geralmente é evitado tornando-o privado. No entanto, isso não é possível no As3 e, portanto, outras formas de controlar o número de instâncias devem ser usadas.
Executor Singleton via instância privada # Nesta abordagem, o single é acessado através do método estático:
Singleton.getInstance(); Para impor apenas uma instância do singleton, uma variável estática privada retém a instância, enquanto quaisquer tentativas adicionais de instanciar uma instância são impostas dentro do construtor.</description>
    </item>
    
    <item>
      <title>Entendendo o erro 1009 Não é possível acessar uma propriedade ou método de uma referência de objeto nulo</title>
      <link>https://www.wikiod.com/pt/actionscript-3/entendendo-o-erro-1009-nao-e-possivel-acessar-uma-propriedade-ou-metodo-de-uma-referencia-de-objeto-nulo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/entendendo-o-erro-1009-nao-e-possivel-acessar-uma-propriedade-ou-metodo-de-uma-referencia-de-objeto-nulo/</guid>
      <description>Um erro 1009 é um erro geral que surge quando você está tentando receber um valor de uma variável ou propriedade que tem o valor null. Os exemplos fornecidos expõem vários casos em que esse erro surge, juntamente com algumas recomendações sobre como mitigar o erro.
O temido e frequentemente perguntado &amp;ldquo;Erro 1009: Não é possível acessar uma propriedade ou método de uma referência de objeto nulo&amp;rdquo; é um sinal de que alguns dos dados parecem nulos, mas tentam ser usados ​​como um objeto preenchido.</description>
    </item>
    
    <item>
      <title>Manipulação e filtragem de bitmap</title>
      <link>https://www.wikiod.com/pt/actionscript-3/manipulacao-e-filtragem-de-bitmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/manipulacao-e-filtragem-de-bitmap/</guid>
      <description>Neste tópico, você aprenderá um pouco sobre como manipular dados de bitmap e processamento visual, trabalhar com pixels e começar a usar filtros de efeitos.
Efeito de limite (monocromático) # requeridos: # Entendendo os dados de Bitmap e Bitmap o que é limite
Este ajuste pega todos os pixels de uma imagem e&amp;hellip; empurra-os para branco puro ou preto puro
o que nós temos que fazer
aqui está uma Live Demo deste exemplo com algumas mudanças como usar uma interface do usuário para alterar o nível de limite em tempo de execução.</description>
    </item>
    
    <item>
      <title>Otimizando o desempenho</title>
      <link>https://www.wikiod.com/pt/actionscript-3/otimizando-o-desempenho/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/otimizando-o-desempenho/</guid>
      <description>Vetores em vez de Arrays # O Flash Player 10 introduziu o tipo de lista genérica Vector.&amp;lt;*&amp;gt; que era mais rápido que o Array. No entanto, isso não é inteiramente verdade. Somente os tipos de vetor a seguir são mais rápidos do que os equivalentes de matriz, devido à maneira como são implementados no Flash Player.
Vector.&amp;lt;int&amp;gt; - Vetor de inteiros de 32 bits Vector.&amp;lt;uint&amp;gt; - Vetor de inteiros sem sinal de 32 bits Vector.</description>
    </item>
    
    <item>
      <title>Programação Orientada a Objetos</title>
      <link>https://www.wikiod.com/pt/actionscript-3/programacao-orientada-a-objetos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/programacao-orientada-a-objetos/</guid>
      <description>Sobreposição de método # Quando você estend uma classe, você pode override métodos que a classe herdada define usando a palavra-chave override:
public class Example { public function test():void { trace(&#39;It works!&#39;); } } public class AnotherExample extends Example { public override function test():void { trace(&#39;It still works!&#39;); } } Exemplo:
var example:Example = new Example(); var another:AnotherExample = new AnotherExample(); example.test(); // Output: It works! another.test(); // Output: It still works!</description>
    </item>
    
    <item>
      <title>Trabalhando com som</title>
      <link>https://www.wikiod.com/pt/actionscript-3/trabalhando-com-som/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/trabalhando-com-som/</guid>
      <description>Sintaxe # Sound.play(startTime:Number = 0, loops:int = 0, sndTransform:flash.media:SoundTransform = null):SoundChannel // Reproduz um som carregado, retorna um SoundChannel Parar de reproduzir um som # import flash.net.URLRequest; import flash.media.Sound; import flash.media.SoundChannel; import flash.events.Event; var snd:Sound; = new Sound(); var sndChannel:SoundChannel var sndTimer:Timer; snd.addEventListener(Event.COMPLETE, soundLoaded); snd.load(new URLRequest(&amp;quot;soundFile.mp3&amp;quot;)); //load after adding the complete event function soundLoaded(e:Event):void { sndChannel = snd.play(); //Create a timer to wait 1 second sndTimer = new Timer(1000, 1); sndTimer.</description>
    </item>
    
    <item>
      <title>Desenhando bitmaps</title>
      <link>https://www.wikiod.com/pt/actionscript-3/desenhando-bitmaps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/actionscript-3/desenhando-bitmaps/</guid>
      <description>Desenha um objeto de exibição em dados de bitmap # Uma função auxiliar para criar uma cópia de bitmap de um objeto. Isso pode ser usado para converter objetos vetoriais, texto ou Sprites aninhados complexos em um bitmap achatado.
function makeBitmapCopy(displayObj:IBitmapDrawable, transparent:Boolean = false, bgColor:uint = 0x00000000, smooth:Boolean = true):Bitmap { //create an empty bitmap data that matches the width and height of the object you wish to draw var bmd:BitmapData = new BitmapData(displayObj.</description>
    </item>
    
  </channel>
</rss>
