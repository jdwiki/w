<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial do google-apps-script on </title>
    <link>https://www.wikiod.com/pt/docs/google-apps-script/</link>
    <description>Recent content in Tutorial do google-apps-script on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/google-apps-script/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao google-apps-script</title>
      <link>https://www.wikiod.com/pt/google-apps-script/introducao-ao-google-apps-script/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/introducao-ao-google-apps-script/</guid>
      <description>Tipos de Scripts # Os scripts do Google App são de três tipos.
Estar sozinho Vinculado ao Google Apps Aplicativos da Web Script autônomo
Os scripts autônomos não estão vinculados a nenhum aplicativo do Google, ou seja, Docs, Planilhas ou Formulários etc. O script autônomo pode ser criado visitando script.google.com ou conectando o script de aplicativo do Google ao Google Drive. O script autônomo pode ser usado para programar aplicativos do Google de forma independente, pode ser usado como um aplicativo da Web ou pode ser configurado para ser executado automaticamente a partir de um gatilho instalável.</description>
    </item>
    
    <item>
      <title>DriveApp - getFileById(id)</title>
      <link>https://www.wikiod.com/pt/google-apps-script/driveapp---getfilebyidid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/driveapp---getfilebyidid/</guid>
      <description>Também é possível obter um arquivo pela URL do arquivo. O ID de um arquivo está no URL, portanto, usar o ID em vez do URL inteiro significa que o parâmetro é mais curto. Armazenar o URL em vez do ID ocupa mais espaço.
Obtenha um arquivo do Google Drive usando o ID do arquivo # function getGoogleDriveFileById(id) { var file; file = DriveApp.getFileById(id);//Returns a file - The &amp;quot;id&amp;quot; must be a string //One way to manually get a file ID // - Open the file from Google Drive // - The file ID is in the URL in the browsers address bar //https://docs.</description>
    </item>
    
    <item>
      <title>Google Sheets MailApp</title>
      <link>https://www.wikiod.com/pt/google-apps-script/google-sheets-mailapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/google-sheets-mailapp/</guid>
      <description>Este serviço permite aos usuários enviar e-mails com total controle sobre o conteúdo do e-mail. Ao contrário do GmailApp, o único objetivo do MailApp é enviar e-mail. MailApp não pode acessar a caixa de entrada do Gmail de um usuário.
Alterações em scripts escritos usando GmailApp são mais propensas a acionar uma solicitação de reautorização de um usuário do que scripts MailApp.
Um exemplo básico de MailApp # MailApp é a API do Google App Script que pode ser usada para enviar e-mails</description>
    </item>
    
    <item>
      <title>DriveApp</title>
      <link>https://www.wikiod.com/pt/google-apps-script/driveapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/driveapp/</guid>
      <description>Crie uma nova pasta em uma raiz do Google Drive # function createNewFolderInGoogleDrive(folderName) { return DriveApp.createFolder(folderName); } Use a função createNewFolderInGoogleDrive para criar uma pasta chamada Pasta de teste em uma raiz do Google Drive:
var newFolder = createNewFolderInGoogleDrive(&#39;Test folder&#39;); newFolder tem o tipo Class Folder:
// output id of new folder to log Logger.log(newFolder.getId()); Crie um novo arquivo no Google Drive de um determinado tipo Mime # function createGoogleDriveFileOfMimeType() { var content,fileName,newFile;//Declare variable names fileName = &amp;quot;Test File &amp;quot; + new Date().</description>
    </item>
    
    <item>
      <title>Serviço DriveApp</title>
      <link>https://www.wikiod.com/pt/google-apps-script/servico-driveapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/servico-driveapp/</guid>
      <description>Os tipos de Mime do Google não podem ser usados ​​para o terceiro parâmetro de Tipos de Mime. Usar um tipo de Mime do Google resultará em um erro que indica:
Não é possível usar &amp;ldquo;DriveApp.createFile()&amp;rdquo; para criar tipos MIME do Google. Por favor, use o Advanced Drive Service
Tipo Mime.GOOGLE_APPS_SCRIPT
Tipo Mime.GOOGLE_DOCS
Tipo Mime.GOOGLE_DRAWINGS
Tipo Mime.GOOGLE_FORMS
Tipo Mime.GOOGLE_SHEETS
Tipo Mime.GOOGLE_SLIDES
Crie uma nova pasta na unidade raiz do Google # function createNewFolderInGoogleDrive() { var folderName,newFolder;//Declare variable names folderName = &amp;quot;Test Folder &amp;quot; + new Date().</description>
    </item>
    
    <item>
      <title>Crie uma função personalizada para o Planilhas Google</title>
      <link>https://www.wikiod.com/pt/google-apps-script/crie-uma-funcao-personalizada-para-o-planilhas-google/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/crie-uma-funcao-personalizada-para-o-planilhas-google/</guid>
      <description>Uma função personalizada no google docs está vinculada a um documento específico (e, portanto, só pode ser usada nesse documento).
Ele deve, portanto, ser criado com a edição de script desse documento (Ferramentas -&amp;gt; Editor de script). Uma vez salvo, ele pode ser usado como qualquer outra fórmula de planilha regular.
Constante personalizada de gravidade padrão # Esta função retorna a constante de gravidade padrão nas unidades de aceleração especificadas (1 para cm/s², 2 para pés/s², 3 para m/s²)</description>
    </item>
    
    <item>
      <title>Serviço de planilha</title>
      <link>https://www.wikiod.com/pt/google-apps-script/servico-de-planilha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/servico-de-planilha/</guid>
      <description>A referência oficial da API para o Spreadsheet Service pode ser encontrada em https://developers.google.com/apps-script/reference/spreadsheet/.
Folha # Obtendo uma referência a uma guia de planilha nomeada
var spread_sheet = SpreadsheetApp.getActiveSpreadsheet();//Get active spreadsheet var sheet_with_name_a = spread_sheet.getSheetByName(&amp;quot;sheet_tab_name&amp;quot;); Obtendo a guia da planilha ativa
var spread_sheet = SpreadsheetApp.getActiveSpreadsheet(); var active_sheet = spread_sheet.getActiveSheet(); Inserir coluna
var spread_sheet = SpreadsheetApp.getActiveSpreadsheet(); var active_sheet = spread_sheet.getActiveSheet(); active_sheet.insertColumnAfter(1); // This inserts a column after the first column position active_sheet.</description>
    </item>
    
    <item>
      <title>SpreadsheetApp Active Sheet</title>
      <link>https://www.wikiod.com/pt/google-apps-script/spreadsheetapp-active-sheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/spreadsheetapp-active-sheet/</guid>
      <description>Método: getAtivo()
Tipo de retorno: Planilha
getActive() - Obtém planilha ativa # Isso retorna a planilha atualmente ativa ou nula se não houver nenhuma.
var currentSheet = SpreadsheetApp.getActive(); var url = currentSheet.getUrl(); Logger.log( url ); </description>
    </item>
    
    <item>
      <title>Script do Google Web App para download automático do Google Drive</title>
      <link>https://www.wikiod.com/pt/google-apps-script/script-do-google-web-app-para-download-automatico-do-google-drive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/script-do-google-web-app-para-download-automatico-do-google-drive/</guid>
      <description>Este Script Web Simples do Google App (autônomo) permite que o Google Drive seja repetidamente pesquisado para que os arquivos sejam baixados para o PC local do usuário.
Mostra como usar um script de aplicativo para fornecer a função de:
Interface do usuário (uma simples neste exemplo) A página de download do arquivo. Para uma explicação mais completa de como funciona, leia o Exemplo &amp;ldquo;Como funciona&amp;rdquo;.
O Web Script deve ser publicado para funcionar.</description>
    </item>
    
    <item>
      <title>Aplicativos da Web de script de aplicativos</title>
      <link>https://www.wikiod.com/pt/google-apps-script/aplicativos-da-web-de-script-de-aplicativos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/google-apps-script/aplicativos-da-web-de-script-de-aplicativos/</guid>
      <description>Este é um exemplo de aplicativo da Web de formulário, o bit do lado do cliente mostra algum design básico de UX, como um botão de envio desabilitado quando o formulário está sendo enviado ou uma mensagem de erro se falhar &amp;hellip; etc.
O bit do Apps Script é muito básico. Ele contém apenas o código necessário para servir o html e validar o campo.
Aqui está um link para este aplicativo de exemplo em ação: Example Apps Script Form</description>
    </item>
    
  </channel>
</rss>
