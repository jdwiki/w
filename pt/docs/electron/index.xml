<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial de elétron on </title>
    <link>https://www.wikiod.com/pt/docs/electron/</link>
    <description>Recent content in tutorial de elétron on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/electron/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o elétron</title>
      <link>https://www.wikiod.com/pt/electron/comecando-com-o-eletron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/electron/comecando-com-o-eletron/</guid>
      <description>Instalação de Elétron # Dependências # Para instalar o electron você deve primeiro instalar o Node.js, que vem com o npm.
Como instalá-lo? # Use npm:
# Install the `electron` command globally in your $PATH npm install electron -g # OR # Install as a development dependency npm install electron --save-dev Olá Mundo! # Configurar # Uma estrutura de projeto Electron geralmente se parece com isso:
hello-world-app/ ├── package.json ├── index.</description>
    </item>
    
    <item>
      <title>Processo principal e renderizador.</title>
      <link>https://www.wikiod.com/pt/electron/processo-principal-e-renderizador/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/electron/processo-principal-e-renderizador/</guid>
      <description>O processo que executa o script principal do package.json é chamado de processo principal. O processo principal cria páginas web criando instâncias BrowserWindow. Cada página da Web no Electron é executada em seu próprio processo, que é chamado de processo de renderização. O processo principal gerencia todas as páginas da web e seus processos de renderização correspondentes. Cada processo de renderização é isolado e se preocupa apenas com a página da Web em execução.</description>
    </item>
    
    <item>
      <title>instalador de elétrons</title>
      <link>https://www.wikiod.com/pt/electron/instalador-de-eletrons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/electron/instalador-de-eletrons/</guid>
      <description>Módulo NPM que cria instaladores do Windows para aplicativos Electron. Isso ajudará a criar um único EXE para o aplicativo Electron windows
Sintaxe # Instalar globalmente npm install -g electron-winstaller Instalar localmente npm install &amp;ndash;save-dev electron-winstaller Parâmetros # Nome da configuração Descrição appDirectory O valor dos autores para os metadados do pacote nuget. O padrão é o campo de autor do arquivo package.json do seu aplicativo quando não especificado. proprietários O valor dos proprietários para os metadados do pacote nuget.</description>
    </item>
    
    <item>
      <title>Empacotando um aplicativo eletrônico</title>
      <link>https://www.wikiod.com/pt/electron/empacotando-um-aplicativo-eletronico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/electron/empacotando-um-aplicativo-eletronico/</guid>
      <description>Quando estiver pronto para distribuição, seu aplicativo electron pode ser empacotado em um arquivo executável.
Os aplicativos Electron podem ser empacotados para serem executados no Windows (32/64 bits), OSX (macOS) e Linux (x86/x86_64).
Para empacotar seu código, use o pacote npm &amp;rsquo;electron-packager\
https://github.com/electron-userland/electron-packager
Sintaxe # $ pacote de elétrons sourcedir nome do aplicativo &amp;ndash;platform=plataforma &amp;ndash;arch=arch [sinalizadores opcionais&amp;hellip;] Parâmetros # Parâmetro Detalhes sourcedir O diretório de seus arquivos de aplicativos eletrônicos nome do aplicativo O nome do seu aplicativo plataforma A plataforma para a qual você deseja compilar seu código.</description>
    </item>
    
    <item>
      <title>Função remota - use funções Electron em JavaScript</title>
      <link>https://www.wikiod.com/pt/electron/funcao-remota---use-funcoes-electron-em-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/electron/funcao-remota---use-funcoes-electron-em-javascript/</guid>
      <description>Se você precisar alterar algumas coisas em renderer.js ou main.js, mas quiser fazer as alterações em index.html, você pode usar a função remote. Ele permite que você acesse todas as funções eletrônicas que você precisa!
Sintaxe # use remoto como require(&amp;quot;electron&amp;quot;):
main.js: const elétron = require(&amp;quot;elétron&amp;quot;);
index.html: const electron = require(&amp;quot;electron&amp;quot;).remote;
Usando o controle remoto definindo a barra de progresso # const { remote } = require(&amp;quot;electron&amp;quot;); // &amp;lt;- The Node.</description>
    </item>
    
    <item>
      <title>Aplicativo de bandeja de elétrons</title>
      <link>https://www.wikiod.com/pt/electron/aplicativo-de-bandeja-de-eletrons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/electron/aplicativo-de-bandeja-de-eletrons/</guid>
      <description>Aplicativo de bandeja de elétrons # Adicionando um ícone à sua barra de bandeja
let tray = null; let mainWindow = null; let user = null; app.on(&#39;ready&#39;, () =&amp;gt; { /** * Tray related code. */ const iconName = &#39;icon.png&#39;; const iconPath = path.join(__dirname, iconName); tray = new Tray(iconPath); tray.setToolTip(&#39;AMP Notifier App&#39;); const contextMenu = Menu.buildFromTemplate([{ label: &#39;Quit&#39;, click: destroyApp }]); tray.setContextMenu(contextMenu); tray.on(&#39;click&#39;, () =&amp;gt; { app.quit(); }); }); </description>
    </item>
    
    <item>
      <title>Usando bootstrap no elétron</title>
      <link>https://www.wikiod.com/pt/electron/usando-bootstrap-no-eletron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/electron/usando-bootstrap-no-eletron/</guid>
      <description>Um dos melhores frameworks front-end do mundo web no twitter bootstrap. Como o elétron depende do navegador da Web, podemos facilmente usar o bootstrap com o elétron para usar o poder do bootstrap em nossa estrutura eletrônica. A versão mais recente do bootstrap a partir de hoje é 3.3.7 e o bootstrap 4 ainda está em fase alfa.
Ligando o Elétron com Bootstrap # Para usar o bootstrap, existem 2 casos.</description>
    </item>
    
    <item>
      <title>Usando nedb no elétron</title>
      <link>https://www.wikiod.com/pt/electron/usando-nedb-no-eletron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/electron/usando-nedb-no-eletron/</guid>
      <description>Instalação do nedb # É muito fácil instalar o nedb.
npm install nedb --save # Put latest version in your package.json Para as pessoas que amam o caramanchão,
bower install nedb Conectando o aplicativo de elétrons com o Nedb # Ao criar aplicativos eletrônicos, geralmente o back-end está em uma pasta separada (arquivos js) e o front-end está em uma pasta separada (arquivos html). No backend, para usar o banco de dados, temos que incluir o pacote nedb com a instrução require da seguinte forma.</description>
    </item>
    
  </channel>
</rss>
