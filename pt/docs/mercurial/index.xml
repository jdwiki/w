<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial mercurial on </title>
    <link>https://www.wikiod.com/pt/docs/mercurial/</link>
    <description>Recent content in tutorial mercurial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/mercurial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao Mercurial</title>
      <link>https://www.wikiod.com/pt/mercurial/introducao-ao-mercurial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/mercurial/introducao-ao-mercurial/</guid>
      <description>Instalação e configuração # Você pode baixar o Mercurial do site do projeto, e existem utilitários gráficos para Windows, Linux e OSX se você preferir isso a uma interface de linha de comando. A maioria dos gerenciadores de pacotes Unix inclui o Mercurial, por exemplo no Debian/Ubuntu:
$ apt-get install mercurial Você pode verificar se o Mercurial está instalado executando:
$ hg --version Configurar # O Mercurial funciona imediatamente, mas você provavelmente desejará configurar o Mercurial para saber quem você é antes de prosseguir.</description>
    </item>
    
    <item>
      <title>Operações comuns</title>
      <link>https://www.wikiod.com/pt/mercurial/operacoes-comuns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/mercurial/operacoes-comuns/</guid>
      <description>Usando o comando bisect para encontrar um bug # O comando bisect ajuda você a rastrear o conjunto de alterações que introduziu um bug.
Redefina o estado da bissecção e marque a revisão atual como ruim (contém o bug!)
hg bisect --reset hg bisect --bad Volte para um ponto em que você acha que o bug não está presente
hg update -r -200 Agora você tem que testar o software e se sua suposição estiver correta (bug não presente), marque a revisão como boa:</description>
    </item>
    
    <item>
      <title>Filas do Mercurial</title>
      <link>https://www.wikiod.com/pt/mercurial/filas-do-mercurial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/mercurial/filas-do-mercurial/</guid>
      <description>Sintaxe # hg qnew -m &amp;ldquo;Minha mensagem de confirmação&amp;rdquo; myPatch hg qpop hg qpush hg qrefresh -m &amp;ldquo;Minha nova mensagem de confirmação&amp;rdquo; hg qaplicado hg qseries hg qfinish hg qdelete myPatch hg qfold myPatch hg qqueue &amp;ndash;list hg qqueue &amp;ndash;create myNewQueue hg qqueue &amp;ndash;delete myNewQueue Ativar extensão # Edite Mercurial.ini (Windows) ou .hgrc (Linux/OSX):
[extenstions] mq = Criar e atualizar patches # Crie novos patches com hg qnew patch-name e atualize-os com novas alterações com hg qrefresh:</description>
    </item>
    
    <item>
      <title>Lista de comandos</title>
      <link>https://www.wikiod.com/pt/mercurial/lista-de-comandos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/mercurial/lista-de-comandos/</guid>
      <description>Comandos para preparar commits # add: adiciona os arquivos especificados no próximo commit addremove: adicione todos os novos arquivos, exclua todos os arquivos ausentes backout: efeito reverso do conjunto de alterações anterior commit, ci: confirma os arquivos especificados ou todas as alterações pendentes copiar, cp: marca os arquivos como copiados para o próximo commit esquecer: esquece os arquivos especificados no próximo commit merge: mescla outra revisão no diretório de trabalho remove, rm: remove os arquivos especificados no próximo commit renomear, mover, mv: renomear arquivos; equivalente a copiar + remover resolver: refazer mesclagens ou definir/visualizar o status da mesclagem de arquivos reverter: restaure os arquivos para o estado de check-out recente Inspecionando o histórico # anotar, culpar: mostra as informações do conjunto de alterações por linha para cada arquivo bisect: pesquisa de subdivisão de changesets cat: gera a revisão atual ou dada dos arquivos diff: repositório de diferenças (ou arquivos selecionados) grep: procura um padrão em arquivos e revisões especificados log, history: mostra o histórico de revisões de todo o repositório ou arquivos Trocando changesets com repositórios remotos # arquivo: cria um arquivo não versionado de uma revisão de repositório pacote: crie um arquivo de grupo de mudanças clone: faça uma cópia de um repositório existente export: despeja o cabeçalho e os diffs para um ou mais changesets graft: copia as alterações de outras ramificações para a ramificação atual incoming: mostra novos conjuntos de alterações encontrados na fonte importar, patch: importe um conjunto ordenado de patches init: cria um novo repositório no diretório fornecido saída: mostra changesets não encontrados no destino fase: define ou mostra o nome da fase atual pull: extrai as alterações da fonte especificada push: envia as alterações para o destino especificado recuperar: reverter uma transação interrompida rollback: reverter a última transação (PERIGOSO) (OBSOLETO) servir: inicia o servidor web autônomo unbundle: aplica um ou mais arquivos de grupo de mudanças Status: onde você está agora?</description>
    </item>
    
  </channel>
</rss>
