<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial liferay on </title>
    <link>https://www.wikiod.com/pt/docs/liferay/</link>
    <description>Recent content in tutorial liferay on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/liferay/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao liferay</title>
      <link>https://www.wikiod.com/pt/liferay/introducao-ao-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/introducao-ao-liferay/</guid>
      <description>Uma instalação básica para desenvolvimento e testes # A execução do Liferay CE mais recente é simples:
Acesse https://www.liferay.com/downloads. Escolha um pacote entre os listados. Para iniciantes, o pacote Tomcat é uma boa escolha. Clique em &amp;ldquo;Baixar&amp;rdquo;. Descompacte o pacote de download sempre que achar necessário. O diretório descompactado será o diretório LIFERAY_HOME. Para iniciar o Liferay, basta executar o script LIFERAY_HOME/tomcat-x.xx.xx/bin/startup.sh; somente em ambientes Windows execute o script LIFERAY_HOME\tomcat-x.xx.xx\bin\startup.bat. Por padrão, quando o Liferay estiver ativo, um navegador abrirá sua URL local (http://localhost:8080/).</description>
    </item>
    
    <item>
      <title>Ganchos no Liferay</title>
      <link>https://www.wikiod.com/pt/liferay/ganchos-no-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/ganchos-no-liferay/</guid>
      <description>Isso funciona com o Liferay Portal até a versão 6.2.
Gancho JSP # Hooks JSP são um plugin especial do liferay que permite modificar jsp-s do portlet principal, digamos que você queira modificar o portlet de login para mostrar Welcome in my custom login!.
A estrutura mínima para um Plugin Hook é a seguinte:
[project-name]-hook/ └── docroot/ ├── WEB-INF/ │ ├── src/ │ ├── lib/ │ ├── liferay-hook.xml │ ├── liferay-plugin-package.</description>
    </item>
    
    <item>
      <title>Crie um agendador de quartzo no liferay</title>
      <link>https://www.wikiod.com/pt/liferay/crie-um-agendador-de-quartzo-no-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/crie-um-agendador-de-quartzo-no-liferay/</guid>
      <description>Um agendador serve para executar tarefas em segundo plano em determinados intervalos definidos.
Conforme portlet Liferay DTD
&amp;lt;!- O elemento scheduler-entry contém os dados declarativos de um agendador. -&amp;gt;
!ELEMENT entrada do agendador (descrição do agendador?, agendador-evento-ouvinte-classe, gatilho)
&amp;lt;!- O valor scheduler-description descreve um planejador. -&amp;gt;
!ELEMENTO descrição do agendador (#PCDATA)
&amp;lt;!- O valor scheduler-event-listener-class deve ser uma classe que implementa com.liferay.portal.kernel.messaging.MessageListener. Esta classe receberá uma mensagem em um intervalo regular especificado pelo elemento disparador.</description>
    </item>
    
    <item>
      <title>Configurar o gerenciador de tags do Google (GTM) no liferay</title>
      <link>https://www.wikiod.com/pt/liferay/configurar-o-gerenciador-de-tags-do-google-gtm-no-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/configurar-o-gerenciador-de-tags-do-google-gtm-no-liferay/</guid>
      <description>Esta documentação não é específica do liferay, mas pode ser usada com referência a qualquer aplicativo da web.
Liferay fornece o Google Analytics (referido como GA à frente) por padrão, depois de configurar o ID do Analytics GA-##### nas configurações do site. Mas isso fornece funcionalidade limitada, permitindo apenas rastrear visualizações de página (título da página e URL). expandindo-o ainda mais, podemos incorporar o script GA diretamente no tema do site para acionar os eventos necessários ou usar o GTM.</description>
    </item>
    
    <item>
      <title>Como implantar um plug-in</title>
      <link>https://www.wikiod.com/pt/liferay/como-implantar-um-plug-in/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/como-implantar-um-plug-in/</guid>
      <description>Implantando no Glassfish # Então, você cria primeiro um arquivo .war, digamos um portlet de nome &amp;lt;YOUR PLUGIN&amp;gt;.war. Você quer executá-lo em um domínio glassfish no portal Liferay.
Passos para o sucesso:
Navegue até Painel de Controle -&amp;gt; Instalação de Plugins no Liferay Clique em Instalar novos portlets Clique em Configuração Preencha para Deploy Directory um novo local para implantação, digamos &amp;lt;YOUR DOMAIN&amp;gt;/autodeploy2 Verifique se na próxima linha o destino é &amp;lt;YOUR DOMAIN&amp;gt;/autodeploy (é o diretório de implantação padrão do Glassfish) Clique em Salvar Agora a implantação será feita copiando e colando os arquivos para esse novo diretório &amp;lt;YOUR DOMAIN&amp;gt;/autodeploy2.</description>
    </item>
    
    <item>
      <title>Configurando SSL</title>
      <link>https://www.wikiod.com/pt/liferay/configurando-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/configurando-ssl/</guid>
      <description>Certifique-se de ter um certificado SSL válido fornecido por terceiros. Você também pode usar um certificado autoassinado, mas apenas para dev. Letsencrypt fornece certificados gratuitos que podem ser usados ​​em produção&amp;hellip;.
Use keytool para importar o certificado para o keystorechain de java.
Como habilitar SSL no Tomcat e Liferay # Certifique-se de que seu arquivo de configurações do tomcat, server.xml tenha esta linha:
&amp;lt;Connector port=&amp;quot;8443&amp;quot; protocol=&amp;quot;org.apache.coyote.http11.Http11Protocol&amp;quot; maxHttpHeaderSize=&amp;quot;8192&amp;quot; SSLEnabled=&amp;quot;true&amp;quot; maxThreads=&amp;quot;150&amp;quot; minSpareThreads=&amp;quot;25&amp;quot; maxSpareThreads=&amp;quot;75&amp;quot; enableLookups=&amp;quot;false&amp;quot; disableUploadTimeout=&amp;quot;true&amp;quot; acceptCount=&amp;quot;100&amp;quot; scheme=&amp;quot;https&amp;quot; secure=&amp;quot;true&amp;quot; clientAuth=&amp;quot;false&amp;quot; useBodyEncodingForURI=&amp;quot;true&amp;quot; sslEnabledProtocols=&amp;quot;TLSv1.</description>
    </item>
    
    <item>
      <title>Depure o servidor liferay remoto via Eclipse</title>
      <link>https://www.wikiod.com/pt/liferay/depure-o-servidor-liferay-remoto-via-eclipse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/depure-o-servidor-liferay-remoto-via-eclipse/</guid>
      <description>Depure o servidor liferay remoto via Eclipse (sem o plug-in Eclipse do conector Liferay Remote IDE) # Para depurar uma instância de servidor, inicie no modo de depuração. Para isso, configure estes parâmetros para serem passados ​​ao servidor:
-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n para setenv.bat(Windows) ou setenv.sh(Unix)
Eles inicializam o servidor no modo de depuração e ouvem solicitações de depuração na porta especificada. Inicie o servidor e poste o config.
No Eclipse, a configuração de depuração remota precisa ser configurada para anexar a fonte ao servidor remoto.</description>
    </item>
    
    <item>
      <title>Usando o serviço Web Restful no Liferay</title>
      <link>https://www.wikiod.com/pt/liferay/usando-o-servico-web-restful-no-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/usando-o-servico-web-restful-no-liferay/</guid>
      <description>Consuma o serviço Liferay JSON para solicitações GET # Liferay expõe muitos serviços padrão e personalizados disponíveis para outros sistemas via JSON. Para explorar serviços em uma determinada instância do liferay, use uma determinada URL - Uma instância local neste caso:
http://localhost:8080/api/jsonws/ Selecione o serviço necessário, consuma o serviço com a sintaxe e os parâmetros fornecidos:
/user/get-user-by-email-address Use companyId e emailAddress para recuperar o usuário com os tipos de dados esperados, bem como possíveis exceções a serem tratadas pelo consumidor.</description>
    </item>
    
    <item>
      <title>Comunicação entre portlets</title>
      <link>https://www.wikiod.com/pt/liferay/comunicacao-entre-portlets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/comunicacao-entre-portlets/</guid>
      <description>Este manual contém as várias maneiras pelas quais o portlet pode coordenar ou comunicar entre si e os vários cenários para os quais uma abordagem específica é usada.
Referências:
Parâmetro de renderização pública [especificações JSR 286][2] [Sessão de portlet][3] [2]: https://www.google.co.in/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwiMjJudz4nRAhUE7hoKHVN1C9oQFggcMAA&amp;amp;url=https%3A%2F%2Fwiki.jasig.org% 2Fdownload%2Fattachments%2F25002428%2Fportlet-2-spec.pdf&amp;amp;usg=AFQjCNEDhqnvuPOfFdRgn8KV1fq_RRyjvQ [3]: http://proliferay.com/liferay-portlet-session-attribute/
Usando o parâmetro de renderização público # Essa abordagem foi introduzida no JSR 286.
No JSR 168, os parâmetros de renderização definidos em processAction de um portlet estavam disponíveis apenas nesse portlet.</description>
    </item>
    
    <item>
      <title>Usando consulta SQL dinâmica e personalizada no Liferay</title>
      <link>https://www.wikiod.com/pt/liferay/usando-consulta-sql-dinamica-e-personalizada-no-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/liferay/usando-consulta-sql-dinamica-e-personalizada-no-liferay/</guid>
      <description>Existem cenários ao lidar com a camada de serviço no liferay, quando precisamos consultar o banco de dados com muitas cláusulas ou lidar com várias tabelas. Nesses casos, usamos um dos seguintes:
Consulta dinâmica (wrapper na API de critérios de hibernação)
Consultas SQL personalizadas
Referências:
SQL personalizado Consulta dinâmica Usando consulta dinâmica no Liferay # Para a maioria dos cenários envolvendo entidades da camada de serviço, podemos nos contentar com as chamadas de serviço padrão, também com alguma ajuda dos localizadores.</description>
    </item>
    
  </channel>
</rss>
