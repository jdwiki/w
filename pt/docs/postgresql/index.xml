<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial postgresql on </title>
    <link>https://www.wikiod.com/pt/docs/postgresql/</link>
    <description>Recent content in tutorial postgresql on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao Postgresql</title>
      <link>https://www.wikiod.com/pt/postgresql/introducao-ao-postgresql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/introducao-ao-postgresql/</guid>
      <description>Instalando o PostgreSQL no Windows # Embora seja uma boa prática usar um sistema operacional baseado em Unix (ex. Linux ou BSD) como servidor de produção, você pode instalar facilmente o PostgreSQL no Windows (espero que apenas como servidor de desenvolvimento).
Baixe os binários de instalação do Windows do EnterpriseDB: http://www.enterprisedb.com/products-services-training/pgdownload Esta é uma empresa terceirizada iniciada por colaboradores principais do projeto PostgreSQL que otimizaram os binários para Windows.
Selecione a versão estável (não-Beta) mais recente (9.</description>
    </item>
    
    <item>
      <title>EXTENSION dblink e postgres_fdw</title>
      <link>https://www.wikiod.com/pt/postgresql/extension-dblink-e-postgres_fdw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/extension-dblink-e-postgres_fdw/</guid>
      <description>Sintaxe # dblink (&amp;lsquo;dbname = name_db_distance port = PortOfDB host = HostOfDB user = usernameDB password = passwordDB&amp;rsquo;, &amp;lsquo;MINHA PERGUNTA&amp;rsquo;)
dbname = nome do banco de dados
porta = Porta do banco de dados
host = Host do banco de dados
usuário = nome de usuário do banco de dados
senha = senha do banco de dados&amp;rsquo;,
MY QUESRY = pode ser qualquer operação que eu queira fazer SELECT, INSERT, &amp;hellip;</description>
    </item>
    
    <item>
      <title>Suporte JSON</title>
      <link>https://www.wikiod.com/pt/postgresql/suporte-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/suporte-json/</guid>
      <description>JSON - Java Script Object Notation, Postgresql suporta tipo de dados JSON desde a versão 9.2. Existem algumas funções e operadores predefinidos para acessar os dados JSON.
O operador -&amp;gt; retorna a chave da coluna JSON. O operador -&amp;gt;&amp;gt; retorna o valor da Coluna JSON.
Usando operadores JSONb # Criando um banco de dados e uma tabela # DROP DATABASE IF EXISTS books_db; CREATE DATABASE books_db WITH ENCODING=&#39;UTF8&#39; TEMPLATE template0; DROP TABLE IF EXISTS books; CREATE TABLE books ( id SERIAL PRIMARY KEY, client TEXT NOT NULL, data JSONb NOT NULL ); Preenchendo o banco de dados # INSERT INTO books(client, data) values ( &#39;Joe&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;Siddhartha&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Herman&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Hesse&amp;quot; } }&#39; ),( &#39;Jenny&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;Dharma Bums&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Jack&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Kerouac&amp;quot; } }&#39; ),( &#39;Jenny&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;100 años de soledad&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Gabo&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Marquéz&amp;quot; } }&#39; ); Vamos ver tudo dentro dos livros de mesa:</description>
    </item>
    
    <item>
      <title>Conecte-se ao PostgreSQL a partir do Java</title>
      <link>https://www.wikiod.com/pt/postgresql/conecte-se-ao-postgresql-a-partir-do-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/conecte-se-ao-postgresql-a-partir-do-java/</guid>
      <description>A API para usar um banco de dados relacional de Java é JDBC.
Essa API é implementada por um driver JDBC.
Para usá-lo, coloque o arquivo JAR com o driver no caminho de classe JAVA.
Esta documentação mostra exemplos de como usar o driver JDBC para conectar-se a um banco de dados.
URL JDBC
A URL JDBC pode assumir um destes formatos:
jdbc:postgresql://host[:port]/[database][parameters] host tem como padrão localhost, port para 5432.</description>
    </item>
    
    <item>
      <title>Backup e restauração</title>
      <link>https://www.wikiod.com/pt/postgresql/backup-e-restauracao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/backup-e-restauracao/</guid>
      <description>Fazendo backup do sistema de arquivos ao invés de usar pg_dumpall e pg_dump # É muito importante que, se você usar isso, chame a função pg_start_backup() antes e depois a função pg_stop_backup(). Fazer backups do sistema de arquivos não é seguro; mesmo um instantâneo ZFS ou FreeBSD do sistema de arquivos com backup sem essas chamadas de função colocará o banco de dados no modo de recuperação e poderá perder transações.</description>
    </item>
    
    <item>
      <title>Gerenciamento de funções</title>
      <link>https://www.wikiod.com/pt/postgresql/gerenciamento-de-funcoes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/gerenciamento-de-funcoes/</guid>
      <description>Sintaxe # CREATE ROLE nome [ [ WITH ] opção [ ... ] ]
CREATE USER name [ [ WITH ] opção [ ... ] ]
onde a opção pode ser: SUPERUSER | NOSUPERUSER | CREATEDB | NOCREATEDB | CREATEROLE | NOCREATEROLE | CREATEUSER | NOCREATEUSER | INHERIT | NOINHERIT | LOGIN | NOLOGIN | CONNECTION LIMIT connlimit | [ ENCRYPTED | UNENCRYPTED ] PASSWORD &#39;password&#39; | VALID UNTIL &#39;timestamp&#39; | IN ROLE role_name [, .</description>
    </item>
    
    <item>
      <title>Alta disponibilidade do PostgreSQL</title>
      <link>https://www.wikiod.com/pt/postgresql/alta-disponibilidade-do-postgresql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/alta-disponibilidade-do-postgresql/</guid>
      <description>Replicação no PostgreSQL # Configurando o Servidor Principal
Requirements:
Replication User for replication activities Directory to store the WAL archives Create Replication user
createuser -U postgres replication -P -c 5 --replication
+ option -P will prompt you for new password + option -c is for maximum connections. 5 connections are enough for replication + -replication will grant replication privileges to the user Create a archive directory in data directory
mkdir $PGDATA/archive</description>
    </item>
    
    <item>
      <title>Dicas e truques do Postgres</title>
      <link>https://www.wikiod.com/pt/postgresql/dicas-e-truques-do-postgres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/dicas-e-truques-do-postgres/</guid>
      <description>Alternativa DATEADD no Postgres # SELECT CURRENT_DATE + &#39;1 dia&#39;::INTERVAL SELECT &#39;1999-12-11&#39;::TIMESTAMP + &#39;19 dias&#39;::INTERVAL SELECT &#39;1 mês&#39;::INTERVAL + &#39;1 mês 3 dias&#39;::INTERVAL Valores separados por vírgula de uma coluna # SELECT string_agg(&amp;lt;TABLE_NAME&amp;gt;.&amp;lt;COLUMN_NAME&amp;gt;, &#39;,&#39;) FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt; T Excluir registros duplicados da tabela postgres # DELETE FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;Table_NAME&amp;gt; WHERE ctid NOT IN ( SELECT MAX(ctid) FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt; GROUP BY &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt;.* ) ; Atualize a consulta com a alternativa de junção entre duas tabelas, pois o Postresql não suporta junção na consulta de atualização.</description>
    </item>
    
    <item>
      <title>Programando com PLpgSQL</title>
      <link>https://www.wikiod.com/pt/postgresql/programando-com-plpgsql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/programando-com-plpgsql/</guid>
      <description>PL/pgSQL é a linguagem de programação interna do PostgreSQL para escrever funções que são executadas dentro do próprio banco de dados, conhecidas como procedimentos armazenados em outros bancos de dados. Ele estende o SQL com loops, condicionais e tipos de retorno. Embora sua sintaxe possa ser estranha para muitos desenvolvedores, é muito mais rápida do que qualquer coisa em execução no servidor de aplicativos porque a sobrecarga de conexão com o banco de dados é eliminada, o que é particularmente útil quando você precisa executar uma consulta, aguardar o resultado, e envie outra consulta.</description>
    </item>
    
    <item>
      <title>Acessando dados programaticamente</title>
      <link>https://www.wikiod.com/pt/postgresql/acessando-dados-programaticamente/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/postgresql/acessando-dados-programaticamente/</guid>
      <description>Acessando o PostgreSQL com a C-API # A C-API é a maneira mais poderosa de acessar o PostgreSQL e é surpreendentemente confortável.
Compilação e ligação # Durante a compilação, você deve adicionar o diretório de inclusão do PostgreSQL, que pode ser encontrado com pg_config --includedir, ao caminho de inclusão. Você deve vincular com a biblioteca compartilhada do cliente PostgreSQL (libpq.so no UNIX, libpq.dll no Windows). Esta biblioteca está no diretório de bibliotecas do PostgreSQL, que pode ser encontrado com pg_config --libdir.</description>
    </item>
    
  </channel>
</rss>
