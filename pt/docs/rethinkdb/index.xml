<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial rethinkdb on </title>
    <link>https://www.wikiod.com/pt/docs/rethinkdb/</link>
    <description>Recent content in Tutorial rethinkdb on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/rethinkdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao rethinkdb</title>
      <link>https://www.wikiod.com/pt/rethinkdb/introducao-ao-rethinkdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rethinkdb/introducao-ao-rethinkdb/</guid>
      <description>Instalação no Windows # Baixando # Pré-requisitos: Fornecemos binários nativos de 64 bits para Windows 7 e superior. É necessária uma versão de 64 bits do Windows.
Baixe o arquivo ZIP e descompacte-o em um diretório de sua escolha.
A versão Windows do RethinkDB é uma adição recente e ainda não recebeu tantos ajustes quanto as versões Linux e OS X. Por favor, reporte quaisquer problemas de desempenho no GitHub.</description>
    </item>
    
    <item>
      <title>Usando RethinkDB com Docker</title>
      <link>https://www.wikiod.com/pt/rethinkdb/usando-rethinkdb-com-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rethinkdb/usando-rethinkdb-com-docker/</guid>
      <description>Uso básico # Por padrão, o RethinkDB vincula todos os serviços a 127.0.0.1. Portanto, este exemplo a seguir persistirá os dados para o host_data_path na máquina host do contêiner e estará disponível para 127.0.0.1 nas portas padrão.
Serviço Bandeira Porta padrão Motorista --driver-port 28015 Agrupamento --porta do cluster 29015 HTTP WebUI --http-port 8080 docker run -d -v host_data_path:/data rethinkdb Para abrir o driver e a porta do cluster para o tráfego externo, você deve especificar o endereço das interfaces locais ou fornecer all.</description>
    </item>
    
    <item>
      <title>usando thinky.io com RethinkDB</title>
      <link>https://www.wikiod.com/pt/rethinkdb/usando-thinkyio-com-rethinkdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rethinkdb/usando-thinkyio-com-rethinkdb/</guid>
      <description>Iniciando o thinky em node.js # thinky é um ORM node.js leve para RethinkDB.
Primeiro você precisa ter o RethinkDB rodando em seu servidor.
Em seguida, instale o pacote thinky.io npm em seu projeto.
npm install --save thinky Agora importe o thinky para o seu arquivo de modelo.
const thinky = require(&#39;thinky)(); const type = thinky.type Em seguida, crie um modelo.
const User = thinky.createModel(&#39;User&#39; { email:type.string(), password: type.string() }); Agora você pode criar e salvar um usuário.</description>
    </item>
    
    <item>
      <title>Introdução ao Node</title>
      <link>https://www.wikiod.com/pt/rethinkdb/introducao-ao-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/rethinkdb/introducao-ao-node/</guid>
      <description>Instalando o pacote RethinkDB do NPM # npm install -g rethinkdb Fazendo uma conexão com o RethinkDB # const r = require(&amp;ldquo;repensar&amp;rdquo;);
r.connect({host: &#39;localhost&#39;, port: 28015}, (conn) =&amp;gt; console.log(conn)) // Or as a promise let rdb_conn; r.connect({host: &#39;localhost&#39;, port: 28015}).then((conn) =&amp;gt; { rdb_conn = conn; }).then(() =&amp;gt; { // Continue to use rdb_conn }); Listando todos os bancos de dados # r.connect({host: &#39;localhost&#39;, port: 28015}) .then((conn) =&amp;gt; { return r.dbList().run(conn); }).</description>
    </item>
    
  </channel>
</rss>
