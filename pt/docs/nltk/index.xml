<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial nltk on </title>
    <link>https://www.wikiod.com/pt/docs/nltk/</link>
    <description>Recent content in Tutorial nltk on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/nltk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com nltk</title>
      <link>https://www.wikiod.com/pt/nltk/comecando-com-nltk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/nltk/comecando-com-nltk/</guid>
      <description>Função de download do NLTK # Você pode instalar o NLTK sobre o pip (pip install nltk). Depois de instalado, muitos componentes não estarão presentes e você não poderá usar alguns dos recursos do NLTK.
No shell do Python, execute a função ntlk.download() para selecionar quais pacotes adicionais você deseja instalar usando a interface do usuário. Alternativamente, você pode usar python -m nltk.downloader [package_name].
Para baixar todos os pacotes disponíveis.</description>
    </item>
    
    <item>
      <title>Distribuições de frequência</title>
      <link>https://www.wikiod.com/pt/nltk/distribuicoes-de-frequencia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/nltk/distribuicoes-de-frequencia/</guid>
      <description>Este tópico se concentra no uso da classe nltk.FreqDist().
Distribuição de frequência para contar as categorias lexicais mais comuns # O NLTK fornece a classe FreqDist que nos permite calcular facilmente uma distribuição de frequência com uma lista como entrada.
Aqui estamos usando uma lista de parte das tags de fala (tags POS) para ver quais categorias lexicais são mais usadas no corpus marrom.
import nltk brown_tagged = nltk.corpus.brown.tagged_words() pos_tags = [pos_tag for _,pos_tag in brown_tagged] fd = nltk.</description>
    </item>
    
    <item>
      <title>Parar palavras</title>
      <link>https://www.wikiod.com/pt/nltk/parar-palavras/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/nltk/parar-palavras/</guid>
      <description>Palavras de parada são as palavras que são mais usadas como enchimentos e dificilmente têm algum significado útil. Devemos evitar que essas palavras ocupem espaço no banco de dados ou ocupem um valioso tempo de processamento. Podemos facilmente fazer uma lista de palavras a serem usadas como palavras de parada e, em seguida, filtrar essas palavras dos dados que queremos processar.
Filtrando palavras de parada # O NLTK tem, por padrão, um monte de palavras que considera palavras de parada.</description>
    </item>
    
    <item>
      <title>Marcação de PDV</title>
      <link>https://www.wikiod.com/pt/nltk/marcacao-de-pdv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/nltk/marcacao-de-pdv/</guid>
      <description>A marcação de parte da fala cria tuplas de palavras e partes da fala. Ele rotula palavras em uma frase como substantivos, adjetivos, verbos, etc. Também pode rotular por tempo e muito mais. Essas tags significam o que significavam em seus dados de treinamento originais. Você é livre para inventar suas próprias tags em seus dados de treinamento, desde que seja consistente em seu uso. Os dados de treinamento geralmente exigem muito trabalho para serem criados, portanto, normalmente é usado um corpus pré-existente.</description>
    </item>
    
    <item>
      <title>Tokenização</title>
      <link>https://www.wikiod.com/pt/nltk/tokenizacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/nltk/tokenizacao/</guid>
      <description>Refere-se à divisão de frases e palavras do corpo do texto em tokens de frase ou tokens de palavras, respectivamente. É uma parte essencial da PNL, pois muitos módulos funcionam melhor (ou apenas) com tags. Por exemplo, pos_tag precisa de tags como entrada e não das palavras, para marcá-las por partes do discurso.
Tokenização de frase e palavra do parágrafo fornecido pelo usuário # from nltk.tokenize import sent_tokenize, word_tokenize example_text = input(&amp;quot;Enter the text: &amp;quot;) print(&amp;quot;Sentence Tokens:&amp;quot;) print(sent_tokenize(example_text)) print(&amp;quot;Word Tokens:&amp;quot;) print(word_tokenize(example_text)) </description>
    </item>
    
    <item>
      <title>Derivação</title>
      <link>https://www.wikiod.com/pt/nltk/derivacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/nltk/derivacao/</guid>
      <description>Stemming é uma espécie de método de normalização. Muitas variações de palavras carregam o mesmo significado, exceto quando o tempo está envolvido. A razão pela qual derivamos é encurtar a pesquisa e normalizar as frases. Basicamente, é encontrar a raiz das palavras depois de remover o verbo e a parte do tempo dela. Um dos algoritmos de lematização mais populares é o lematizador de Porter, que existe desde 1979.
Votos de porteiro # Importe o PorterStemmer e inicialize</description>
    </item>
    
  </channel>
</rss>
