<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial asp.net-core-mvc on </title>
    <link>https://www.wikiod.com/pt/docs/asp-dotnet-core-mvc/</link>
    <description>Recent content in Tutorial asp.net-core-mvc on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/asp-dotnet-core-mvc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com asp.net-core-mvc</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-core-mvc/comecando-com-aspnet-core-mvc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-core-mvc/comecando-com-aspnet-core-mvc/</guid>
      <description>Adicionar middleware MVC # Se você criou um projeto vazio ou ainda não tem o mvc configurado em sua aplicação, você pode adicionar dependência:
&amp;quot;Microsoft.AspNetCore.Mvc&amp;quot;: &amp;quot;1.0.1&amp;quot;
Para o seu arquivo project.json em &amp;quot;dependencies&amp;quot;.
E registre o middleware MVC em sua classe Startup:
public void ConfigureServices(IServiceCollection services) { ... services.AddMvc(); } Observe que temos services.AddMvc() e services.AddMvcCore(). Se você está começando com o asp.net core, ou quer do jeito que está, você deve continuar com services.</description>
    </item>
    
    <item>
      <title>Configure e instale o .Net Core MVC com o código do Visual studio e o início rápido do .net core mvc hello world.</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-core-mvc/configure-e-instale-o-net-core-mvc-com-o-codigo-do-visual-studio-e-o-inicio-rapido-do-net-core-mvc-hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-core-mvc/configure-e-instale-o-net-core-mvc-com-o-codigo-do-visual-studio-e-o-inicio-rapido-do-net-core-mvc-hello-world/</guid>
      <description>Este artigo dá ideias sobre como configurar e instalar o núcleo Asp.Net com código do Visual Studio. Também crie um modelo básico de MVC e depuração.
Etapas envolvidas abaixo&amp;hellip;
Etapa 1 - instalando o código do Visual studio.
Etapa 2 - Configurando .Net core e C#.
Passo 3 - Crie um modelo MVC básico.
Etapa 4 - Execute e depure o aplicativo.
Este artigo está prestes a configurar do zero com código aberto do Visual Studio e criar e depurar aplicativos .</description>
    </item>
    
    <item>
      <title>Alterar local de visualização padrão</title>
      <link>https://www.wikiod.com/pt/asp-dotnet-core-mvc/alterar-local-de-visualizacao-padrao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/asp-dotnet-core-mvc/alterar-local-de-visualizacao-padrao/</guid>
      <description>No ASP.NET MVC, as visualizações são colocadas por padrão na pasta Views. Às vezes, você deseja alterar esses locais e armazenar as visualizações em outro lugar.
Criar um expansor de local de visualização # Para poder alterar a localização da visualização, você precisa implementar o IViewLocationExpander. O método ExpandViewLocations retorna um IEnumerable&amp;lt;string&amp;gt; contendo os diferentes locais onde pesquisar, com
public class MyViewLocationExpander : IViewLocationExpander { public IEnumerable&amp;lt;string&amp;gt; ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable&amp;lt;string&amp;gt; viewLocations) { yield return &amp;quot;/CustomViewFolder/{1}/{0}.</description>
    </item>
    
  </channel>
</rss>
