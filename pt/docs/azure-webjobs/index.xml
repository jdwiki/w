<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial azure-webjobs on </title>
    <link>https://www.wikiod.com/pt/docs/azure-webjobs/</link>
    <description>Recent content in Tutorial azure-webjobs on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/azure-webjobs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao azure-webjobs</title>
      <link>https://www.wikiod.com/pt/azure-webjobs/introducao-ao-azure-webjobs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/azure-webjobs/introducao-ao-azure-webjobs/</guid>
      <description>Criando um WebJob no Portal do Azure # Na folha Web App do Azure Portal, clique em Todas as configurações &amp;gt; WebJobs para mostrar a folha WebJobs: Clique em Adicionar. A caixa de diálogo Adicionar WebJob é exibida. Em Nome, forneça um nome para o WebJob. O nome deve começar com uma letra ou um número e não pode conter nenhum caractere especial além de &amp;ldquo;-&amp;rdquo; e &amp;ldquo;_&amp;rdquo;. Na caixa Como executar, escolha sua opção preferida Contínuo ou Acionado (o acionador pode usar uma programação cron ou um WebHook).</description>
    </item>
    
    <item>
      <title>SDK de Webjobs do Azure</title>
      <link>https://www.wikiod.com/pt/azure-webjobs/sdk-de-webjobs-do-azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/azure-webjobs/sdk-de-webjobs-do-azure/</guid>
      <description>Acionadores por erros # O tratamento de erros é extremamente importante, podemos definir funções a serem acionadas quando ocorrer um erro de execução em uma de suas funções acionadas:
//Fires when 10 errors occur in the last 30 minutes (sliding) public static void ErrorMonitor([ErrorTrigger(&amp;quot;0:30:00&amp;quot;, 10)] TraceFilter filter) { // get the last 5 errors filter.GetDetailedMessage(10); } É especialmente útil para centralizar o tratamento de erros.
ErrorTrigger requer uma configuração adicional no JobHostConfiguration:</description>
    </item>
    
  </channel>
</rss>
