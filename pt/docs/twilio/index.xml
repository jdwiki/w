<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Twilio on </title>
    <link>https://www.wikiod.com/pt/docs/twilio/</link>
    <description>Recent content in Tutorial Twilio on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/twilio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao Twilio</title>
      <link>https://www.wikiod.com/pt/twilio/introducao-ao-twilio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twilio/introducao-ao-twilio/</guid>
      <description>Enviando uma mensagem SMS de um número dos EUA # Isto é como enviar uma mensagem de texto SMS de um número dos EUA usando o SDK Node.js do Twilio.
Primeiro você precisa instalar o cliente Node.js usando:
npm install twilio Então, você tem que criar uma conta no site deles.
Depois de ter uma conta, você precisará do SID da conta e do token de autenticação que podem ser encontrados no painel online.</description>
    </item>
    
    <item>
      <title>Enviar mensagens em Python</title>
      <link>https://www.wikiod.com/pt/twilio/enviar-mensagens-em-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twilio/enviar-mensagens-em-python/</guid>
      <description>Sintaxe # class twilio.rest.resources.Messages(*args, **kwargs) Parâmetros # Parâmetro Detalhes para (str) O número de telefone de destino. from_ (str) O número de telefone que envia esta mensagem (deve ser um número Twilio verificado) corpo (str) A mensagem que você deseja enviar, limitada a 160 caracteres. status_callback Um URL para o qual o Twilio POSTA quando sua mensagem for processada. application_sid (str) O lado de 34 caracteres do aplicativo que o Twilio deve usar para lidar com essa chamada telefônica.</description>
    </item>
    
    <item>
      <title>Como enviar um SMS com Ruby</title>
      <link>https://www.wikiod.com/pt/twilio/como-enviar-um-sms-com-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twilio/como-enviar-um-sms-com-ruby/</guid>
      <description>Usando o Twilio Gem # Isso pressupõe que você tenha uma conta twilio e comprou/reservou um número de telefone&amp;hellip;
Se você estiver usando o bundler, adicione a seguinte linha ao seu Gemfile para incluir twilio-ruby em seu projeto:
gem &#39;twilio-ruby&#39; caso contrário, digite gem install twilio-ruby na linha de comando. Você pode precisar de sudo se estiver usando o sistema Ruby e não ruby-env etc.
e o código
# Instantiate a Twilio REST client with your account SID and auth token, # which can be found on your dashboard.</description>
    </item>
    
    <item>
      <title>Como receber mensagens SMS com Ruby on Rails</title>
      <link>https://www.wikiod.com/pt/twilio/como-receber-mensagens-sms-com-ruby-on-rails/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twilio/como-receber-mensagens-sms-com-ruby-on-rails/</guid>
      <description>Usando o Twilio Gem # Supondo que você tenha uma conta Twilio e credenciais de API, adicione o seguinte ao seu Gemfile:
gem &#39;twilio-ruby&#39; Alternativamente, você pode gem install twilio-ruby.
Para que o Twilio envie um SMS de entrada para uma rota específica em seu aplicativo, você precisa configurar o URL de mensagens para o seu número de telefone. Feito isso, você precisa configurar uma rota em config/routes.rb:
TwilioSample::Application.routes.draw do resources :messages end Isso cria um conjunto de rotas RESTful (GET /messages para listar mensagens, POST /messages para criar uma mensagem, etc.</description>
    </item>
    
    <item>
      <title>Envie uma mensagem SMS usando Bash e cURL</title>
      <link>https://www.wikiod.com/pt/twilio/envie-uma-mensagem-sms-usando-bash-e-curl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twilio/envie-uma-mensagem-sms-usando-bash-e-curl/</guid>
      <description>Sintaxe # https://api.twilio.com/{Api version}/Accounts/{AccountSid}/Messages.json {body} Parâmetros # Parâmetro Detalhes {versão API} Data de versão da API. por exemplo. 01-04-2010 {Sid da conta} O Sid da Conta. Inicia AC {corpo} Corpo codificado por URL incluindo De, Para, Corpo e MessagingServiceSid Envie uma única mensagem usando um ID de remetente alfanumérico # Uma solicitação HTTP POST é enviada para um URL no formato: &amp;ldquo;https://api.twilio.com/2xxx-xx-xx/Accounts/[AccountSid]/Messages.json
O exemplo abaixo usa uma string alfanumérica como remetente.</description>
    </item>
    
    <item>
      <title>Enviando mensagens em Node.js</title>
      <link>https://www.wikiod.com/pt/twilio/enviando-mensagens-em-nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twilio/enviando-mensagens-em-nodejs/</guid>
      <description>O Twilio permite enviar e receber mensagens de texto com Node.js usando a biblioteca twilio-node para fazer chamadas. Este guia pressupõe que você já configurou uma conta no Twilio e possui o SID da sua conta e o token de autenticação do Twilio Console.
Parâmetros # Parâmetro Detalhes para Um número de telefone válido para receber a mensagem de Um número Twilio atribuído a você corpo O corpo da mensagem de texto limitado a 1600 caracteres StatusRetorno de chamada Um URL que o Twilio publica quando o status de uma mensagem muda maxPreço Definir o preço máximo de uma mensagem validadePeríodo O número de segundos que a mensagem permanecerá na fila do Twilio fornecer comentários Valor booleano, quando definido como true mediaUrl Um URL contendo um conteúdo gif, png ou jpeg que será enviado com a mensagem 2.</description>
    </item>
    
  </channel>
</rss>
