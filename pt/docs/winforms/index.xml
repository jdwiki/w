<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial winforms on </title>
    <link>https://www.wikiod.com/pt/docs/winforms/</link>
    <description>Recent content in tutorial winforms on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/winforms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com winforms</title>
      <link>https://www.wikiod.com/pt/winforms/comecando-com-winforms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/winforms/comecando-com-winforms/</guid>
      <description>Criando um aplicativo WinForms simples usando o Visual Studio # Este exemplo mostrará como criar um projeto de aplicativo Windows Forms no Visual Studio.
Criar projeto Windows Forms # Inicie o Visual Studio.
No menu Arquivo, aponte para Novo e selecione Projeto. A caixa de diálogo Novo projeto é exibida.
No painel Modelos Instalados, selecione &amp;ldquo;Visual C#&amp;rdquo; ou &amp;ldquo;Visual Basic&amp;rdquo;.
Acima do painel do meio, você pode selecionar a estrutura de destino na lista suspensa.</description>
    </item>
    
    <item>
      <title>Integração de ajuda</title>
      <link>https://www.wikiod.com/pt/winforms/integracao-de-ajuda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/winforms/integracao-de-ajuda/</guid>
      <description>Você pode fornecer ajuda para formulários e controles em aplicativos Windows Forms de diferentes maneiras. Você pode mostrar uma ajuda pop-up, abrir um arquivo CHM ou um URL. Você pode mostrar ajuda sensível ao contexto para formulários, controles e diálogos.
Componente HelpProvider # Você pode configurar um componente HelpProvider para fornecer ajuda sensível ao contexto para o componente. Desta forma, quando o usuário pressiona a tecla F1 ou o botão Ajuda do formulário, você pode automaticamente:</description>
    </item>
    
    <item>
      <title>Caixa de texto</title>
      <link>https://www.wikiod.com/pt/winforms/caixa-de-texto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/winforms/caixa-de-texto/</guid>
      <description>Autocompletar de uma coleção de strings # var source = new AutoCompleteStringCollection(); // Add your collection of strings. source.AddRange(new[] { &amp;quot;Guybrush Threepwood&amp;quot;, &amp;quot;LeChuck&amp;quot; }); var textBox = new TextBox { AutoCompleteCustomSource = source, AutoCompleteMode = AutoCompleteMode.SuggestAppend, AutoCompleteSource = AutoCompleteSource.CustomSource }; form.Controls.Add(textBox); Isso será autocompletado quando o usuário tentar digitar G ou L.
AutoCompleteMode.SuggestAppend exibirá uma lista de valores sugeridos e digitará automaticamente a primeira correspondência, somente Append e apenas Suggest também estão disponíveis.</description>
    </item>
    
    <item>
      <title>Ligação de dados</title>
      <link>https://www.wikiod.com/pt/winforms/ligacao-de-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/winforms/ligacao-de-dados/</guid>
      <description>Parâmetros # Argumento Descrição propriedadeName O nome da propriedade de controle a ser associada. dataSource Um objeto que representa a fonte de dados. dadosMembro A propriedade ou lista à qual se associar. formataçãoAtivado Determina se os dados exibidos devem ser formatados. updateMode A fonte de dados é atualizada quando a propriedade de controle é validada (padrão) ou imediatamente quando a propriedade é alterada nullValue Quando a fonte de dados tem esse valor, a propriedade vinculada é definida como DBNull.</description>
    </item>
    
    <item>
      <title>Mostrando um formulário</title>
      <link>https://www.wikiod.com/pt/winforms/mostrando-um-formulario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/winforms/mostrando-um-formulario/</guid>
      <description>Este tópico explica como o mecanismo WinForms funciona para exibir formulários e como você controla seus tempos de vida.
Fechando um formulário modal # Quando um formulário é mostrado usando o método ShowDialog, é necessário definir a propriedade DialogResult do formulário para fechar o formulário. Essa propriedade pode ser definida usando o enum que também é chamado de DialogResult.
Para fechar um formulário, você só precisa definir a propriedade DialogResult do formulário (para qualquer valor de DialogResult.</description>
    </item>
    
    <item>
      <title>Controles básicos</title>
      <link>https://www.wikiod.com/pt/winforms/controles-basicos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/winforms/controles-basicos/</guid>
      <description>Botão # Os botões são um dos controles mais simples e usados ​​principalmente para executar algum código quando o usuário quiser.
Aqui temos um caso bem simples, mostrar uma caixa de mensagem quando um botão é clicado. Adicionamos um botão a um formulário, nomeamos como cmdShowMessage conforme usado no código para identificar o objeto e definimos o texto dos botões para Mostrar mensagem.
Só precisamos clicar duas vezes no botão no designer visual e o Visual Studio gerará o código para o evento de clique.</description>
    </item>
    
    <item>
      <title>Herdar controles</title>
      <link>https://www.wikiod.com/pt/winforms/herdar-controles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/winforms/herdar-controles/</guid>
      <description>Os controles são derivados exatamente da mesma maneira que outras classes. A única coisa a ter cuidado é sobrescrever eventos: geralmente é aconselhável certificar-se de chamar o manipulador de eventos base após o seu. Minha própria regra prática: em caso de dúvida, ligue para o evento base.
Configurações de todo o aplicativo # Uma leitura rápida da maioria dos sites de desenvolvedores revelará que o WinForms é considerado inferior ao WPF.</description>
    </item>
    
  </channel>
</rss>
