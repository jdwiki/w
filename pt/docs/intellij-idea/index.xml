<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial intellij-idea on </title>
    <link>https://www.wikiod.com/pt/docs/intellij-idea/</link>
    <description>Recent content in Tutorial intellij-idea on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/intellij-idea/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao intellij-idea</title>
      <link>https://www.wikiod.com/pt/intellij-idea/introducao-ao-intellij-idea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/introducao-ao-intellij-idea/</guid>
      <description>Olá Mundo! # Isso vai te ensinar como fazer seu primeiro projeto usando o IDEA.
Inicie o IDEA e clique em Create New Project na tela de inicialização: Clique em Next na próxima tela. Estamos criando um projeto Java simples, então não precisamos de complementos ou extras para este projeto Use a próxima tela para criar o projeto de modelo Java Hello World: Por fim, nomeie seu projeto e selecione um local no disco e clique em Finish: Você deve terminar com uma janela parecida com esta: Neste ponto, o projeto está pronto para ser executado, basta clicar no botão Executar ou ir para Executar -&amp;gt; Executar &#39;Principal&#39; E pronto!</description>
    </item>
    
    <item>
      <title>Como instalar plug-ins</title>
      <link>https://www.wikiod.com/pt/intellij-idea/como-instalar-plug-ins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/como-instalar-plug-ins/</guid>
      <description>Os plugins nos ajudam a fazer as coisas mais facilmente. O Intellij disponibiliza uma vasta gama de plugins para várias tecnologias/linguagens. Existem três maneiras de instalar o plugin no Intellij.
Para baixar e instalar um plugin de repositório # 1. Go to File --&amp;gt; Settings (e.g. Ctrl+Alt+S ). 2. In the left-hand pane, select Plugins. 3.On the Plugins window, click &amp;quot;Install JetBrains plugin&amp;quot; or the &amp;quot;Browse repositories button&amp;quot;. Para instalar um plugin do disco # 1.</description>
    </item>
    
    <item>
      <title>IdeaVim</title>
      <link>https://www.wikiod.com/pt/intellij-idea/ideavim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/ideavim/</guid>
      <description>IdeaVim é um plugin para produtos IDEA que visa fornecer funcionalidade Vim em visualizações de editor
Mostrando números de linha # A partir do IntelliJ IDEA versão 2016.2 e IdeaVim versão 0.46, a opção nativa do IntelliJ para mostrar números de linha é ineficaz. Ao clicar em Mostrar números de linha, os números de linha aparecem e desaparecem imediatamente.
Este problema é causado por um bug no plugin IdeaVim, que pode ser resolvido usando o comando Vim para mostrar números de linha:</description>
    </item>
    
    <item>
      <title>Atalhos úteis</title>
      <link>https://www.wikiod.com/pt/intellij-idea/atalhos-uteis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/atalhos-uteis/</guid>
      <description>Navegação básica # Vá para o editor (da janela de ferramentas) # Esc
Mudando o foco para a janela de ferramentas correspondente # Windows: Alt + &amp;lt;número da janela da ferramenta&amp;gt; # OS X / macOS: Cmd + &amp;lt;número da janela da ferramenta&amp;gt; # Por exemplo, mudando o foco para a janela do projeto # Windows: Alt + 1 # OS X / macOS: Cmd + 1 # pop-up de arquivos recentes # Windows: Ctrl + E # OS X / macOS: Cmd + E # Localizar ação # Windows: Ctrl + Shift + A # OS X / macOS: Cmd + Shift + A # Navegar para # Arquivo : # Windows: Ctrl + Shift + N # OS X / macOS: Cmd + Shift + N # Classe : # Windows: Ctrl + N # OS X / macOS: Cmd + N # Símbolo (classe/método/variável/nome da constante): # Windows: Ctrl + Alt + Shift + N # OS X / macOS: Cmd + Option + Shift + N # Note that you can use class name to narrow down the method/variable/constant search, for example to find symbol usersCollection in class UserDAO type:</description>
    </item>
    
    <item>
      <title>Funcionalidades pouco conhecidas</title>
      <link>https://www.wikiod.com/pt/intellij-idea/funcionalidades-pouco-conhecidas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/funcionalidades-pouco-conhecidas/</guid>
      <description>Visualização rápida # [Verifique o vídeo de screencast no YouTube sobre esse recurso](https://youtu.be/D6YlYZVprCw) O IntelliJ fornece um recurso de visualização rápida chamado Viewing Definition. Usar este recurso permite que um usuário veja rapidamente o conteúdo de um método/classe sem navegar na própria classe
OS X - (⌘+Y) ou (⌥+Espaço) Unix / Windows - Ctrl+Shift+I Exemplo: Olhando para Arrays.copyOfRange(): Verificando se você selecionou a classe certa em Search:
Ou uma rápida olhada em alguns arquivos de projeto:</description>
    </item>
    
    <item>
      <title>Console e inspeções do Hibernate HQL</title>
      <link>https://www.wikiod.com/pt/intellij-idea/console-e-inspecoes-do-hibernate-hql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/console-e-inspecoes-do-hibernate-hql/</guid>
      <description>O Intellij IDEA suporta o preenchimento automático de HQL e a execução de consultas HQL no console. É assim que você habilita esse suporte.
Configurando inspeções HQL # Vá para Arquivo -&amp;gt; Estrutura do Projeto -&amp;gt; Módulos. Adicione um novo módulo Hibernate. Clique com o botão direito do mouse no módulo desejado -&amp;gt; Adicionar -&amp;gt; Hibernar. Selecione a opção de configuração Hibernate recém-criada e clique no sinal (+) no painel direito para criar o arquivo hibernate.</description>
    </item>
    
    <item>
      <title>Modelos dinâmicos</title>
      <link>https://www.wikiod.com/pt/intellij-idea/modelos-dinamicos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/modelos-dinamicos/</guid>
      <description>Adicione um método de teste facilmente # @org.junit.Test public void should_$name$() { $END$ } Certifique-se de marcar a caixa Nomes de FQ abreviados ao criar este modelo.
Quando você digita &amp;ldquo;should&amp;rdquo; (a abreviação), isso adicionará a instrução import org.junit.Test; necessária na parte superior do arquivo e este código:
@Test public void should_() { } É graças à opção Shorten FQ names que @org.junit.Test é reduzido a simplesmente @Test.
A variável $name$ é irrelevante, poderia ter outro nome.</description>
    </item>
    
    <item>
      <title>Otimização</title>
      <link>https://www.wikiod.com/pt/intellij-idea/otimizacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/otimizacao/</guid>
      <description>Personalizando as opções de VM # Você pode substituir as vmoptions padrão com suas próprias configurações pessoais escolhendo Ajuda &amp;gt; Editar opções de VM personalizadas na barra de ferramentas. Isso criará uma cópia local do arquivo que você pode editar.
Por exemplo, se você dobrar o valor definido para Xmx, o tamanho máximo do pool de alocação de memória será duplicado após a reinicialização do IDE. Em muitas máquinas, isso levará a um desempenho mais rápido.</description>
    </item>
    
    <item>
      <title>Exportador</title>
      <link>https://www.wikiod.com/pt/intellij-idea/exportador/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/exportador/</guid>
      <description>Construindo um .jar # Eventualmente, quando você estiver pronto para lançar uma versão do seu código para produção, você precisará de um arquivo .jar para distribuir. O Intellij facilita bastante a construção de JARs.
Primeiro, navegue até File -&amp;gt; Project Structure e clique em Artifacts: Clique no botão + e selecione JAR -&amp;gt; De módulos com dependências: Selecione seu módulo na lista suspensa e o arquivo principal (este é o arquivo que contém seu método public static void main()): Clique em OK, verifique se todas as informações referentes às dependências estão corretas e clique em OK para finalizar a configuração do artefato.</description>
    </item>
    
    <item>
      <title>Ferramentas de banco de dados</title>
      <link>https://www.wikiod.com/pt/intellij-idea/ferramentas-de-banco-de-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/intellij-idea/ferramentas-de-banco-de-dados/</guid>
      <description>Criando nova fonte de dados # Abra a &amp;ldquo;Janela de ferramentas do banco de dados&amp;rdquo; se não estiver aberta:
É assim: Crie uma nova fonte de dados: By clicking on &amp;ldquo;+&amp;rdquo; icon:
Or by opening &amp;ldquo;Data Sources and Drivers&amp;rdquo; dialog
E adicionando nova fonte de dados clicando em &amp;ldquo;+&amp;rdquo; lá
Se você ainda não baixou o driver JDBC, será solicitado a fazê-lo:
Insira os parâmetros de conexão:
Configure o túnel SSH se precisar:</description>
    </item>
    
  </channel>
</rss>
