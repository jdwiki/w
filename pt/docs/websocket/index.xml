<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de WebSockets on </title>
    <link>https://www.wikiod.com/pt/docs/websocket/</link>
    <description>Recent content in Tutorial de WebSockets on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/websocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao WebSockets</title>
      <link>https://www.wikiod.com/pt/websocket/introducao-ao-websockets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/websocket/introducao-ao-websockets/</guid>
      <description>Exemplo de cliente de soquete da web # Este é um exemplo de um cliente web-socket em javascript. Isto:
Conecta-se a um servidor de demonstração ao vivo. Envia uma mensagem. Recebe mensagem(ns). Desconecta após um intervalo. var mySocket = null; var serverUrl = &#39;wss://echo.websocket.org&#39;; // wss: is ws: but using SSL. var oWebSocket = window.WebSocket || window.MozWebSocket; if (oWebSocket) { mySocket = new oWebSocket (serverUrl); if (mySocket) { console.log (mySocket); mySocket.</description>
    </item>
    
    <item>
      <title>Diferenças entre WebSockets e AJAX</title>
      <link>https://www.wikiod.com/pt/websocket/diferencas-entre-websockets-e-ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/websocket/diferencas-entre-websockets-e-ajax/</guid>
      <description>Ajax usa o protocolo HTTP e pode enviar solicitações usando métodos POST/GET do cliente para o servidor.
O próprio WebSocket é um protocolo para comunicação entre Cliente e Servidor, distinto do HTTP.
No Ajax, quando você envia uma solicitação, o servidor envia uma resposta para essa solicitação e a conexão termina.
Usando WebSockets quando você estabelece uma conexão com server , você pode se comunicar entre cliente e servidor o quanto quiser e mantém a conexão ativa.</description>
    </item>
    
  </channel>
</rss>
