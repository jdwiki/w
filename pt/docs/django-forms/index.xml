<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial django-forms on </title>
    <link>https://www.wikiod.com/pt/docs/django-forms/</link>
    <description>Recent content in Tutorial django-forms on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/django-forms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com django-forms</title>
      <link>https://www.wikiod.com/pt/django-forms/comecando-com-django-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/django-forms/comecando-com-django-forms/</guid>
      <description>Instalação ou configuração # Instruções detalhadas sobre como configurar ou instalar django-forms.</description>
    </item>
    
    <item>
      <title>Usando o formulário de modelo</title>
      <link>https://www.wikiod.com/pt/django-forms/usando-o-formulario-de-modelo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/django-forms/usando-o-formulario-de-modelo/</guid>
      <description>Django ModelForm permite a criação de uma classe Form a partir de um modelo Django.
Tornando os campos não editáveis # Django 1.9 adicionou o atributo Field.disabled:
O argumento booleano desabilitado, quando definido como True, desabilita um campo de formulário usando o atributo HTML desabilitado para que não seja editável por usuários. Mesmo que um usuário adultere o valor do campo enviado ao servidor, ele será ignorado em favor do valor do formulário dados iniciais.</description>
    </item>
    
    <item>
      <title>Formulários integrados do Django</title>
      <link>https://www.wikiod.com/pt/django-forms/formularios-integrados-do-django/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/django-forms/formularios-integrados-do-django/</guid>
      <description>O Django é fornecido com várias visualizações que requerem formulários. Essas formas são, naturalmente, incorporadas. Um bom exemplo são Formulários internos de autenticação.
Este tópico pretende trazer documentação sobre como trabalhar com esses formulários.
Adicione classes CSS personalizadas # Os formulários integrados são ótimos, mas às vezes é necessário personalizá-los, adicionando novos campos ou simplesmente alterando os atributos CSS.
Este exemplo é aplicável a vários casos de uso, mas aqui é apresentado sobre PasswordChangeForm e seu uso em um site Bootstrap.</description>
    </item>
    
    <item>
      <title>Teste</title>
      <link>https://www.wikiod.com/pt/django-forms/teste/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/django-forms/teste/</guid>
      <description>Um recurso central do Django são os testes de unidade.
Este tópico pretende trazer uma documentação completa sobre como testar formulários.
Teste Simples # from django.test import TestCase from myapp.forms import MyForm class MyAppTests(TestCase): def test_forms(self): form_data = {&#39;field1&#39;: &#39;fieldvalue1&#39;} form = MyForm(data=form_data) self.assertTrue(form.is_valid()) </description>
    </item>
    
  </channel>
</rss>
