<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial android-gradle on </title>
    <link>https://www.wikiod.com/pt/docs/android-gradle/</link>
    <description>Recent content in tutorial android-gradle on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/android-gradle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao android-gradle</title>
      <link>https://www.wikiod.com/pt/android-gradle/introducao-ao-android-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/introducao-ao-android-gradle/</guid>
      <description>Plug-in do Android para Gradle # Conforme descrito na seção de comentários, o sistema de compilação do Android usa o Android Plugin for Gradle para oferecer suporte à criação de aplicativos Android com Gradle.
Você pode especificar a versão do Android Plugin for Gradle no arquivo build.gradle de nível superior. A versão do plug-in se aplica a todos os módulos criados nesse projeto do Android Studio.
buildscript { ... dependencies { classpath &#39;com.</description>
    </item>
    
    <item>
      <title>Configurar sabores de produtos</title>
      <link>https://www.wikiod.com/pt/android-gradle/configurar-sabores-de-produtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/configurar-sabores-de-produtos/</guid>
      <description>As variações de produto suportam as mesmas propriedades que defaultConfig porque defaultConfig na verdade pertence à classe ProductFlavor. Isso significa que você pode fornecer a configuração básica para todas as variações no bloco defaultConfig {}, e cada variação pode substituir qualquer um desses valores padrão, como o applicationId.
Constantes de sabor e recursos em build.gradle # Você pode usar gradle para ter constantes BuildConfig e valores res por sabor. Basta adicionar o valor ao sabor que você deseja oferecer.</description>
    </item>
    
    <item>
      <title>Configure sua compilação com Gradle</title>
      <link>https://www.wikiod.com/pt/android-gradle/configure-sua-compilacao-com-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/configure-sua-compilacao-com-gradle/</guid>
      <description>O sistema de compilação do Android compila recursos de aplicativos e código-fonte e os empacota em APKs que você pode testar, implantar, assinar e distribuir. O Android Studio usa o Gradle, um kit de ferramentas de compilação avançado, para automatizar e gerenciar o processo de compilação, permitindo que você defina configurações de compilação personalizadas e flexíveis.
Documentação oficial # https://developer.android.com/studio/build/index.html
Por que existem dois arquivos build.gradle em um projeto do Android Studio?</description>
    </item>
    
    <item>
      <title>Definir configurações de assinatura</title>
      <link>https://www.wikiod.com/pt/android-gradle/definir-configuracoes-de-assinatura/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/definir-configuracoes-de-assinatura/</guid>
      <description>Defina a configuração de assinatura em um arquivo externo # Você pode definir a configuração de assinatura em um arquivo externo como signing.properties no diretório raiz do seu projeto.
Por exemplo, você pode definir essas teclas (você pode usar seus nomes favoritos):
STORE_FILE=myStoreFileLocation STORE_PASSWORD=myStorePassword KEY_ALIAS=myKeyAlias KEY_PASSWORD=mykeyPassword Em seguida, no seu arquivo build.gradle:
android { signingConfigs { release } buildTypes { release { signingConfig signingConfigs.release } } } Em seguida, você pode introduzir algumas verificações para evitar problemas de gradle no processo de compilação.</description>
    </item>
    
    <item>
      <title>Reduzir código e recursos</title>
      <link>https://www.wikiod.com/pt/android-gradle/reduzir-codigo-e-recursos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/reduzir-codigo-e-recursos/</guid>
      <description>Para tornar seu arquivo APK o menor possível, habilite a redução para remover códigos e recursos não utilizados em sua compilação de lançamento.
Reduza o código com o ProGuard # Para habilitar a redução de código com o ProGuard, adicione minifyEnabled true ao tipo de compilação apropriado em seu arquivo build.gradle.
android { buildTypes { release { minifyEnabled true proguardFiles getDefaultProguardFile(‘proguard-android.txt&#39;), &#39;proguard-rules.pro&#39; } } } Onde:
minifyEnabled true: habilita a redução de código O método getDefaultProguardFile(‘proguard-android.</description>
    </item>
    
    <item>
      <title>Declarar dependências</title>
      <link>https://www.wikiod.com/pt/android-gradle/declarar-dependencias/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/declarar-dependencias/</guid>
      <description>Declare dependências para sabores # As dependências podem ser adicionadas para variações de produtos específicos de maneira semelhante às configurações de compilação.
android { ... productFlavors { flavor1 { //... } flavor2 { //... } } } dependencies { flavor1Compile &#39;com.android.support:appcompat-v7:24.1.1&#39; flavor1Compile &#39;com.google.firebase:firebase-crash:9.4.0&#39; flavor2Compile &#39;com.android.support:appcompat-v7:24.1.1&#39; } 1: https://www.wikiod.com/pt/android-gradle/declarar-dependencias#Declarar dependências para configurações
Como adicionar dependências # O exemplo abaixo descreve como declarar três tipos diferentes de dependências diretas no arquivo build.gradle do aplicativo/módulo:</description>
    </item>
    
    <item>
      <title>Configurar tipos de compilação</title>
      <link>https://www.wikiod.com/pt/android-gradle/configurar-tipos-de-compilacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/configurar-tipos-de-compilacao/</guid>
      <description>Parâmetros # Parâmetro Detalhe applicationIdSuffix Sufixo de ID do aplicativo aplicado a esta configuração básica consumerProguardFiles Arquivos de regras do ProGuard a serem incluídos no AAR publicado depurável Se este tipo de construção deve gerar um apk depurável embedMicroApp Se um aplicativo Android Wear vinculado deve ser incorporado na variante usando este tipo de compilação jniDebuggable Se este tipo de compilação está configurado para gerar um APK com código nativo depurável manifestPlaceholders Os placeholders do manifesto minifyEnabled Se o Minify está ativado para este tipo de construção multiDexEnabled Se Multi-Dex está habilitado para esta variante nome Nome deste tipo de construção proguardFiles Retorna os arquivos de configuração do ProGuard a serem usados pseudoLocalesEnabled Se deve gerar pseudo locale no APK renderscriptDebuggable Se o tipo de construção está configurado para gerar um apk com código RenderScript depurável renderscriptOptimLevel Nível de otimização a ser usado pelo compilador renderscript shrinkResources Se a redução de recursos não utilizados está ativada.</description>
    </item>
    
    <item>
      <title>Como incluir arquivos aar em um projeto no Android</title>
      <link>https://www.wikiod.com/pt/android-gradle/como-incluir-arquivos-aar-em-um-projeto-no-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/como-incluir-arquivos-aar-em-um-projeto-no-android/</guid>
      <description>Como adicionar dependência .aar em um módulo? # Em um módulo (biblioteca ou aplicativo) onde você precisa do arquivo aar você tem que adicionar em seu build.gradle o repositório:
repositories { flatDir { dirs &#39;libs&#39; } } e adicione a dependência:
dependencies { compile(name:&#39;nameOfYourAARFileWithoutExtension&#39;, ext:&#39;aar&#39;) } Preste atenção no caminho relativo da pasta libs que você está usando no módulo.
O arquivo aar não inclui as dependências transitivas # O arquivo aar não contém as dependências transitivas e não possui um arquivo pom que descreva as dependências usadas pela biblioteca.</description>
    </item>
    
    <item>
      <title>Gradle - Informações de Tags</title>
      <link>https://www.wikiod.com/pt/android-gradle/gradle---informacoes-de-tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/android-gradle/gradle---informacoes-de-tags/</guid>
      <description>Gradle - Informações de Tags # Grade: Ele é usado para fazer build para qualquer software, é uma linguagem específica do Domínio usada para configurar e cumprir todos os plugins, bibliotecas baixadas de repositórios.
Usar plug-ins:
Apply plugin: ‘com.android.application’ Plugin é propriedade em forma de valor de chave. Na declaração acima, o plugin denota a chave e a string do lado direito em camadas únicas torna-se seu valor.
Gradle é DSL (linguagem específica do domínio):</description>
    </item>
    
  </channel>
</rss>
