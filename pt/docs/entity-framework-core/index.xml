<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial principal do Entity Framework on </title>
    <link>https://www.wikiod.com/pt/docs/entity-framework-core/</link>
    <description>Recent content in Tutorial principal do Entity Framework on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/entity-framework-core/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao Entity Framework Core</title>
      <link>https://www.wikiod.com/pt/entity-framework-core/introducao-ao-entity-framework-core/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/entity-framework-core/introducao-ao-entity-framework-core/</guid>
      <description>Modelo, consulta e salvamento de dados # Modelo # Com o EF Core, o acesso a dados é realizado usando um modelo. Um modelo é composto por classes de entidade e um contexto derivado que representa uma sessão com o banco de dados, permitindo consultar e salvar dados.
Você pode gerar um modelo a partir de um banco de dados existente, codificar manualmente um modelo para corresponder ao seu banco de dados ou usar o EF Migrations para criar um banco de dados a partir do seu modelo (e evoluí-lo à medida que o modelo muda ao longo do tempo).</description>
    </item>
    
    <item>
      <title>EF Core vs EF6.x</title>
      <link>https://www.wikiod.com/pt/entity-framework-core/ef-core-vs-ef6x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/entity-framework-core/ef-core-vs-ef6x/</guid>
      <description>Para obter as atualizações mais recentes, consulte: Feature Comparison
Comparação lado a lado # A tabela a seguir compara os recursos disponíveis(1) no EF Core e no EF6.x.
Destina-se a fornecer uma comparação de alto nível e não lista todos os recursos ou tenta fornecer detalhes sobre possíveis diferenças entre o funcionamento do mesmo recurso.
Criando um modelo EF6.x EF Core 1.0.0 Modelagem básica (classes, propriedades, etc.) Sim Sim Convenções Sim Sim Convenções personalizadas Sim Parcial Anotações de dados Sim Sim API Fluente Sim Sim Herança: Tabela por hierarquia (TPH) Sim Sim Herança: Tabela por tipo (TPT) Sim Herança: Tabela por classe de concreto (TPC) Sim Propriedades do estado de sombra Sim Teclas alternativas Sim Muitos para muitos: Com entidade de junção Sim Sim Muitos para muitos: Sem entidade de junção Sim Geração de chave: Banco de dados Sim Sim Geração de chave: Cliente Sim Tipos complexos/valores Sim Dados espaciais Sim Visualização gráfica do modelo Sim Editor gráfico de arrastar/soltar Sim Formato do modelo: Código Sim Sim Formato do modelo: EDMX (XML) Sim Modelo de engenharia reversa do banco de dados: Linha de comando Sim Modelo de engenharia reversa do banco de dados: assistente VS Sim Modelo de atualização incremental do banco de dados Sim Consultando dados EF6.</description>
    </item>
    
    <item>
      <title>Atualizando um relacionamento de muitos para muitos</title>
      <link>https://www.wikiod.com/pt/entity-framework-core/atualizando-um-relacionamento-de-muitos-para-muitos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/entity-framework-core/atualizando-um-relacionamento-de-muitos-para-muitos/</guid>
      <description>Como atualizar um relacionamento Muitos para Muitos no EF Core:
Exemplo de edição de POST MVC # Digamos que tenhamos uma classe de produto com várias cores que podem estar em muitos produtos.
public class Product { public int ProductId { get; set; } public ICollection&amp;lt;ColorProduct&amp;gt; ColorProducts { get; set; } } public class ColorProduct { public int ProductId { get; set; } public int ColorId { get; set; } public virtual Color Color { get; set; } public virtual Product Product { get; set; } } public class Color { public int ColorId { get; set; } public ICollection&amp;lt;ColorProduct&amp;gt; ColorProducts { get; set; } } Usando esta extensão para facilitar:</description>
    </item>
    
  </channel>
</rss>
