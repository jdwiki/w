<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de microsserviços on </title>
    <link>https://www.wikiod.com/pt/docs/microservices/</link>
    <description>Recent content in Tutorial de microsserviços on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução aos microsserviços</title>
      <link>https://www.wikiod.com/pt/microservices/introducao-aos-microsservicos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/microservices/introducao-aos-microsservicos/</guid>
      <description>Checklist Essencial para plataforma de Microsserviços # Pipeline CI/CD Serviço centralizado de autenticação e autorização Documentação da API Porta de API Centralize a ferramenta de gerenciamento de logs Monitor de serviço Automação de Infraestrutura Servidor de configuração centralizado Documentação da API # Use o Spring REST Docs para documentar seus serviços. É uma estrutura poderosa que garante que a lógica do serviço esteja sempre alinhada com a documentação. Para fazer isso, você teria que escrever testes de integração para seus serviços.</description>
    </item>
    
    <item>
      <title>Gateway de API</title>
      <link>https://www.wikiod.com/pt/microservices/gateway-de-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/microservices/gateway-de-api/</guid>
      <description>A arquitetura de microsserviços oferece grande flexibilidade para desacoplar os aplicativos e desenvolver aplicativos independentes. Um microsserviço deve sempre ser testável e implantável de forma independente.
Mas, como você continua tendo muitos serviços, há uma necessidade de ter um API Gateway.
Você não pode expor todos os seus serviços a clientes externos. Você precisa ter alguma camada de abstração que atue como um gatekeeper para todos os seus microsserviços. Um ponto de entrada para todos os seus serviços.</description>
    </item>
    
  </channel>
</rss>
