<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial SCons on </title>
    <link>https://www.wikiod.com/pt/docs/scons/</link>
    <description>Recent content in Tutorial SCons on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/scons/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com SCons</title>
      <link>https://www.wikiod.com/pt/scons/comecando-com-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/scons/comecando-com-scons/</guid>
      <description>Começando # Depois de ter SCons em execução, crie um arquivo chamado SConstruct:
print(&#39;..Building World&#39;) Agora execute scons:
$ scons scons: Reading SConscript files ... ..Building World scons: done reading SConscript files. scons: Building targets ... scons: `.&#39; is up to date. scons: done building targets. SConstruct é um script Python com funções SCons adicionais.
Zip(&#39;archive&#39;, [&#39;SConstruct&#39;]) O script acima é compactado em archive.zip usando a função Zip() fornecida pelo SCons.</description>
    </item>
    
    <item>
      <title>Colocando SCons em execução</title>
      <link>https://www.wikiod.com/pt/scons/colocando-scons-em-execucao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/scons/colocando-scons-em-execucao/</guid>
      <description>SCons é escrito em Python 2 e não precisa de dependências para funcionar. Você pode simplesmente copiar seus scripts para a árvore de origem do projeto e executar a partir daqui. Ou você pode querer usar a versão empacotada para o seu sistema operacional.
Instalando no Linux # No Debian ou Ubuntu, você pode instalar SCons usando
$ sudo apt-get install scons Em sistemas baseados em [YUM] (https://en.wikipedia.org/wiki/Yellowdog_Updater,_Modified), use
$ sudo yum install scons Você pode instalar usando um RPM baixando-o e executando</description>
    </item>
    
    <item>
      <title>Fases de execução de SCons</title>
      <link>https://www.wikiod.com/pt/scons/fases-de-execucao-de-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/scons/fases-de-execucao-de-scons/</guid>
      <description>SCons é um sistema de compilação de várias etapas. Primeiro ele lê todo o SConstruct e SConscript para executar o código Python e criar o gráfico de construção com alvos. Em seguida, ele verifica o sistema de arquivos para detectar quais alvos do grafo de compilação devem ser atualizados e, depois disso, executa o comando para criar alvos desatualizados.
Inspecionando fases SCons # scons descreve as fases em execução. Executá-lo sobre um SConstruct vazio produz isso:</description>
    </item>
    
    <item>
      <title>C&#43;&#43;</title>
      <link>https://www.wikiod.com/pt/scons/c-/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/scons/c-/</guid>
      <description>Uma construção simples # É muito fácil construir um projeto C++ simples. Aqui está um exemplo de um arquivo SConstruct que faz isso:
env=Environment() env.Program(&#39;hello&#39;, Glob(&#39;src/*.cpp&#39;)) Isso cria o executável hello composto de todas as fontes em src com extensão cpp.
Especificando várias opções de compilação # Este exemplo mostra configurações de compilação mais detalhadas:
env=Environment( CPPPATH=&#39;/usr/include/boost/&#39;, CPPDEFINES=[&#39;foo&#39;], LIBS=[&#39;bar&#39;], SCONS_CXX_STANDARD=&#39;c++11&#39;) env.Program(&#39;hello&#39;, Glob(&#39;src/*.cpp&#39;)) Isso constrói o executável hello de todos os arquivos cpp em src, com as seguintes configurações:</description>
    </item>
    
  </channel>
</rss>
