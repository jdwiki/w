<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de pandas on </title>
    <link>https://www.wikiod.com/pt/docs/pandas/</link>
    <description>Recent content in Tutorial de pandas on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/pandas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com os pandas</title>
      <link>https://www.wikiod.com/pt/pandas/comecando-com-os-pandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/comecando-com-os-pandas/</guid>
      <description>Instalação ou configuração # Instruções detalhadas sobre como configurar ou instalar os pandas podem ser encontradas aqui na documentação oficial.
Instalando pandas com Anaconda
Instalar pandas e o resto da pilha NumPy e SciPy pode ser um pouco difícil para usuários inexperientes.
A maneira mais simples de instalar não apenas pandas, mas Python e os pacotes mais populares que compõem a pilha SciPy (IPython, NumPy, Matplotlib, &amp;hellip;) é com Anaconda, uma plataforma cruzada (Linux, Mac OS X, Windows) distribuição Python para análise de dados e computação científica.</description>
    </item>
    
    <item>
      <title>Salve o dataframe do pandas em um arquivo csv</title>
      <link>https://www.wikiod.com/pt/pandas/salve-o-dataframe-do-pandas-em-um-arquivo-csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/salve-o-dataframe-do-pandas-em-um-arquivo-csv/</guid>
      <description>Parâmetros # Parâmetro Descrição path_or_buf string ou identificador de arquivo, padrão Nenhum Caminho ou objeto do arquivo, se Nenhum for fornecido, o resultado será retornado como uma string. setembro caractere, padrão &amp;lsquo;,&amp;rsquo; Delimitador de campo para o arquivo de saída. na_rep string, padrão ‘’ Representação de dados ausente float_format string, padrão Nenhum Formatar string para números de ponto flutuante colunas seqüência, opcional Colunas para escrever cabeçalho boolean ou lista de strings, padrão True Escreva os nomes das colunas.</description>
    </item>
    
    <item>
      <title>Leitor de dados Pandas</title>
      <link>https://www.wikiod.com/pt/pandas/leitor-de-dados-pandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/leitor-de-dados-pandas/</guid>
      <description>O Pandas datareader é um subpacote que permite criar um dataframe a partir de várias fontes de dados da Internet, incluindo atualmente:
Yahoo! Finança Google Finanças St. Louis FED (FRED) Biblioteca de dados de Kenneth French Banco Mundial -Análise do Google Para mais informações, veja aqui.
Exemplo básico de leitor de dados (Yahoo Finance) # from pandas_datareader import data # Only get the adjusted close. aapl = data.DataReader(&amp;quot;AAPL&amp;quot;, start=&#39;2015-1-1&#39;, end=&#39;2015-12-31&#39;, data_source=&#39;yahoo&#39;)[&#39;Adj Close&#39;] &amp;gt;&amp;gt;&amp;gt; aapl.</description>
    </item>
    
    <item>
      <title>Criando DataFrames</title>
      <link>https://www.wikiod.com/pt/pandas/criando-dataframes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/criando-dataframes/</guid>
      <description>DataFrame é uma estrutura de dados fornecida pela biblioteca pandas, além de Series e Panel. É uma estrutura bidimensional e pode ser comparada a uma tabela de linhas e colunas.
Cada linha pode ser identificada por um índice inteiro (0..N) ou um rótulo definido explicitamente ao criar um objeto DataFrame. Cada coluna pode ser de tipo distinto e é identificada por um rótulo.
Este tópico abrange várias maneiras de construir/criar um objeto DataFrame.</description>
    </item>
    
    <item>
      <title>Dados de agrupamento</title>
      <link>https://www.wikiod.com/pt/pandas/dados-de-agrupamento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/dados-de-agrupamento/</guid>
      <description>Agregando por tamanho versus por contagem # A diferença entre size e count é:
size conta NaN valores, count não .
df = pd.DataFrame( {&amp;quot;Name&amp;quot;:[&amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Mallory&amp;quot;, &amp;quot;Mallory&amp;quot;, &amp;quot;Bob&amp;quot; , &amp;quot;Mallory&amp;quot;], &amp;quot;City&amp;quot;:[&amp;quot;Seattle&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Portland&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Portland&amp;quot;], &amp;quot;Val&amp;quot;: [4, 3, 3, np.nan, np.nan, 4]}) df # Output: # City Name Val # 0 Seattle Alice 4.0 # 1 Seattle Bob 3.0 # 2 Portland Mallory 3.0 # 3 Seattle Mallory NaN # 4 Seattle Bob NaN # 5 Portland Mallory 4.</description>
    </item>
    
    <item>
      <title>Calendários de feriados</title>
      <link>https://www.wikiod.com/pt/pandas/calendarios-de-feriados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/calendarios-de-feriados/</guid>
      <description>Crie um calendário personalizado # Veja como criar um calendário personalizado. O exemplo dado é um calendário francês &amp;ndash; por isso fornece muitos exemplos.
from pandas.tseries.holiday import AbstractHolidayCalendar, Holiday, EasterMonday, Easter from pandas.tseries.offsets import Day, CustomBusinessDay class FrBusinessCalendar(AbstractHolidayCalendar): &amp;quot;&amp;quot;&amp;quot; Custom Holiday calendar for France based on https://en.wikipedia.org/wiki/Public_holidays_in_France - 1 January: New Year&#39;s Day - Moveable: Easter Monday (Monday after Easter Sunday) - 1 May: Labour Day - 8 May: Victory in Europe Day - Moveable Ascension Day (Thursday, 39 days after Easter Sunday) - 14 July: Bastille Day - 15 August: Assumption of Mary to Heaven - 1 November: All Saints&#39; Day - 11 November: Armistice Day - 25 December: Christmas Day &amp;quot;&amp;quot;&amp;quot; rules = [ Holiday(&#39;New Years Day&#39;, month=1, day=1), EasterMonday, Holiday(&#39;Labour Day&#39;, month=5, day=1), Holiday(&#39;Victory in Europe Day&#39;, month=5, day=8), Holiday(&#39;Ascension Day&#39;, month=1, day=1, offset=[Easter(), Day(39)]), Holiday(&#39;Bastille Day&#39;, month=7, day=14), Holiday(&#39;Assumption of Mary to Heaven&#39;, month=8, day=15), Holiday(&#39;All Saints Day&#39;, month=11, day=1), Holiday(&#39;Armistice Day&#39;, month=11, day=11), Holiday(&#39;Christmas Day&#39;, month=12, day=25) ] Use um calendário personalizado # Veja como usar o calendário personalizado.</description>
    </item>
    
    <item>
      <title>Ler SQL Server para Dataframe</title>
      <link>https://www.wikiod.com/pt/pandas/ler-sql-server-para-dataframe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/ler-sql-server-para-dataframe/</guid>
      <description>Usando pyodbc # import pandas.io.sql import pyodbc import pandas as pd Especifique os parâmetros
# Parameters server = &#39;server_name&#39; db = &#39;database_name&#39; UID = &#39;user_id&#39; Crie a conexão
# Create the connection conn = pyodbc.connect(&#39;DRIVER={SQL Server};SERVER=&#39; + server + &#39;;DATABASE=&#39; + db + &#39;; UID = &#39; + UID + &#39;; PWD = &#39; + UID + &#39;Trusted_Connection=yes&#39;) Consulta no dataframe do pandas
# Query into dataframe df= pandas.io.sql.read_sql(&#39;sql_query_string&#39;, conn) Usando pyodbc com loop de conexão # import os, time import pyodbc import pandas.</description>
    </item>
    
    <item>
      <title>Obtendo informações sobre DataFrames</title>
      <link>https://www.wikiod.com/pt/pandas/obtendo-informacoes-sobre-dataframes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/obtendo-informacoes-sobre-dataframes/</guid>
      <description>Obtenha informações do DataFrame e uso de memória # Para obter informações básicas sobre um DataFrame, incluindo os nomes das colunas e os tipos de dados:
import pandas as pd df = pd.DataFrame({&#39;integers&#39;: [1, 2, 3], &#39;floats&#39;: [1.5, 2.5, 3], &#39;text&#39;: [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], &#39;ints with None&#39;: [1, None, 3]}) df.info() &amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt; Int64Index: 3 entries, 0 to 2 Data columns (total 4 columns): floats 3 non-null float64 integers 3 non-null int64 ints with None 2 non-null float64 text 3 non-null object dtypes: float64(2), int64(1), object(1) memory usage: 120.</description>
    </item>
    
    <item>
      <title>Indexação e seleção de dados</title>
      <link>https://www.wikiod.com/pt/pandas/indexacao-e-selecao-de-dados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/indexacao-e-selecao-de-dados/</guid>
      <description>Fatia dependente do caminho # Pode ser necessário percorrer os elementos de uma série ou as linhas de um dataframe de forma que o próximo elemento ou a próxima linha dependa do elemento ou linha selecionado anteriormente. Isso é chamado de dependência de caminho.
Considere as seguintes séries temporais s com frequência irregular.
#starting python community conventions import numpy as np import pandas as pd # n is number of observations n = 5000 day = pd.</description>
    </item>
    
    <item>
      <title>Pegadinhas de pandas</title>
      <link>https://www.wikiod.com/pt/pandas/pegadinhas-de-pandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/pandas/pegadinhas-de-pandas/</guid>
      <description>Gotcha em geral é uma construção que é documentada, mas não intuitiva. As pegadinhas produzem alguma saída que normalmente não é esperada devido ao seu caráter contra-intuitivo.
O pacote Pandas tem várias pegadinhas, que podem confundir alguém que não as conhece, e algumas delas são apresentadas nesta página de documentação.
Detectando valores ausentes com np.nan # Se você deseja detectar faltas com
df=pd.DataFrame({&#39;col&#39;:[1,np.nan]}) df==np.nan você terá o seguinte resultado:
col 0 False 1 False Isso ocorre porque comparar o valor ausente com qualquer coisa resulta em um Falso - em vez disso, você deve usar</description>
    </item>
    
  </channel>
</rss>
