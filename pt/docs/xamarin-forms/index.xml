<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Xamarin.Forms on </title>
    <link>https://www.wikiod.com/pt/docs/xamarin-forms/</link>
    <description>Recent content in Tutorial Xamarin.Forms on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/xamarin-forms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao Xamarin.Forms</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/introducao-ao-xamarinforms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/introducao-ao-xamarinforms/</guid>
      <description>Instalação (Visual Studio) # O Xamarin.Forms é uma abstração do kit de ferramentas de interface do usuário com suporte nativo de plataforma cruzada que permite aos desenvolvedores criar facilmente interfaces de usuário que podem ser compartilhadas no Android, iOS, Windows e Windows Phone. As interfaces de usuário são renderizadas usando os controles nativos da plataforma de destino, permitindo que os aplicativos Xamarin.Forms mantenham a aparência e o comportamento apropriados para cada plataforma.</description>
    </item>
    
    <item>
      <title>Exibir alerta</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/exibir-alerta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/exibir-alerta/</guid>
      <description>Exibir alerta # Uma caixa de alerta pode ser exibida em uma Página Xamarin.Forms pelo método DisplayAlert. Podemos fornecer um Título, Corpo (Texto a ser alertado) e um/dois Botões de Ação. Page oferece duas substituições do método DisplayAlert.
public Task DisplayAlert (título da string, mensagem da string, cancelamento da string) Essa substituição apresenta uma caixa de diálogo de alerta ao usuário do aplicativo com um único botão de cancelamento. O alerta é exibido de forma modal e, uma vez dispensado, o usuário continua interagindo com o aplicativo.</description>
    </item>
    
    <item>
      <title>Ajustes visuais específicos da plataforma</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/ajustes-visuais-especificos-da-plataforma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/ajustes-visuais-especificos-da-plataforma/</guid>
      <description>Ajustes de idioma # Ajustes específicos de idioma podem ser feitos a partir do código C#, por exemplo, para alterar a orientação do layout, seja a exibição mostrada ou um telefone ou tablet.
if (Device.Idiom == TargetIdiom.Phone) { this.panel.Orientation = StackOrientation.Vertical; } else { this.panel.Orientation = StackOrientation.Horizontal; } Essas funcionalidades também estão disponíveis diretamente do código XAML:
&amp;lt;StackLayout x:Name=&amp;quot;panel&amp;quot;&amp;gt; &amp;lt;StackLayout.Orientation&amp;gt; &amp;lt;OnIdiom x:TypeArguments=&amp;quot;StackOrientation&amp;quot;&amp;gt; &amp;lt;OnIdiom.Phone&amp;gt;Vertical&amp;lt;/OnIdiom.Phone&amp;gt; &amp;lt;OnIdiom.Tablet&amp;gt;Horizontal&amp;lt;/OnIdiom.Tablet&amp;gt; &amp;lt;/OnIdiom&amp;gt; &amp;lt;/StackLayout.Orientation&amp;gt; &amp;lt;/StackLayout&amp;gt; Ajustes da plataforma # Os ajustes podem ser feitos para plataformas específicas do código C#, por exemplo, para alterar o preenchimento para todas as plataformas de destino.</description>
    </item>
    
    <item>
      <title>Renderizadores personalizados</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/renderizadores-personalizados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/renderizadores-personalizados/</guid>
      <description>Acessando o renderizador de um projeto nativo # var renderer = Platform.GetRenderer(visualElement); if (renderer == null) { renderer = Platform.CreateRenderer(visualElement); Platform.SetRenderer(visualElement, renderer); } DoSomeThingWithRender(render); // now you can do whatever you want with render Renderizador personalizado para ListView # Renderizadores personalizados permitem que os desenvolvedores personalizem a aparência e o comportamento dos controles Xamarin.Forms em cada plataforma. Os desenvolvedores podem usar recursos de controles nativos.
Por exemplo, precisamos desabilitar a rolagem em ListView.</description>
    </item>
    
    <item>
      <title>Layouts de formulários Xamarin</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/layouts-de-formularios-xamarin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/layouts-de-formularios-xamarin/</guid>
      <description>AbsoluteLayout # AbsoluteLayout posiciona e dimensiona os elementos filhos proporcionais ao seu próprio tamanho e posição ou por valores absolutos. As exibições filhas podem ser posicionadas e dimensionadas usando valores proporcionais ou valores estáticos, e valores proporcionais e estáticos podem ser misturados.
Uma definição de um AbsoluteLayout em XAML se parece com isso:
&amp;lt;AbsoluteLayout&amp;gt; &amp;lt;Label Text=&amp;quot;I&#39;m centered on iPhone 4 but no other device&amp;quot; AbsoluteLayout.LayoutBounds=&amp;quot;115,150,100,100&amp;quot; LineBreakMode=&amp;quot;WordWrap&amp;quot; /&amp;gt; &amp;lt;Label Text=&amp;quot;I&#39;m bottom center on every device.</description>
    </item>
    
    <item>
      <title>Fontes personalizadas em estilos</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/fontes-personalizadas-em-estilos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/fontes-personalizadas-em-estilos/</guid>
      <description>Recursos para consultar:
Estilos Xamarin [Usando fontes personalizadas no iOS e Android com Xamarin.Forms](https://blog.verslu.is/xamarin/xamarin-forms-xamarin/using-custom-fonts-on-ios-and-android-with-xamarin -formulários/) Renderizadores personalizados Dicionários de recursos Propriedades anexadas Acessando fontes personalizadas em Syles # Xamarin.Forms fornece um ótimo mecanismo para estilizar seu aplicativo de plataforma cruzada com estilos globais.
No mundo mobile seu aplicativo deve ser bonito e se destacar dos demais aplicativos. Um desses caracteres são as Fontes Personalizadas usadas no aplicativo.
Com o suporte de poder do XAML Styling no Xamarin.</description>
    </item>
    
    <item>
      <title>Plug-in Xamarin</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/plug-in-xamarin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/plug-in-xamarin/</guid>
      <description>Plugin de mídia # Tire ou escolha fotos e vídeos de uma API multiplataforma.
Nuget disponível: https://www.nuget.org/packages/Xam.Plugin.Media/
XAML
&amp;lt;StackLayout Spacing=&amp;quot;10&amp;quot; Padding=&amp;quot;10&amp;quot;&amp;gt; &amp;lt;Button x:Name=&amp;quot;takePhoto&amp;quot; Text=&amp;quot;Take Photo&amp;quot;/&amp;gt; &amp;lt;Button x:Name=&amp;quot;pickPhoto&amp;quot; Text=&amp;quot;Pick Photo&amp;quot;/&amp;gt; &amp;lt;Button x:Name=&amp;quot;takeVideo&amp;quot; Text=&amp;quot;Take Video&amp;quot;/&amp;gt; &amp;lt;Button x:Name=&amp;quot;pickVideo&amp;quot; Text=&amp;quot;Pick Video&amp;quot;/&amp;gt; &amp;lt;Label Text=&amp;quot;Save to Gallery&amp;quot;/&amp;gt; &amp;lt;Switch x:Name=&amp;quot;saveToGallery&amp;quot; IsToggled=&amp;quot;false&amp;quot; HorizontalOptions=&amp;quot;Center&amp;quot;/&amp;gt; &amp;lt;Label Text=&amp;quot;Image will show here&amp;quot;/&amp;gt; &amp;lt;Image x:Name=&amp;quot;image&amp;quot;/&amp;gt; &amp;lt;Label Text=&amp;quot;&amp;quot;/&amp;gt; &amp;lt;/StackLayout&amp;gt; Código
namespace PluginDemo { public partial class MediaPage : ContentPage { public MediaPage() { InitializeComponent(); takePhoto.</description>
    </item>
    
    <item>
      <title>Acessando recursos nativos com DependencyService</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/acessando-recursos-nativos-com-dependencyservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/acessando-recursos-nativos-com-dependencyservice/</guid>
      <description>Se você não quiser que seu código seja interrompido quando nenhuma implementação for encontrada, verifique primeiro o DependencyService se ele tiver uma implementação disponível.
Você pode fazer isso por uma simples verificação se não for null.
var speaker = DependencyService.Get&amp;lt;ITextToSpeech&amp;gt;(); if (speaker != null) { speaker.Speak(&amp;quot;Ready for action!&amp;quot;); } ou, se seu IDE suportar C# 6, com operador condicional nulo:
var speaker = DependencyService.Get&amp;lt;ITextToSpeech&amp;gt;(); speaker?.Speak(&amp;quot;Ready for action!&amp;quot;); Se você não fizer isso e nenhuma implementação for encontrada em tempo de execução, seu código gerará uma exceção.</description>
    </item>
    
    <item>
      <title>Trabalhando com mapas</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/trabalhando-com-mapas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/trabalhando-com-mapas/</guid>
      <description>Se você for executar seu projeto em outro computador, precisará gerar uma nova chave de API para ele, porque as impressões digitais SHA-1 não corresponderão a diferentes máquinas de compilação.
Você pode explorar o projeto, descrito no exemplo Adicionando um mapa no Xamarin.Forms aqui
Adicionando um mapa no Xamarin.Forms (Xamarin Studio) # Você pode simplesmente usar as APIs de mapas nativos em cada plataforma com Xamarin Forms. Tudo que você precisa é baixar o pacote Xamarin.</description>
    </item>
    
    <item>
      <title>Contact Picker - Xamarin Forms (Android e iOS)</title>
      <link>https://www.wikiod.com/pt/xamarin-forms/contact-picker---xamarin-forms-android-e-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/xamarin-forms/contact-picker---xamarin-forms-android-e-ios/</guid>
      <description>Contact Picker XF (Android e iOS)
contact_picker.cs # using System; using Xamarin.Forms; namespace contact_picker { public class App : Application { public App () { // The root page of your application MainPage = new MyPage(); } protected override void OnStart () { // Handle when your app starts } protected override void OnSleep () { // Handle when your app sleeps } protected override void OnResume () { // Handle when your app resumes } } } MinhaPágina.</description>
    </item>
    
  </channel>
</rss>
