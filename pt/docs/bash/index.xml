<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Bash on </title>
    <link>https://www.wikiod.com/pt/docs/bash/</link>
    <description>Recent content in Tutorial Bash on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao Bash</title>
      <link>https://www.wikiod.com/pt/bash/introducao-ao-bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/introducao-ao-bash/</guid>
      <description>Olá Mundo # Shell interativo # O shell Bash é comumente usado interativamente: Ele permite que você insira e edite comandos, então os executa quando você pressiona a tecla Return. Muitos sistemas operacionais baseados em Unix e semelhantes a Unix usam o Bash como seu shell padrão (principalmente Linux e macOS). O terminal entra automaticamente em um processo de shell Bash interativo na inicialização.
Emita Hello World digitando o seguinte:</description>
    </item>
    
    <item>
      <title>Matrizes</title>
      <link>https://www.wikiod.com/pt/bash/matrizes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/matrizes/</guid>
      <description>Atribuições de matriz # Atribuição de lista
Se você estiver familiarizado com Perl, C ou Java, poderá pensar que o Bash usaria vírgulas para separar os elementos do array, mas esse não é o caso; em vez disso, o Bash usa espaços:
# Array in Perl my @array = (1, 2, 3, 4); # Array in Bash array=(1 2 3 4) Crie um array com novos elementos:
array=(&#39;first element&#39; &#39;second element&#39; &#39;third element&#39;) Atribuição de Subscrito</description>
    </item>
    
    <item>
      <title>Usando trap para reagir a sinais e eventos do sistema</title>
      <link>https://www.wikiod.com/pt/bash/usando-trap-para-reagir-a-sinais-e-eventos-do-sistema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/usando-trap-para-reagir-a-sinais-e-eventos-do-sistema/</guid>
      <description>Sintaxe # trap action sigspec&amp;hellip; # Executa &amp;ldquo;action&amp;rdquo; em uma lista de sinais trap sigspec&amp;hellip; # Omitir a ação redefine as armadilhas para sinais Parâmetros # Parâmetro Significado -p Lista de traps atualmente instalados -l Lista os nomes dos sinais e os números correspondentes O utilitário trap é um shell especial embutido. É definido em POSIX, mas o bash adiciona algumas extensões úteis também.
Exemplos que são compatíveis com POSIX começam com #!</description>
    </item>
    
    <item>
      <title>Variáveis ​​internas</title>
      <link>https://www.wikiod.com/pt/bash/variaveis-internas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/variaveis-internas/</guid>
      <description>Uma visão geral das variáveis ​​internas do Bash, onde, como e quando usá-las.
Variáveis ​​internas do Bash em resumo # Variável Detalhes $* / $@ Parâmetros posicionais de função/script (argumentos). Expanda da seguinte forma:
$* e $@ são iguais a $1 $2 ... (observe que geralmente não faz sentido deixar sem aspas)
&amp;quot;$* &amp;quot; é o mesmo que &amp;quot;$1 $2 ...&amp;quot; 1 &amp;quot;$@&amp;quot; é o mesmo que &amp;quot;$1&amp;quot; &amp;quot;$2&amp;quot; ... 1.</description>
    </item>
    
    <item>
      <title>Expansão do parâmetro Bash</title>
      <link>https://www.wikiod.com/pt/bash/expansao-do-parametro-bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/expansao-do-parametro-bash/</guid>
      <description>O caractere $ introduz expansão de parâmetro, substituição de comando ou expansão aritmética. O nome do parâmetro ou símbolo a ser expandido pode ser colocado entre chaves, que são opcionais, mas servem para proteger a variável a ser expandida de caracteres imediatamente seguintes que podem ser interpretados como parte do nome.
Leia mais no Manual do Usuário do Bash.
Sintaxe # ${parameter:offset} # Substring começando no offset ${parameter:offset:length} # Substring de comprimento &amp;ldquo;comprimento&amp;rdquo; começando no deslocamento ${#parameter} # Comprimento do parâmetro ${parameter/pattern/string} # Substitui a primeira ocorrência do padrão por string ${parameter//pattern/string} # Substitui todas as ocorrências do padrão por string ${parameter/#pattern/string} # Substitua o padrão por uma string se o padrão estiver no início ${parameter/%pattern/string} # Substitua o padrão por uma string se o padrão estiver no final ${parameter#pattern} # Remove a correspondência mais curta do padrão do início do parâmetro ${parameter##pattern} # Remove a correspondência mais longa do padrão do início do parâmetro ${parameter%pattern} # Remove a correspondência mais curta do padrão do final do parâmetro ${parameter%%pattern} # Remove a correspondência mais longa do padrão do final do parâmetro ${parameter:-word} # Expandir para palavra se parâmetro não definido/indefinido ${parameter:=word} # Expandir para palavra se parâmetro não definido/indefinido e definir parâmetro ${parâmetro:+palavra} # Expandir para palavra se parâmetro definido/definido Modificando o caso de caracteres alfabéticos # Para maiúsculas</description>
    </item>
    
    <item>
      <title>Redirecionamento</title>
      <link>https://www.wikiod.com/pt/bash/redirecionamento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/redirecionamento/</guid>
      <description>Sintaxe # comando &amp;lt;/path/to/file # Redireciona a entrada padrão para o arquivo command &amp;gt;/path/to/file # Redireciona a saída padrão para voar comando file_descriptor&amp;gt;/path/to/file # Redireciona a saída do file_descriptor para o arquivo command &amp;gt;&amp;amp;file_descriptor # Redireciona a saída para file_descriptor comando file_descriptor&amp;gt;&amp;amp;another_file_descriptor # Redireciona file_descriptor para another_file_descriptor command &amp;lt;&amp;amp;file_descriptor # Redireciona o file_descriptor para a entrada padrão command &amp;amp;&amp;gt;/path/to/file # Redireciona a saída padrão e o erro padrão para o arquivo Parâmetros # Parâmetro Detalhes descritor de arquivo interno Um número inteiro.</description>
    </item>
    
    <item>
      <title>Aqui documentos e aqui strings</title>
      <link>https://www.wikiod.com/pt/bash/aqui-documentos-e-aqui-strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/aqui-documentos-e-aqui-strings/</guid>
      <description>Execute o comando com o documento aqui # ssh -p 21 example@example.com &amp;lt;&amp;lt;EOF echo &#39;printing pwd&#39; echo &amp;quot;\$(pwd)&amp;quot; ls -a find &#39;*.txt&#39; EOF $ é escapado porque não queremos que ele seja expandido pelo shell atual, ou seja, $(pwd) deve ser executado no shell remoto.
Outra forma:
ssh -p 21 example@example.com &amp;lt;&amp;lt;&#39;EOF&#39; echo &#39;printing pwd&#39; echo &amp;quot;$(pwd)&amp;quot; ls -a find &#39;*.txt&#39; EOF Observação: O EOF de fechamento deve estar no início da linha (sem espaços em branco antes).</description>
    </item>
    
    <item>
      <title>Funções</title>
      <link>https://www.wikiod.com/pt/bash/funcoes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/funcoes/</guid>
      <description>Sintaxe # Defina uma função com a palavra-chave function:
function f { }
Defina uma função com ():
f(){ }
Defina uma função com a palavra-chave function e ():
function f(){ }
Funções com argumentos # Em helloJohn.sh:
#!/bin/bash greet() { local name=&amp;quot;$1&amp;quot; echo &amp;quot;Hello, $name&amp;quot; } greet &amp;quot;John Doe&amp;quot; # running above script $ bash helloJohn.sh Hello, John Doe Se você não modificar o argumento de forma alguma, não há necessidade de copiá-lo para uma variável local - simplesmente echo &amp;quot;Hello, $1&amp;quot;.</description>
    </item>
    
    <item>
      <title>Listando arquivos</title>
      <link>https://www.wikiod.com/pt/bash/listando-arquivos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/listando-arquivos/</guid>
      <description>Sintaxe # ls [OPÇÃO]&amp;hellip; [ARQUIVO]&amp;hellip; Parâmetros # Opção Descrição -a, --all Listar todas as entradas, incluindo aquelas que começam com um ponto -A, --quase-tudo Listar todas as entradas excluindo . e .. -c Ordenar arquivos por tempo de mudança -d, --diretório Listar entradas de diretório -h, --human-legível Mostrar tamanhos em formato legível por humanos (ou seja, K, M) -H Igual ao anterior apenas com potências de 1000 em vez de 1024 -l Mostrar conteúdo em formato de listagem longa -o Formato de listagem longa sem informações de grupo -r, --reverse Mostrar conteúdo em ordem inversa -s, --size Tamanho de impressão de cada arquivo em blocos -S Classificar por tamanho de arquivo --sort=PALAVRA Classifique o conteúdo por uma palavra.</description>
    </item>
    
    <item>
      <title>Achar</title>
      <link>https://www.wikiod.com/pt/bash/achar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/bash/achar/</guid>
      <description>find é um comando para pesquisar recursivamente um diretório por arquivos (ou diretórios) que correspondam a um critério e, em seguida, execute alguma ação nos arquivos selecionados.
encontre a ação search_path selection_criteria
Sintaxe # encontre [-H] [-L] [-P] [-D depura] [-Olevel] [caminho&amp;hellip;] [expressão] Procurando um arquivo por nome ou extensão # Para encontrar arquivos/diretórios com um nome específico, relativo a pwd:
$ find . -name &amp;quot;myFile.txt&amp;quot; ./myFile.txt Para encontrar arquivos/diretórios com uma extensão específica, use um curinga:</description>
    </item>
    
  </channel>
</rss>
