<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial solrj on </title>
    <link>https://www.wikiod.com/pt/docs/solrj/</link>
    <description>Recent content in tutorial solrj on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/solrj/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao Solrj</title>
      <link>https://www.wikiod.com/pt/solrj/introducao-ao-solrj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/solrj/introducao-ao-solrj/</guid>
      <description>Instalação ou configuração # SolrJ vem como parte da distribuição Solr desde o Solr 1.x. A versão mais recente do Solr pode ser baixada aqui. A partir do Solr-6.3.0, que é a versão mais recente disponível, precisamos obter as seguintes bibliotecas e adicioná-las ao nosso caminho de construção: /dist/apache-solr-solrj-.jar /dist/solrj-lib/
Quando terminarmos, o SolrJ estará pronto para se comunicar com nossa instância do Solr. No exemplo a seguir veremos como usar o SolrJ para consultar ou adicionar conteúdo ao Solr.</description>
    </item>
    
    <item>
      <title>Obtenha líderes de estilhaços usando o SolrJ</title>
      <link>https://www.wikiod.com/pt/solrj/obtenha-lideres-de-estilhacos-usando-o-solrj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/solrj/obtenha-lideres-de-estilhacos-usando-o-solrj/</guid>
      <description>Em alguns casos, por exemplo, quando queremos fazer backup de coleções de solrcloud programaticamente, precisamos saber quais são os Shard Leaders. O exemplo abaixo mostra como isso pode ser feito usando SolrJ.
Obtenha líderes de fragmentos usando a API SolrJ # private final String COLLECTION_NAME = &amp;quot;myCollection&amp;quot;; private final String ZOOKEPER_CLIENT_TIMEOUT_MS = &amp;quot;1000000&amp;quot; private Map&amp;lt;String, String&amp;gt; getShardLeaders(CloudSolrServer cloudSolrServer) throws InterruptedException, KeeperException { Map&amp;lt;String, String&amp;gt; shardleaders = new TreeMap&amp;lt;String, String&amp;gt;(); ZkStateReader zkStateReader = cloudSolrServer.</description>
    </item>
    
    <item>
      <title>Obtenha trechos destacados com SolrJ</title>
      <link>https://www.wikiod.com/pt/solrj/obtenha-trechos-destacados-com-solrj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/solrj/obtenha-trechos-destacados-com-solrj/</guid>
      <description>Quando obtemos trechos destacados em nossa resposta do Solr programaticamente, precisamos extraí-los e tratá-los. O código abaixo mostra como fazer isso com SolrJ.
Obter texto destacado para campos de valor único # public String getHighlightedText(final QueryResponse queryResponse, final String fieldName, final String docId) { String highlightedText = &amp;quot;&amp;quot;; Map&amp;lt;String, Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;&amp;gt; highlights = queryResponse.getHighlighting(); if (highlights!=null &amp;amp;&amp;amp; MapUtils.isNotEmpty(highlights.get(docId))) { List&amp;lt;String&amp;gt; snippets = highlights.get(docId).get(fieldName); if (CollectionUtils.isNotEmpty(snippets)) { highlightedText = getFragments(snippets); } } return highlightedText; } private static final String getFragments(List&amp;lt;String&amp;gt; snippets){ StringBuilder fragments = new StringBuilder(); for (int i = 0; i &amp;lt; snippets.</description>
    </item>
    
  </channel>
</rss>
