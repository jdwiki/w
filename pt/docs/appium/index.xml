<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Appium Tutorial on </title>
    <link>https://www.wikiod.com/pt/docs/appium/</link>
    <description>Recent content in Appium Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/appium/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao appium</title>
      <link>https://www.wikiod.com/pt/appium/introducao-ao-appium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/appium/introducao-ao-appium/</guid>
      <description>Instalação ou Configuração # Pré requisitos # Verifique os requisitos para cada tipo de dispositivo que você deseja automatizar e certifique-se de que eles estejam instalados antes de tentar usar o Appium!
Requisitos do iOS
Mac OS X 10.10 ou superior, 10.11.1 recomendado XCode &amp;gt;= 6.0, 7.1.1 recomendado Apple Developer Tools (SDK do simulador do iPhone, ferramentas de linha de comando) Certifique-se de ler a documentação sobre como se preparar para o teste do iOS!</description>
    </item>
    
    <item>
      <title>cliente Java</title>
      <link>https://www.wikiod.com/pt/appium/cliente-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/appium/cliente-java/</guid>
      <description>API do cliente Java
Código-fonte do cliente Java
Automação da Android Play Store (dispositivo real) # Estrutura do arquivo:
pom.xml src/test/java/PlayStoreAutomation.java Iniciar comando:
mvn test -Dtest=PlayStoreAutomation
PlayStoreAutomation.java # import org.junit.AfterClass; import org.junit.BeforeClass; import org.junit.Test; import io.appium.java_client.android.AndroidDriver; import io.appium.java_client.android.AndroidKeyCode; import io.appium.java_client.MobileElement; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.By; import java.util.concurrent.TimeUnit; import java.net.URL; public class PlayStoreAutomation { public static AndroidDriver&amp;lt;MobileElement&amp;gt; driver; @BeforeClass public static void setUp() throws Exception { DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.setCapability(&amp;quot;platformName&amp;quot;, &amp;quot;Android&amp;quot;); capabilities.</description>
    </item>
    
    <item>
      <title>Testes paralelos no Appium</title>
      <link>https://www.wikiod.com/pt/appium/testes-paralelos-no-appium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/appium/testes-paralelos-no-appium/</guid>
      <description>Execução paralela em appium usando o conceito Selenium GRID. Por favor, encontre o processo passo a passo.
Processo passo a passo # Testes paralelos com Appium usando GRID: Vou descrever a maneira que funcionou para mim. Criar grade de selênio com Appium
Configure a grade de selênio Faça o download do jar do servidor autônomo do selênio no sistema de arquivos local Abra seu terminal e navegue até o diretório onde você colocou o arquivo jar e execute o seguinte comando:</description>
    </item>
    
  </channel>
</rss>
