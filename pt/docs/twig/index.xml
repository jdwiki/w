<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de galho on </title>
    <link>https://www.wikiod.com/pt/docs/twig/</link>
    <description>Recent content in Tutorial de galho on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/twig/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o galho</title>
      <link>https://www.wikiod.com/pt/twig/comecando-com-o-galho/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twig/comecando-com-o-galho/</guid>
      <description>Uso básico da API # Ele também pode ser instalado baixando o código fonte e colocando-o em um diretório do seu projeto. No entanto, há muitos benefícios em usar o composer.
require &#39;/path/to/lib/Twig/Autoloader.php&#39;; Twig_Autoloader::register(); $loader = new Twig_Loader_Filesystem(&#39;/path/to/templates&#39;); $options = array( &#39;strict_variables&#39; =&amp;gt; false, &#39;debug&#39; =&amp;gt; false, &#39;cache&#39;=&amp;gt; false ); $twig = new Twig_Environment($loader, $options); Ao criar uma nova instância Twig_Environment, você pode passar um array de opções como segundo argumento do construtor.</description>
    </item>
    
    <item>
      <title>Estendendo galho</title>
      <link>https://www.wikiod.com/pt/twig/estendendo-galho/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twig/estendendo-galho/</guid>
      <description>Twig já tem alguns filtros e [funções](http://twig.sensiolabs.org/doc/functions/index. html), mas e se os recursos internos estiverem faltando ou você tiver que acessar algumas funções padrão do PHP em um modelo
Criando um Twig_Extension # Você pode agrupar todas as suas funções/filtros/testes/&amp;hellip; dentro de uma classe Twig_Extension personalizada:
ProjetoTwigExtension
class ProjectTwigExtension extends Twig_Extension { public function getFunctions() { return array( new Twig_SimpleFunction(&#39;twig_function_name&#39;, array($this, &#39;getTwigFunctionName&#39;)), new Twig_SimpleFunction(&#39;twig_function_foo&#39;, array($this, &#39;getTwigFunctionFoo&#39;)), ); } public function getFilters() { return array( new Twig_SimpleFilter(&#39;twig_filter_name&#39; , array($this, &#39;getTwigFilterName&#39;)), new Twig_SimpleFilter(&#39;twig_filter_foo&#39; , array($this, &#39;getTwigFilterFoo&#39;)), ); } public function getName() { return &#39;ProjectTwigExtension&#39;; } } Registrar extensão no galho</description>
    </item>
    
    <item>
      <title>Sintaxe do modelo básico</title>
      <link>https://www.wikiod.com/pt/twig/sintaxe-do-modelo-basico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twig/sintaxe-do-modelo-basico/</guid>
      <description>Explicação das construções de sintaxe de modelo básico
Acessando variáveis # Nos templates Twig as variáveis ​​podem ser acessadas usando a notação de chaves duplas {{ variableName }}.
Exemplo básico de saudação ao usuário
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;span&amp;gt;Hello {{ name }}&amp;lt;/span&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Acessando elementos do array # Twig como parâmetro pode receber array. Para acessar um elemento específico do array, você pode usar a notação de colchetes de acesso ao array php {{ array[key] }}.</description>
    </item>
    
    <item>
      <title>Herança de modelo</title>
      <link>https://www.wikiod.com/pt/twig/heranca-de-modelo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twig/heranca-de-modelo/</guid>
      <description>Usando um modelo básico # base.twig.html # &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;{{ title | default(&#39;Hello World&#39;) }}&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;theme.css&amp;quot;&amp;gt; {% block css %} {% endblock %} &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; {% block body %} &amp;lt;nav&amp;gt; {% block navigation %} &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Link&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Link&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Link&amp;lt;/a&amp;gt; {% endblock navigation %} &amp;lt;/nav&amp;gt; &amp;lt;section id=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;section id=&amp;quot;content&amp;quot;&amp;gt; {% block content %} &amp;lt;p&amp;gt; Lorem ipsum dolor sit amet. &amp;lt;/p&amp;gt; &amp;lt;/section&amp;gt; {% endblock content %} &amp;lt;/section&amp;gt; {% endblock body %} &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; page.</description>
    </item>
    
    <item>
      <title>Uso avançado</title>
      <link>https://www.wikiod.com/pt/twig/uso-avancado/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/twig/uso-avancado/</guid>
      <description>Por favor, note que a extensão Twig é não compatível com PHP7 e embora haja um pull request para resolver esta situação, ela ainda não fez parte da versão 1.x. Com a versão mais recente do Twig 2.x, a extensão C foi removida, mas pode ser parte de 2.1. Alguns benchmarks revelam melhorias mínimas com a extensão C no PHP7.
Construindo a extensão C # A extensão C é um recurso opcional do Twig que oferece algumas melhorias de desempenho de renderização de modelos.</description>
    </item>
    
  </channel>
</rss>
