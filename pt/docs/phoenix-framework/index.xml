<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de estrutura de fênix on </title>
    <link>https://www.wikiod.com/pt/docs/phoenix-framework/</link>
    <description>Recent content in Tutorial de estrutura de fênix on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/phoenix-framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Começando com o Phoenix-framework</title>
      <link>https://www.wikiod.com/pt/phoenix-framework/comecando-com-o-phoenix-framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/phoenix-framework/comecando-com-o-phoenix-framework/</guid>
      <description>Instalação de esqueleto # Às vezes você quer uma instalação sem nada, exceto a configuração mínima do phoenix. O comando follow lhe dará isso.
mix phoenix.new web --no-brunch --no-ecto Observação: Você deve ter instalado Elixir, Erlang, Hex, Mix e o arquivo Phoenix para instalação do esqueleto
Criando projeto Phoenix # Para criar seu primeiro projeto no framework Phoenix neste ponto você deve ter, Elixir, Erlang, Hex e o arquivo Phoenix instalado.</description>
    </item>
    
    <item>
      <title>Gerar documentação do projeto</title>
      <link>https://www.wikiod.com/pt/phoenix-framework/gerar-documentacao-do-projeto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/phoenix-framework/gerar-documentacao-do-projeto/</guid>
      <description>Justificativa # A invocação correta de módulos e funções auxiliares pode ser intimidante porque
estes são gerados dinamicamente (por exemplo, ao criar um novo projeto ou adicionar um novo recurso) eles não são documentados explicitamente (por exemplo, MyApp.ErrorHelpers.error_tag) a documentação não cobre todos os exemplos (por exemplo, MyApp.Router.Helpers.*_path em Phoenix.Router). Embora os auxiliares criados estejam espalhados por todo o seu projeto, sua localização segue uma lógica sólida. Você pode se acostumar com eles bem rápido e, felizmente, quando você gera um projeto com o Phoenix, o código é enviado com a documentação através dos atributos do módulo @doc e @moduledoc do Elixir.</description>
    </item>
    
    <item>
      <title>Uso de modelos Ecto em Phoenix</title>
      <link>https://www.wikiod.com/pt/phoenix-framework/uso-de-modelos-ecto-em-phoenix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/phoenix-framework/uso-de-modelos-ecto-em-phoenix/</guid>
      <description>Como gerar, editar e usar modelos ecto nos frameworks phoenix.
Gerar modelo de usuário a partir da linha de comando # Para gerar o modelo de usuário json com username, password_hash, email_id, created_at, updated_at, digite
mix phoenix.gen.json Usuário usuários nome de usuário:string email_id:string password_hash:string timestamps()
Migrações do modelo ecto # Quando você executa mix phoenix.gen.html ou mix phoenix.gen.json a partir da linha de comando, as migrações são criadas em priv -&amp;gt; repo -&amp;gt; migrations na pasta do seu projeto.</description>
    </item>
    
  </channel>
</rss>
