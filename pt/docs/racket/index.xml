<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de raquete on </title>
    <link>https://www.wikiod.com/pt/docs/racket/</link>
    <description>Recent content in Tutorial de raquete on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/racket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução à raquete</title>
      <link>https://www.wikiod.com/pt/racket/introducao-a-raquete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/introducao-a-raquete/</guid>
      <description>Raquete # Racket é uma linguagem de programação de espectro completo. Ele vai além de Lisp e Scheme com dialetos que suportam objetos, tipos, preguiça e muito mais. O Racket permite que os programadores vinculem componentes escritos em diferentes dialetos e capacita os programadores a criar novos dialetos específicos do projeto. As bibliotecas da Racket suportam aplicativos de servidores web e bancos de dados para GUIs e gráficos.
A documentação oficial, abrangente e muito bem escrita pode ser encontrada em http://docs.</description>
    </item>
    
    <item>
      <title>Fechamentos</title>
      <link>https://www.wikiod.com/pt/racket/fechamentos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/fechamentos/</guid>
      <description>Da tag StackOverflow fechamento:
Uma closure é uma função de primeira classe que se refere a variáveis ​​(close over) do escopo em que foi definida. Se o fechamento ainda existir após o término de seu escopo de definição, as variáveis ​​que ele fecha continuarão a existir também.
Às vezes é útil considerar fechamentos e objetos como semelhantes.
O venerável mestre Qc Na caminhava com seu aluno, Anton. Na esperança de levar o mestre a uma discussão, Anton disse: &amp;ldquo;Mestre, ouvi dizer que os objetos são uma coisa muito boa - isso é verdade?</description>
    </item>
    
    <item>
      <title>Funções de ordem superior</title>
      <link>https://www.wikiod.com/pt/racket/funcoes-de-ordem-superior/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/funcoes-de-ordem-superior/</guid>
      <description>Mapa # Map aplica uma função a cada elemento de uma lista:
map: (a -&amp;gt; b) (listof a) -&amp;gt; (listof b) &amp;gt; (map (lambda (x) (* x 2)) (list 1 2 3 4 5) (list 2 4 6 8 10) &amp;gt; (map sqrt (list 1 4 9)) (list 1 2 3) &amp;gt; (map (lambda (x) (if (even? x) &amp;quot;even&amp;quot; &amp;quot;odd&amp;quot;)) (list 1 2 3)) (list &amp;quot;odd&amp;quot; &amp;quot;even&amp;quot; &amp;quot;odd&amp;quot;) Dobrar # Fold Right aplica sucessivamente uma função de dois argumentos a cada elemento em uma lista da esquerda para a direita, começando com um valor base:</description>
    </item>
    
    <item>
      <title>Comentários</title>
      <link>https://www.wikiod.com/pt/racket/comentarios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/comentarios/</guid>
      <description>Os tipos de comentários mais comuns são comentários de linha e s-expression (usando ; e #; respectivamente).
É comum usar de 1 a 3 ponto e vírgula dependendo do tipo de comentário feito. Referir-se ???
Comentários de linha única # ; We make single line comments by writing out text after a semicolon Bloquear comentários # #| We make block comments like this |# Comentários da expressão S # #;(define (commented-out-function x) (print (string-append &amp;quot;This entire &amp;quot; &amp;quot;s-expression is commented out!</description>
    </item>
    
    <item>
      <title>Funções</title>
      <link>https://www.wikiod.com/pt/racket/funcoes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/funcoes/</guid>
      <description>Sintaxe # (defina (argumentos de nome &amp;hellip;) corpo)
(argumentos da função &amp;hellip;)
Chamadas de funções simples # Você pode chamar uma função em Racket envolvendo-a entre parênteses com os argumentos depois dela. Isso se parece com (argumento da função ...).
&amp;gt; (define (f x) x) &amp;gt; (f 1) 1 &amp;gt; (f &amp;quot;salmon&amp;quot;) &amp;quot;salmon&amp;quot; &amp;gt; (define (g x y) (string-append x y)) &amp;gt; (g &amp;quot;large&amp;quot; &amp;quot;salmon&amp;quot;) &amp;quot;largesalmon&amp;quot; &amp;gt; (g &amp;quot;large &amp;quot; &amp;quot;salmon&amp;quot;) &amp;quot;large salmon&amp;quot; Operações como + e * também são funções, e usam a mesma sintaxe de chamar f ou g.</description>
    </item>
    
    <item>
      <title>Etapas de instalação (Linux)</title>
      <link>https://www.wikiod.com/pt/racket/etapas-de-instalacao-linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/etapas-de-instalacao-linux/</guid>
      <description>Instalação ou Configuração # Visite https://download.racket-lang.org e escolha entre as duas distribuições disponíveis:
Racket é a distribuição principal, vem com vários pacotes adicionais como matemática/teoria dos números assim como o DrRacket IDE. O Minimal Racket é bem menor e vem apenas com os pacotes necessários. Etapas de instalação para Linux: # A instalação é muito simples. Se você está acostumado com esse tipo de coisa, basta seguir estes quatro passos. Um passo a passo mais detalhado é detalhado posteriormente, se você preferir.</description>
    </item>
    
    <item>
      <title>Recursão</title>
      <link>https://www.wikiod.com/pt/racket/recursao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/recursao/</guid>
      <description>Usando definir # #lang racket (define (sum-of-list l) (if (null? l) 0 (+ (car l) (sum-of-list (cdr l))))) (sum-of-list &#39;(1 2 3 4 5)) ;; =&amp;gt; 15 Usando let-rec # #lang racket (letrec ([sum-of-list (λ (l) (if (null? l) 0 (+ (car l) (sum-of-list (cdr l)))))]) (sum-of-list &#39;(1 2 3 4 5))) ;; =&amp;gt; 15 É possível escrever funções mutuamente recursivas com letrec:
#lang racket (letrec ([even? (λ (n) (if (= n 0) #t (odd?</description>
    </item>
    
    <item>
      <title>Etapas de instalação (Windows)</title>
      <link>https://www.wikiod.com/pt/racket/etapas-de-instalacao-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/etapas-de-instalacao-windows/</guid>
      <description>Instalação ou Configuração # Visite https://download.racket-lang.org e escolha entre as duas distribuições disponíveis:
Racket é a distribuição principal, vem com vários pacotes adicionais como matemática/teoria dos números assim como o DrRacket IDE. O Minimal Racket é bem menor e vem apenas com os pacotes necessários. Para executar um programa, abra o DrRacket, digite o programa começando com #lang racket e clique no botão Run próximo ao canto superior direito.
Etapas de instalação para Windows: # A instalação é muito simples.</description>
    </item>
    
    <item>
      <title>Rabisco</title>
      <link>https://www.wikiod.com/pt/racket/rabisco/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/rabisco/</guid>
      <description>Scribble é a ferramenta usada para criar documentação do Racket, e você pode documentar seus próprios pacotes com ela também! Quando publicada, sua documentação aparecerá em https://docs.racket-lang.org/, juntamente com a documentação principal do Racket.
Scribble é implementado como uma linguagem para a plataforma Racket. Documentos de rabisco, portanto, geralmente começam com #lang scribble/manual
Parágrafos e seções # #lang scribble/manual @section{Introduction} First paragraph. Some text, some text, some text, some text, some text, some text.</description>
    </item>
    
    <item>
      <title>Etapas de instalação (macOS)</title>
      <link>https://www.wikiod.com/pt/racket/etapas-de-instalacao-macos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/racket/etapas-de-instalacao-macos/</guid>
      <description>Instalação ou Configuração # Visite https://download.racket-lang.org e escolha entre as duas distribuições disponíveis:
Racket é a distribuição principal, vem com vários pacotes adicionais como matemática/teoria dos números assim como o DrRacket IDE. O Minimal Racket é bem menor e vem apenas com os pacotes necessários. Etapas de instalação para macOS: # A instalação é muito simples. Se você está acostumado com esse tipo de coisa, basta acessar https://download.racket-lang.org, baixar e instalar o arquivo .</description>
    </item>
    
  </channel>
</rss>
