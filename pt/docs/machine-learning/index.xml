<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial de aprendizado de máquina on </title>
    <link>https://www.wikiod.com/pt/docs/machine-learning/</link>
    <description>Recent content in tutorial de aprendizado de máquina on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/pt/docs/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução ao aprendizado de máquina</title>
      <link>https://www.wikiod.com/pt/machine-learning/introducao-ao-aprendizado-de-maquina/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/introducao-ao-aprendizado-de-maquina/</guid>
      <description>Instalação ou configuração usando Python # 1) scikit aprender
scikit-learn é um módulo Python para aprendizado de máquina construído sobre SciPy e distribuído sob a licença BSD de 3 cláusulas. Ele apresenta vários algoritmos de classificação, regressão e clustering, incluindo máquinas de vetor de suporte, florestas aleatórias, aumento de gradiente, k-means e DBSCAN, e foi projetado para interoperar com as bibliotecas numéricas e científicas do Python NumPy e SciPy.
A versão estável atual do scikit-learn requer:</description>
    </item>
    
    <item>
      <title>Perceptron</title>
      <link>https://www.wikiod.com/pt/machine-learning/perceptron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/perceptron/</guid>
      <description>Implementando um modelo Perceptron em C++ # Neste exemplo vou passar pela implementação do modelo perceptron em C++ para que você possa ter uma ideia melhor de como ele funciona.
Em primeiro lugar, é uma boa prática escrever um algoritmo simples do que queremos fazer.
Algoritmo:
Faça um vetor para os pesos e inicialize-o com 0 (não se esqueça de adicionar o termo de polarização) Continue ajustando os pesos até obtermos 0 erros ou uma contagem baixa de erros.</description>
    </item>
    
    <item>
      <title>Aprendizado Supervisionado</title>
      <link>https://www.wikiod.com/pt/machine-learning/aprendizado-supervisionado/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/aprendizado-supervisionado/</guid>
      <description>Regressão linear # Visto que o Aprendizagem Supervisionada consiste em uma variável alvo ou resultado (ou variável dependente) que deve ser prevista a partir de um determinado conjunto de preditores (variáveis ​​independentes). Usando esse conjunto de variáveis, geramos uma função que mapeia as entradas para as saídas desejadas. O processo de treinamento continua até que o modelo atinja um nível desejado de precisão nos dados de treinamento.
Portanto, existem muitos exemplos de algoritmos de Aprendizado Supervisionado, então neste caso eu gostaria de focar em Regressão Linear</description>
    </item>
    
    <item>
      <title>Redes neurais</title>
      <link>https://www.wikiod.com/pt/machine-learning/redes-neurais/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/redes-neurais/</guid>
      <description>Funções de ativação # As funções de ativação também conhecidas como função de transferência são usadas para mapear nós de entrada para nós de saída de determinada maneira.
Eles são usados ​​para conferir não linearidade à saída de uma camada de rede neural.
Algumas funções comumente usadas e suas curvas são dadas abaixo: Função sigmóide # O sigmoid é uma função de esmagamento cuja saída está no intervalo [0, 1].</description>
    </item>
    
    <item>
      <title>Métricas de avaliação</title>
      <link>https://www.wikiod.com/pt/machine-learning/metricas-de-avaliacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/metricas-de-avaliacao/</guid>
      <description>Área sob a curva da característica operacional do receptor (AUROC) # O AUROC é uma das métricas mais usadas para avaliar o desempenho de um classificador. Esta seção explica como calculá-lo.
AUC (Área Sob a Curva) é usado na maioria das vezes para significar AUROC, o que é uma má prática, pois AUC é ambígua (pode ser qualquer curva), enquanto AUROC não é.
Visão geral – Abreviaturas # Abreviatura Significado AUROC Área Sob a Curva da Característica Operacional do Receptor AUC Área sob a Cura ROC Característica Operacional do Receptor TP Verdadeiros Positivos TN Verdadeiros Negativos FP Falsos Positivos FN Falsos Negativos TPR Taxa de Verdadeiro Positivo FPR Taxa de falsos positivos Interpretando o AUROC # O AUROC tem várias interpretações equivalentes:</description>
    </item>
    
    <item>
      <title>Aprendizado de máquina usando Java</title>
      <link>https://www.wikiod.com/pt/machine-learning/aprendizado-de-maquina-usando-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/aprendizado-de-maquina-usando-java/</guid>
      <description>lista de ferramentas # Cortical.io - Retina: an API performing complex NLP operations (disambiguation, classification, streaming text filtering, etc...) as quickly and intuitively as the brain. CoreNLP - Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words Stanford Parser - A natural language parser is a program that works out the grammatical structure of sentences Stanford POS Tagger - A Part-Of-Speech Tagger (POS Tagger Stanford Name Entity Recognizer - Stanford NER is a Java implementation of a Named Entity Recognizer.</description>
    </item>
    
    <item>
      <title>Aprendizado Profundo</title>
      <link>https://www.wikiod.com/pt/machine-learning/aprendizado-profundo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/aprendizado-profundo/</guid>
      <description>Deep Learning é um subcampo do aprendizado de máquina em que redes neurais artificiais de várias camadas são usadas para fins de aprendizado. O Deep Learning encontrou muitas implementações excelentes, por exemplo, Reconhecimento de fala, legendas no Youtube, recomendação da Amazon e assim por diante. Para obter informações adicionais, há um tópico dedicado a aprendizagem profunda.
Breve resumo de aprendizado profundo # Para treinar uma rede neural, primeiro precisamos projetar uma ideia boa e eficiente.</description>
    </item>
    
    <item>
      <title>Scikit Learn</title>
      <link>https://www.wikiod.com/pt/machine-learning/scikit-learn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/scikit-learn/</guid>
      <description>Um Problema Básico de Classificação Simples (XOR) usando algoritmo de k vizinho mais próximo # Considere que você deseja prever a resposta correta para o problema popular do XOR. Você sabia o que é XOR (por exemplo, [x0 x1] =&amp;gt; y). por exemplo [0 0] =&amp;gt; 0, [0 1] =&amp;gt; 1 e&amp;hellip;
#Load Sickit learn data from sklearn.neighbors import KNeighborsClassifier #X is feature vectors, and y is correct label(To train model) X = [[0, 0],[0 ,1],[1, 0],[1, 1]] y = [0,1,1,0] #Initialize a Kneighbors Classifier with K parameter set to 2 KNC = KNeighborsClassifier(n_neighbors= 2) #Fit the model(the KNC learn y Given X) KNC.</description>
    </item>
    
    <item>
      <title>SVM</title>
      <link>https://www.wikiod.com/pt/machine-learning/svm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/svm/</guid>
      <description>Diferença entre regressão logística e SVM # Limite de decisão quando classificamos usando regressão logística- Limite de decisão quando classificamos usando SVM-
Como pode ser observado, o SVM tenta manter uma &amp;rsquo;lacuna&amp;rsquo; em ambos os lados do limite de decisão. Isso se mostra útil quando encontramos novos dados.
Com novos dados-
A regressão logística tem um desempenho mau (novo círculo vermelho é classificado como azul) -
Considerando que SVM pode classificá-lo corretamente (o novo círculo vermelho é classificado corretamente no lado vermelho)-</description>
    </item>
    
    <item>
      <title>Aprendizado de máquina e sua classificação</title>
      <link>https://www.wikiod.com/pt/machine-learning/aprendizado-de-maquina-e-sua-classificacao/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pt/machine-learning/aprendizado-de-maquina-e-sua-classificacao/</guid>
      <description>O que é aprendizado de máquina? # Duas definições de Machine Learning são oferecidas. Arthur Samuel descreveu-o como:
o campo de estudo que dá aos computadores a capacidade de aprender sem sendo explicitamente programado.
Esta é uma definição mais antiga e informal.
Tom Mitchell fornece uma definição mais moderna:
Diz-se que um programa de computador aprende com a experiência E em relação a alguma classe de tarefas T e medida de desempenho P, se seu desempenho em tarefas em T, medidas por P, melhoram com a experiência E.</description>
    </item>
    
  </channel>
</rss>
