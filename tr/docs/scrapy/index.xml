<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cıvıl cıvıl öğretici on </title>
    <link>https://www.wikiod.com/tr/docs/scrapy/</link>
    <description>Recent content in cıvıl cıvıl öğretici on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/scrapy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>scrapy&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/scrapy/scrapyye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/scrapy/scrapyye-baslarken/</guid>
      <description>Scrapy Kurulumu # scrapy kurulumunun ön koşulu:
Python 2.7 veya üzeri 3.3 pip ve setuptools Python paketleri. lxml OpenSSL. Scrapy&amp;rsquo;yi pip kullanarak kurabilirsiniz. pip komutunu kullanarak yüklemek için:
pip install Scrapy Platforma özel kurulum
Anakonda
Scrapy&amp;rsquo;yi yüklemek için önerilen yol budur.
Anaconda veya Miniconda&amp;rsquo;yı zaten kurduysanız, Scrapinghub şirketi Linux, Windows ve OS X için resmi conda paketlerini korur.
Conda kullanarak Scrapy&amp;rsquo;yi kurmak için şunu çalıştırın:
conda install -c scrapinghub scrapy Ubuntu 9.</description>
    </item>
    
    <item>
      <title>Scrapy&#39;yi MySQL&#39;e bağlama</title>
      <link>https://www.wikiod.com/tr/scrapy/scrapyyi-mysqle-baglama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/scrapy/scrapyyi-mysqle-baglama/</guid>
      <description>MySQLDB modülünü kullanarak Scrapy&amp;rsquo;de MySQL&amp;rsquo;e bağlanma ve toplu ekleme - Python 2.7 # Bu örnek, Python Scrapy kullanarak verileri MySQL&amp;rsquo;e dinamik olarak nasıl ekleyeceğinizi gösterir.
Herhangi bir proje için pipelines.py dosyasını düzenlemeniz gerekmez.
Bu örnek tüm projeniz için kullanılabilir.
Sadece &amp;lsquo;Spider&amp;rsquo;ınızdan &amp;lsquo;ver you_data_dictionary&amp;rsquo; ve &amp;lsquo;pipelines.py&amp;rsquo; içinde otomatik olarak bir sorgu oluşturulacaktır.
Satırlar, toplu ekleme ifadesi kullanılarak toplu olarak eklenir.
OKUMALISINIZ:
Örümcek&amp;rsquo;ten &amp;lsquo;vereceğiniz&amp;rsquo; `you_data_dictionary&amp;rsquo; anahtarlarınız, veritabanı tablosundaki sütun adlarınızla aynı olmalıdır. Kodunuzu çalıştırmadan önce tablo oluşturulmalıdır.</description>
    </item>
    
    <item>
      <title>Öğe Ardışık Düzeni</title>
      <link>https://www.wikiod.com/tr/scrapy/oge-ardsk-duzeni/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/scrapy/oge-ardsk-duzeni/</guid>
      <description>Scrapy&amp;rsquo;nin çıkardığı her öğeyi işlemenin yolu.
Bir Item Pipeline, bazı spesifik yöntemleri geçersiz kılan ve scrapy projesinin &amp;ldquo;ayarları&amp;quot;nda etkinleştirilmesi gereken bir python sınıfıdır.
Python Scrapy&amp;rsquo;de dinamik bir ardışık düzen oluşturma # settings.py dosyanızda ardışık düzenleri etkinleştirin
ITEM_PIPELINES = { &#39;project_folder.pipelines.MyPipeline&#39;: 100 } Ardından bu kodu items.py içine yazın
# -*- coding: utf-8 -*- from scrapy import Item, Field from collections import OrderedDict class DynamicItem(Item): def __setitem__(self, key, value): self._values[key] = value self.</description>
    </item>
    
  </channel>
</rss>
