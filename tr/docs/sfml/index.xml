<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sfml Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/sfml/</link>
    <description>Recent content in sfml Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/sfml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>sfml&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/sfml/sfmlye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sfml/sfmlye-baslarken/</guid>
      <description>Temel SFML programı # Her şey doğru ayarlanmışsa, aşağıdaki kod parçası &amp;ldquo;SFML çalışıyor!&amp;rdquo; başlıklı bir pencere gösterecektir. yeşil bir daire ile:
#include &amp;lt;SFML/Graphics.hpp&amp;gt; int main() { sf::RenderWindow window(sf::VideoMode(200, 200), &amp;quot;SFML works!&amp;quot;); sf::CircleShape shape(100.f); shape.setFillColor(sf::Color::Green); while (window.isOpen()) { sf::Event event; while (window.pollEvent(event)) { if (event.type == sf::Event::Closed) window.close(); } window.clear(); window.draw(shape); window.display(); } return 0; } Kurulum - Linux # Linux&amp;rsquo;ta SFML kurulumunun farklı yaklaşımları vardır:
Doğrudan dağıtımınızın paket deposundan kurun Kaynak kodunu alın, oluşturun ve kurun Önceden derlenmiş SDK&amp;rsquo;yı indirin ve dosyaları manuel olarak kopyalayın Seçenek 1 tercih edilendir; Yüklemek istediğiniz SFML sürümü resmi depoda mevcutsa, paket yöneticinizi kullanarak yükleyin.</description>
    </item>
    
    <item>
      <title>Windows&#39;ta Android için SFML&#39;yi Derleyin</title>
      <link>https://www.wikiod.com/tr/sfml/windowsta-android-icin-sfmlyi-derleyin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sfml/windowsta-android-icin-sfmlyi-derleyin/</guid>
      <description>4. SFML Android Örneği Oluşturun # Android Örneği&amp;rsquo;ni [SFML_ROOT]\examples\android\ içinde bulabilirsiniz. SFML deposunu orijinal durumunda bırakmak için kopyalayabilirsiniz. Örnek konumda cmd.exe&amp;rsquo;yi açın.
Mevcut tüm Android derleme hedeflerinin bir listesini almak için:
android list target Örnek için Güncelleme Projesini Çalıştırın:
android update project --path [Path/to/Android/Sample] --target [targetID] Örneğin.
android update project --path &amp;quot;&amp;quot; --target android-19 Yol için &amp;quot;&amp;quot; kullanabiliriz çünkü örnek yolda zaten cmd çalıştırıyoruz.
Derlemek için bu komutu kullanın:
ndk-build Hata ayıklama (veya yayın) apk&amp;rsquo;sini oluşturun:</description>
    </item>
    
    <item>
      <title>Pencere Temelleri</title>
      <link>https://www.wikiod.com/tr/sfml/pencere-temelleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sfml/pencere-temelleri/</guid>
      <description>SFML tarafından sağlanan &amp;ldquo;sf::RectangleShape&amp;rdquo; veya &amp;ldquo;sf::Sprite&amp;rdquo; gibi temel öğeleri çizmeyi planlıyorsanız, &amp;ldquo;sf::Window&amp;rdquo; yerine &amp;ldquo;sf::RenderWindow&amp;rdquo; kullanmanız gerekir.
OpenGL penceresi oluşturma # SFML&amp;rsquo;deki Windows, iki sınıftan biri ile temsil edilir:
sf::Window, bir OpenGL oluşturma bağlamı da dahil olmak üzere işletim sistemi tarafından sağlanan genel bir penceredir. &amp;lsquo;sf::RenderWindow&amp;rsquo;, &amp;lsquo;sf::RenderTarget&amp;rsquo; olarak da işlev gören ve SFML&amp;rsquo;nin ilkellerinin kendisine işlenmesine izin veren sf::Window&amp;rsquo;un özel bir sürümüdür. Temel kullanım her iki durumda da aynıdır.
#include &amp;lt;SFML/Window.hpp&amp;gt; int main(int argc, char *argv) { // Create and initialize a window object sf::Window window(sf::VideoMode(640, 480), &amp;quot;My SFML Window&amp;quot;); // Repeat this as long as the window is open while (window.</description>
    </item>
    
  </channel>
</rss>
