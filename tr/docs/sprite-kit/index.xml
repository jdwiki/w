<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sprite-kit Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/sprite-kit/</link>
    <description>Recent content in sprite-kit Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/sprite-kit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sprite-kit&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/sprite-kit/sprite-kiti-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/sprite-kiti-kullanmaya-baslama/</guid>
      <description>İlk SpriteKit Oyununuz (Merhaba Dünya) # Xcode&amp;rsquo;u açın ve &amp;lsquo;Yeni bir Xcode Projesi Oluştur&amp;rsquo; seçeneğini seçin.
Şimdi soldan &amp;ldquo;iOS &amp;gt; Uygulama&amp;quot;yı ve ana seçim alanından &amp;ldquo;Oyun&amp;quot;u seçin.
İleri&amp;lsquo;ye basın.
&amp;ldquo;Ürün Adı&amp;quot;na ilk harika oyununuzun adını yazın. &amp;lsquo;Kuruluş Adı&amp;rsquo;na şirketinizin adını (veya sadece kendi adınızı) girin. &amp;ldquo;Kuruluş Tanımlayıcı&amp;rdquo;, tersine çevrilmiş alan adınızı içermelidir (&amp;ldquo;www.alanadiniz.com&amp;rdquo;, &amp;ldquo;com.alanadiniz&amp;rdquo; olur). Alan adınız yoksa istediğiniz herhangi bir şeyi yazın (bu sadece ve testtir). Ardından &amp;lsquo;Swift&amp;rsquo;, &amp;lsquo;SpriteKit&amp;rsquo; ve &amp;lsquo;iPhone&amp;rsquo;u seçin.</description>
    </item>
    
    <item>
      <title>SKNode Çarpışması</title>
      <link>https://www.wikiod.com/tr/sprite-kit/sknode-carpsmas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/sknode-carpsmas/</guid>
      <description>Sprite Kit çarpışma ve temas olayı işlemenin belirleyicileri, etkileşim halindeki nesne türlerinizin her biri için &amp;ldquo;categoryBitMask&amp;rdquo;, &amp;ldquo;collisionBitMask&amp;rdquo; ve &amp;ldquo;contactTestBitMask&amp;rdquo; için sizin tarafınızdan oluşturulan ilişki ayarlarıdır. Bunları, temaslardan ve çarpışmalardan istediğiniz sonuçların hizmetine rasyonel olarak ayarlayarak, hangi türlerin çarpışabileceğini ve diğerleriyle temaslar hakkında bilgi vereceğini belirler ve istenmeyen çarpışma, temas ve fizik işleme yükünden kaçınırsınız.
Her &amp;lsquo;varlık&amp;rsquo; türü için üçünü de ayarlayabilirsiniz:
&amp;lsquo;categoryBitMask&amp;rsquo; : bu tür düğüme özel bir kategori &amp;ldquo;collisionBitMask&amp;rdquo; : bir çarpışma farklılaştırıcısı, yukarıdakinden farklı olabilir contactTestBitMask : bir temas farklılaştırıcı, yukarıdakilerin her ikisinden de farklı olabilir Çarpışmaları ve kişileri uygulamaya yönelik genel adımlar şunlardır:</description>
    </item>
    
    <item>
      <title>SpriteKit ile UIKit öğeleri</title>
      <link>https://www.wikiod.com/tr/sprite-kit/spritekit-ile-uikit-ogeleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/spritekit-ile-uikit-ogeleri/</guid>
      <description>SKScene&amp;rsquo;de UITableView # import SpriteKit import UIKit class GameRoomTableView: UITableView,UITableViewDelegate,UITableViewDataSource { var items: [String] = [&amp;quot;Player1&amp;quot;, &amp;quot;Player2&amp;quot;, &amp;quot;Player3&amp;quot;] override init(frame: CGRect, style: UITableViewStyle) { super.init(frame: frame, style: style) self.delegate = self self.dataSource = self } required init?(coder aDecoder: NSCoder) { fatalError(&amp;quot;init(coder:) has not been implemented&amp;quot;) } // MARK: - Table view data source func numberOfSections(in tableView: UITableView) -&amp;gt; Int { return 1 } func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&amp;gt; Int { return items.</description>
    </item>
    
    <item>
      <title>SKScene</title>
      <link>https://www.wikiod.com/tr/sprite-kit/skscene/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/skscene/</guid>
      <description>SKScene, SpriteKit uygulamasında tek bir sahneyi temsil eder. Bir SKScene, bir SKView içinde &amp;lsquo;sunulur&amp;rsquo;. Gerçek hareketli grafikleri uygulamak için sahneye SKSpriteNodes eklenir.
Basit uygulamalar, tüm SpriteKit içeriğini içeren tek bir SKScene&amp;rsquo;e sahip olabilir. Daha karmaşık uygulamalar, farklı zamanlarda sunulan birkaç SKScene sahip olabilir (ör. oyun seçeneklerini sunmak için bir açılış sahnesi, oyunun kendisini uygulamak için ikinci bir sahne ve &amp;lsquo;Oyun Bitti&amp;rsquo; sonuçlarını sunmak için üçüncü bir sahne).
SKView&amp;rsquo;i Dolduran bir SKScene Oluşturun # SKView&amp;rsquo;u tam olarak dolduran bir SKScene oluşturmak için basit bir kullanım durumu.</description>
    </item>
    
    <item>
      <title>SKSpriteNode (Sprites)</title>
      <link>https://www.wikiod.com/tr/sprite-kit/skspritenode-sprites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/skspritenode-sprites/</guid>
      <description>Sözdizimi # kolaylık init(imageNamed name: String) // Varlık kataloğundaki adlandırılmış bir görüntüden bir SKSpriteNode oluşturun
var konum: CGPoint // SKSpriteNode tarafından devralınan SKNode özelliği. Düğümün ebeveyn koordinat sistemindeki konumu.
func addChild(_ düğüm: SKNode) // SKScene tarafından devralınan SKNode yöntemi. Sahneye bir SKSpriteNode eklemek için kullanılır (diğer SKNode&amp;rsquo;lara SKNode eklemek için de kullanılır).
SKSpriteNode&amp;rsquo;un Alt Sınıflandırılması # SKSpriteNode alt sınıfını oluşturabilir ve kendi hareketli grafik türünüzü tanımlayabilirsiniz.
class Hero: SKSpriteNode { //Use a convenience init when you want to hard code values convenience init() { let texture = SKTexture(imageNamed: &amp;quot;Hero&amp;quot;) self.</description>
    </item>
    
    <item>
      <title>iOS cihazlarda dokunmatik girişi algılama</title>
      <link>https://www.wikiod.com/tr/sprite-kit/ios-cihazlarda-dokunmatik-girisi-alglama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/ios-cihazlarda-dokunmatik-girisi-alglama/</guid>
      <description>Dokunma algılama # Kullanıcı dokunuşunu algılamak için 4 &amp;ldquo;SKScene&amp;rdquo; yöntemini geçersiz kılabilirsiniz
class GameScene: SKScene { override func touchesBegan(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) { } override func touchesMoved(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) { } override func touchesEnded(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) { } override func touchesCancelled(touches: Set&amp;lt;UITouch&amp;gt;?, withEvent event: UIEvent?) { } } Lütfen her yöntemin (belirli koşullar altında) birden fazla tekli dokunma olayı içerebilen bir &amp;ldquo;dokunmalar&amp;rdquo; parametresi aldığını unutmayın.</description>
    </item>
    
    <item>
      <title>SKGörünüm</title>
      <link>https://www.wikiod.com/tr/sprite-kit/skgorunum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/skgorunum/</guid>
      <description>Parametreler # parametre Ayrıntılar gösteriFPS Görünümde Saniyedeki Kare Sayısı olarak geçerli kare hızının bir sayısını görüntüleyin. gösterirNodeCount Görünümde görüntülenen mevcut SKNode sayısının bir sayısını görüntüleyin. gösterilerFizik Görünümde SKPhysicsBodys&amp;rsquo;in görsel bir temsilini görüntüleyin. gösterilerAlanlar Görünümde fizik alanlarının etkilerini temsil eden bir resim görüntüleyin. showDrawCount Görünümü oluşturmak için gereken çizim geçişlerinin sayısını görüntüleyin. gösterilerQuadCount Görünümü oluşturmak için gereken dikdörtgen sayısını görüntüleyin. SKView, SpriteKit 2D animasyonlarını sunmak için kullanılan bir UIView alt sınıfıdır.</description>
    </item>
    
    <item>
      <title>SKAksiyon</title>
      <link>https://www.wikiod.com/tr/sprite-kit/skaksiyon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/skaksiyon/</guid>
      <description>Basit Bir SKA İşlemi Oluşturun ve Çalıştırın # Çok basit bir örnek, bir SKSpriteNode&amp;rsquo;u karartmak olabilir.
Swift&amp;rsquo;te:
let node = SKSpriteNode(imageNamed: &amp;quot;image&amp;quot;) let action = SKAction.fadeOutWithDuration(1.0) node.runAction(action) Yinelenen Bir Eylem Dizisi Oluşturma # Bazen tekrar veya sırayla bir işlem yapmak gerekir. Bu örnek, düğümün toplam 3 kez açılıp kapanmasını sağlayacaktır.
Swift&amp;rsquo;te:
let node = SKSpriteNode(imageNamed: &amp;quot;image&amp;quot;) let actionFadeOut = SKAction.fadeOutWithDuration(1.0) let actionFadeIn = SKAction.fadeInWithDuration(1.0) let actionSequence = SKAction.sequence([actionFadeOut, actionFadeIn]) let actionRepeat = SKAction.</description>
    </item>
    
    <item>
      <title>SpriteKit SKActions&#39;ta NSTimers&#39;a karşı zamanlı işlevler</title>
      <link>https://www.wikiod.com/tr/sprite-kit/spritekit-skactionsta-nstimersa-kars-zamanl-islevler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/spritekit-skactionsta-nstimersa-kars-zamanl-islevler/</guid>
      <description>Zamanlayıcı işlevlerini gerçekleştirmek için SKActionları ne zaman kullanmalısınız? Neredeyse her zaman. Bunun nedeni, &amp;lsquo;Sprite Kit&amp;rsquo;in bir güncelleme aralığında çalışması ve bu aralığın hızının, sürecin ömrü boyunca &amp;lsquo;hız&amp;rsquo; özelliği kullanılarak değiştirilebilmesidir. Sahneler de duraklatılabilir. SKActionlar sahne içinde çalıştığından, bu özellikleri değiştirdiğinizde zaman fonksiyonlarınızı değiştirmenize gerek kalmaz. Sahneniz işleme 0,5 saniye sonraysa ve sahneyi duraklatırsanız, herhangi bir zamanlayıcıyı durdurmanız ve bu 0,5 saniyelik farkı korumanız gerekmez. Size otomatik olarak verilir, böylece ara verdiğinizde kalan süre devam eder.</description>
    </item>
    
    <item>
      <title>Fizik</title>
      <link>https://www.wikiod.com/tr/sprite-kit/fizik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sprite-kit/fizik/</guid>
      <description>didBeginContact yönteminde düğüm nasıl doğru şekilde kaldırılır (birden çok kişi) # // PHYSICS CONSTANTS struct PhysicsCategory { static let None : UInt32 = 0 static let All : UInt32 = UInt32.max static let player : UInt32 = 0b1 // 1 static let bullet : UInt32 = 0b10 // 2 } var nodesToRemove = [SKNode]() // #-#-#-#-#-#-#-#-#-#-#-#-#-#-# //MARK: - Physic Contact Delegate methods // #-#-#-#-#-#-#-#-#-#-#-#-#-#-# func didBegin(_ contact: SKPhysicsContact) { var one: SKPhysicsBody var two: SKPhysicsBody if contact.</description>
    </item>
    
  </channel>
</rss>
