<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rubygems Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/rubygems/</link>
    <description>Recent content in rubygems Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/rubygems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rubygems&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/rubygems/rubygemsi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/rubygems/rubygemsi-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # Yüklü herhangi bir RubyGems yoksa, yazılımı elde etmek için el ile yapmak için hala mücevher öncesi bir yaklaşım vardır:
RubyGems&amp;lsquo;den indirin
Bir dizine açın ve orada &amp;ldquo;cd&amp;rdquo;
Şununla yükleyin: ruby setup.rb (admin/root ayrıcalığına ihtiyacınız olabilir)
sudo ruby setup.rb Daha fazla ayrıntı ve diğer seçenekler için bkz.
ruby setup.rb --help Linux&amp;rsquo;ta kurulum # Rubygems yüklemeden önce Ruby&amp;rsquo;nin kurulu olduğundan emin olun ve ardından:
Ubuntu&amp;rsquo;da apt-get Kullanarak RubyGems Kurulumu</description>
    </item>
    
    <item>
      <title>anemon</title>
      <link>https://www.wikiod.com/tr/rubygems/anemon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/rubygems/anemon/</guid>
      <description>Sözdizimi # Tarayıcıyı başlatmak için Anemone::Core.new(url, options) kullanın Ziyaret edilen her sayfada kod çalıştırmak için on_every_page bloğunu kullanın Taramayı başlatmak için .run yöntemini kullanın. Önceden hiçbir kod, herhangi bir GET aramasını başlatmaz. Parametreler # parametre Ayrıntılar url URL (taranacak protokol dahil) seçenekler isteğe bağlı karma, tüm seçeneklere bakın burada Tarayıcı, yalnızca başlangıç ​​URL&amp;rsquo;si ile aynı etki alanında bulunan bağlantıları ziyaret eder. &amp;ldquo;media.domain.com&amp;rdquo; gibi içerik alt alan adlarıyla uğraşırken bunu bilmek önemlidir, çünkü bunlar &amp;ldquo;domain.</description>
    </item>
    
    <item>
      <title>Gemfile&#39;de mücevher kaynağını değiştir</title>
      <link>https://www.wikiod.com/tr/rubygems/gemfilede-mucevher-kaynagn-degistir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/rubygems/gemfilede-mucevher-kaynagn-degistir/</guid>
      <description>Gemfile&amp;rsquo;de belirli bir mücevher için github deposunu kullanın # Onun yerine
`mücevher &amp;lsquo;raylar&amp;rsquo;&#39;
İle bir github kullanıcı/repo kombinasyonu belirtebilirsiniz.
`gem &amp;lsquo;raylar&amp;rsquo;, github: &amp;lsquo;raylar/raylar&amp;rsquo;&amp;rsquo;
gemfile içindeki belirli bir mücevher için ref, dal, git&amp;rsquo;i kullanın # gem &#39;any gem&#39;,git: &#39;any repo&#39;,branch: &#39;specific branch of that repo&#39;,ref: &#39;reference no.&#39; ref bireysel taahhüdü belirtir. dal, çekilecek git dalını belirtir.</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>https://www.wikiod.com/tr/rubygems/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/rubygems/json/</guid>
      <description>Ruby için &amp;ldquo;json&amp;rdquo; mücevheri, JSON&amp;rsquo;un ayrıştırılmasına ve oluşturulmasına izin verir.
Sözdizimi # JSON.parse(json_document_string) =&amp;gt; JSON belgesinin bir Karmasını döndürür JSON.generate(ruby_hash) =&amp;gt; Dize biçiminde bir JSON belgesi döndürür Parametreler # parametre Ayrıntılar json_document_string Dize biçiminde bir JSON belgesi ruby_hash Herhangi bir Hash nesnesi JSON&amp;rsquo;a Hash # require &#39;json&#39; data = {&amp;quot;test&amp;quot; =&amp;gt; 123} puts JSON.generate(data) JSON&amp;rsquo;dan Hash&amp;rsquo;e # require &#39;json&#39; document = &amp;quot;{\&amp;quot;test\&amp;quot;:123}&amp;quot; puts JSON.parse(document) Hash&amp;rsquo;e Alternatif JSON # require &#39;json&#39; data = JSON &#39;{&amp;quot;test&amp;quot;:23}&#39; # =&amp;gt; {&amp;quot;test&amp;quot;=&amp;gt;23} veya</description>
    </item>
    
    <item>
      <title>maruku</title>
      <link>https://www.wikiod.com/tr/rubygems/maruku/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/rubygems/maruku/</guid>
      <description>Maruku, Ruby için bir Markdown yorumlayıcısıdır. Markdown&amp;rsquo;ı HTML ve PDF&amp;rsquo;ye dışa aktarmaya izin verir.
Sözdizimi # Maruku.new(str) =&amp;gt; Markdown&amp;rsquo;ı bir Maruku nesnesine ayrıştırır Maruku#to_html_document =&amp;gt; Maruku nesnesini tam HTML belgesi (dize olarak) olarak döndürür Parametreler # parametre Kullanım sokak Ayrıştırılacak Markdown dizesi Markdown&amp;rsquo;ı Maruku&amp;rsquo;ya Okumak # require &#39;maruku&#39; str = &amp;quot; # Title * List 1 * List 2 * List 3 &amp;quot; markdown = Maruku.new(str) puts markdown.inspect HTML&amp;rsquo;ye İşaretleme # require &#39;maruku&#39; str = &amp;quot; # Title * List 1 * List 2 * List 3 &amp;quot; markdown = Maruku.</description>
    </item>
    
  </channel>
</rss>
