<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React Router Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/react-router/</link>
    <description>Recent content in React Router Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/react-router/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Router&#39;ı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/react-router/react-router-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/react-router/react-router-kullanmaya-baslama/</guid>
      <description>React ve React Router ile Merhaba Dünya # &amp;lsquo;react&amp;rsquo; ve &amp;lsquo;react-router&amp;rsquo;ı kurduktan sonra, ikisini birlikte kullanma zamanı.
Sözdizimi çok basittir, url açıldığında oluşturmak istediğiniz &amp;lsquo;url&amp;rsquo;yi ve &amp;lsquo;bileşeni&amp;rsquo; belirtirsiniz.
&amp;lt;Route path=&amp;quot;merhaba&amp;quot; component={ HelloComponent } /&amp;gt;
Bunun anlamı, url yolu &amp;ldquo;merhaba&amp;rdquo; olduğunda, &amp;ldquo;HelloComponent&amp;rdquo; bileşenini oluştur
DOSYA ADI: &amp;ldquo;app.js&amp;rdquo;
&#39;use strict&#39;; import React from &#39;react&#39;; import { render } from &#39;react-dom&#39;; import { Router, browserHistory, Link } from &#39;react-router&#39;; // These are just demo components which render different text.</description>
    </item>
    
    <item>
      <title>TypeScript ile Yönlendirici 4&#39;ü Tepki Verin</title>
      <link>https://www.wikiod.com/tr/react-router/typescript-ile-yonlendirici-4u-tepki-verin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/react-router/typescript-ile-yonlendirici-4u-tepki-verin/</guid>
      <description>TypeScript&amp;rsquo;i &amp;lsquo;react-router&amp;rsquo; 4.x ile entegre etmenin bazı örnekleri.
Amaç, mümkün olduğunca fazla tip güvenliğini korumaktır.
Proje belgelerini takip ederken bunun TypeScript ile nasıl başarılacağı açık değildir.
Yazılan parametrelerle yönlendirme # import * as React from &#39;react&#39;; import * as ReactDOM from &#39;react-dom&#39;; import { Route, BrowserRouter as Router, Link, match } from &#39;react-router-dom&#39;; // define React components for multiple pages class Home extends React.Component&amp;lt;any, any&amp;gt; { render() { return ( &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;HOME&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;&amp;lt;Link to=&#39;/details/id123&#39;&amp;gt;Goto Details&amp;lt;/Link&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;); } } interface DetailParams { id: string; } interface DetailsProps { required: string; match?</description>
    </item>
    
  </channel>
</rss>
