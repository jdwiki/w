<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unity3d Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/unity3d/</link>
    <description>Recent content in Unity3d Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/unity3d/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unity3d&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/unity3d/unity3dyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/unity3dyi-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # Genel Bakış # Unity, Windows ve Mac&amp;rsquo;te çalışır. Ayrıca bir Linux alfa sürümü mevcuttur.
Unity için 4 farklı ödeme planı vardır:
Kişisel - Ücretsiz (aşağıya bakın) Plus - koltuk başına aylık 35 ABD doları (aşağıya bakın) Pro - koltuk başına aylık 125 ABD Doları - Art arda 24 ay boyunca Pro planına abone olduktan sonra, aboneliği durdurma ve sahip olduğunuz sürümü tutma seçeneğiniz vardır. Enterprise - Daha fazla bilgi için Unity ile iletişime geçin EULA&amp;rsquo;ya göre: Son mali yılında 100.</description>
    </item>
    
    <item>
      <title>Unity ile Git kaynak kontrolünü kullanma</title>
      <link>https://www.wikiod.com/tr/unity3d/unity-ile-git-kaynak-kontrolunu-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/unity-ile-git-kaynak-kontrolunu-kullanma/</guid>
      <description>Unity için Git deposu kurma # Unity geliştirmesi için bir Git deposunu başlatırken yapılması gereken birkaç şey vardır.
Unity Klasörleri Yoksay # Her şey depoda sürümlendirilmemelidir. Aşağıdaki şablonu, deponuzun kök dizinindeki .gitignore dosyanıza ekleyebilirsiniz. Veya alternatif olarak, Unity .gitignore on GitHub açık kaynağını kontrol edebilir ve alternatif olarak gitignore.io for birlik. kullanarak bir tane oluşturabilirsiniz.
# Unity Generated [Tt]emp/ [Ll]ibrary/ [Oo]bj/ # Unity3D Generated File On Crash Reports sysinfo.txt # Visual Studio / MonoDevelop Generated ExportedObj/ obj/ *.</description>
    </item>
    
    <item>
      <title>Editörün Genişletilmesi</title>
      <link>https://www.wikiod.com/tr/unity3d/editorun-genisletilmesi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/editorun-genisletilmesi/</guid>
      <description>Sözdizimi # [MenuItem(string itemName)] [MenuItem(string itemName, bool isValidateFunction)] [MenuItem(string itemName, bool isValidateFunction, int öncelik)] [ContextMenu(dize adı)] [ContextMenuItem(dize adı, dize işlevi)] [DrawGizmo(GizmoType gizmo)] [DrawGizmo(GizmoType gizmo, Type drawGizmoType)] Parametreler # parametre Ayrıntılar MenüKomut MenuCommand, bir MenuItem MenuCommand.bağlam Menü komutunun hedefi olan nesne MenuCommand.userData Özel bilgileri bir menü öğesine geçirmek için bir int Özel Denetçi # Özel bir denetçi kullanmak, Müfettiş&amp;rsquo;te bir komut dosyasının çizilme şeklini değiştirmenize olanak tanır. Bazen, komut dosyanız için denetçiye, özel bir özellik çekmecesiyle yapılması mümkün olmayan ek bilgiler eklemek istersiniz.</description>
    </item>
    
    <item>
      <title>Unity&#39;deki Singleton&#39;lar</title>
      <link>https://www.wikiod.com/tr/unity3d/unitydeki-singletonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/unitydeki-singletonlar/</guid>
      <description>Singleton&amp;rsquo;ların sınırsız kullanımının neden kötü bir fikir olduğu konusunda zorlayıcı argümanlar ortaya koyan düşünce okulları olsa da, ör. gameprogrammingpatterns.com&amp;rsquo;da Singleton, Unity&amp;rsquo;de bir GameObject&amp;rsquo;i birden fazla Sahne üzerinde (örneğin kesintisiz arka plan müziği için) devam ettirmek isteyebileceğiniz ve birden fazla örneğin bulunmadığından emin olabileceğiniz durumlar olabilir; Singleton için mükemmel bir kullanım durumu.
Bu komut dosyasını bir GameObject&amp;rsquo;e ekleyerek, bir kez başlatıldığında (örneğin, bir Sahnenin herhangi bir yerine dahil ederek), Sahneler arasında etkin kalacaktır ve yalnızca bir örnek var olacaktır.</description>
    </item>
    
    <item>
      <title>eşyordamlar</title>
      <link>https://www.wikiod.com/tr/unity3d/esyordamlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/esyordamlar/</guid>
      <description>Sözdizimi # genel Coroutine StartCoroutine(IEnumerator rutini); public Coroutine StartCoroutine(string methodName, nesne değeri = null); public void StopCoroutine(string methodName); public void StopCoroutine(IEnumerator rutini); genel geçersiz StopAllCoroutines(); Performans konuları # Esneklik bir performans maliyeti ile birlikte geldiğinden, eşyordamları ölçülü kullanmak en iyisidir.
Çok sayıda eşyordam, CPU&amp;rsquo;dan standart Güncelleme yöntemlerinden daha fazlasını talep eder. Unity&amp;rsquo;nin bazı sürümlerinde, Unity&amp;rsquo;nin MoveNext dönüş değerini kutulaması nedeniyle, coroutinlerin her güncelleme döngüsünde çöp ürettiği bir sorun var. Bu en son 5.</description>
    </item>
    
    <item>
      <title>Optimizasyon</title>
      <link>https://www.wikiod.com/tr/unity3d/optimizasyon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/optimizasyon/</guid>
      <description>Mümkünse, gerekli olmadığında nesneler üzerindeki komut dosyalarını devre dışı bırakın. Örneğin, bir düşman nesnesi üzerinde oyuncuyu arayan ve ateşleyen bir komut dosyanız varsa, örneğin düşman oyuncudan çok uzakta olduğunda bu komut dosyasını devre dışı bırakmayı düşünün. Eşyordam Gücü # kullanım # İş parçacığı açısından güvenli olmayan Unity API&amp;rsquo;sine dayanan uzun süredir devam eden bir işleminiz varsa, bunu birden çok çerçeveye bölmek ve uygulamanızın yanıt vermesini sağlamak için Coroutines kullanın.</description>
    </item>
    
    <item>
      <title>ağ</title>
      <link>https://www.wikiod.com/tr/unity3d/ag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/ag/</guid>
      <description>Unity&amp;rsquo;de Başsız modu # Linux&amp;rsquo;ta dağıtmak için bir Sunucu oluşturuyorsanız, Oluşturma ayarlarında &amp;ldquo;Başsız mod&amp;rdquo; seçeneği bulunur. Bu seçeneğe sahip bir uygulama derlemesi hiçbir şey göstermez ve kullanıcı girdisini okumaz, bu genellikle bir Sunucu için istediğimiz şeydir.
Sunucu, istemci oluşturma ve mesaj gönderme. # Unity ağ iletişimi, düşük seviyeli uygulamalardan soyutlanan ağ iletişimlerini işlemek için Yüksek Seviye API&amp;rsquo;sini (HLA) sağlar.
Bu örnekte, bir veya birden fazla istemciyle iletişim kurabilen bir Sunucunun nasıl oluşturulacağını göreceğiz.</description>
    </item>
    
    <item>
      <title>Nesne Havuzlama</title>
      <link>https://www.wikiod.com/tr/unity3d/nesne-havuzlama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/nesne-havuzlama/</guid>
      <description>Nesne Havuzu # Bazen bir oyun yaptığınızda aynı türden birçok nesneyi tekrar tekrar yaratmanız ve yok etmeniz gerekir. Bunu basitçe bir prefabrik yaparak yapabilir ve ihtiyaç duyduğunuzda bunu somutlaştırabilir/yok edebilirsiniz, ancak bunu yapmak verimsizdir ve oyununuzu yavaşlatabilir.
Bu sorunu aşmanın bir yolu, nesne havuzu oluşturmaktır. Temel olarak bunun anlamı, gereksiz örneklemeyi veya yok etmeyi önlemek için mümkün olduğunda yeniden kullanacağınız bir nesne havuzunuz (miktarla veya limitsiz) olmasıdır.
Aşağıda basit bir nesne havuzu örneği verilmiştir.</description>
    </item>
    
    <item>
      <title>prefabrikler</title>
      <link>https://www.wikiod.com/tr/unity3d/prefabrikler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/prefabrikler/</guid>
      <description>Sözdizimi # genel statik Nesne PrefabUtility.InstantiatePrefab(Nesne hedefi); genel statik Nesne AssetDatabase.LoadAssetAtPath(dize varlıkPath, Tür türü); genel statik Object Object.Instantiate(Nesne orijinal); genel statik Nesne Kaynakları.Yük (dize yolu); Giriiş # Prefabrikler bileşenleri, özellikleri, bağlı bileşenleri ve serileştirilmiş özellik değerleri ile eksiksiz bir GameObject&amp;rsquo;in depolanmasına izin veren bir varlık türüdür. Aşağıdakiler dahil, bunun yararlı olduğu birçok senaryo vardır:
Bir sahnedeki nesneleri çoğaltma Birden fazla sahnede ortak bir nesneyi paylaşma Bir hazır yapıyı bir kez değiştirebilme ve değişikliklerin birden fazla nesne/sahneye uygulanabilmesi Küçük değişikliklerle yinelenen nesneler oluştururken, ortak öğelerin bir temel prefabrikten düzenlenebilir olması GameObject&amp;rsquo;leri çalışma zamanında somutlaştırma Unity&amp;rsquo;de &amp;ldquo;her şey Prefabrik olmalı&amp;rdquo; diyen bir tür genel kural vardır.</description>
    </item>
    
    <item>
      <title>CullingGroup API&#39;si</title>
      <link>https://www.wikiod.com/tr/unity3d/cullinggroup-apisi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/unity3d/cullinggroup-apisi/</guid>
      <description>CullingGroups&amp;rsquo;u kullanmak her zaman çok kolay olmadığından, mantığın büyük kısmını bir yönetici sınıfının arkasına yerleştirmek yararlı olabilir.
Aşağıda böyle bir yöneticinin nasıl çalışabileceğine dair bir plan bulunmaktadır.
using UnityEngine; using System; public interface ICullingGroupManager { int ReserveSphere(); void ReleaseSphere(int sphereIndex); void SetPosition(int sphereIndex, Vector3 position); void SetRadius(int sphereIndex, float radius); void SetCullingEvent(int sphereIndex, Action&amp;lt;CullingGroupEvent&amp;gt; sphere); } Bunun özü, ayrılmış kürenin indeksini döndüren yöneticiden bir ayırma küresi ayırmanızdır. Daha sonra, ayrılmış kürenizi değiştirmek için verilen dizini kullanırsınız.</description>
    </item>
    
  </channel>
</rss>
