<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sıralama Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/sorting/</link>
    <description>Recent content in sıralama Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/sorting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sıralamaya başlarken</title>
      <link>https://www.wikiod.com/tr/sorting/sralamaya-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sorting/sralamaya-baslarken/</guid>
      <description>Kurulum veya Kurulum # Sıralama kurulumu veya kurulumu hakkında ayrıntılı talimatlar.</description>
    </item>
    
    <item>
      <title>seçim</title>
      <link>https://www.wikiod.com/tr/sorting/secim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sorting/secim/</guid>
      <description>Bilgisayar biliminde, seçim sıralaması bir sıralama algoritmasıdır, özellikle yerinde karşılaştırmalı bir sıralamadır. O(n2) zaman karmaşıklığına sahiptir, bu da onu büyük listelerde verimsiz kılar ve genellikle benzer ekleme sıralamasından daha kötü performans gösterir. Seçim sıralama basitliği ile dikkat çeker ve özellikle yardımcı belleğin sınırlı olduğu belirli durumlarda daha karmaşık algoritmalara göre performans avantajlarına sahiptir.
Aşağıdaki resim, seçim sıralamasının nasıl çalıştığını gösterir-
Aşağıdaki sözde kod, bir program (herhangi bir dilde) oluşturmaya veya seçim sıralamasını anlamaya yardımcı olur.</description>
    </item>
    
    <item>
      <title>Hızlı sıralama</title>
      <link>https://www.wikiod.com/tr/sorting/hzl-sralama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sorting/hzl-sralama/</guid>
      <description>Python # Aşağıdaki resim hızlı bir sıralamanın çalışmasını göstermektedir.
Aşağıdaki örnek, python&amp;rsquo;da hızlı sıralama için çalışan programı göstermektedir:
def quickSort(alist): quickSortHelper(alist,0,len(alist)-1) def quickSortHelper(alist,first,last): if first&amp;lt;last: splitpoint = partition(alist,first,last) quickSortHelper(alist,first,splitpoint-1) quickSortHelper(alist,splitpoint+1,last) def partition(alist,first,last): pivotvalue = alist[first] leftmark = first+1 rightmark = last done = False while not done: while leftmark &amp;lt;= rightmark and alist[leftmark] &amp;lt;= pivotvalue: leftmark = leftmark + 1 while alist[rightmark] &amp;gt;= pivotvalue and rightmark &amp;gt;= leftmark: rightmark = rightmark -1 if rightmark &amp;lt; leftmark: done = True else: temp = alist[leftmark] alist[leftmark] = alist[rightmark] alist[rightmark] = temp temp = alist[first] alist[first] = alist[rightmark] alist[rightmark] = temp return rightmark alist = [54,26,93,17,77,31,44,55,20] print(&amp;quot;Input:&amp;quot;) print(alist) quickSort(alist) print(&amp;quot;Output:&amp;quot;) print(alist) Kodun çıktısı aşağıdadır:</description>
    </item>
    
  </channel>
</rss>
