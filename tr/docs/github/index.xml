<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/github/</link>
    <description>Recent content in github Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>github&#39;a başlarken</title>
      <link>https://www.wikiod.com/tr/github/githuba-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/githuba-baslarken/</guid>
      <description>GitHub Aromalı Markdown # GitHub, yeni kullanışlı özellikler sağlamak için Markdown sözdizimini genişletir.
Başlık # # Header1 ## Header2 ### Header3 #### Header4 ##### Header5 ###### Header6 H1 === H2 --- Vurgu # *Italic1* _Italic2_ **Bold1** __Bold2__ ***Bold_Italic*** ~~Strikethrough~~ Yatay çizgi # --- *** ___ Liste # unordered list: * item-1 * sub-item-1 * sub-item-2 - item-2 - sub-item-3 - sub-item-4 + item-3 + sub-item-5 + sub-item-6 ordered list: 1. item-1 1.</description>
    </item>
    
    <item>
      <title>Hassas verileri veya büyük dosyaları kaldırma</title>
      <link>https://www.wikiod.com/tr/github/hassas-verileri-veya-buyuk-dosyalar-kaldrma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/hassas-verileri-veya-buyuk-dosyalar-kaldrma/</guid>
      <description>Bir Git deposuna parola veya SSH anahtarı gibi hassas veriler eklerseniz, bunları geçmişten kaldırabilirsiniz. İstenmeyen dosyaları bir havuzun geçmişinden tamamen kaldırmak için git filter-branch komutunu veya BFG Repo-Cleaner&amp;rsquo;ı kullanabilirsiniz.
Ortak çalışanlarınıza, kullandıkları şubeleri birleştirmelerini değil, yeniden yapılandırmalarını söyleyin. created off of your old (tainted) repository history. One merge commit could reintroduce some or all of the tainted history that you just went to the trouble of purging.
Bir süre geçtikten ve git filter-branch&amp;rsquo;in istenmeyen yan etkileri olmadığından emin olduktan sonra, aşağıdaki komutlarla (Git 1.</description>
    </item>
    
    <item>
      <title>Web Sitenizde GitHub zaman çizelgesini  beslemelerini görüntüleme</title>
      <link>https://www.wikiod.com/tr/github/web-sitenizde-github-zaman-cizelgesini--beslemelerini-goruntuleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/web-sitenizde-github-zaman-cizelgesini--beslemelerini-goruntuleme/</guid>
      <description>Web sitenizde GitHub zaman çizelgesini / beslemelerini görüntüleme # Bu belge, GitHub beslemelerinizi/zaman çizelgenizi web sitenizde nasıl görüntüleyeceğinizi açıklar.
Örnek: Canlı bir örnek şurada mevcuttur:
https://newtonjoshua.com
GitHub zaman çizelgesi:
GitHub, Atom biçiminde herhangi bir kullanıcı için genel zaman çizelgesini sağlar.
Zaman çizelgenizi şurada görüntüleyebilirsiniz:
https://github.com/{{GitHub_username}}.atom
bahsetmek: https://developer.github.com/v3/activity/feeds
Google Feed API&amp;rsquo;sı:
Feed API ile, yalnızca JavaScript kullanarak herhangi bir genel Atom, RSS veya Media RSS beslemesini indirebilir, böylece yalnızca birkaç satır JavaScript ile içeriğinizle ve diğer API&amp;rsquo;lerle beslemeleri karıştırabilirsiniz.</description>
    </item>
    
    <item>
      <title>GitHub Sayfaları</title>
      <link>https://www.wikiod.com/tr/github/github-sayfalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/github-sayfalar/</guid>
      <description>Sıfırdan sayfalar oluşturmak için Git&amp;rsquo;i kullanma # Yeni bir havuz oluşturun veya mevcut olanı klonlayın.
Herhangi bir geçmişe sahip olmayan &amp;ldquo;gh-pages&amp;rdquo; adında yeni bir dal oluşturun
$ git checkout &amp;ndash;orphan gh-pages
ensure you are in the correct directory then, # remove all files from the old working tree # $ git rm -rf
Deponun kök dizinine bir index.html dosyası ekleyin.
$ echo &amp;ldquo;Hello World&amp;rdquo; &amp;gt; index.html $ git add index.html $ git commit -a -m &amp;ldquo;First pages commit&amp;rdquo;</description>
    </item>
    
    <item>
      <title>GitHub&#39;dan bir depoyu klonlama</title>
      <link>https://www.wikiod.com/tr/github/githubdan-bir-depoyu-klonlama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/githubdan-bir-depoyu-klonlama/</guid>
      <description>Sözdizimi # git klonu github.com/username/repository Bir depoyu klonlayın # Klonlamak istediğiniz depoya gidin (şunun gibi bir şey: https://github.com/username/repo) Sağda, klonla veya indir adlı yeşil düğmeye tıklayın Küçük bir pencere görünecektir, url&amp;rsquo;yi kopyalayın (şuna benzer bir şey: https://github.com/username/repo.git) Projeyi klonlamak istediğiniz makinede bir terminal penceresi açın.
Komut satırından projeyi klonlamak istediğiniz konuma gidin.
Komutu girin: git klonu &amp;lt;copied_url_from_step_3&amp;gt;
Enter&amp;rsquo;a basın
Aşağıdaki gibi bir şey görünecektir:
Cloning into &amp;lt;repo_name&amp;gt;&amp;hellip;
remote: Counting objects: 10, done.</description>
    </item>
    
    <item>
      <title>Özel GitHub Etiketleri nasıl oluşturulur?</title>
      <link>https://www.wikiod.com/tr/github/ozel-github-etiketleri-nasl-olusturulur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/ozel-github-etiketleri-nasl-olusturulur/</guid>
      <description>Özel GitHub Etiketleri Oluşturun! # İşlemi olabildiğince kolaylaştırmak için hızlı bir GIF. Etiketler, öncelik, kategori veya yararlı bulduğunuz diğer bilgileri belirtmek için sorunlara ve çekme isteklerine uygulanabilir.
GitHub&amp;rsquo;da deponun ana sayfasına gidin.
Depo adınızın altında Sorunlar veya Çekme istekleri&amp;rsquo;ne tıklayın.
Etiketleri Çıkart düğmesi Arama alanının yanındaki Etiketler&amp;rsquo;e tıklayın.
Yeni bir etiket oluşturmak için Yeni Etiket&amp;rsquo;e tıklayın veya mevcut bir etiketi düzenlemek için Düzenle&amp;rsquo;ye tıklayın.
Metin kutusuna yeni etiket adınızı yazın.</description>
    </item>
    
    <item>
      <title>Çatallanmış bir Depoyu güncelleme</title>
      <link>https://www.wikiod.com/tr/github/catallanms-bir-depoyu-guncelleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/catallanms-bir-depoyu-guncelleme/</guid>
      <description> GitHub Yardımı: Bir çatal için uzaktan kumandayı yapılandırma GitHub Yardımı: Bir çatalı senkronize etme StackOverFlow&amp;rsquo;da popüler ans Çatalınız için bir uzaktan kumanda yapılandırın ve ardından çatalınızı senkronize edin (ana dal) # Çatalım için bir uzaktan kumanda yapılandırın $ cd my_local_repo $ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git # Specify a new remote upstream repository that will be synced with the fork $ git remote -v # Verify the new upstream repository specified for my fork Çatalımı yerel olarak senkronize et $ cd my_local_repo $ git fetch upstream # Fetch the branches and their respective commits from the upstream repository # Commits to master will be stored in a local branch, upstream/master $ git checkout master $ git merge upstream/master # Merge the changes from upstream/master into your local master branch # brings your fork&#39;s master branch into sync with the upstream repo Çatalımı Github&amp;rsquo;da senkronize edin $ git push origin master </description>
    </item>
    
    <item>
      <title>Gist&#39;i Kullanmak</title>
      <link>https://www.wikiod.com/tr/github/gisti-kullanmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/gisti-kullanmak/</guid>
      <description>Özetler, çalışmanızı paylaşmanın harika bir yoludur. Tek dosyaları, dosyaların bölümlerini veya tam uygulamaları paylaşabilirsiniz. Özetlere https://gist.github.com adresinden erişebilirsiniz.
Her öz, bir Git deposudur; bu, çatallanabileceği ve klonlanabileceği anlamına gelir. Öz düzenleyici, CodeMirror tarafından desteklenmektedir.
İki tür öz vardır: genel özler ve gizli özler.
Ek olarak, özünüzü oluştururken GitHub&amp;rsquo;da oturum açmadıysanız, bu anonim bir öz olacaktır.
Özetler, çalışmanızı paylaşmanın harika bir yoludur. Tek dosyaları, dosyaların bölümlerini veya tam uygulamaları paylaşabilirsiniz.
İki tür öz vardır: genel özler ve gizli özler.</description>
    </item>
    
    <item>
      <title>Gitflow ile çalışmak</title>
      <link>https://www.wikiod.com/tr/github/gitflow-ile-calsmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/gitflow-ile-calsmak/</guid>
      <description>Sözdizimi # git akışı &amp;lt;alt komut&amp;gt; git akış başlangıcı git akışı [özellik|yayın|düzeltme] [başlangıç|bitiş] Parametreler # alt komut Ayrıntılar başlangıç ​​ Dallanma modeli desteğiyle yeni bir git deposu başlatın. özellik Özellik dallarınızı yönetin. yayın Sürüm şubelerinizi yönetin. düzeltme Düzeltme şubelerinizi yönetin. yazardan gitflow konsepti dal modeli resmi Yerel olarak 5 ortak dalda işlem # Gitflow&amp;rsquo;un en yaygın kullanım durumlarından biri
Repo&amp;rsquo;yu _başlatın ve dalları tanımlayın $ git flow init # if you use default setup, you&#39;ll define six types of branches: # # main branches (lives forever) # # 1.</description>
    </item>
    
    <item>
      <title>GitHub&#39;ı yedekleme</title>
      <link>https://www.wikiod.com/tr/github/github-yedekleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/github/github-yedekleme/</guid>
      <description>Bir kullanıcı adı için tüm depoları klonlama # Bu kullanıcı için tüm GitHub depolarını geçerli dizine klonlamak için kullanıcı adını kullanıcı adıyla değiştirerek aşağıdaki komutu çalıştırın.
curl &amp;quot;https://api.github.com/users/username/repos?page=1&amp;amp;per_page=100&amp;quot; | grep -e &#39;git_url*&#39; | cut -d \&amp;quot; -f 4 | xargs -L1 git clone Bu yalnızca ilk 100 depoyu klonlayacaktır.</description>
    </item>
    
  </channel>
</rss>
