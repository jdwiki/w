<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>db2 Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/db2/</link>
    <description>Recent content in db2 Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/db2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>db2&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/db2/db2ye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/db2ye-baslarken/</guid>
      <description>Kurulum # DB2&amp;rsquo;nin farklı tatları var. Bunlardan biri LUW: Linux, UNIX ve Windows.
Linux / UNIX&amp;rsquo;te DB2 LUW, root ile veya root olmadan kurulabilir. Kök ile kurulduğunda, bunları farklı kullanıcılarla ilişkilendirerek farklı örnekler oluşturabilirsiniz.
DB2 LUW&amp;rsquo;yi kök ayrıcalıkları olmadan kurarken, DB2&amp;rsquo;yi ana dizininize kurabilirsiniz ve kullanıcınız otomatik olarak bu kuruluşun sahip olabileceği tek eşgörünüm olacaktır. Örnek, makine her başlatıldığında, en azından bunu yapılandırdığınızda otomatik olarak başlatılmayacaktır.
İkili dosyaları indirdikten sonra (Fixpack Central, Passport Advantage veya bir CD&amp;rsquo;den), dosyaları ayıklayabilirsiniz.</description>
    </item>
    
    <item>
      <title>Selam Dünya;</title>
      <link>https://www.wikiod.com/tr/db2/selam-dunya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/selam-dunya/</guid>
      <description>DB2&amp;rsquo;de veritabanı oluşturma # CREATE DATABASE SAMPLEDB; Bu, sampledb adlı yeni bir veritabanı oluşturacaktır.
DB2&amp;rsquo;de bir veritabanına bağlanma # CONNECT TO SAMPLEDB; Komut satırından (db2clp, terminal, db2cmd) şunları yazabilirsiniz:
db2 CONNECT TO SAMPLEDB DB2&amp;rsquo;de &amp;ldquo;çalışan&amp;rdquo; adında bir tablo oluşturun # Aşağıdaki ifade, çalışan adında yeni bir tablo oluşturacaktır:
CREATE TABLE EMPLOYEE ( EMPNO CHAR(6) NOT NULL, FIRSTNME VARCHAR(12) NOT NULL, LASTNAME VARCHAR(15) NOT NULL, SALARY DECIMAL(9,2) , PRIMARY KEY (EMPNO) ) Bu, çalışan adında yeni bir tablo oluşturacaktır.</description>
    </item>
    
    <item>
      <title>Bir sütundaki virgülle ayrılmış değerleri birden çok satıra ayrıştırın</title>
      <link>https://www.wikiod.com/tr/db2/bir-sutundaki-virgulle-ayrlms-degerleri-birden-cok-satra-ayrstrn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/bir-sutundaki-virgulle-ayrlms-degerleri-birden-cok-satra-ayrstrn/</guid>
      <description>Sözdizimi # İLE CTE_name (sütun_adı[,&amp;hellip;]) AS ( base_table DAN sütun_adı[,&amp;hellip;] SEÇ TÜM BİRLİK CTE_name&amp;lsquo;DEN sütun_adı[,&amp;hellip;] SEÇİN NEREDE &amp;lt;özyineleme sınırlama koşulu&amp;gt; -) CTE_name&amp;lsquo;DEN sütun_adı[,&amp;hellip;] SEÇİN Virgülle ayrılmış değerleri ayrıştırmak için özyinelemeli sorgu # Birden çok değeri tek bir sütunda depolamak normalleştirme kurallarını ihlal etse de, bazen kötü tasarlanmış eski tablolarla uğraşmak zorunda kalırsınız. Özyinelemeli bir sorgu, virgülle ayrılmış değerleri farklı satırlara dönüştürmeye yardımcı olabilir.
Kötü tasarlanmış bir örnek tablo oluşturun ve bazı veriler ekleyin:</description>
    </item>
    
    <item>
      <title>Birden çok sütunda olmayan yerlerde</title>
      <link>https://www.wikiod.com/tr/db2/birden-cok-sutunda-olmayan-yerlerde/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/birden-cok-sutunda-olmayan-yerlerde/</guid>
      <description>Birden çok değer kombinasyonunu filtreleyin # Diyelim ki bir sorguyu iki sütuna göre filtrelemek istiyorsunuz, ancak bu sütunların yalnızca belirli kombinasyonları. Örneğin, JE referanslı 60400 hesabınızın olması sorun değil, ancak referans ED ile 60400 hesabınız olamaz, ancak referans ED ile 60500 hesabınız olabilir.
select * from schema.table where (acct, ref) not in ( values (60400, &#39;ED&#39;), (60600, &#39;ED&#39;), (60701, &#39;ED&#39;), (70400, &#39;ED&#39;), (70500, &#39;ED&#39;), (70600, &#39;ED&#39;), (80800, &#39;ED&#39;) ); </description>
    </item>
    
    <item>
      <title>Başka bir tablodan seçerek bir tabloya ekleyin</title>
      <link>https://www.wikiod.com/tr/db2/baska-bir-tablodan-secerek-bir-tabloya-ekleyin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/baska-bir-tablodan-secerek-bir-tabloya-ekleyin/</guid>
      <description>Başka bir tablodan seçerek bir tabloya ekleyin # insert into schema.table (field1, field2) select &#39;Static Value&#39;, foreignField from schema.otherTable; </description>
    </item>
    
    <item>
      <title>dashDB</title>
      <link>https://www.wikiod.com/tr/db2/dashdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/dashdb/</guid>
      <description>IBM dashDB, bir SQL veritabanları ailesidir. Motoru, DB2, Netezza ve BLU bellek içi motor&amp;lsquo;in bir karışımıdır. Desteklenen herhangi bir DB2 sürücüsü çalışacaktır; DB2 için bir bırakma değiştirmedir.
DashDB için 3 ürün grubu şunlardır: (1) İşlemler için IBM dashDB: Genel amaçlı, tam olarak yönetilen bir bulut SQL veritabanı. (2) IBM dashDB for Analytics: Bir bulut SQL veri ambarı. (3) IBM dashDB Local: Kendi donanımınıza kurabileceğiniz yerel bir sürüm.
DashDB hakkında daha fazla bilgi için şu kaynakları deneyebilirsiniz: # Genel bilgi: # Ana web sitesi: http://dashdb.</description>
    </item>
    
    <item>
      <title>Birden çok satırı virgülle ayrılmış tek bir değerde birleştirin</title>
      <link>https://www.wikiod.com/tr/db2/birden-cok-satr-virgulle-ayrlms-tek-bir-degerde-birlestirin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/birden-cok-satr-virgulle-ayrlms-tek-bir-degerde-birlestirin/</guid>
      <description>listagg() işlevini kullanma # Diyelim ki bir kredi tablonuz ve her bir kredinin kendisiyle ilişkili bir veya daha fazla parsele sahip olabileceği ilgili başka bir parsel tablonuz var. Her krediyi ve ilişkili tüm parsellerin listesini göstermek için bir sorgu istiyorsanız, ancak her kredinin yalnızca bir kez görünmesini istiyorsanız, şöyle bir şey kullanabilirsiniz:
select loan.loannumber, parcel_agg.p_list as parcel_list from schema.loan loan left join ( select loannumber, listagg(parcelnum, &#39;, &#39;) from schema.parcel parcel group by loannumber ) parcel_agg on parcel_agg.</description>
    </item>
    
    <item>
      <title>Tabloyu verili veya verisiz kopyala</title>
      <link>https://www.wikiod.com/tr/db2/tabloyu-verili-veya-verisiz-kopyala/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/tabloyu-verili-veya-verisiz-kopyala/</guid>
      <description>Verili/verisiz mevcut tablo yapısının nasıl kopyalanacağına dair örnek
Sözdizimi # CREATE TABLE schemaName.table AS (Sütunları SEÇ schemaName.table) WITH DATA Tabloyu Verilerle Kopyala # CREATE TABLE myschema.tableNew AS ( SELECT * FROM myschema.tableOld ) WITH DATA Veri olmadan Tabloyu Kopyala # CREATE TABLE myschema.tableNew AS ( SELECT * FROM myschema.tableOld ) WITHOUT DATA Tabloyu where yan tümcesiyle kopyalayın # CREATE TABLE myschema.tableNew AS ( SELECT * FROM myschema.tableOld WHERE column1 = &#39;myCriteria&#39; ) WITH DATA </description>
    </item>
    
    <item>
      <title>DB2 Kısıtlama Bilgileri</title>
      <link>https://www.wikiod.com/tr/db2/db2-kstlama-bilgileri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/db2-kstlama-bilgileri/</guid>
      <description>Bu belge, bir tablonun bir sütununda tüm Kısıtlamaları arayan herkese yardımcı olacaktır. Sorgu, kısıtlama adına göre tablo/sütunları bulmak için değiştirilebilir.
Sütun adına göre kısıtlamalar alın # select cst.constraint_schema, cst.constraint_name, fk.table_name, fk.ordinal_position, fk.column_name, pk.table_name, pk.column_name from qsys2.syscst cst join qsys2.syskeycst fk on fk.constraint_schema = cst.constraint_schema and fk.constraint_name = cst.constraint_name join qsys2.sysrefcst ref on ref.constraint_schema = cst.constraint_schema and ref.constraint_name = cst.constraint_name join qsys2.syskeycst pk on pk.constraint_schema = ref.unique_constraint_schema and pk.constraint_name = ref.unique_constraint_name where cst.</description>
    </item>
    
    <item>
      <title>Tabloyu bırak</title>
      <link>https://www.wikiod.com/tr/db2/tabloyu-brak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/db2/tabloyu-brak/</guid>
      <description>DB2&amp;rsquo;de tablo bırakmak için temel yönergeler.
Temel Bırakma Tablosu Sözdizimi # db2 connect to {databaseName} db2 drop table {schema}.{table} db2 connect reset Geçerli kullanıcı adıyla eşleşiyorsa şema gerekli değildir. Zaten bir DB2 komut istemindeyseniz, &amp;ldquo;db2&amp;rdquo; öneki gerekli değildir.</description>
    </item>
    
  </channel>
</rss>
