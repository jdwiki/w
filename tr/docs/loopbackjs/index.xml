<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>loopbackjs Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/loopbackjs/</link>
    <description>Recent content in loopbackjs Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/loopbackjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Loopbackjs&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/loopbackjs/loopbackjsyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/loopbackjs/loopbackjsyi-kullanmaya-baslama/</guid>
      <description>Kurulum ve Başlarken # Kurulum:
LoopBack komut satırı arabirimi (CLI) aracını yüklemek için:
npm install -g loopback-cli Bu, LoopBack uygulamalarını oluşturmak ve değiştirmek için lb komut satırı aracını yükler.
Yeni uygulama oluştur:
Yeni bir uygulama oluşturmak için:
lb LoopBack uygulama oluşturucu sizi bazı dostça ASCII sanatıyla karşılar ve uygulamanın adını sorar. Bir uygulama oluşturmak için araç tarafından sorulan soruları yanıtlamanız yeterlidir.
İlk modeli oluştur:
Yeni uygulama dizininize gidin, ardından şunu çalıştırın:</description>
    </item>
    
    <item>
      <title>Modeller oluşturun</title>
      <link>https://www.wikiod.com/tr/loopbackjs/modeller-olusturun/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/loopbackjs/modeller-olusturun/</guid>
      <description>Komut satırı arayüzü ile model oluşturma # Düğüm JS komut isteminde, geri döngü projenizin içinde yeni bir model oluşturmak için aşağıdaki komutu yazın.
slc loopback:model LoopBack CLI aracını yüklediyseniz, aşağıdakilerle model oluşturabilirsiniz:
lb model Komut istemi, oluşturulacak model hakkında bilgi isteyecektir. Bu örnekte, bir &amp;ldquo;Foo&amp;rdquo; modeli oluşturulacaktır.
Enter the model name: Foo Modeller, yerleşik geridöngü sınıflarından birine dayalı olabilir. Kalıcı modeller, bir veritabanı içinde depolanması (= kalıcı) gereken yapılandırılmış verileri temsil eden en yaygın seçimdir.</description>
    </item>
    
  </channel>
</rss>
