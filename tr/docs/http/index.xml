<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTTP Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/http/</link>
    <description>Recent content in HTTP Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/http/httpyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/httpyi-kullanmaya-baslama/</guid>
      <description>HTTP/2 # HTTP istekleri ve yanıtları # HTTP, web tarayıcısı gibi bir HTTP istemcisinin, bir ağ aracılığıyla bir HTTP sunucusuna bir HTTP isteğini nasıl gönderdiğini ve bunun ardından istemciye bir HTTP yanıtı gönderdiğini açıklar.
HTTP isteği genellikle bir web sayfası veya resim gibi çevrimiçi bir kaynağa yönelik bir istektir, ancak bir forma girilen veriler gibi ek bilgileri de içerebilir. HTTP yanıtı tipik olarak bir web sayfası veya resim gibi çevrimiçi bir kaynağın temsilidir.</description>
    </item>
    
    <item>
      <title>HTTP istekleri</title>
      <link>https://www.wikiod.com/tr/http/http-istekleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/http-istekleri/</guid>
      <description>Parametreler # HTTP Yöntemi Amaç &amp;lsquo;SEÇENEKLER&amp;rsquo; Belirtilen istek URI&amp;rsquo;sinde bulunan iletişim seçenekleri (mevcut yöntemler ve başlıklar) hakkında bilgi alın. &amp;ldquo;AL&amp;rdquo; İstek URI&amp;rsquo;si tarafından tanımlanan verileri veya istek URI&amp;rsquo;sinde bulunan komut dosyası tarafından üretilen verileri alın. &amp;ldquo;BAŞ&amp;rdquo; Sunucu tarafından hiçbir ileti gövdesinin döndürülmemesi dışında &amp;ldquo;GET&amp;rdquo; ile aynıdır: yalnızca başlıklar. &amp;lsquo;POST&amp;rsquo; İstek URI&amp;rsquo;sinde belirtilen kaynağa ek olarak sunucuya bir veri bloğu (ileti gövdesinde belirtilen) gönderin. En yaygın olarak form işleme için kullanılır. &amp;lsquo;PUT&amp;rsquo; Ekteki bilgileri (mesaj gövdesinde), verilen istek URI&amp;rsquo;si altında yeni veya güncellenmiş bir kaynak olarak saklayın.</description>
    </item>
    
    <item>
      <title>HTTP Durum Kodları</title>
      <link>https://www.wikiod.com/tr/http/http-durum-kodlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/http-durum-kodlar/</guid>
      <description>HTTP&amp;rsquo;de durum kodları, önceden yayınlanmış bir isteğin sonucunu gösteren, makine tarafından okunabilen bir mekanizmadır. RFC 7231, sn. 6: &amp;ldquo;Durum kodu öğesi, isteği anlama ve karşılama girişiminin sonucunu veren üç basamaklı bir tamsayı kodudur.&amp;rdquo;
resmi dilbilgisi kodların &amp;ldquo;000&amp;rdquo; ile &amp;ldquo;999&amp;rdquo; arasında herhangi bir şey olmasına izin verir. Ancak, yalnızca &amp;ldquo;100&amp;rdquo; ile &amp;ldquo;599&amp;rdquo; arasındaki aralık anlam atamıştır.
HTTP/1.1, durum satırında - ilk satırda görünen bir dizi sayısal HTTP durum kodunu tanımlar. Bir HTTP yanıtının - istemcinin yanıtla ne yapması gerektiğini özetlemek için.</description>
    </item>
    
    <item>
      <title>HTTP yanıtları</title>
      <link>https://www.wikiod.com/tr/http/http-yantlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/http-yantlar/</guid>
      <description>Parametreler # Durum Kodu Sebep-İbare — Açıklama 100 Devam — istemci, çok parçalı bir isteğin aşağıdaki bölümünü göndermelidir. 101 Switching Protocols — sunucu, bu iletişimde kullanılan protokolün sürümünü veya türünü değiştiriyor. 200 Tamam — sunucu, müşterinin isteğini aldı ve tamamladı. 201 Oluşturuldu — sunucu isteği kabul etti ve &amp;ldquo;Konum&amp;rdquo; başlığındaki URI altında bulunan yeni bir kaynak yarattı. 202 Kabul edildi — sunucu, müşterinin isteğini aldı ve kabul etti, ancak henüz işleme başlamadı veya tamamlamadı.</description>
    </item>
    
    <item>
      <title>HTTP yanıtlarını önbelleğe alma</title>
      <link>https://www.wikiod.com/tr/http/http-yantlarn-onbellege-alma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/http-yantlarn-onbellege-alma/</guid>
      <description>Yanıtlar, her URL ve her HTTP yöntemi için ayrı ayrı önbelleğe alınır.
HTTP önbelleğe alma, RFC 7234 içinde tanımlanmıştır.
Sözlük # taze — henüz süresi dolmamış, önbelleğe alınmış bir yanıtın durumu. Tipik olarak, yeni bir yanıt, yanıtın geldiği sunucuyla iletişim kurmaya gerek kalmadan istekleri karşılayabilir. eski — son kullanma tarihi geçmiş, önbelleğe alınmış bir yanıtın durumu. Tipik olarak, eski yanıtlar, sunucuyla hala geçerli olup olmadığını kontrol etmeden bir isteği karşılamak için kullanılamaz.</description>
    </item>
    
    <item>
      <title>kimlik doğrulama</title>
      <link>https://www.wikiod.com/tr/http/kimlik-dogrulama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/kimlik-dogrulama/</guid>
      <description>Parametreler # parametre Ayrıntılar Yanıt durumu 401 Kaynak sunucu kimlik doğrulama gerektiriyorsa, [407](https://tools.ietf.org/html/rfc7235 #bölüm-3.2) bir ara proxy kimlik doğrulama gerektiriyorsa Yanıt başlıkları WWW-Authenticate kaynak sunucu tarafından Proxy-Authenticate /rfc7235#section-4.3) bir ara proxy tarafından Başlıkları iste Bir kaynak sunucuya karşı yetkilendirme için Yetkilendirme, Proxy-Yetkilendirme /rfc7235#section-4.4) bir ara proxy&amp;rsquo;ye karşı Kimlik doğrulama şeması Temel Kimlik Doğrulama için &amp;ldquo;Temel&amp;rdquo;, ancak &amp;ldquo;Özet&amp;rdquo; ve &amp;ldquo;SPNEGO&amp;rdquo; gibi diğerleri kullanılabilir. HTTP Kimlik Doğrulama Şemaları Kayıt Defterine bakın. krallık Sunucudaki korunan alanın adı; bir sunucu, her biri farklı bir ada ve kimlik doğrulama mekanizmalarına sahip birden fazla bu tür boşluğa sahip olabilir.</description>
    </item>
    
    <item>
      <title>Tepki kodlamaları ve sıkıştırma</title>
      <link>https://www.wikiod.com/tr/http/tepki-kodlamalar-ve-skstrma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/tepki-kodlamalar-ve-skstrma/</guid>
      <description>HTTP sıkıştırması # HTTP mesaj gövdesi sıkıştırılabilir (HTTP/1.1&amp;rsquo;den beri). Ya sunucu tarafından isteği sıkıştırır ve bir &amp;lsquo;Content-Encoding&amp;rsquo; başlığı ekler ya da bir proxy tarafından bir &amp;lsquo;Transfer-Encoding&amp;rsquo; başlığı ekler ve ekler.
Bir istemci, hangi kodlamaları kabul ettiğini belirtmek için bir &amp;ldquo;Kabul Et-Kodlama&amp;rdquo; istek başlığı gönderebilir.
En sık kullanılan kodlamalar şunlardır:
gzip - &amp;ldquo;gzip&amp;rdquo; dosyasının sıkıştırma programında CRC32 sağlama toplamı ile deflate algoritması (LZ77) (RFC1952) deflate - &amp;ldquo;zlib&amp;rdquo; veri formatı (RFC1950), Adler32 sağlama toplamı ile deflate algoritması (karma LZ77 ve Huffman) Çoklu sıkıştırma yöntemleri # Bir HTTP yanıt mesajı gövdesini birden fazla sıkıştırmak mümkündür.</description>
    </item>
    
    <item>
      <title>API&#39;ler için HTTP</title>
      <link>https://www.wikiod.com/tr/http/apiler-icin-http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/apiler-icin-http/</guid>
      <description>HTTP API&amp;rsquo;leri, geniş bir HTTP fiilleri yelpazesi kullanır ve genellikle JSON veya XML yanıtları döndürür.
Kaynak oluştur # Kaynak yaratmanın anlamsal olarak en doğru yönteminin ne olduğu konusunda herkes hemfikir değildir. Böylece, API&amp;rsquo;niz &amp;ldquo;POST&amp;rdquo; veya &amp;ldquo;PUT&amp;rdquo; isteklerini veya her ikisini de kabul edebilir.
Kaynak başarıyla oluşturulduysa, sunucu &amp;lsquo;201 Created&amp;rsquo; ile yanıt vermelidir. Değilse en uygun hata kodunu seçin.
Örneğin, çalışan kayıtları oluşturmak için bir API sağlarsanız, istek/yanıt şöyle görünebilir:
POST /employees HTTP/1.</description>
    </item>
    
    <item>
      <title>Çapraz Menşe ve Erişim Kontrolü</title>
      <link>https://www.wikiod.com/tr/http/capraz-mense-ve-erisim-kontrolu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/http/capraz-mense-ve-erisim-kontrolu/</guid>
      <description>Çapraz-kökenli kaynak paylaşımı, genellikle AJAX gibi teknikleri kullanarak, alanlar arasında dinamik isteklere izin vermek için tasarlanmıştır. Komut dosyası, işin çoğunu yaparken, HTTP sunucusunun, doğru başlıkları kullanarak isteği desteklemesi gerekir.
İstemci: Kaynaklar arası kaynak paylaşımı (CORS) isteği gönderme # &amp;ldquo;Origin&amp;rdquo; başlığını içeren bir çapraz kaynak isteği gönderilmelidir. Bu, isteğin nereden geldiğini gösterir. Örneğin, &amp;ldquo;http://example.com&amp;quot;dan &amp;ldquo;http://example.org&amp;quot;a bir çapraz kaynak isteği şöyle görünür:
GET /cors HTTP/1.1 Host: example.org Origin: example.com Sunucu, isteğin yetkilendirilip yetkilendirilmediğini belirlemek için bu değeri kullanır.</description>
    </item>
    
  </channel>
</rss>
