<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>postgresql Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/postgresql/</link>
    <description>Recent content in postgresql Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>postgresql&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/postgresql/postgresqli-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/postgresqli-kullanmaya-baslama/</guid>
      <description>PostgreSQL&amp;rsquo;i Windows&amp;rsquo;a Yükleme # Üretim sunucusu olarak Unix tabanlı bir işletim sistemi (örn. Linux veya BSD) kullanmak iyi bir uygulama olsa da PostgreSQL&amp;rsquo;i Windows&amp;rsquo;a kolayca kurabilirsiniz (umarım yalnızca geliştirme sunucusu olarak).
Windows kurulum ikili dosyalarını EnterpriseDB&amp;rsquo;den indirin: http://www.enterprisedb.com/products-services-training/pgdownload Bu, Windows için ikili dosyaları optimize eden PostgreSQL projesine çekirdek katkıda bulunanlar tarafından kurulan üçüncü taraf bir şirkettir.
En son kararlı (Beta olmayan) sürümü seçin (yazma sırasında 9.5.3). Büyük olasılıkla Win x86-64 paketini isteyeceksiniz, ancak daha eski bilgisayarlarda yaygın olan Windows&amp;rsquo;un 32 bit sürümünü kullanıyorsanız, bunun yerine Win x86-32&amp;rsquo;yi seçin.</description>
    </item>
    
    <item>
      <title>UZANTI dblink ve postgres_fdw</title>
      <link>https://www.wikiod.com/tr/postgresql/uzanti-dblink-ve-postgres_fdw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/uzanti-dblink-ve-postgres_fdw/</guid>
      <description>Sözdizimi # dblink (&amp;lsquo;dbname = name_db_distance bağlantı noktası = PortOfDB ana bilgisayarı = HostOfDB kullanıcısı = kullanıcı adıDB şifre = şifreDB&amp;rsquo;, &amp;lsquo;SORGULAMAM&amp;rsquo;)
dbname = veritabanının adı
port = Veritabanının Portu
host = Veritabanının Hostu
kullanıcı = veritabanının kullanıcı adı
şifre = veritabanının şifresi&amp;rsquo;,
SORUŞTURUM = bu, SELECT, INSERT, &amp;hellip; yapmak istediğim herhangi bir işlem olabilir.
Uzantı FDW # FDW, dblink&amp;rsquo;in bir uygulamasıdır, daha faydalıdır, bu yüzden onu kullanmak:
1-Bir uzantı oluşturun:</description>
    </item>
    
    <item>
      <title>JSON Desteği</title>
      <link>https://www.wikiod.com/tr/postgresql/json-destegi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/json-destegi/</guid>
      <description>JSON - Java Script Object Notation , Postgresql, 9.2 sürümünden beri JSON Veri türünü destekler. JSON verilerine erişmek için önceden tanımlanmış bazı işlevler ve operatörler vardır.
-&amp;gt; operatörü JSON sütununun anahtarını döndürür. -&amp;gt;&amp;gt; operatörü JSON Sütununun değerini döndürür.
JSONb operatörlerini kullanma # DB ve Tablo Oluşturma # DROP DATABASE IF EXISTS books_db; CREATE DATABASE books_db WITH ENCODING=&#39;UTF8&#39; TEMPLATE template0; DROP TABLE IF EXISTS books; CREATE TABLE books ( id SERIAL PRIMARY KEY, client TEXT NOT NULL, data JSONb NOT NULL ); DB&amp;rsquo;yi doldurma # INSERT INTO books(client, data) values ( &#39;Joe&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;Siddhartha&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Herman&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Hesse&amp;quot; } }&#39; ),( &#39;Jenny&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;Dharma Bums&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Jack&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Kerouac&amp;quot; } }&#39; ),( &#39;Jenny&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;100 años de soledad&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Gabo&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Marquéz&amp;quot; } }&#39; ); Tablo kitaplarının içindeki her şeyi görelim:</description>
    </item>
    
    <item>
      <title>Java&#39;dan PostgreSQL&#39;e bağlanın</title>
      <link>https://www.wikiod.com/tr/postgresql/javadan-postgresqle-baglann/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/javadan-postgresqle-baglann/</guid>
      <description>Java&amp;rsquo;dan ilişkisel bir veritabanı kullanmak için API, JDBC&amp;rsquo;dir.
Bu API, bir JDBC sürücüsü tarafından uygulanır.
Kullanmak için JAR dosyasını sürücüyle birlikte JAVA sınıfı yoluna koyun.
Bu belge, bir veritabanına bağlanmak için JDBC sürücüsünün nasıl kullanılacağına ilişkin örnekleri gösterir.
JDBC URL&amp;rsquo;si
JDBC URL&amp;rsquo;si şu biçimlerden birini alabilir:
jdbc:postgresql://host[:port]/[database][parameters] host varsayılan olarak &amp;rsquo;localhost&amp;rsquo;, port için 5432&amp;rsquo;dir. host bir IPv6 adresiyse, köşeli parantez içine alınmalıdır. Varsayılan veritabanı adı, bağlanan kullanıcının adıyla aynıdır.
Yük devretme uygulamak için, virgülle ayrılmış birkaç host[:port] girişine sahip olmak mümkündür.</description>
    </item>
    
    <item>
      <title>Yedekleme ve geri yükleme</title>
      <link>https://www.wikiod.com/tr/postgresql/yedekleme-ve-geri-yukleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/yedekleme-ve-geri-yukleme/</guid>
      <description>pg_dumpall ve pg_dump kullanmak yerine dosya sistemini yedekleme # Bunu kullanırsanız, önce pg_start_backup() işlevini ve sonra pg_stop_backup() işlevini çağırmanız çok önemlidir. Aksi halde dosya sistemi yedeklemeleri yapmak güvenli değildir; bu işlev çağrıları olmadan yedeklenen dosya sisteminin bir ZFS veya FreeBSD anlık görüntüsü bile veritabanını kurtarma moduna geçirir ve işlemleri kaybedebilir.
Hem bu nedenle hem de Postgres yedekleme dosyaları (özellikle özel formatta) alternatif geri yüklemeleri desteklemede son derece çok yönlü olduğundan, normal Postgres yedeklemeleri yerine dosya sistemi yedeklemeleri yapmaktan kaçınırdım.</description>
    </item>
    
    <item>
      <title>Rol Yönetimi</title>
      <link>https://www.wikiod.com/tr/postgresql/rol-yonetimi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/rol-yonetimi/</guid>
      <description>Sözdizimi # ROL ADI OLUŞTUR [ [ İLE ] seçeneği [ ... ] ]
KULLANICI adı OLUŞTUR [ [ İLE ] seçeneği [ ... ] ]
seçenek nerede olabilir: SUPERUSER | NOSUPERUSER | CREATEDB | NOCREATEDB | CREATEROLE | NOCREATEROLE | CREATEUSER | NOCREATEUSER | INHERIT | NOINHERIT | LOGIN | NOLOGIN | CONNECTION LIMIT connlimit | [ ENCRYPTED | UNENCRYPTED ] PASSWORD &#39;password&#39; | VALID UNTIL &#39;timestamp&#39; | IN ROLE role_name [, .</description>
    </item>
    
    <item>
      <title>PostgreSQL Yüksek Kullanılabilirlik</title>
      <link>https://www.wikiod.com/tr/postgresql/postgresql-yuksek-kullanlabilirlik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/postgresql-yuksek-kullanlabilirlik/</guid>
      <description>PostgreSQL&amp;rsquo;de çoğaltma # Birincil Sunucuyu Yapılandırma
Requirements:
Replication User for replication activities Directory to store the WAL archives Create Replication user
createuser -U postgres replication -P -c 5 --replication
+ option -P will prompt you for new password + option -c is for maximum connections. 5 connections are enough for replication + -replication will grant replication privileges to the user Create a archive directory in data directory
mkdir $PGDATA/archive
Edit the pg_hba.</description>
    </item>
    
    <item>
      <title>PLpgSQL ile programlama</title>
      <link>https://www.wikiod.com/tr/postgresql/plpgsql-ile-programlama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/plpgsql-ile-programlama/</guid>
      <description>PL/pgSQL, PostgreSQL&amp;rsquo;in, diğer veritabanlarında saklı yordamlar olarak bilinen, veritabanının içinde çalışan işlevleri yazmak için yerleşik programlama dilidir. SQL&amp;rsquo;i döngüler, koşullar ve dönüş türleri ile genişletir. Sözdizimi birçok geliştirici için garip gelse de, uygulama sunucusunda çalışan herhangi bir şeyden çok daha hızlıdır, çünkü veritabanına bağlanma ek yükü ortadan kalkar, bu özellikle aksi takdirde bir sorgu yürütmeniz gerektiğinde kullanışlıdır, sonucu bekleyin, ve başka bir sorgu gönderin.
PostgreSQL için PL/Python, PL/Perl ve PLV8 gibi birçok başka prosedürel dil mevcut olsa da, PL/pgSQL, sözdizimi SQL üzerine kurulu olduğu için ilk PostgreSQL işlevini yazmak isteyen geliştiriciler için ortak bir başlangıç ​​noktasıdır.</description>
    </item>
    
    <item>
      <title>Postgres İpucu ve Püf Noktaları</title>
      <link>https://www.wikiod.com/tr/postgresql/postgres-ipucu-ve-puf-noktalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/postgres-ipucu-ve-puf-noktalar/</guid>
      <description>Postgres&amp;rsquo;te DATEADD alternatifi # `CURRENT_DATE SEÇ + &amp;lsquo;1 gün&amp;rsquo;::ARALIK&amp;rsquo; `SELECT &amp;lsquo;1999-12-11&amp;rsquo;::TIMESTAMP + &amp;lsquo;19 gün&amp;rsquo;::ARALIK&amp;rsquo; SEÇ &#39;1 ay&#39;::ARALIK + &#39;1 ay 3 gün&#39;::ARALIK Bir sütunun virgülle ayrılmış değerleri # SELECT string_agg(&amp;lt;TABLE_NAME&amp;gt;.&amp;lt;COLUMN_NAME&amp;gt;, &#39;,&#39;) FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt; T Postgres tablosundan yinelenen kayıtları sil # DELETE FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;Table_NAME&amp;gt; WHERE ctid NOT IN ( SELECT MAX(ctid) FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt; GROUP BY &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt;.* ) ; Postresql, güncelleme sorgusunda birleştirmeyi desteklemediğinden, sorguyu iki tablo arasında birleştirme alternatifiyle güncelleyin. # update &amp;lt;SCHEMA_NAME&amp;gt;.</description>
    </item>
    
    <item>
      <title>SOKMAK</title>
      <link>https://www.wikiod.com/tr/postgresql/sokmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/postgresql/sokmak/</guid>
      <description>COPY kullanarak veri ekleyin # COPY, PostgreSQL&amp;rsquo;in toplu ekleme mekanizmasıdır. Dosyalar ve tablolar arasında veri aktarmanın uygun bir yoludur, ancak aynı anda birkaç binden fazla satır eklerken &amp;ldquo;INSERT&amp;quot;den çok daha hızlıdır.
Örnek veri dosyası oluşturarak başlayalım.
cat &amp;gt; samplet_data.csv 1,Yogesh 2,Raunak 3,Varun 4,Kamal 5,Hari 6,Amit Ve bu verilerin içe aktarılabileceği iki sütunlu bir tabloya ihtiyacımız var.
CREATE TABLE copy_test(id int, name varchar(8)); Şimdi asıl kopyalama işlemi, bu tabloda altı kayıt oluşturacaktır.</description>
    </item>
    
  </channel>
</rss>
