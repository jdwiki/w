<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ayrıştırma Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/parsing/</link>
    <description>Recent content in ayrıştırma Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/parsing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ayrıştırmaya başlarken</title>
      <link>https://www.wikiod.com/tr/parsing/ayrstrmaya-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/parsing/ayrstrmaya-baslarken/</guid>
      <description>Basit bir ayrıştırıcı # Ayrıştırıcı yazmanın en basit yolu özyinelemeli iniş tekniğini kullanmaktır. Bu, yukarıdan aşağıya bir ayrıştırıcı oluşturur (resmen bir LL(1) olarak tanımlanabilir). Örneğe başlamak için önce dilimiz için gramer kurallarını belirlememiz gerekiyor. Bu örnekte, yalnızca artı operatörünü kullanabilen ifadeler için basit aritmetik ifade atamalarını kullanacağız:
Assignment --&amp;gt; Identifier := Expression Expression --&amp;gt; Expression + Term | Term Term --&amp;gt; Identifier | (Expression) Identifier --&amp;gt; x | y | z Dilbilgisinin her kuralı için, kurala gelen belirteçleri tanımak için bir prosedür yazabiliriz.</description>
    </item>
    
  </channel>
</rss>
