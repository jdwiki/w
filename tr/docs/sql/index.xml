<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/sql/</link>
    <description>Recent content in SQL Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/sql/sqli-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/sqli-kullanmaya-baslama/</guid>
      <description>Genel Bakış # Yapılandırılmış Sorgu Dili (SQL), İlişkisel Veritabanı Yönetim Sisteminde (RDBMS) tutulan verileri yönetmek için tasarlanmış özel amaçlı bir programlama dilidir. SQL benzeri diller, İlişkisel Veri Akışı Yönetim Sistemlerinde (RDSMS) veya &amp;ldquo;yalnızca SQL değil&amp;rdquo; (NoSQL) veritabanlarında da kullanılabilir.
SQL, 3 ana alt dilden oluşur:
Veri Tanımlama Dili (DDL): veritabanının yapısını oluşturmak ve değiştirmek için; Veri Manipülasyon Dili (DML): Veritabanındaki veriler üzerinde Okuma, Ekleme, Güncelleme ve Silme işlemlerini gerçekleştirmek için; Veri Kontrol Dili (DCL): veritabanında saklanan verilere erişimi kontrol etmek için.</description>
    </item>
    
    <item>
      <title>SEÇME</title>
      <link>https://www.wikiod.com/tr/sql/secme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/secme/</guid>
      <description>SELECT ifadesi, çoğu SQL sorgusunun kalbinde yer alır. Sorgu tarafından hangi sonuç kümesinin döndürüleceğini tanımlar ve neredeyse her zaman veritabanının hangi bölümlerinin sorgulanacağını tanımlayan FROM yan tümcesi ile birlikte kullanılır.
Sözdizimi # SEÇ [AYRI] [sütun1] [, [sütun2] &amp;hellip; ] [tablodan] [ NEREDE koşulu ] [ GROUP BY [sütun1] [, [sütun2] &amp;hellip; ] [ [sütun1] [, [sütun2] &amp;hellip; ]
[ ASC TARAFINDAN SİPARİŞ | AÇIKLAMA ]
**SELECT, belirli bir tablodan hangi sütunların verilerinin hangi sırayla döndürüleceğini belirler (sorgunuzdaki diğer gereksinimlerle özel olarak eşleştiği göz önüne alındığında - nerede ve filtreleri ve birleştirmeleri vardır).</description>
    </item>
    
    <item>
      <title>KATILMAK</title>
      <link>https://www.wikiod.com/tr/sql/katilmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/katilmak/</guid>
      <description>JOIN, iki tablodaki bilgileri birleştirme (birleştirme) yöntemidir. Sonuç, birleştirme türü (İNNER/DIŞ/ÇAPRAZ ve SOL/SAĞ/TAM, aşağıda açıklanmıştır) ve birleştirme kriterleri (her iki tablodaki satırların nasıl ilişkili olduğu) ile tanımlanan her iki tablodan birleştirilmiş bir sütun kümesidir.
Bir masa kendisine veya başka bir masaya birleştirilebilir. İkiden fazla tablodaki bilgilere erişilmesi gerekiyorsa, bir FROM yan tümcesinde birden çok birleştirme belirtilebilir.
Sözdizimi # [ { İÇ | { { SOL | SAĞ | TAM } [ DIŞ ] } } ] KATIL Birleştirmeler, adından da anlaşılacağı gibi, birden fazla tablodan alınan sütunları gösteren satırlarla, ortak bir şekilde birkaç tablodan veri sorgulamanın bir yoludur.</description>
    </item>
    
    <item>
      <title>Örnek Veritabanları ve Tablolar</title>
      <link>https://www.wikiod.com/tr/sql/ornek-veritabanlar-ve-tablolar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/ornek-veritabanlar-ve-tablolar/</guid>
      <description>Oto Mağaza Veritabanı # Aşağıdaki örnekte - Bir otomobil mağazası işletmesi için veritabanı, departmanların, çalışanların, müşterilerin ve müşteri araçlarının bir listesine sahibiz. Çeşitli tablolar arasında ilişkiler oluşturmak için yabancı anahtarlar kullanıyoruz.
Canlı örnek: SQL kemanı
tablolar arasındaki ilişkiler # Her Departman 0 veya daha fazla Çalışana sahip olabilir Her Çalışanın 0 veya 1 Yöneticisi olabilir Her Müşterinin 0 veya daha fazla Arabası olabilir Bölümler # Kimlik İsim 1 İK 2 Satış 3 Teknoloji Tabloyu oluşturmak için SQL ifadeleri:</description>
    </item>
    
    <item>
      <title>Dize İşlevleri</title>
      <link>https://www.wikiod.com/tr/sql/dize-islevleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/dize-islevleri/</guid>
      <description>Dize işlevleri, dize değerleri üzerinde işlemler gerçekleştirir ve sayısal ya da dize değerleri döndürür.
Dize işlevlerini kullanarak, örneğin verileri birleştirebilir, bir alt dizeyi çıkarabilir, dizeleri karşılaştırabilir veya bir dizeyi tüm büyük veya küçük harflere dönüştürebilirsiniz.
Sözdizimi # BİRLEŞTİR ( string_value1, string_value2 [, string_valueN ] ) LTRIM ( karakter_ifadesi ) RTRIM ( karakter_ifadesi ) SUBSTRING ( ifade , başlangıç ​​, uzunluk ) ASCII (karakter_ifadesi) REPLICATE ( string_expression ,integer_expression ) TERSİNE (string_expression) BÜYÜK (karakter_ifadesi) TRIM ([karakterler FROM] dizesi) STRING_SPLIT (dize, ayırıcı) STUFF (karakter_ifadesi, başlangıç, uzunluk, replaceWith_expression) DEĞİŞTİR (string_expression, string_pattern, string_replacement) Transact-SQL / Microsoft için dize işlevleri referansı</description>
    </item>
    
    <item>
      <title>DAVA</title>
      <link>https://www.wikiod.com/tr/sql/dava/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/dava/</guid>
      <description>CASE ifadesi if-then mantığını uygulamak için kullanılır.
Sözdizimi # VAKA girdi_ifadesi NE ZAMAN karşılaştır1 SONRA sonuç1 [NE ZAMAN karşılaştırın2 SONRA sonuç2]&amp;hellip; [BAŞKA sonuçX] SON DAVA DURUM1 SONRA sonuç1 NE ZAMAN [WHEN koşul2 SONRA sonuç2]&amp;hellip; [BAŞKA sonuçX] SON basit CASE ifadesi, &amp;ldquo;karşılaştırmaX&amp;rdquo; değeri &amp;ldquo;girdi_ifadesi&amp;quot;ne eşit olan ilk sonucu döndürür.
aranan CASE ifadesi, &amp;ldquo;conditionX&amp;rdquo; değeri doğru olan ilk sonucu döndürür.
Bir sütundaki bir koşulla eşleşen satır sayısını SAYMAK için VAKA&amp;rsquo;yı kullanın. # Kullanım Örneği</description>
    </item>
    
    <item>
      <title>NEREDE ve HAVING kullanarak sonuçları filtreleyin</title>
      <link>https://www.wikiod.com/tr/sql/nerede-ve-having-kullanarak-sonuclar-filtreleyin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/nerede-ve-having-kullanarak-sonuclar-filtreleyin/</guid>
      <description>Sözdizimi # sütun_adı SEÇ tablo_adı&amp;rsquo;ndan NEREDE sütun_adı operatör değeri sütun_adı SEÇ, küme_işlevi(sütun_adı) tablo_adı&amp;rsquo;ndan GROUP BY sütun_adı HAVING toplama_fonksiyonu(sütun_adı) operatör değeri Sonuçları Filtrelemek için BETWEEN&amp;rsquo;i kullanın # Aşağıdaki örnekler, Ürün Satışları ve Müşteriler örnek veritabanlarını kullanır.
Not: BETWEEN operatörü içerir.
BETWEEN operatörünü Numbers ile kullanma:
SELECT * From ItemSales WHERE Quantity BETWEEN 10 AND 17 Bu sorgu, miktarı 10&amp;rsquo;dan büyük veya eşit ve 17&amp;rsquo;den küçük veya eşit olan tüm &amp;lsquo;ItemSales&amp;rsquo; kayıtlarını döndürür.</description>
    </item>
    
    <item>
      <title>SQL Enjeksiyonu</title>
      <link>https://www.wikiod.com/tr/sql/sql-enjeksiyonu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/sql-enjeksiyonu/</guid>
      <description>SQL enjeksiyonu, bir form alanına SQL enjekte ederek bir web sitesinin veritabanı tablolarına erişme girişimidir. Bir web sunucusu SQL enjeksiyon saldırılarına karşı koruma sağlamıyorsa, bir bilgisayar korsanı veritabanını ek SQL kodunu çalıştırması için kandırabilir. Bilgisayar korsanları kendi SQL kodlarını çalıştırarak hesap erişimlerini yükseltebilir, başka birinin özel bilgilerini görüntüleyebilir veya veritabanında başka değişiklikler yapabilir.
SQL enjeksiyon örneği # Web uygulamanızın oturum açma işleyicisine yapılan çağrının şöyle göründüğünü varsayarsak:
https://somepage.com/ajax/login.ashx?username=admin&amp;amp;password=123 Şimdi login.ashx&amp;rsquo;te şu değerleri okursunuz:</description>
    </item>
    
    <item>
      <title>BİRLİK  BİRLİK TÜMÜ</title>
      <link>https://www.wikiod.com/tr/sql/birlik--birlik-tumu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/birlik--birlik-tumu/</guid>
      <description>SQL&amp;rsquo;deki UNION anahtar sözcüğü, herhangi bir yineleme olmadan SELECT ifade sonuçlarını birleştirmek için kullanılır.
UNION&amp;rsquo;u kullanmak ve sonuçları birleştirmek için her iki SELECT deyimi de aynı sırada aynı veri türünde aynı sayıda sütuna sahip olmalıdır, ancak sütun uzunluğu farklı olabilir.
Sözdizimi # sütun_1 [, sütun_2 ] SEÇİN tablo_1 [, tablo_2 ] [NEREDE koşulu] BİRLİK | BİRLİK TÜMÜ sütun_1 [, sütun_2 ] SEÇİN tablo_1 [, tablo_2 ] [NEREDE koşulu] &amp;lsquo;UNION&amp;rsquo; ve &amp;lsquo;UNION ALL&amp;rsquo; yan tümceleri, iki veya daha fazla aynı yapılandırılmış SELECT ifadesinin sonuç kümesini tek bir sonuç/tabloda birleştirir.</description>
    </item>
    
    <item>
      <title>TABLO OLUŞTUR</title>
      <link>https://www.wikiod.com/tr/sql/tablo-olustur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sql/tablo-olustur/</guid>
      <description>CREATE TABLE ifadesi, veritabanında yeni bir tablo oluşturmak için kullanılır. Bir tablo tanımı, bir sütun listesinden, bunların türlerinden ve bütünlük kısıtlamalarından oluşur.
Sözdizimi # CREATE TABLE tableName( [ColumnName1] [datatype1] [, [ColumnName2] [datatype2] &amp;hellip;] ) Parametreler # Parametre Ayrıntılar tableName Tablonun adı sütunlar Tablonun sahip olduğu tüm sütunların bir &amp;rsquo;numaralandırmasını&amp;rsquo; içerir. Daha fazla ayrıntı için Yeni Tablo Oluştur bölümüne bakın. Tablo adları benzersiz olmalıdır.
Yeni Bir Tablo Oluştur # Bir kimlik ve telefon numarası ile birlikte çalışanın adını ve soyadını içeren temel bir &amp;lsquo;Çalışanlar&amp;rsquo; tablosu kullanılarak oluşturulabilir.</description>
    </item>
    
  </channel>
</rss>
