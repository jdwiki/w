<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>apache-flink Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/apache-flink/</link>
    <description>Recent content in apache-flink Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/apache-flink/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>apache-flink&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/apache-flink/apache-flinki-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/apache-flink/apache-flinki-kullanmaya-baslama/</guid>
      <description>Genel bakış ve gereksinimler # Flink nedir # Apache Hadoop ve Apache Spark gibi Apache Flink, dağıtılmış Büyük Veri Analitiği için topluluk odaklı bir açık kaynak çerçevesidir. . Java ile yazılan Flink, Scala, Java ve Python için API&amp;rsquo;lere sahiptir ve Toplu ve Gerçek Zamanlı akış analitiğine olanak tanır.
Gereksinimler # Linux, Mac OS X veya Cygwin gibi UNIX benzeri bir ortam; Java 6.X veya üstü; [isteğe bağlı] Maven 3.0.4 veya üstü.</description>
    </item>
    
    <item>
      <title>Kafka&#39;dan veri tüket</title>
      <link>https://www.wikiod.com/tr/apache-flink/kafkadan-veri-tuket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/apache-flink/kafkadan-veri-tuket/</guid>
      <description>Yerleşik seri durumdan çıkarma şemaları # SimpleStringSchema: SimpleStringSchema mesajı bir dize olarak seri durumdan çıkarır. Mesajlarınızın anahtarları olması durumunda, ikincisi yok sayılır.
new FlinkKafkaConsumer09&amp;lt;&amp;gt;(kafkaInputTopic, new SimpleStringSchema(), prop); JSONSerileştirme Şeması
&amp;ldquo;JSONDeserializationSchema&amp;rdquo;, jackson kullanarak json biçimli iletilerin serisini kaldırır ve &amp;ldquo;com.fasterxml.jackson.databind.node.ObjectNode&amp;rdquo; nesnelerinin akışını döndürür. Daha sonra alanlara erişmek için .get(&amp;quot;property&amp;quot;) yöntemini kullanabilirsiniz. Bir kez daha, tuşlar yoksayılır.
new FlinkKafkaConsumer09&amp;lt;&amp;gt;(kafkaInputTopic, new JSONDeserializationSchema(), prop); JSONKeyValueDeserializationSchema
JSONKeyValueDeserializationSchema öncekine çok benzer, ancak json kodlu anahtarlar VE değerler içeren mesajlarla ilgilenir.</description>
    </item>
    
    <item>
      <title>Kayıt noktaları ve harici kontrol noktaları</title>
      <link>https://www.wikiod.com/tr/apache-flink/kayt-noktalar-ve-harici-kontrol-noktalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/apache-flink/kayt-noktalar-ve-harici-kontrol-noktalar/</guid>
      <description>Kayıt noktaları, kalıcı bir arıza, iptal veya kod güncellemesinden sonra durum bilgisi olan bir yanıp sönme programını sürdürmemize izin veren harici olarak depolanan kontrol noktalarıdır. Flink 1.2 ve haricileştirilmiş kontrol noktalarının tanıtılmasından önce, kayıt noktalarının açıkça tetiklenmesi gerekiyordu.
Haricileştirilmiş kontrol noktaları (Flink 1.2+) # 1.2&amp;rsquo;den önce, bir iş sonlandırma/iptal/kalıcı başarısızlıktan sonra bir kontrol noktası durumunu sürdürmenin/tutmanın tek yolu, manuel olarak tetiklenen bir kaydetme noktasıydı. Sürüm 1.2, kalıcı kontrol noktalarını tanıttı.</description>
    </item>
    
    <item>
      <title>Kerestecilik</title>
      <link>https://www.wikiod.com/tr/apache-flink/kerestecilik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/apache-flink/kerestecilik/</guid>
      <description>Bu konu, Flink uygulamalarında günlüğe kaydetmenin (log4j) nasıl kullanılacağını ve yapılandırılacağını gösterir.
Günlük yapılandırması # Yerel mod # Yerel modda, örneğin uygulamanızı bir IDE&amp;rsquo;den çalıştırırken, &amp;ldquo;log4j&amp;quot;yi her zamanki gibi, yani sınıf yolunda bir &amp;ldquo;log4j.properties&amp;rdquo; hazırlayarak yapılandırabilirsiniz. Maven&amp;rsquo;de kolay bir yol, &amp;ldquo;src/main/resources&amp;rdquo; klasöründe &amp;ldquo;log4j.properties&amp;rdquo; oluşturmaktır. İşte bir örnek:
log4j.rootLogger=INFO, console # patterns: # d = date # c = class # F = file # p = priority (INFO, WARN, etc) # x = NDC (nested diagnostic context) associated with the thread that generated the logging event # m = message # Log all infos in the console log4j.</description>
    </item>
    
    <item>
      <title>kontrol noktası</title>
      <link>https://www.wikiod.com/tr/apache-flink/kontrol-noktas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/apache-flink/kontrol-noktas/</guid>
      <description>(Flink 1.2 ve altında test edilmiştir)
Flink&amp;rsquo;teki her işlev, kaynak veya operatör durum bilgisi olabilir. Kontrol noktaları, uygulamaya hatasız bir yürütmeyle aynı semantiği vermek için Flink&amp;rsquo;in akışlardaki durumu ve konumları kurtarmasına izin verir. Bu, hata toleransı ve tam bir kez işleme garantilerinin arkasındaki mekanizmadır.
İçindekileri anlamak için bu makaleyi okuyun.
Denetim noktaları, yalnızca kümede bir hata meydana geldiğinde, örneğin bir görev yöneticisi başarısız olduğunda yararlıdır. İşin kendisi başarısız olduktan veya iptal edildikten sonra devam etmezler.</description>
    </item>
    
    <item>
      <title>Özel (de)seri hale getirme şeması nasıl tanımlanır</title>
      <link>https://www.wikiod.com/tr/apache-flink/ozel-deseri-hale-getirme-semas-nasl-tanmlanr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/apache-flink/ozel-deseri-hale-getirme-semas-nasl-tanmlanr/</guid>
      <description>Şemalar bazı bağlayıcılar (Kafka, RabbitMQ) tarafından mesajları Java nesnelerine dönüştürmek için kullanılır ve bunun tersi de geçerlidir.
Özel Şema Örneği # Özel bir şema kullanmak için tek yapmanız gereken &amp;ldquo;SerializationSchema&amp;rdquo; veya &amp;ldquo;DeserializationSchema&amp;rdquo; arabirimlerinden birini uygulamaktır.
public class MyMessageSchema implements DeserializationSchema&amp;lt;MyMessage&amp;gt;, SerializationSchema&amp;lt;MyMessage&amp;gt; { @Override public MyMessage deserialize(byte[] bytes) throws IOException { return MyMessage.fromString(new String(bytes)); } @Override public byte[] serialize(MyMessage myMessage) { return myMessage.toString().getBytes(); } @Override public TypeInformation&amp;lt;MyMessage&amp;gt; getProducedType() { return TypeExtractor.getForClass(MyMessage.class); } // Method to decide whether the element signals the end of the stream.</description>
    </item>
    
    <item>
      <title>Tablo API&#39;si</title>
      <link>https://www.wikiod.com/tr/apache-flink/tablo-apisi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/apache-flink/tablo-apisi/</guid>
      <description>Maven bağımlılıkları # Tablo API&amp;rsquo;sini kullanmak için, &amp;ldquo;flink-table&amp;quot;ı maven bağımlılığı olarak ekleyin (&amp;ldquo;flink-clients&amp;rdquo; ve &amp;ldquo;flink-core&amp;quot;a ek olarak):
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.flink&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;flink-table_2.11&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.1.4&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Scala sürümünün (burada 2.11) sisteminizle uyumlu olduğundan emin olun.
Bir CSV&amp;rsquo;den basit toplama # &amp;ldquo;peoples.csv&amp;rdquo; CSV dosyası göz önüne alındığında:
1,Reed,United States,Female 2,Bradley,United States,Female 3,Adams,United States,Male 4,Lane,United States,Male 5,Marshall,United States,Female 6,Garza,United States,Male 7,Gutierrez,United States,Male 8,Fox,Germany,Female 9,Medina,United States,Male 10,Nichols,United States,Male 11,Woods,United States,Male 12,Welch,United States,Female 13,Burke,United States,Female 14,Russell,United States,Female 15,Burton,United States,Male 16,Johnson,United States,Female 17,Flores,United States,Male 18,Boyd,United States,Male 19,Evans,Germany,Male 20,Stephens,United States,Male İnsanları ülkeye ve ülkeye+cinsiyete göre saymak istiyoruz:</description>
    </item>
    
  </channel>
</rss>
