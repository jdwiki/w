<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>deniz doğumu Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/seaborn/</link>
    <description>Recent content in deniz doğumu Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/seaborn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Seaborn&#39;a Başlarken</title>
      <link>https://www.wikiod.com/tr/seaborn/seaborna-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/seaborn/seaborna-baslarken/</guid>
      <description>Kurulum veya Kurulum # Seaborn kurulumu veya kurulumu hakkında ayrıntılı talimatlar.</description>
    </item>
    
    <item>
      <title>korelasyon grafiği</title>
      <link>https://www.wikiod.com/tr/seaborn/korelasyon-grafigi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/seaborn/korelasyon-grafigi/</guid>
      <description>Bir korelasyon grafiği, ısı haritalarının bir alt kategorisi olarak kabul edilebilir. Kutudan çıkmış bir deniz doğumu ısı haritası, iki değişken arasındaki korelasyonu iki kez gösterir. Bir korelasyon grafiği, haritanın bölümlerini maskeleyerek çoğaltılan değerleri işlemeli ve/veya maskelenen parçanın renkler yerine değerleri göstermesine izin vermelidir. Bir çubuk grafik de dahil edilmelidir.
Temel korelasyon grafiği # Bir dizi değişken arasındaki korelasyonları gösteren temel ancak açıklayıcı bir ısı haritası.
import pandas as pd import seaborn as sns import numpy as np # Sample dataframe with date index and five variables np.</description>
    </item>
    
    <item>
      <title>barplot</title>
      <link>https://www.wikiod.com/tr/seaborn/barplot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/seaborn/barplot/</guid>
      <description>Gradyanlı Barplot # Aşağıdaki gibi bir barplota çizilecek basit bir veri çerçeveniz olduğunu hayal edin:
df = pd.DataFrame({&#39;a&#39;:[1,2,3,4,5], &#39;b&#39;:[10,5,2,4,5]}) seaborn kullanarak:
sns.barplot(df[&#39;a&#39;], df[&#39;b&#39;], palette=&#39;Blues_d&#39;) şöyle bir şey elde edebilirsiniz:
daha sonra, aşağıdaki gibi bazı verilere göre bir degrade ekleyerek &amp;ldquo;palet&amp;rdquo; seçeneği ve &amp;ldquo;renk haritası&amp;rdquo; ile de oynayabilirsiniz:
sns.barplot(df[&#39;a&#39;], df[&#39;b&#39;], palette=cm.Blues(df[&#39;b&#39;]*10) elde etmek:</description>
    </item>
    
  </channel>
</rss>
