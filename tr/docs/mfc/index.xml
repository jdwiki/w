<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mfc Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/mfc/</link>
    <description>Recent content in mfc Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/mfc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mfc&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/mfc/mfcye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/mfc/mfcye-baslarken/</guid>
      <description>Temel bir MFC programı # // Include the MFC header: // (you do not need to and should not include the standard Windows headers, e.g. // Windows.h) #include &amp;lt;AfxWin.h&amp;gt; // MFC core and standard components // The following header defines resource constants, such as dialog and control IDs: #include &amp;quot;resource.h&amp;quot; // The basic element of an MFC application is a class that inherits from CWinApp. class CMyApp : public CWinApp { // This gets called as the application gets initialized.</description>
    </item>
    
    <item>
      <title>Yerleştirilebilir kontrol çubukları (bölmeler)</title>
      <link>https://www.wikiod.com/tr/mfc/yerlestirilebilir-kontrol-cubuklar-bolmeler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/mfc/yerlestirilebilir-kontrol-cubuklar-bolmeler/</guid>
      <description>Hemen hemen tüm MFC uygulamalarının araç çubuğu ve durum çubuğu vardır - uygulama ana çerçevesinin üst ve alt kısmına yerleştirilmiş özel kontrol çubuğu türleri. Ancak genellikle uygulama mantığı, çerçevenin bir tarafına yerleştirilmiş bilgi çubuklarından daha fazlasını gerektirir; örneğin, özellikler çubuğu veya sınıflar çubuğu, önizleme çubuğu, çıktı çubuğu ve diğerleri olabilir. Klasik MFC, yalnızca araç çubukları ve dinamik olarak yeniden boyutlandırılamayan diğer kontroller için iyi bir çözüme sahiptir. Ancak MFC Özellik Paketi, aşağıdakilere izin veren gelişmiş yerleştirme yöneticisine sahiptir:</description>
    </item>
    
    <item>
      <title>ISAPI MFC uzantısı (C&#43;&#43;) VS2005 DLL projesini VS2015&#39;e geçirme.</title>
      <link>https://www.wikiod.com/tr/mfc/isapi-mfc-uzants-c-vs2005-dll-projesini-vs2015e-gecirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/mfc/isapi-mfc-uzants-c-vs2005-dll-projesini-vs2015e-gecirme/</guid>
      <description>Bir ISAPI uzantısı projesinin nasıl oluşturulacağını gösteren birkaç web sitesi görmüş olabilirsiniz, ancak bunların hiçbiri mevcut eski ISAPI uzantısı (VS2005) projesinin VS2015&amp;rsquo;e nasıl geçirileceğini göstermeyecektir. Böyle bir gereksinim üzerinde çalışırken benzer bir sorunla karşılaşmıştım. Bu makale, sorunumu çözmek için kullandığım deneysel yolu göstermektedir.
Bir projeyle karşılaştığım bir geçiş görevi üzerinde çalışıyordum. Eski ISAPI projesi, VS2005&amp;rsquo;te oluşturulmuş bir MFC uzantısı DLL projesiydi ve birkaç şeyi araştırdıktan sonra, MFC ISAPI sınıflarının (CHttpServerContext, CHttpServer vb.</description>
    </item>
    
    <item>
      <title>çoklu kullanım</title>
      <link>https://www.wikiod.com/tr/mfc/coklu-kullanm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/mfc/coklu-kullanm/</guid>
      <description>MFC, çalışan iş parçacıklarını ve gui iş parçacıklarını (mesaj döngülü iş parçacıkları) destekler. Daha fazla belge için https://msdn.microsoft.com/en-us/library/975t8ks0.aspx adresine bakın.
Basit AfxBeginThread Çalışan İş Parçacığı Örneği # Bu örnek, çalışan iş parçacığını başlatan bir AfxBeginThread çağrısını ve bu iş parçacığı için örnek bir çalışan iş parçacığı prosedürünü gösterir.
// example simple thread procedure. UINT __cdecl threadProc(LPVOID rawInput) { // convert it to the correct data type. It&#39;s common to pass entire structures this way.</description>
    </item>
    
  </channel>
</rss>
