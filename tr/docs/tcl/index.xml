<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tcl Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/tcl/</link>
    <description>Recent content in tcl Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/tcl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>tcl&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/tcl/tclye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/tclye-baslarken/</guid>
      <description>Kurulum # Tcl 8.6.4&amp;lsquo;ü Windows&amp;lsquo;a yükleme:
Bir Windows makinesine Tcl almanın en kolay yolu, ActiveTcl distribution from ActiveState.
www.activestate.com adresine gidin ve aşağıdaki bağlantıları izleyin. download the Free Community Edition of ActiveTcl for Windows (choose 32/64 bit version appropriately).
ActiveTcl&amp;rsquo;nin yeni bir yüklemesiyle sonuçlanacak olan yükleyiciyi çalıştırın usually in the C:\Tcl directory.
Kurulumu test etmek için bir komut istemi açın, &amp;ldquo;tclsh&amp;rdquo; yazın, should open an interactive tcl console. Enter &amp;ldquo;info patchlevel&amp;rdquo; to check the version of tcl that was installed and it should display an output of the form &amp;ldquo;8.</description>
    </item>
    
    <item>
      <title>İfade</title>
      <link>https://www.wikiod.com/tr/tcl/ifade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/ifade/</guid>
      <description>Ayraçlı ifade dizeleri kullanmanın bir başka yararı da, bayt derleyicisinin genellikle onlardan daha verimli kod (5 - 10 kat daha hızlı) üretebilmesidir.
Çaprazsız ifadelerle ilgili problemler # İfade dizesi bağımsız değişkenlerini ayraçlı dizeler olarak sağlamak iyi bir uygulamadır. &amp;ldquo;Çifte Yer Değiştirme&amp;rdquo; başlığı, bunun arkasındaki önemli nedenleri özetlemektedir.
&amp;ldquo;expr&amp;rdquo; komutu, bir değeri hesaplamak için operatör tabanlı bir ifade dizesini değerlendirir. Bu dize, çağrıdaki bağımsız değişkenlerden oluşturulur.
expr 1 + 2 ; # three arguments expr &amp;quot;1 + 2&amp;quot; ; # one argument expr {1 + 2} ; # one argument Bu üç çağrı eşdeğerdir ve ifade dizesi aynıdır.</description>
    </item>
    
    <item>
      <title>Prosedür bağımsız değişkenleri</title>
      <link>https://www.wikiod.com/tr/tcl/prosedur-bagmsz-degiskenleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/prosedur-bagmsz-degiskenleri/</guid>
      <description>Referanslar: proc Argüman Genişletme (bölüm 5)
Argümanları kabul etmeyen bir prosedür # proc myproc {} { puts &amp;quot;hi&amp;quot; } myproc # =&amp;gt; hi Boş bir argüman listesi (prosedür adından sonraki ikinci argüman, &amp;ldquo;myproc&amp;rdquo;), prosedürün argümanları kabul etmeyeceği anlamına gelir.
Değişken sayıda argüman kabul eden bir prosedür # ### Definition proc myproc {alpha {beta {}} {gamma green}} { puts [list $alpha $beta $gamma] } ### Use myproc A # =&amp;gt; A {} green myproc A B # =&amp;gt; A B green myproc A B C # =&amp;gt; A B C Bu prosedür bir, iki veya üç bağımsız değişkeni kabul eder: adları iki öğeli bir listedeki ilk öğe olan parametreler isteğe bağlıdır.</description>
    </item>
    
    <item>
      <title>Değişkenler</title>
      <link>https://www.wikiod.com/tr/tcl/degiskenler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/degiskenler/</guid>
      <description>Sözdizimi # varName ?değer? ayarla &amp;ndash; ayarlanmadı mı?-nocomplain? , ?varName varName varName?
$varName koyar
[set varName] koyar
değişken varName
global varName ?varName varName?
?&amp;hellip;? içinde ?varName? gibi parametreler, bir Tcl komutunun isteğe bağlı argümanlarını temsil eder.
Belgeler: global, upvar
Değişkenlere değer atama # Tcl&amp;rsquo;de değerler atamak için set komutu kullanılır. Aşağıdaki şekilde iki argümanla çağrıldığında,
% set tempVar &amp;quot;This is a string.&amp;quot; This is a string. ikinci bağımsız değişkeni (&amp;ldquo;Bu bir dizedir.</description>
    </item>
    
    <item>
      <title>sözlükler</title>
      <link>https://www.wikiod.com/tr/tcl/sozlukler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/sozlukler/</guid>
      <description>Tcl&amp;rsquo;deki sözlükler, keyfi değerlerden diğer keyfi değerlere bir eşlemeyi tutan _değerlerdir. Tcl 8.5&amp;rsquo;te tanıtıldılar, ancak (artık desteklenmeyen) Tcl 8.4 için sınırlı sürümler var. Sözlükler sözdizimsel olarak çift sayıda öğeye sahip listelerle aynıdır; ilk eleman çifti sözlüğün ilk anahtarı ve değeridir, ikinci çift ikinci gruptur.
Böylece:
fox &amp;quot;quick brown&amp;quot; dogs &amp;quot;lazy&amp;quot; geçerli bir sözlüktür. Aynı anahtar birden çok kez olabilir, ancak tam olarak sonrakinin değeri öncekinin değerindeymiş gibi; bunlar aynı sözlük:</description>
    </item>
    
    <item>
      <title>Düzenli ifadeler</title>
      <link>https://www.wikiod.com/tr/tcl/duzenli-ifadeler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/duzenli-ifadeler/</guid>
      <description>Sözdizimi # normal ifade ?anahtarlar? exp dize ?matchVar? ?subMatchVar subMatchVar &amp;hellip;? regsub ?anahtarlar? exp string subSpec ?varName? Bu konu, normal ifadelerin kendilerini tartışmak için tasarlanmamıştır. İnternette düzenli ifadeler ve düzenli ifadeler oluşturmaya yardımcı olacak araçları açıklayan birçok kaynak vardır.
Bu konu, Tcl&amp;rsquo;de normal ifadeleri kullanmanın yaygın anahtarlarını ve yöntemlerini ve Tcl ile diğer normal ifade motorları arasındaki bazı farkları ele almaya çalışacaktır.
Normal ifadeler genellikle yavaştır. Sormanız gereken ilk soru &amp;ldquo;Gerçekten düzenli bir ifadeye ihtiyacım var mı?</description>
    </item>
    
    <item>
      <title>Tcl Dil Yapıları</title>
      <link>https://www.wikiod.com/tr/tcl/tcl-dil-yaplar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/tcl-dil-yaplar/</guid>
      <description>Sözdizimi # # Bu geçerli bir yorumdur # Bu geçerli bir { yorum } Yorum Yerleştirme # Tcl&amp;rsquo;deki yorumlar en iyi başka bir komut olarak düşünülür. Bir yorum, bir &amp;ldquo;#&amp;rdquo; ve ardından bir sonraki yeni satıra kadar herhangi bir sayıda karakterden oluşur. Bir komutun yerleştirilebileceği her yerde bir yorum görünebilir.
# this is a valid comment proc hello { } { # the next comment needs the ; before it to indicate a new command is # being started.</description>
    </item>
    
    <item>
      <title>Yol adları ve dosya adları</title>
      <link>https://www.wikiod.com/tr/tcl/yol-adlar-ve-dosya-adlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/yol-adlar-ve-dosya-adlar/</guid>
      <description>Sözdizimi # dosya dizin adı dosya yolu dosya kuyruğu * dosya yolu * dosya kök adı dosya yolu dosya uzantısı * dosya yolu * dosya birleştirme path1 path2 &amp;hellip; dosya normalleştirme * yol * dosya yerel adı yol Yol adları ve dosya adlarıyla çalışma # % set mypath /home/tcluser/sources/tcl/myproject/test.tcl /home/tcluser/sources/tcl/myproject/test.tcl % set dir [file dirname $mypath] /home/tcluser/sources/tcl/myproject % set filename [file tail $mypath] test.tcl % set basefilename [file rootname $filename] test % set extension [file extension $filename] .</description>
    </item>
    
    <item>
      <title>Kontrol Yapıları</title>
      <link>https://www.wikiod.com/tr/tcl/kontrol-yaplar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tcl/kontrol-yaplar/</guid>
      <description>Sözdizimi # ifade1 ise ?o zaman? body1 başka bir ifade2 ise ?o zaman? body2 &amp;hellip; ?başka? ?vücutN? sonraki vücut testini başlatmak için test gövdesi sırasında foreach varlist1 list1 ?varlist2 list2 &amp;hellip;? gövde Belgeler: break, for, foreach, if, switch, uplevel, while
if / while / for # if ifade1 ?sonra? body1 yoksa ifade2 ?o zaman? vücut2 &amp;hellip; ?başka? ?vücutN?
exprN, bir boole değeri olarak değerlendirilen bir ifadedir. bodyN bir komut listesidir.</description>
    </item>
    
  </channel>
</rss>
