<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lua Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/lua/</link>
    <description>Recent content in Lua Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/lua/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lua&#39;yı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/lua/luay-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/luay-kullanmaya-baslama/</guid>
      <description>Yorumlar # Lua&amp;rsquo;da tek satırlık yorumlar `&amp;ndash;&amp;rsquo; ile başlar ve satırın sonuna kadar devam eder:
-- this is single line comment -- need another line -- huh? Blok yorumları --[[ ile başlar ve ]] ile biter:
--[[ This is block comment. So, it can go on... and on... and on.... ]] Blok yorumları, uzun dizelerle aynı sınırlayıcı stilini kullanır; bir yorumu sınırlandırmak için parantezler arasına herhangi bir sayıda eşittir işareti eklenebilir:</description>
    </item>
    
    <item>
      <title>desen eşleştirme</title>
      <link>https://www.wikiod.com/tr/lua/desen-eslestirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/desen-eslestirme/</guid>
      <description>Sözdizimi # string.find(str, pattern [, init [, düz]]) &amp;ndash; str cinsinden eşleşmenin başlangıç ​​ve bitiş indeksini döndürür
string.match(str, pattern [, index]) &amp;ndash; Bir kalıpla bir kez eşleşir (dizinden başlayarak)
string.gmatch(str, pattern) &amp;ndash; str içindeki tüm eşleşmeler boyunca yinelenen bir işlev döndürür
string.gsub(str, pattern, repl [, n]) &amp;ndash; Alt dizeleri değiştirir (en fazla n defa)
. tüm karakterleri temsil eder
%a tüm harfleri temsil eder
%l tüm küçük harfleri temsil eder</description>
    </item>
    
    <item>
      <title>Setler</title>
      <link>https://www.wikiod.com/tr/lua/setler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/setler/</guid>
      <description>Bir Tabloyu Set Olarak Kullanma # Bir set oluşturun # local set = {} -- empty set Değerlerini &amp;ldquo;true&amp;rdquo; olarak ayarlayarak öğeler içeren bir küme oluşturun:
local set = {pear=true, plum=true} -- or initialize by adding the value of a variable: local fruit = &#39;orange&#39; local other_set = {[fruit] = true} -- adds &#39;orange&#39; Kümeye bir üye ekleyin # değerini &amp;rsquo;true&amp;rsquo; olarak ayarlayarak bir üye ekleyin
set.peach = true set.apple = true -- alternatively set[&#39;banana&#39;] = true set[&#39;strawberry&#39;] = true Bir üyeyi kümeden çıkarın # set.</description>
    </item>
    
    <item>
      <title>Tablolar</title>
      <link>https://www.wikiod.com/tr/lua/tablolar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/tablolar/</guid>
      <description>Sözdizimi # ipairs(numeric_table) &amp;ndash; Sayısal indeks yineleyicili Lua tablosu çiftler (input_table) &amp;ndash; genel Lua tablosu yineleyici anahtar, değer = sonraki(input_table, input_key) &amp;ndash; Lua tablosu değer seçicisi table.insert(input_table, [position], value) &amp;ndash; belirtilen değeri giriş tablosuna ekle remove_value = table.remove(input_table, [position]) &amp;ndash; konuma göre belirtilen değeri kaldır veya sonuncuyu aç Tablolar, Lua&amp;rsquo;da bulunan tek yerleşik veri yapısıdır. Bu, nasıl baktığınıza bağlı olarak ya zarif bir sadelik ya da kafa karıştırıcıdır.
Lua tablosu, anahtarların benzersiz olduğu ve ne anahtarın ne de değerin &amp;ldquo;nil&amp;rdquo; olmadığı bir anahtar/değer çiftleri topluluğudur.</description>
    </item>
    
    <item>
      <title>Fonksiyonlar</title>
      <link>https://www.wikiod.com/tr/lua/fonksiyonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/fonksiyonlar/</guid>
      <description>Sözdizimi # işlev adı = işlev(paramA, paramB, &amp;hellip;) gövde; ifade listesi sonunu döndür &amp;ndash; basit bir işlev işlev işlev adı(paramA, paramB, &amp;hellip;) gövde; dönüş açıklama listesi sonu &amp;ndash; yukarıdaki için kısayol yerel işlev adı = işlev(paramA, paramB, &amp;hellip;) gövde; dönüş exprlist sonu &amp;ndash; bir lambda yerel işlev adı; işlev adı = işlev(paramA, paramB, &amp;hellip;) gövde; dönüş exprlist end &amp;ndash; özyinelemeli aramalar yapabilen lambda yerel işlev işlev adı(paramA, paramB, &amp;hellip;) gövde; dönüş açıklama listesi sonu &amp;ndash; yukarıdaki için kısayol funcname(paramA, paramB, &amp;hellip;) &amp;ndash; bir işlev çağırın yerel var = var veya &amp;ldquo;Varsayılan&amp;rdquo; &amp;ndash; varsayılan bir parametre sıfır, &amp;ldquo;hata mesajları&amp;rdquo; döndür &amp;ndash; bir hatayla iptal etmenin standart yolu İşlevler genellikle &amp;ldquo;a(b,c) &amp;hellip; bitiş&amp;rdquo; işleviyle ve nadiren bir değişkeni anonim bir işleve (&amp;lsquo;a = işlev(a,b) &amp;hellip; bitiş&amp;rsquo;) ayarlayarak ayarlanır.</description>
    </item>
    
    <item>
      <title>Lua&#39;daki Boole&#39;ler</title>
      <link>https://www.wikiod.com/tr/lua/luadaki-booleler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/luadaki-booleler/</guid>
      <description>Lua&amp;rsquo;da Boole değerleri, doğruluk ve yanlışlık açıktır. İncelemek için:
Tam olarak iki değere sahip bir boole türü vardır: &amp;rsquo;true&amp;rsquo; ve &amp;lsquo;false&amp;rsquo;. Koşullu bağlamda (&amp;lsquo;if&amp;rsquo;, &amp;rsquo;elseif&amp;rsquo;, &amp;lsquo;while&amp;rsquo;, &amp;lsquo;until&amp;rsquo;), bir boole gerekli değildir. Herhangi bir ifade kullanılabilir. Koşullu bir bağlamda, &amp;ldquo;yanlış&amp;rdquo; ve &amp;ldquo;sıfır&amp;rdquo; yanlış olarak sayılır ve diğer her şey doğru olarak sayılır. 3 zaten bunu ima etse de: başka dillerden geliyorsanız, Lua&amp;rsquo;daki koşullu bağlamlarda &amp;ldquo;0&amp;quot;ın ve boş dizenin doğru sayıldığını unutmayın. Boole türü # Boole değerleri ve diğer değerler # Lua ile uğraşırken, &amp;ldquo;doğru&amp;rdquo; ve &amp;ldquo;yanlış&amp;rdquo; boole değerleri ile doğru veya yanlış olarak değerlendirilen değerler arasında ayrım yapmak önemlidir.</description>
    </item>
    
    <item>
      <title>Hata yönetimi</title>
      <link>https://www.wikiod.com/tr/lua/hata-yonetimi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/hata-yonetimi/</guid>
      <description>Lua&amp;rsquo;da hataları işleme # Aşağıdaki fonksiyona sahip olduğumuzu varsayarsak:
function foo(tab) return tab.a end -- Script execution errors out w/ a stacktrace when tab is not a table biraz geliştirelim
function foo(tab) if type(tab) ~= &amp;quot;table&amp;quot; then error(&amp;quot;Argument 1 is not a table!&amp;quot;, 2) end return tab.a end -- This gives us more information, but script will still error out Hata durumunda bile bir fonksiyonun bir programı çökertmesini istemiyorsak, lua&amp;rsquo;da aşağıdakileri yapmak standarttır:</description>
    </item>
    
    <item>
      <title>Lua C API&#39;ye Giriş</title>
      <link>https://www.wikiod.com/tr/lua/lua-c-apiye-giris/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/lua-c-apiye-giris/</guid>
      <description>Sözdizimi # lua_State *L = lua_open(); // Yeni bir VM durumu oluşturun; Lua 5.0 iki_Durum *L = ikiL_newstate(); // Yeni bir VM durumu oluşturun; İki 5.1+ int luaL_dofile(lua_State *L, const char *dosyaadı); // Belirtilen lua_State&amp;rsquo;i kullanarak verilen dosyaadı ile bir lua betiği çalıştırın geçersiz luaL_openlibs(lua_State *L); // Tüm standart kitaplıkları belirtilen lua_State&amp;rsquo;e yükleyin void lua_close(lua_State *L); // VM durumunu kapatın ve içindeki kaynakları serbest bırakın void lua_call(lua_State *L, int nargs, int sonuçlar); // -(nargs + 1) dizinindeki luadeğerini çağırın Lua ayrıca Sanal Makinesine uygun bir C API sağlar.</description>
    </item>
    
    <item>
      <title>Metatablolar</title>
      <link>https://www.wikiod.com/tr/lua/metatablolar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/metatablolar/</guid>
      <description>Sözdizimi # [[local] mt = ]getmetatable(t) &amp;ndash;&amp;gt; &amp;lsquo;t&amp;rsquo; için ilişkili metatabloyu al [[local] t = ]setmetatable(t, mt) &amp;ndash;&amp;gt; &amp;lsquo;t&amp;rsquo; için metatabloyu &amp;lsquo;mt&amp;rsquo; olarak ayarlar ve &amp;lsquo;t&amp;rsquo; değerini döndürür Parametreler # parametre Ayrıntılar t Bir lua tablosuna atıfta bulunan değişken; tablo değişmezi de olabilir. mt Metatablo olarak kullanılacak tablo; sıfır veya daha fazla metametod alanı ayarlanmış olabilir. Burada bahsedilmeyen bazı metametotlar vardır. Tam liste ve kullanımları için lua manual içindeki ilgili girişe bakın.</description>
    </item>
    
    <item>
      <title>Değişken Argümanlar</title>
      <link>https://www.wikiod.com/tr/lua/degisken-argumanlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lua/degisken-argumanlar/</guid>
      <description>Varargs, yaygın olarak bilindiği gibi, işlevlerin belirtim olmadan rastgele sayıda argüman almasına izin verir. Böyle bir işleve verilen tüm argümanlar vararg listesi olarak bilinen tek bir yapı içinde paketlenir; hangi Lua&amp;rsquo;da ... olarak yazılır. &amp;lsquo;select()&amp;rsquo; işlevini kullanarak verilen argümanların sayısını ve bu argümanların değerini çıkarmak için temel yöntemler vardır, ancak daha gelişmiş kullanım kalıpları yapıyı tam faydası için kullanabilir.
Sözdizimi # &amp;hellip; &amp;ndash; Değişken bir işlev olarak göründüğü argümanları listesi olan işlevi yapar select(ne, &amp;hellip;) &amp;ndash; Eğer &amp;rsquo;ne&amp;rsquo;, vararg&amp;rsquo;daki eleman sayısı ile 1 aralığında bir sayıysa, &amp;lsquo;what&amp;rsquo;th öğesini vararg&amp;rsquo;daki son elemana döndürür.</description>
    </item>
    
  </channel>
</rss>
