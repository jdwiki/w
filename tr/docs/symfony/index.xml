<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>symfony Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/symfony/</link>
    <description>Recent content in symfony Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/symfony/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>symfony&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/symfony/symfonyye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony/symfonyye-baslarken/</guid>
      <description>Symfony Installer&amp;rsquo;ı kullanarak yeni bir Symfony projesi oluşturma # Symfony Installer, yeni Symfony uygulamaları oluşturmanıza yardımcı olan bir komut satırı aracıdır. PHP 5.4 veya üstü gerektirir.
Symfony Installer&amp;rsquo;ı Linux / MacOS&amp;rsquo;a indirme ve yükleme # Bir terminal açın ve aşağıdaki komutları yürütün:
sudo mkdir -p /usr/local/bin sudo curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony sudo chmod a+x /usr/local/bin/symfony Bu, herhangi bir yerden çağrılabilen global bir &amp;ldquo;symfony&amp;rdquo; yürütülebilir dosyası oluşturur. Bunu yalnızca bir kez yapmanız gerekir: artık onunla istediğiniz kadar Symfony projesi oluşturabilirsiniz.</description>
    </item>
    
    <item>
      <title>yönlendirme</title>
      <link>https://www.wikiod.com/tr/symfony/yonlendirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony/yonlendirme/</guid>
      <description>Yönlendirme, bir URL&amp;rsquo;yi bir denetleyici ile eşleme işlemidir. Symfony, rotaları tanımlamanıza izin veren güçlü bir Yönlendirme bileşenine sahiptir.
Yönlendirme bileşeni bir dizi yapılandırma biçimini destekler: ek açıklamalar, YAML, XML ve ham PHP.
Parametreler # parametre Ayrıntılar isim Rotanın adı. Örnek: book_show yol Yol (joker karakterler içerebilir). Örnek: /book/{isbn} varsayılanlar Parametrelerin varsayılan değerleri Basit rotalar # YAML&amp;rsquo;yi kullanma:
# app/config/routing.yml blog_list: path: /blog defaults: { _controller: AppBundle:Blog:list } Ek Açıklamaları Kullanma:</description>
    </item>
    
    <item>
      <title>Kontrolörler</title>
      <link>https://www.wikiod.com/tr/symfony/kontrolorler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony/kontrolorler/</guid>
      <description>Symfony&amp;rsquo;deki bir denetleyici, bir HTTP isteği alan ve bir HTTP yanıtı döndüren bir PHP çağrılabilir (bir işlev, bir nesne üzerindeki bir yöntem veya bir kapatma). Bir HTTP yanıtı herhangi bir şey içerebilir: bir HTML sayfası, bir JSON dizesi, bir dosya indirme vb.
Symfony&amp;rsquo;ye belirli bir isteği hangi denetleyicinin işlemesi gerektiğini söylemek için, bir yol yapılandırmanız gerekir.
Sözdizimi # $this-&amp;gt;generateUrl(&amp;lsquo;route_name&amp;rsquo;, [&amp;lsquo;placeholder&amp;rsquo; =&amp;gt; &amp;lsquo;value&amp;rsquo;]); // &amp;ldquo;route_name&amp;rdquo; yolu için yer tutuculu bir URL oluşturur $this-&amp;gt;render(&amp;rsquo;template.</description>
    </item>
    
    <item>
      <title>Servis Konteyneri</title>
      <link>https://www.wikiod.com/tr/symfony/servis-konteyneri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony/servis-konteyneri/</guid>
      <description>Bir Symfony uygulaması tipik olarak depolar, denetleyiciler, postalar vb. gibi farklı görevleri gerçekleştiren birçok nesneden oluşur. Symfony&amp;rsquo;de bu nesnelere hizmetler denir ve &amp;lsquo;app/config/services&amp;rsquo;de tanımlanır. yml` veya kurulu paketlerden birinde.
Hizmet Kapsayıcısı, bu hizmetlerin nasıl somutlaştırılacağını bilir ve iki kez örneklendirilmelerine gerek kalmaması için bunların bir referansını tutar. Bir hizmetin bağımlılıkları varsa, bunları da başlatır.
Kapsayıcıdan bir hizmet alın # $logger = $container-&amp;gt;get(&#39;logger&#39;); Bu, &amp;ldquo;Psr\Log\LoggerInterface&amp;rdquo; uygulayan bir nesne olan kapsayıcıdan &amp;ldquo;logger&amp;rdquo; hizmet kimliğine sahip hizmeti getirecektir.</description>
    </item>
    
    <item>
      <title>Talep</title>
      <link>https://www.wikiod.com/tr/symfony/talep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony/talep/</guid>
      <description>Symfony&amp;rsquo;nin İstek sınıfı, HTTP isteğinin nesne yönelimli bir temsilidir. URL, sorgu dizesi, yüklenen dosyalar, çerezler ve tarayıcıdan gelen diğer başlıklar gibi bilgileri içerir.
Sözdizimi # $request-&amp;gt;getPathInfo(); // istenen yolu (URL&amp;rsquo;nin yerel kısmı) döndürür (ancak sorgu dizesi olmadan). yani https://example.com/foo/bar?key=value adresini ziyaret ederken, bu /foo/bar içerecektir $request-&amp;gt;query-&amp;gt;get(&amp;lsquo;id&amp;rsquo;); // bir sorgu dizesi parametresi döndürür ($_GET) $request-&amp;gt;query-&amp;gt;get(&amp;lsquo;id&amp;rsquo;, 1); // varsayılan değere sahip bir sorgu dizesi parametresi döndürür $request-&amp;gt;request-&amp;gt;get(&amp;lsquo;isim&amp;rsquo;); // bir istek gövdesi değişkeni ($_POST) döndürür $request-&amp;gt;files-&amp;gt;get(&amp;rsquo;ek&amp;rsquo;); // &amp;ldquo;ek&amp;rdquo; ile tanımlanan UploadedFile örneğini döndürür $request-&amp;gt;cookies-&amp;gt;get(&amp;lsquo;PHPSESSID&amp;rsquo;); // bir tanımlama bilgisinin değerini döndürür ($_COOKIE) $request-&amp;gt;headers-&amp;gt;get(&amp;lsquo;content_type&amp;rsquo;); // bir HTTP istek başlığı döndürür $request-&amp;gt;getMethod(); // HTTP istek yöntemini döndürür (GET, POST, PUT, DELETE, vb.</description>
    </item>
    
  </channel>
</rss>
