<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lodash Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/lodash/</link>
    <description>Recent content in lodash Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/lodash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>lodash&#39;ı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/lodash/lodash-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lodash/lodash-kullanmaya-baslama/</guid>
      <description>Kurmak # Lodash, hem sunucularda (node.js gibi) hem de tarayıcılarda eşit derecede iyi çalışır.
npm ile # node.js
CLI&amp;rsquo;den npm ile indirin:
npm install lodash Ardından düğüm komut dosyalarınızda:
var _ = require(&amp;quot;lodash&amp;quot;); // use lodash in your program... Web sitesinde (yani tarayıcıda) istemci tarafı için kendi kopyasını indirin # lodash dosyasını indirin veya npm, jspm veya bower gibi bir paket yöneticisi kullanın. Komut dosyası referansını &amp;lt;script src=&amp;quot;lodash.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; ile sayfanıza ekleyin.</description>
    </item>
    
    <item>
      <title>zincirleme</title>
      <link>https://www.wikiod.com/tr/lodash/zincirleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lodash/zincirleme/</guid>
      <description>&amp;ldquo;(arr1)&amp;rdquo; ile örtük zincirleme ve &amp;ldquo;.chain(arr1)&amp;rdquo; ile açık zincirleme benzer şekillerde çalışır. Aşağıdaki örnekler, bunların nasıl biraz farklı olduğunu göstermektedir.
_.chain(...) ile açık zincirleme # var arr1 = [10, 15, 20, 25, 30, 15, 25, 35]; var sumOfUniqueValues = _.chain(arr1) .uniq() .sum() // sum returns a single value .value(); // which must be unwrapped manually with explicit chaining // sumOfUniqueValues is now 135 _(...) ile örtük zincirleme # var arr1 = [10, 15, 20, 25, 30, 15, 25, 35]; var sumOfUniqueValues = _(arr1) .</description>
    </item>
    
    <item>
      <title>Listeler ve Dizilerle Çalışmak</title>
      <link>https://www.wikiod.com/tr/lodash/listeler-ve-dizilerle-calsmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lodash/listeler-ve-dizilerle-calsmak/</guid>
      <description>Sözdizimi # _.map(koleksiyon, İşlev) =&amp;gt; yeniKoleksiyon _.filter(koleksiyon, Tahmin) =&amp;gt; yeniKoleksiyon _.some(toplama, Tahmin) =&amp;gt; doğru veya yanlış _.reduce(toplama, BiFunction, tohum) =&amp;gt; birikmiş değer Parametreler # parametre Anlamı Koleksiyon Yinelenebilir bir öğe grubu. Bu bir dizi veya nesne olabilir. fonksiyon 1 girdi alan ve bir çıktı döndüren bir işlev. BiFonksiyon 2 girdi alan ve bir çıktı döndüren bir işlev. yüklem 1 girdi alan ve bir boole değeri döndüren bir işlev. tohum Bir azaltma işlemi için başlangıç ​​değeri.</description>
    </item>
    
    <item>
      <title>Araçlar</title>
      <link>https://www.wikiod.com/tr/lodash/araclar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lodash/araclar/</guid>
      <description>_.Kimlik # Bu yöntem sadece ilk argümanı döndürür.
var res1 = _.identity(10, 20); // res1 now is 10 var res2 = _.identity(&amp;quot;hello&amp;quot;, &amp;quot;world&amp;quot;); // res2 now is &amp;quot;hello&amp;quot; Lodash belgelerinde _.identity ne anlama geliyor? # Bu yöntem lodash belgelerinde &amp;ldquo;function(x){return x;}&amp;rdquo; (veya ES6 eşdeğeri &amp;ldquo;x =&amp;gt; x&amp;rdquo;) yerine kullanılır.
Genellikle ya &amp;ldquo;dönüşüm yok&amp;rdquo; ya da bir yüklem olarak kullanıldığında: değerin doğruluğu anlamına gelir.
_.times belgelerinde _.identity örneği # _.times işlevi iki argüman alır.</description>
    </item>
    
    <item>
      <title>nesnelerle çalışma</title>
      <link>https://www.wikiod.com/tr/lodash/nesnelerle-calsma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/lodash/nesnelerle-calsma/</guid>
      <description>.sahip olmak # Bir nesnenin bir anahtarı olup olmadığını (veya içerip içermediğini) belirleyin. Aranacak anahtar bir yol olarak (nokta notasyonu ile) ifade edilirse, anahtarın var olup olmadığını belirlemek için iç içe nesne yapılarını geçecektir.
var obj = { a: 2, b: 3, c: { dd:40, ee:{ fff:500 } } }; var res1 = _.has(obj, &amp;quot;a&amp;quot;); // true var res2 = _.has(obj, &amp;quot;a.b&amp;quot;); // false var res3 = _.has(obj, &amp;quot;c&amp;quot;); // true var res4 = _.</description>
    </item>
    
  </channel>
</rss>
