<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>django-formları Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/django-forms/</link>
    <description>Recent content in django-formları Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/django-forms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django formlarını kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/django-forms/django-formlarn-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/django-forms/django-formlarn-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # Django-formları kurma veya kurma hakkında ayrıntılı talimatlar.</description>
    </item>
    
    <item>
      <title>Model Formunu Kullanma</title>
      <link>https://www.wikiod.com/tr/django-forms/model-formunu-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/django-forms/model-formunu-kullanma/</guid>
      <description>Django ModelForm, bir Django modelinden Form sınıfının oluşturulmasını sağlar.
Alanları düzenlenemez hale getirme # Django 1.9 Field.disabled özniteliğini ekledi:
Devre dışı bırakılmış boole bağımsız değişkeni, Doğru olarak ayarlandığında bir form alanını devre dışı bırakır tarafından düzenlenemeyecek şekilde devre dışı bırakılmış HTML özniteliğini kullanarak kullanıcılar. Bir kullanıcı, alanın kendisine gönderilen değeri kurcalasa bile sunucu, formun değeri lehine yoksayılacak ilk veriler.
Ve böylece yapmanız gereken tek şey:
MyChangeForm(ModelForm): def __init__(self, *args, **kwargs): super(MyChangeForm, self).</description>
    </item>
    
    <item>
      <title>Django Yerleşik formlar</title>
      <link>https://www.wikiod.com/tr/django-forms/django-yerlesik-formlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/django-forms/django-yerlesik-formlar/</guid>
      <description>Django, form gerektiren çeşitli görünümlerle birlikte gönderilir. Bu formlar doğal olarak yerleşiktir. İyi bir örnek, Doğrulama Yerleşik formları&amp;lsquo;dir.
Bu konu, bu formlarla nasıl çalışılacağına ilişkin belgeler getirmeyi amaçlamaktadır.
Özel CSS sınıfları ekleyin # Yerleşik formlar harikadır ancak bazen bunları özelleştirmeye, yeni alanlar eklemeye veya yalnızca CSS özelliklerini değiştirmeye ihtiyaç duyulabilir.
Bu örnek birkaç kullanım durumu için geçerlidir ancak burada PasswordChangeForm ve bunun bir Bootstrap web sitesinde kullanımı ile ilgili olarak sunulmuştur.</description>
    </item>
    
    <item>
      <title>Test yapmak</title>
      <link>https://www.wikiod.com/tr/django-forms/test-yapmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/django-forms/test-yapmak/</guid>
      <description>Django&amp;rsquo;nun temel özelliklerinden biri birim testleridir.
Bu konu, formların nasıl test edileceğine dair eksiksiz bir belge getirmeyi amaçlamaktadır.
Basit Test # from django.test import TestCase from myapp.forms import MyForm class MyAppTests(TestCase): def test_forms(self): form_data = {&#39;field1&#39;: &#39;fieldvalue1&#39;} form = MyForm(data=form_data) self.assertTrue(form.is_valid()) </description>
    </item>
    
  </channel>
</rss>
