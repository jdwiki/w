<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>selenyum-web sürücüsü Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/selenium-webdriver/</link>
    <description>Recent content in selenyum-web sürücüsü Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/selenium-webdriver/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Selenium-webdriver&#39;ı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/selenium-webdriver-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/selenium-webdriver-kullanmaya-baslama/</guid>
      <description>Selenyum Web Sürücüsü Nedir? # Selenium, tarayıcıları otomatikleştirmek için tasarlanmış bir dizi araçtır. Birden çok platformda web uygulaması testleri için yaygın olarak kullanılır. Selenium şemsiyesi altında Selenium WebDriver (ex-Selenium RC), Selenium IDE ve Selenium Grid gibi birkaç araç bulunmaktadır.
WebDriver, web sayfalarındaki DOM öğelerini değiştirmenize ve ayrıca kullanıcı aracılarının davranışını komuta etmenize olanak tanıyan bir uzaktan kumanda arayüzüdür. Bu arayüz, aşağıdakiler gibi çeşitli platformlar için uygulanmış, dilden bağımsız bir kablo protokolü sağlar:</description>
    </item>
    
    <item>
      <title>Java&#39;da @FindBy ek açıklamalarını kullanma</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/javada-findby-ek-acklamalarn-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/javada-findby-ek-acklamalarn-kullanma/</guid>
      <description>Sözdizimi # SINIF_ADI: @FindBy(className = &amp;ldquo;classname&amp;rdquo;) CSS: @FindBy(css = &amp;ldquo;css&amp;rdquo;) Kimlik: @FindBy(id = &amp;ldquo;id&amp;rdquo;) ID_OR_NAME: @FindBy(how = How.ID_OR_NAME, =&amp;ldquo;idOrName&amp;rdquo; kullanılarak) LINK_TEXT: @FindBy(linkText=&amp;ldquo;text&amp;rdquo;) İSİM: @FindBy(ad= &amp;ldquo;ad&amp;rdquo;) PARTIAL_LINK_TEXT: @FindBy(partialLinkText= &amp;ldquo;metin&amp;rdquo;) TAG_NAME: @FindBy(tagName=&amp;ldquo;tagname&amp;rdquo;) XPATH: @FindBy(xpath=&amp;ldquo;xpath&amp;rdquo;) Ek açıklamayı kullanmanın iki yolu olduğunu unutmayın. Örnekler:
@FindBy(id = &amp;quot;id&amp;quot;) ve
@FindBy(how = How.ID, using =&amp;quot;id&amp;quot;) eşittir ve her ikisi de öğeyi kimliğine göre arar. &amp;ldquo;ID_OR_NAME&amp;rdquo; durumunda yalnızca kullanabilirsiniz
@FindBy(how = How.ID_OR_NAME, using =&amp;quot;idOrName&amp;quot;) &amp;lsquo;@FindBy&amp;rsquo; ek açıklamasıyla işaretlenmiş öğeleri bulmak için sayfa nesnesi somutlaştırmasından sonra &amp;lsquo;PageFactory.</description>
    </item>
    
    <item>
      <title>Beklemek</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/beklemek/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/beklemek/</guid>
      <description>Selenium WebDriver&amp;rsquo;da Bekleme Türleri # Herhangi bir web uygulamasını çalıştırırken yükleme süresini dikkate almak gerekir. Kodunuz henüz yüklenmemiş herhangi bir öğeye erişmeye çalışırsa, WebDriver bir istisna atar ve betiğiniz durur.
Üç tür Bekleme vardır -
Örtülü Beklemeler Açık Beklemeler Akıcı Beklemeler Açık beklemeler yalnızca belirli bölümlerde kullanılırken, program boyunca bekleme süresini ayarlamak için örtük beklemeler kullanılır.
örtük bekle # Örtük bir bekleme, WebDriver&amp;rsquo;a, bir öğeyi veya öğeleri hemen mevcut değilse, bulmaya çalışırken belirli bir süre boyunca DOM&amp;rsquo;yi yoklamasını söylemektir.</description>
    </item>
    
    <item>
      <title>Sayfada Javascript Çalıştırmak</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/sayfada-javascript-calstrmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/sayfada-javascript-calstrmak/</guid>
      <description>Sözdizimi # nesne ExecuteAsyncScript(dize betiği, params nesnesi[] args); nesne ExecuteScript(dize betiği, params nesnesi[] argümanlar); Python # Javascript&amp;rsquo;i python&amp;rsquo;da çalıştırmak için execute_script(&amp;quot;javascript script burada&amp;quot;) kullanın. execute_script bir web sürücüsü örneğinde çağrılır ve herhangi bir geçerli javascript olabilir.
from selenium import webdriver driver = webdriver.Chrome() driver.execute_script(&amp;quot;alert(&#39;running javascript&#39;);&amp;quot;) C# # JavaScript&amp;rsquo;i bir &amp;ldquo;IWebDriver&amp;rdquo; örneğinde çalıştırmak için &amp;ldquo;IWebDriver&amp;quot;ı yeni bir arayüze, &amp;ldquo;IJavaScriptExecutor&amp;quot;a aktarmanız gerekir.
IWebDriver driver; IJavaScriptExecutor jsDriver = driver as IJavaScriptExecutor; Artık Javascript&amp;rsquo;i çalıştırmanıza izin veren &amp;ldquo;IJavaScriptExecutor&amp;rdquo; örneğinde bulunan tüm yöntemlere erişebilirsiniz, örneğin:</description>
    </item>
    
    <item>
      <title>Web Öğelerini Bulma</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/web-ogelerini-bulma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/web-ogelerini-bulma/</guid>
      <description>Sözdizimi # ByChained([] bys tarafından parametreler) Öğeler, bulucular ve &amp;lsquo;By&amp;rsquo; sınıfı kullanılarak Selenium&amp;rsquo;da bulunur. Selenium ile sağlam bir otomasyon projesi yapabilmek için Web Elements yer belirleyicilerini akıllıca kullanmak gerekir. Konum belirleyiciler açıklayıcı, benzersiz ve değişme olasılığı düşük olmalıdır, böylece örneğin testlerde yanlış pozitifler almazsınız. Öncelik kullanmaktır:
Kimlik - benzersiz olduğu ve tam olarak istediğiniz öğeyi alacağınız için. Sınıf Adı - Açıklayıcıdır ve belirli bir bağlamda benzersiz olabilir. CSS (xpath&amp;rsquo;ten daha iyi performans) - Daha karmaşık seçiciler için.</description>
    </item>
    
    <item>
      <title>Çerçeveleri Değiştirme</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/cerceveleri-degistirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/cerceveleri-degistirme/</guid>
      <description>Sözdizimi # Java driver.switchTo().frame(Dize adı); driver.switchTo().frame(Dize kimliği); driver.switchTo().frame(int indeksi); driver.switchTo().frame(WebElement frameElement); driver.switchTo().defaultContent(); C# driver.SwitchTo().Frame(int frameIndex); driver.SwitchTo().Frame(IWebElement frameElement); driver.SwitchTo().Frame(dize çerçeveAdı); driver.SwitchTo().DefaultContent(); Python driver.switch_to_frame(nameOrId) driver.switch_to.frame(nameOrId) driver.switch_to_frame(indeks) driver.switch_to.frame(indeks) driver.switch_to_frame(frameElement) driver.switch_to.frame(frameElement) driver.switch_to_default_content() driver.switch_to.default_content() JavaScript driver.switchTo().frame(nameOrId) driver.switchTo().frame(indeks) driver.switchTo().defaultContent() Parametreler # parametre ayrıntılar adOrId Kimliğine göre bir çerçeve seçin. indeks Sıfır tabanlı dizinine göre bir çerçeve seçin. frameElement Önceden bulunduğu WebElement&amp;rsquo;i kullanarak bir çerçeve seçin Java kullanarak bir çerçeveye geçmek için # Örneğin, bir html görünümünün veya öğesinin html kaynak kodu aşağıdaki gibi bir iframe ile sarılırsa:</description>
    </item>
    
    <item>
      <title>Selenyumda Robot</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/selenyumda-robot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/selenyumda-robot/</guid>
      <description>Sözdizimi # gecikme (int ms) keyPress(int tuş kodu) keyRelease(int anahtar kodu) mouseMove(int x, int y) mousePress(int düğmeleri) mouseRelease(int düğmeleri) mouseWheel(int wheelAmt) Parametreler # parametre Ayrıntılar ms Milisaniye cinsinden uyku süresi anahtar kodu Belirtilen tuşa basmak için sabit, örneğin &amp;lsquo;A&amp;rsquo;ya basmak için kod &amp;lsquo;VK_A&amp;rsquo;dır. Daha fazla ayrıntı için lütfen bakın :https://docs.Oracle.com/javase/7/docs/api/java/awt/event/KeyEvent.html x,y Ekran koordinatları düğmeler Düğme maskesi; bir veya daha fazla fare düğmesi maskesinin bir kombinasyonu wheelAmt Fare tekerleğini hareket ettirmek için çentik sayısı, kullanıcıdan yukarı/uzak hareket etmek için negatif değer, aşağı/kullanıcıya doğru hareket etmek için pozitif değer Bu bölüm, Robot API&amp;rsquo;sinin Selenium Webdriver ile uygulanmasıyla ilgili ayrıntıları içerir.</description>
    </item>
    
    <item>
      <title>Temel Selenyum Web Sürücüsü Programı</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/temel-selenyum-web-surucusu-program/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/temel-selenyum-web-surucusu-program/</guid>
      <description>Bu konu, C#, Groovy, Java, Perl, PHP, Python ve Ruby gibi selenyum destekli dillerde temel web sürücüsü programını göstermeyi amaçlamaktadır.
Yolculuk, tarayıcı sürücüsünün açılmasını içerir &amp;ndash;&amp;gt; Google Sayfası &amp;ndash;&amp;gt; tarayıcıyı kapatın
C# # using OpenQA.Selenium; using OpenQA.Selenium.Chrome; namespace BasicWebdriver { class WebDriverTest { static void Main() { using (var driver = new ChromeDriver()) { driver.Navigate().GoToUrl(&amp;quot;http://www.google.com&amp;quot;); } } } } Yukarıdaki &amp;lsquo;program&amp;rsquo; Google ana sayfasına gidecek ve ardından sayfayı tamamen yükledikten sonra tarayıcıyı kapatacaktır.</description>
    </item>
    
    <item>
      <title>Sayfa Nesne Modeli</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/sayfa-nesne-modeli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/sayfa-nesne-modeli/</guid>
      <description>Web sitelerini ve web uygulamalarını otomatikleştirmede önemli bir rol, ekrandaki öğeleri tanımlamayı ve bunlarla etkileşim kurmayı içerir. Öğeler, yer belirleyiciler ve &amp;lsquo;By&amp;rsquo; sınıfı kullanılarak Selenium&amp;rsquo;da bulunur. Bu konum belirleyiciler ve etkileşimler, yinelenen kodu önlemek ve bakımı kolaylaştırmak için en iyi uygulama olarak Sayfa Nesnelerinin içine yerleştirilir. &amp;ldquo;WebElements&amp;quot;i içine alır ve sayfada (veya bir web uygulamasındaki sayfanın bir kısmında) davranış ve dönüş bilgisi içerdiğini varsayar.
Sayfa nesne modeli, belirli bir web sayfası görünümüne arabirim görevi gören nesne yönelimli sınıflar yazdığımız bir kalıptır.</description>
    </item>
    
    <item>
      <title>Sınıf Seç</title>
      <link>https://www.wikiod.com/tr/selenium-webdriver/snf-sec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium-webdriver/snf-sec/</guid>
      <description>Sözdizimi # Java Hiçbirini seçme() seçimi kaldırByIndex(int ​​indeksi) seçimi kaldırByValue(java.lang.String değeri) seçimi kaldırByVisibleText(java.lang.String metin) getAllSelectedOptions() getFirstSelectedOption() getOptions() isMultiple() selectByIndex(int ​​dizini) selectByValue(java.lang.String değeri) selectByVisibleText(java.lang.String metin) Parametreler # parametreler Ayrıntılar dizin Bu dizindeki seçenek seçilecektir değer Karşılaştırılacak değer metin Karşılaştırılacak görünen metin Selenium WebDriver&amp;rsquo;ın &amp;lsquo;Select&amp;rsquo; sınıfı, &amp;lsquo;select&amp;rsquo; seçenekleriyle etkileşim için kullanışlı yöntemler sağlar. Kullanıcı, aşağıdaki yöntemleri kullanarak bir seçme açılır menüsünde işlemler gerçekleştirebilir ve ayrıca işlemin seçimini kaldırabilir.
C#&amp;lsquo;da Select sınıfı aslında &amp;lsquo;SelectElement&amp;rsquo;</description>
    </item>
    
  </channel>
</rss>
