<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gcc Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/gcc/</link>
    <description>Recent content in gcc Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/gcc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gcc&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/gcc/gccyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/gcc/gccyi-kullanmaya-baslama/</guid>
      <description>&amp;ldquo;Selam Dünya!&amp;rdquo; ortak komut satırı seçenekleriyle # Tek bir kaynak dosyaya sahip programlar için gcc&amp;rsquo;yi kullanmak basittir.
/* File name is hello_world.c */ #include &amp;lt;stdio.h&amp;gt; int main(void) { int i; printf(&amp;quot;Hello world!\n&amp;quot;); } Hello_world.c dosyasını komut satırından derlemek için:
gcc hello_world.c gcc daha sonra programı derleyecek ve yürütülebilir dosyayı a.out dosyasına çıkaracaktır. Yürütülebilir dosyayı adlandırmak istiyorsanız, -o seçeneğini kullanın.
gcc hello_world.c -o hello_world Yürütülebilir dosya daha sonra a.out yerine merhaba_world olarak adlandırılacaktır.</description>
    </item>
    
    <item>
      <title>Kod kapsamı gcov</title>
      <link>https://www.wikiod.com/tr/gcc/kod-kapsam-gcov/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/gcc/kod-kapsam-gcov/</guid>
      <description>GCC, gcov ile ilgili bazı belgeleri burada sağlar
Gcovr ve Lcov kapsam sonuçlarının oluşturulmasına ve özetlenmesine yardımcı olmak için kullanılabilir
Giriiş # Kod kapsamı, her bir kaynak kod ifadesinin ve dalın ne sıklıkta yürütüldüğünü gösteren bir ölçüdür. Bu önlem genellikle bir test takımı çalıştırırken, kodun mümkün olduğu kadar çok test takımı tarafından test edilmesini sağlamak için gereklidir. Ayrıca, profil oluşturma sırasında kod etkin noktalarını ve dolayısıyla optimizasyon çabalarının en fazla etkiye sahip olabileceği yerleri belirlemek için kullanılabilir.</description>
    </item>
    
    <item>
      <title>GNU C Uzantıları</title>
      <link>https://www.wikiod.com/tr/gcc/gnu-c-uzantlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/gcc/gnu-c-uzantlar/</guid>
      <description>GNU C derleyicisi, C standartlarında belirtilmeyen bazı harika özelliklerle birlikte gelir. Bu uzantılar, sistem yazılımında yoğun olarak kullanılır ve performans optimizasyonu için harika bir araçtır.
Özellik paketlenmiş # packed, bellek gereksinimlerini en aza indirmek için yapılar ve birleşimlerle birlikte kullanılan değişken bir niteliktir.
#include &amp;lt;stdio.h&amp;gt; struct foo { int a; char c; }; struct __attribute__((__packed__))foo_packed { int a; char c; }; int main() { printf(&amp;quot;Size of foo: %d\n&amp;quot;, sizeof(struct foo)); printf(&amp;quot;Size of packed foo: %d\n&amp;quot;, sizeof(struct foo_packed)); return 0; } 64 bit Linux&amp;rsquo;umda,</description>
    </item>
    
    <item>
      <title>Uyarılar</title>
      <link>https://www.wikiod.com/tr/gcc/uyarlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/gcc/uyarlar/</guid>
      <description>Sözdizimi # gcc [-Wseçenek [-Wseçenek [&amp;hellip;]]] src-file Parametreler # parametre Ayrıntılar seçenek Uyarıları etkinleştirmek veya devre dışı bırakmak için kullanılabilir. Uyarıları hataya dönüştürebilir. src dosyası Derlenecek kaynak dosya. Bir yazılım geliştirirken çoğu uyarıyı etkinleştirmek iyi bir uygulamadır.
Neredeyse tüm uyarıları etkinleştir # C kaynak dosyası # gcc -Wall -Wextra -o main main.c C++ kaynak dosyası # g++ -Wall -Wextra -Wconversion -Woverloaded-virtual -o main main.cpp </description>
    </item>
    
    <item>
      <title>GCC Optimizasyonları</title>
      <link>https://www.wikiod.com/tr/gcc/gcc-optimizasyonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/gcc/gcc-optimizasyonlar/</guid>
      <description>GNU derleyicisi, derleme işlemi için çeşitli optimizasyon seviyeleri sunar. Bu optimizasyonlar, kod performansını ve/veya kod boyutunu iyileştirmek için kullanılır. Optimizasyonlar açıkken bir kodun derlenmesi genellikle daha uzun sürer.
Bu komut, sisteminizde hangi optimizasyonların mevcut olduğunu söyler: $gcc -Q &amp;ndash;help=optimizations
Optimizasyonları kontrol etmek için seçeneklerin ayrıntılı bir belgesi:
https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html
O0 ve O3 ile derlenen kodlar arasındaki fark # Basit bir C kodu yazdım foo.c
int main() { int i = 0; int j = 0; for (i = 0; i &amp;lt; 5; i++) { j = i + 1; } return 0; } -O0 ile derlendiğinde, yani tüm derleyici optimizasyonlarını devre dışı bırakarak</description>
    </item>
    
  </channel>
</rss>
