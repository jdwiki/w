<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>İksir Dili Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/elixir/</link>
    <description>Recent content in İksir Dili Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/elixir/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elixir Language&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/elixir/elixir-languagei-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/elixir-languagei-kullanmaya-baslama/</guid>
      <description>Selam Dünya # İksir ile ilgili kurulum talimatları için buradan kontrol edin, farklı platformlarla ilgili talimatları açıklar.
Elixir, &amp;ldquo;erlang&amp;rdquo; kullanılarak oluşturulan ve erlang&amp;rsquo;ın &amp;ldquo;BEAM&amp;rdquo; çalışma zamanını (java için &amp;ldquo;JVM&amp;rdquo; gibi) kullanan bir programlama dilidir.
İksiri iki modda kullanabiliriz: etkileşimli kabuk &amp;lsquo;iex&amp;rsquo; veya kullanarak doğrudan çalışan &amp;ldquo;iksir&amp;rdquo; komutu.
Aşağıdakileri &amp;ldquo;hello.exs&amp;rdquo; adlı bir dosyaya yerleştirin:
IO.puts &amp;quot;Hello world!&amp;quot; Elixir kaynak dosyasını çalıştırmak için komut satırından aşağıdaki komutu yazın:
$ elixir hello.exs Bu çıktı vermelidir:</description>
    </item>
    
    <item>
      <title>IEx Konsol İpuçları ve Püf Noktaları</title>
      <link>https://www.wikiod.com/tr/elixir/iex-konsol-ipuclar-ve-puf-noktalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/iex-konsol-ipuclar-ve-puf-noktalar/</guid>
      <description>v ile son komuttan değer alın # iex(1)&amp;gt; 1 + 1 2 iex(2)&amp;gt; v 2 iex(3)&amp;gt; 1 + v 3 Ayrıca bkz: https://www.wikiod.com/tr/elixir/iex-konsol-ipuclar-ve-puf-noktalar#v ile bir önceki komutun değerini alın
Kalıcı geçmiş # Varsayılan olarak, &amp;ldquo;IEx&amp;rdquo; içindeki kullanıcı giriş geçmişi farklı oturumlarda kalıcı değildir.
&amp;ldquo;erlang-history&amp;rdquo;, hem Erlang kabuğuna hem de &amp;ldquo;IEx&amp;quot;e geçmiş desteği ekler:
git clone git@github.com:ferd/erlang-history.git cd erlang-history sudo make install Artık farklı &amp;ldquo;IEx&amp;rdquo; oturumlarında bile yukarı ve aşağı ok tuşlarını kullanarak önceki girişlerinize erişebilirsiniz.</description>
    </item>
    
    <item>
      <title>desen eşleştirme</title>
      <link>https://www.wikiod.com/tr/elixir/desen-eslestirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/desen-eslestirme/</guid>
      <description>Listede desen eşleştirme # Ayrıca Listeler gibi Elixir Veri Yapılarında da model eşleştirmesi yapabilirsiniz.
Listeler
Bir listede eşleştirme oldukça basittir.
[head | tail] = [1,2,3,4,5] # head == 1 # tail == [2,3,4,5] Bu, listedeki ilk (veya daha fazla) öğeyi | (boru) &amp;rsquo;nin sol tarafıyla ve listenin geri kalanını | sağ taraftaki değişkeniyle eşleştirerek çalışır.
Bir listenin belirli değerleriyle de eşleşebiliriz:
[1,2 | tail] = [1,2,3,4,5] # tail = [3,4,5] [4 | tail] = [1,2,3,4,5] ** (MatchError) no match of right hand side value: [1, 2, 3, 4, 5] | işaretinin solunda birden fazla ardışık değerin bağlanmasına da izin verilir:</description>
    </item>
    
    <item>
      <title>Fonksiyonlar</title>
      <link>https://www.wikiod.com/tr/elixir/fonksiyonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/fonksiyonlar/</guid>
      <description>Anonim İşlevler # Elixir&amp;rsquo;de yaygın bir uygulama anonim işlevleri kullanmaktır. Anonim bir işlev oluşturmak basittir:
iex(1)&amp;gt; my_func = fn x -&amp;gt; x * 2 end #Function&amp;lt;6.52032458/1 in :erl_eval.expr/5&amp;gt; Genel sözdizimi şöyledir:
fn args -&amp;gt; output end Okunabilirlik için argümanların etrafına parantez koyabilirsiniz:
iex(2)&amp;gt; my_func = fn (x, y) -&amp;gt; x*y end #Function&amp;lt;12.52032458/2 in :erl_eval.expr/5&amp;gt; Anonim bir işlevi çağırmak için, onu atanan adla çağırın ve ad ile bağımsız değişkenler arasına . ekleyin.</description>
    </item>
    
    <item>
      <title>Listeler</title>
      <link>https://www.wikiod.com/tr/elixir/listeler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/listeler/</guid>
      <description>Sözdizimi # [] [1, 2, 3, 4] [1, 2] ++ [3, 4] # -&amp;gt; [1,2,3,4] hd([1, 2, 3, 4]) # -&amp;gt; 1 tl([1, 2, 3, 4]) # -&amp;gt; [2,3,4] [kafa | kuyruk] [1 | [2, 3, 4]] # -&amp;gt; [1,2,3,4] [1 | [2 | [3 | [4 | []]]]] -&amp;gt; [1,2,3,4] &amp;lsquo;merhaba&amp;rsquo; = [?h, ?e, ?l, ?l, ?o] keyword_list = [a: 123, b: 456, c: 789] keyword_list[:a] # -&amp;gt; 123 Anahtar Kelime Listeleri # Anahtar kelime listeleri, listedeki her öğenin bir atom demeti ve ardından bir değer olduğu listelerdir.</description>
    </item>
    
    <item>
      <title>İksir programı için temel .gitignore</title>
      <link>https://www.wikiod.com/tr/elixir/iksir-program-icin-temel-gitignore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/iksir-program-icin-temel-gitignore/</guid>
      <description>.gitignore dosyanızda /rel klasörüne gerek olmayabileceğini unutmayın. Bu, &amp;ldquo;exrm&amp;rdquo; gibi bir yayın yönetim aracı kullanıyorsanız oluşturulur.
Örnek # ### Elixir ### /_build /cover /deps erl_crash.dump *.ez ### Erlang ### .eunit deps *.beam *.plt ebin rel/example_project .concrete/DEV_MODE .rebar ## Phoenix application /_build /db /deps /*.ez erl_crash.dump /node_modules /priv/static/ /config/prod.secret.exs /rel ## Standalone elixir application /_build /cover /deps erl_crash.dump *.ez /rel ## Auto-generated .gitignore ## A basic .gitignore for Elixir </description>
    </item>
    
    <item>
      <title>operatörler</title>
      <link>https://www.wikiod.com/tr/elixir/operatorler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/operatorler/</guid>
      <description>Boru Operatörü # Boru İşleci |&amp;gt; soldaki bir ifadenin sonucunu alır ve bunu sağdaki bir fonksiyona ilk parametre olarak besler.
expression |&amp;gt; function İfadeleri birbirine zincirlemek ve bir dizi işlevin akışını görsel olarak belgelemek için Pipe Operator&amp;rsquo;u kullanın.
Aşağıdakileri göz önünde bulundur:
Oven.bake(Ingredients.Mix([:flour, :cocoa, :sugar, :milk, :eggs, :butter]), :temperature) Örnekte, &amp;ldquo;Oven.bake&amp;rdquo;, &amp;ldquo;Ingredients.mix&amp;quot;den önce gelir, ancak en son yürütülür. Ayrıca, &amp;ldquo;:temperature&amp;quot;ın &amp;ldquo;Oven.bake&amp;rdquo; parametresinin bir parametresi olduğu açık olmayabilir.
Bu örneği Pipe Operator kullanarak yeniden yazmak:</description>
    </item>
    
    <item>
      <title>düğümler</title>
      <link>https://www.wikiod.com/tr/elixir/dugumler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/dugumler/</guid>
      <description>Aynı makinedeki düğümleri bağlama # İki terminal penceresinde iki adlandırılmış düğüm başlatın:
&amp;gt;iex --name bob@127.0.0.1 iex(bob@127.0.0.1)&amp;gt; &amp;gt;iex --name frank@127.0.0.1 iex(frank@127.0.0.1)&amp;gt; Bir düğüme bağlanması talimatını vererek iki düğümü bağlayın:
iex(bob@127.0.0.1)&amp;gt; Node.connect :&amp;quot;frank@127.0.0.1&amp;quot; true İki düğüm artık birbirine bağlı ve birbirinden haberdar:
iex(bob@127.0.0.1)&amp;gt; Node.list [:&amp;quot;frank@127.0.0.1&amp;quot;] iex(frank@127.0.0.1)&amp;gt; Node.list [:&amp;quot;bob@127.0.0.1&amp;quot;] Kodu diğer düğümlerde çalıştırabilirsiniz:
iex(bob@127.0.0.1)&amp;gt; greet = fn() -&amp;gt; IO.puts(&amp;quot;Hello from #{inspect(Node.self)}&amp;quot;) end iex(bob@127.0.0.1)&amp;gt; Node.spawn(:&amp;quot;frank@127.0.0.1&amp;quot;, greet) #PID&amp;lt;9007.74.0&amp;gt; Hello from :&amp;quot;frank@127.0.0.1&amp;quot; :ok Farklı makinelerdeki düğümleri bağlama # Bir IP adresinde adlandırılmış bir işlem başlatın:</description>
    </item>
    
    <item>
      <title>Mühürler</title>
      <link>https://www.wikiod.com/tr/elixir/muhurler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/muhurler/</guid>
      <description>Özel işaretler # Özel işaretler, X&amp;rsquo;in kullanmak istediğiniz harf olduğu bir &amp;ldquo;sigil_X&amp;rdquo; yöntemi oluşturularak yapılabilir (bu yalnızca tek bir harf olabilir).
defmodule Sigils do def sigil_j(string, options) do # Split on the letter p, or do something more useful String.split string, &amp;quot;p&amp;quot; end # Use this sigil in this module, or import it to use it elsewhere end &amp;ldquo;Seçenekler&amp;rdquo; argümanı, mührün sonunda verilen argümanların bir ikili dosyasıdır, örneğin:
~j/foople/abc # string is &amp;quot;foople&amp;quot;, options are &#39;abc&#39; # [&amp;quot;foo&amp;quot;, &amp;quot;le&amp;quot;] Dizelerin bir listesini oluşturun # iex&amp;gt; ~w(a b c) [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;] Bir atom listesi oluşturun # iex&amp;gt; ~w(a b c)a [:a, :b, :c] </description>
    </item>
    
    <item>
      <title>Yerleşik tipler</title>
      <link>https://www.wikiod.com/tr/elixir/yerlesik-tipler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elixir/yerlesik-tipler/</guid>
      <description>Sayılar # Elixir, tamsayılar ve kayan noktalı sayılar ile birlikte gelir. Bir tamsayı değişmezi ondalık, ikili, sekizli ve onaltılık biçimlerde yazılabilir.
iex&amp;gt; x = 291 291 iex&amp;gt; x = 0b100100011 291 iex&amp;gt; x = 0o443 291 iex&amp;gt; x = 0x123 291 Elixir, bignum aritmetiği kullandığından, tamsayı aralığı yalnızca sistemdeki kullanılabilir bellekle sınırlıdır.
Kayan nokta sayıları çift kesinliklidir ve IEEE-754 spesifikasyonunu takip eder.
iex&amp;gt; x = 6.8 6.8 iex&amp;gt; x = 1.</description>
    </item>
    
  </channel>
</rss>
