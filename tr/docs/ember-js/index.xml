<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ember.js Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/ember-js/</link>
    <description>Recent content in ember.js Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/ember-js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ember.js&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/ember-js/emberjsyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/emberjsyi-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # Ember&amp;rsquo;ı kullanmaya başlamak kolaydır. Ember projeleri oluşturulur ve yönetilir komut satırı oluşturma aracımız Ember CLI aracılığıyla. Bu araç şunları sağlar:
Modern uygulama varlık yönetimi (birleştirme, küçültme ve sürüm oluşturma dahil). Bileşenler, rotalar ve daha fazlasını oluşturmaya yardımcı olacak jeneratörler. Mevcut Ember uygulamalarına yaklaşmayı kolaylaştıran geleneksel bir proje düzeni. Babel projesi aracılığıyla ES2015/ES6 JavaScript desteği. Buna, bu kılavuzda kullanılan JavaScript modülleri desteği de dahildir. Eksiksiz bir QUnit test donanımı.</description>
    </item>
    
    <item>
      <title>Bileşenlerdeki Eşzamansız Görevler</title>
      <link>https://www.wikiod.com/tr/ember-js/bilesenlerdeki-eszamansz-gorevler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/bilesenlerdeki-eszamansz-gorevler/</guid>
      <description>&amp;rsquo;ember-concurrency&amp;rsquo;de, &amp;rsquo;error&amp;rsquo; ek ayarı, atılan istisnaların Ember&amp;rsquo;in &amp;lsquo;onerror&amp;rsquo; (şablonda ele alınması gerektiği için) kadar köpürmesini önlemek için bir çözümdür. Bunu daha iyi halletmek için bir özellik isteği var.
köz eşzamanlılık görevi # Alternatif bir topluluk fiili standardı, vaat karışıklığının çoğunu ortadan kaldıran ember-concurrency adlı bir eklentidir.
ember install ember-concurrency komutu ile kurulabilir.
Artıları # Karmaşık asenkron kodun sezgisel muhakemesi. Görevleri yönetmek için eksiksiz bir API sunar. İptal edilebilir. Bir proxy nesnesine ihtiyaç duymadan doğrudan bir bileşende kullanılabilir.</description>
    </item>
    
    <item>
      <title>Bileşen - alt bileşen ile üst bileşen arasındaki iletişim.</title>
      <link>https://www.wikiod.com/tr/ember-js/bilesen---alt-bilesen-ile-ust-bilesen-arasndaki-iletisim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/bilesen---alt-bilesen-ile-ust-bilesen-arasndaki-iletisim/</guid>
      <description>Sözdizimi # (verim &amp;ndash; Bir bileşenden öğeleri dışa aktarmanıza izin verir (hash &amp;ndash; Bir hash veya nesneyi dışa aktarmanıza izin verir, çünkü bu, ebeveyn bloğu içindeki alt bileşenleri çağırmak için gereklidir. Gereksinim, oluşturulacak bileşen için bir . bulunmasıdır. (bileşen &amp;ndash; Ebeveyn bağlamındaki herhangi bir şeyi alabilen alt bileşeni oluşturur. Bileşen yalnızca kullanıcı kullandığında çağrıldığından bileşen kullanılabilir, bu nedenle ihtiyacınız olduğu kadar çok özellik ekleyin ve kullanıcı şunları yapabilir: kalanını ekleyin. (action &amp;ndash; Bu durumda üst bileşenin actions hash&amp;rsquo;indeki bir fonksiyona işaret eden bir fonksiyona veya dizeye dayalı bir eylem yaratır.</description>
    </item>
    
    <item>
      <title>Ember, Ember Data ve Ember CLI nasıl güncellenir</title>
      <link>https://www.wikiod.com/tr/ember-js/ember-ember-data-ve-ember-cli-nasl-guncellenir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/ember-ember-data-ve-ember-cli-nasl-guncellenir/</guid>
      <description>Ember&amp;lsquo;in en son kararlı sürümünü bulmak için burayı tıklayın. Ember Data&amp;rsquo;nın en son kararlı sürümünü bulmak için burayı tıklayın. Ember CLI&amp;rsquo;nin en son kararlı sürümünü bulmak için buraya tıklayın. Tüm bu adımlar Ember cli sürüm notu&amp;rsquo;nda bulundu.
Ember CLI&amp;rsquo;yi Güncelleme # Ember CLI normal bir npm paketidir. Güncellemek için onu kaldırmamız ve ardından istediğimiz sürümü yüklememiz gerekiyor.
Bu gönderiyi yazarken en son sürüm 2.13.2&amp;rsquo;dir. Komut satırından çalıştırın:
npm uninstall -g ember-cli npm cache clean bower cache clean npm install -g ember-cli@2.</description>
    </item>
    
    <item>
      <title>hata ayıklama</title>
      <link>https://www.wikiod.com/tr/ember-js/hata-ayklama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/hata-ayklama/</guid>
      <description>Yalnızca hata ayıklama kodunu çalıştırma # Ember, hata ayıklama amaçlı bir işlevi çalıştırabilen runInDebug adlı statik bir genel yönteme sahiptir.
Ember.runInDebug(() =&amp;gt; { // this code only runs in dev mode }); Bir üretim yapısında bu yöntem boş bir işlev (NOP) olarak tanımlanır. Bu yöntemin Ember&amp;rsquo;deki kullanımları, &amp;ldquo;ember.prod.js&amp;rdquo; yapısından çıkarılır.
EmberData Günlüğü # Kor veri modelleri, ilgili verileri çıkaran bir toJSON yöntemine sahiptir:
console.log(model.toJSON()); Bu yöntem, JSON temsilini oluşturmak için JSONSerializer öğesini kullanır.</description>
    </item>
    
    <item>
      <title>Para birimi biçimlendirme şablonu yardımcısı</title>
      <link>https://www.wikiod.com/tr/ember-js/para-birimi-bicimlendirme-sablonu-yardmcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/para-birimi-bicimlendirme-sablonu-yardmcs/</guid>
      <description>Bu örneğin alındığı Köz kılavuzları bölümünde daha fazla ayrıntı mevcuttur.
Ember 2.2.0+ ile uyumlu (2.11.0, yazıldığı sırada en son sürümdü)
Yeni bir yardımcı oluşturma # Uygulamanızda yeni bir yardımcı oluşturmak için Ember CLI&amp;rsquo;yi kullanın:
`köz yardımcı biçim-para birimi oluşturur&#39;
Ardından &amp;ldquo;helpers/format-currency.js&amp;rdquo; dosyasını aşağıdakileri içerecek şekilde düzenleyin:
import Ember from &#39;ember&#39;; export function formatCurrency([value, ...rest]) { const dollars = Math.floor(value / 100); const cents = value % 100; const sign = &#39;$&#39;; if (cents.</description>
    </item>
    
    <item>
      <title>JavaScript kitaplığıeklenti nasıl içe aktarılır</title>
      <link>https://www.wikiod.com/tr/ember-js/javascript-kitaplgeklenti-nasl-ice-aktarlr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/javascript-kitaplgeklenti-nasl-ice-aktarlr/</guid>
      <description>ember.js projenizin dizinini açın, orada ember-cli-build.js adında bir dosya bulacaksınız. Kitaplıklarınızı veya eklentilerinizi bower kullanarak yükleyebilir, ardından içe aktarmayı bower_components klasörüne yönlendirebilirsiniz, ancak eklemek istediğiniz bir dosyanız varsa, bunları projenizin klasörüne sürükleyip app.import dosyasını o dosyaya yazmanız yeterlidir.
Sözdizimi # app.import(&amp;lsquo;proje klasörü/file.js&amp;rsquo;den başlayan dosya yolu&amp;rsquo;); Örnek ember-cli-build.js dosyası # var EmberApp = require(&#39;ember-cli/lib/broccoli/ember-app&#39;); module.exports = function(defaults) { var app = new EmberApp(defaults, { // Add options here datatables: { core: true, style: &#39;bs&#39;, extensions: [ { name: &#39;buttons&#39;, extensions: [&#39;colVis&#39;,&#39;flash&#39;,&#39;html5&#39;,&#39;print&#39;] }, { name: &#39;responsive&#39;, style: &#39;bs&#39; }, &#39;select&#39; ], pdfmake: false, vfs_fonts: false, jszip: true } }); //Imports: app.</description>
    </item>
    
    <item>
      <title>Ember-cli&#39;de Foundation veya Bootstrap&#39;i uygun bir şekilde başlatın</title>
      <link>https://www.wikiod.com/tr/ember-js/ember-clide-foundation-veya-bootstrapi-uygun-bir-sekilde-baslatn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/ember-clide-foundation-veya-bootstrapi-uygun-bir-sekilde-baslatn/</guid>
      <description>Bootstrap : Bence bu uygun bir yol değil. Bence en iyi yol bir ember-bootstrap eklentisidir.
ember-bootstrap, Bootstrap&amp;rsquo;in bootstrap.js&amp;rsquo;de uyguladığı toggle, navbar, modal vb. bileşenlerden gelen davranışları eşdeğer, CSS sınıfı uyumlu yerel Ember bileşenleriyle değiştirirken Bootstrap CSS sınıflarını kullanır.
Temel: Ember CLI Foundation 6 SASS adında bir eklenti var, ayrıca komut satırı kullanılarak yükleniyor.
Parametreler # parametre Kullanım Köz yükleme Ember npm install node.js kullanarak yeni bir uzantı paketi indirin SASS Kuruluşta CSS dili gerekli Ember-cli-build.</description>
    </item>
    
    <item>
      <title>Tarih Biçimi Yardımcısı</title>
      <link>https://www.wikiod.com/tr/ember-js/tarih-bicimi-yardmcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/tarih-bicimi-yardmcs/</guid>
      <description>Temiz bir tarih ve saat formatı için yardımcı. # Geçerli tarih ve saati istediğinizde, bunu Javascript Date işleviyle yapabilirsiniz, ancak her zaman yararlı olmayan şu biçimi döndürür: Çar Haziran 07 2017 13:26:15 GMT+0200 (Romantik ( zomertijd)).
Aşağıdaki kodu &amp;lsquo;app/helpers/helpers.js&amp;rsquo; içine kopyalayın ve &amp;rsquo;new Date()&amp;rsquo; yerine &amp;lsquo;getCurrentDateAndFormat()&amp;rsquo; öğesini çağırın.
export function getCurrentDateAndFormat() { let today = new Date(); let dd = today.getDate(); let MM = today.getMonth()+1; //January is 0! let hh = today.</description>
    </item>
    
    <item>
      <title>Test yapmak</title>
      <link>https://www.wikiod.com/tr/ember-js/test-yapmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ember-js/test-yapmak/</guid>
      <description>Kapsamlı bir test paketi oluşturmak ve sürdürmek, her geliştirici için bir öncelik olmalıdır. Ember.js&amp;rsquo;de test etme, uyumsuzluk, Ember Run Loop ile uğraşmayı ve API&amp;rsquo;nizle alay etmeyi içerir. Ember.js geliştiricilerinin testler yazarken zorlanmaları yaygındır. Ancak, zamandan ve enerjiden tasarruf etmenizi sağlayacak bazı ipuçları var.
Zarif bir şekilde testlerde söz beklemek # &amp;ldquo;function&amp;rdquo; öğesinin &amp;ldquo;test()&amp;rdquo; yöntemine &amp;ldquo;async&amp;rdquo; geçirilmesini sağlayabilirsiniz - ardından &amp;ldquo;await&amp;rdquo; anahtar sözcüğünü kullanabilirsiniz. Testiniz, Sözler çözülene ve eşzamansız kodun test edilmesi daha kolay ve daha okunaklı hale gelene kadar bekleyecektir.</description>
    </item>
    
  </channel>
</rss>
