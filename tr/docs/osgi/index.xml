<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>osgi Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/osgi/</link>
    <description>Recent content in osgi Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/osgi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>osgi&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/osgi/osgiye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osgi/osgiye-baslarken/</guid>
      <description>Equinox&amp;rsquo;u İndirme ve Kullanma # Neon sürümü için Equinox indirme sayfasından platformunuz için OSGi başlangıç ​​kitini indirin ve çıkarın.
Çerçeveyi &amp;lsquo;rt/plugins klasöründen&amp;rsquo; aşağıdaki komutla (veya platformunuzun &amp;lsquo;rt&amp;rsquo; klasöründeki &amp;lsquo;rt&amp;rsquo; yürütülebilir dosyasıyla) başlatın:
rt/plugins$ java -jar org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar -console osgi&amp;gt; OSGi konsol isteminde paketleri yönetebilirsiniz, örneğin:
osgi&amp;gt;ss &amp;quot;Framework is launched.&amp;quot; id State Bundle 0 ACTIVE org.eclipse.osgi_3.11.0.v20160603-1336 Fragments=1 1 RESOLVED org.eclipse.osgi.compatibility.state_1.0.200.v20160504-1419 Master=0 2 RESOLVED org.apache.commons.codec_1.6.0.v201305230611 3 RESOLVED org.apache.commons.logging_1.1.1.v201101211721 4 ACTIVE org.apache.felix.gogo.command_0.10.0.v201209301215 5 ACTIVE org.</description>
    </item>
    
    <item>
      <title>OSGi uygulamalarının entegrasyon testi için Pax Exam kullanma</title>
      <link>https://www.wikiod.com/tr/osgi/osgi-uygulamalarnn-entegrasyon-testi-icin-pax-exam-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osgi/osgi-uygulamalarnn-entegrasyon-testi-icin-pax-exam-kullanma/</guid>
      <description>Pax Exam bir OSGi kapsayıcısındaki (ör. AEM, Apache Karaf) paketlerin test edilmesini sağlar. Pax Sınavı genellikle JUnit ile birlikte kullanılır.
Başlarken # İşte Pax Exam kullanan bir test örneği.
package com.example.project.test; import static org.junit.Assert.*; import static org.ops4j.pax.exam.CoreOptions.*; import javax.inject.Inject; import org.junit.Test; import org.junit.runner.RunWith; import org.ops4j.pax.exam.Configuration; import org.ops4j.pax.exam.Option; import org.ops4j.pax.exam.junit.PaxExam; import org.ops4j.pax.exam.regression.pde.HelloService; import org.ops4j.pax.exam.spi.reactors.*; @RunWith(PaxExam.class) @ExamReactorStrategy(PerMethod.class) public class SampleTest { @Inject private HelloService helloService; @Configuration public Option[] config() { return options( mavenBundle(&amp;quot;com.</description>
    </item>
    
  </channel>
</rss>
