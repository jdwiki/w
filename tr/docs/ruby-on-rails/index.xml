<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Rails Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/ruby-on-rails/</link>
    <description>Recent content in Ruby on Rails Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ruby on Rails&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/ruby-on-railsi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/ruby-on-railsi-kullanmaya-baslama/</guid>
      <description>Ruby on Rails Uygulaması Oluşturma # Bu örnekte Ruby ve Ruby on Rails&amp;lsquo;in zaten doğru şekilde kurulduğu varsayılmaktadır. Değilse, nasıl yapılacağını burada bulabilirsiniz.
Bir komut satırı veya terminal açın. Yeni bir Rails uygulaması oluşturmak için Rails new komutunu ve ardından uygulamanızın adını kullanın:
$ rails new my_app Rails uygulamanızı belirli bir Rails sürümüyle oluşturmak istiyorsanız, uygulamayı oluştururken belirtebilirsiniz. Bunu yapmak için, uygulama adının ardından &amp;lsquo;rails version new&amp;rsquo; kullanın:
$ rails _4.</description>
    </item>
    
    <item>
      <title>yönlendirme</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/yonlendirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/yonlendirme/</guid>
      <description>Rails yönlendiricisi, URL&amp;rsquo;leri tanır ve bunları bir denetleyicinin eylemine gönderir. Ayrıca, görünümlerinizde dizeleri sabit kodlama ihtiyacını ortadan kaldırarak yollar ve URL&amp;rsquo;ler oluşturabilir.
Genel olarak &amp;ldquo;Yönlendirme&amp;rdquo;, URL&amp;rsquo;lerin uygulamanız tarafından nasıl &amp;ldquo;işlendiği&amp;quot;dir. Rails durumunda, genellikle hangi denetleyicinin ve bu denetleyicinin hangi eyleminin belirli bir gelen URL&amp;rsquo;yi ele alacağıdır. Rails uygulamalarında rotalar genellikle config/routes.rb dosyasına yerleştirilir.
Kaynak Yönlendirme (Temel) # Rotalar config/routes.rb içinde tanımlanır. Bunlar genellikle resources veya source yöntemleri.
&amp;ldquo;resources :users&amp;rdquo;, tümü &amp;ldquo;UsersController&amp;rdquo; eylemleriyle eşlenen aşağıdaki yedi yolu oluşturur:</description>
    </item>
    
    <item>
      <title>ActiveRecord Taşımaları</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/activerecord-tasmalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/activerecord-tasmalar/</guid>
      <description>Parametreler # Sütun türü Açıklama :birincil_anahtar Birincil anahtar :dize Daha kısa dize veri türü. Maksimum karakter sayısı için limit seçeneğine izin verir. :metin Daha uzun metin miktarı. Maksimum bayt sayısı için &amp;rsquo;limit&amp;rsquo; seçeneğine izin verir. `:tamsayı&#39; Tamsayı. Maksimum bayt sayısı için &amp;rsquo;limit&amp;rsquo; seçeneğine izin verir. :büyük Daha büyük tamsayı :yüzer Şamandıra :ondalık Değişken hassasiyetli ondalık sayı. &amp;ldquo;Hassas&amp;rdquo; ve &amp;ldquo;ölçek&amp;rdquo; seçeneklerine izin verir. :sayısal &amp;ldquo;Hassas&amp;rdquo; ve &amp;ldquo;ölçek&amp;rdquo; seçeneklerine izin verir. :tarihsaat Tarihler/saatler için DateTime nesnesi.</description>
    </item>
    
    <item>
      <title>Raylar İçin En İyi Uygulamalar</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/raylar-icin-en-iyi-uygulamalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/raylar-icin-en-iyi-uygulamalar/</guid>
      <description>Şişman Model, Sıska Kontrolör # &amp;ldquo;Fat Model, Skinny Controller&amp;rdquo;, MVC&amp;rsquo;nin M ve C parçalarının ideal olarak birlikte nasıl çalıştığını ifade eder. Yani, yanıtla ilgili olmayan herhangi bir mantık, ideal olarak güzel, test edilebilir bir yöntemle modele girmelidir. Bu arada, &amp;ldquo;sıska&amp;rdquo; denetleyici, görünüm ve model arasında güzel bir arayüzdür.
Pratikte, bu bir dizi farklı yeniden düzenleme türü gerektirebilir, ancak hepsi tek bir fikre indirgenir: modele yanıtla ilgili olmayan herhangi bir mantığı hareket ettirerek (denetleyici yerine), yalnızca yeniden kullanımı teşvik etmiş olmazsınız.</description>
    </item>
    
    <item>
      <title>Aktif Kayıt</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/aktif-kayt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/aktif-kayt/</guid>
      <description>Jeneratör ile Model Oluşturma # Ruby on Rails, ActiveRecord modelleri oluşturmak için kullanabileceğiniz bir &amp;ldquo;model&amp;rdquo; oluşturucu sağlar. Basitçe &amp;lsquo;raylar model oluşturur&amp;rsquo; kullanın ve model adını girin.
$ rails g model user &amp;ldquo;app/models&amp;rdquo; içindeki model dosyasına ek olarak, oluşturucu ayrıca şunları da oluşturacaktır:
test/models/user_test.rb içindeki Test test/fixtures/users.yml içindeki Fikstürler db/migrate/XXX_create_users.rb içindeki veritabanı Göçü Modeli oluştururken de model için bazı alanlar oluşturabilirsiniz.
$ rails g model user email:string sign_in_count:integer birthday:date Bu, veritabanınızda uygun türlerle e-posta, sign_in_count ve doğum günü sütunlarını oluşturacaktır.</description>
    </item>
    
    <item>
      <title>ActiveRecord Sorgu Arayüzü</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/activerecord-sorgu-arayuzu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/activerecord-sorgu-arayuzu/</guid>
      <description>ActiveRecord, iş verilerini ve mantığı temsil etmekten sorumlu sistemin katmanı olan MVC&amp;rsquo;deki M&amp;rsquo;dir. Bir uygulamanın zengin nesnelerini ilişkisel bir veritabanı yönetim sistemindeki tablolara bağlayan teknik, Object Rilişkisel Mapper(ORM)&amp;lsquo;dir.
ActiveRecord sizin için veritabanında sorgular gerçekleştirir ve çoğu veritabanı sistemiyle uyumludur. Hangi veritabanı sistemini kullanırsanız kullanın, ActiveRecord yöntemi biçimi her zaman aynı olacaktır.
.nerede # &amp;lsquo;where&amp;rsquo; yöntemi, herhangi bir &amp;lsquo;ActiveRecord&amp;rsquo; modelinde mevcuttur ve veri tabanında verilen kriterlere uyan bir dizi kayıt için sorgulama yapılmasına izin verir.</description>
    </item>
    
    <item>
      <title>Adlandırma Kuralları</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/adlandrma-kurallar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/adlandrma-kurallar/</guid>
      <description>Kontrolörler # Denetleyici sınıfı adları çoğuldur. Bunun nedeni, denetleyicinin birden çok nesne örneğini kontrol etmesidir.
Örnek: &amp;lsquo;OrdersController&amp;rsquo;, bir &amp;lsquo;orders&amp;rsquo; tablosunun denetleyicisi olacaktır. Ardından Rails, /app/controllers&amp;rsquo; dizinindeki &amp;lsquo;orders_controller.rb&amp;rsquo; adlı bir dosyada sınıf tanımını arayacaktır.
Örnek: &amp;lsquo;PostsController&amp;rsquo;, bir &amp;lsquo;posts&amp;rsquo; tablosunun denetleyicisi olacaktır.
Denetleyici sınıfı adında birden çok büyük harfli sözcük varsa, tablo adının bu sözcükler arasında alt çizgi olduğu varsayılır.
Örneğin: Bir kontrolör PendingOrdersController olarak adlandırılmışsa, bu kontrolör için varsayılan dosya adı pending_orders_controller.</description>
    </item>
    
    <item>
      <title>Angular&#39;ı Rails ile Yapılandırın</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/angular-rails-ile-yaplandrn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/angular-rails-ile-yaplandrn/</guid>
      <description>Raylar 101 ile Açısal # Adım 1: Yeni bir Rails uygulaması oluşturun # gem install rails -v 4.1 rails new angular_example Adım 2: Turbolinkleri Kaldırın # Turbo bağlantıların kaldırılması, onu Gemfile&amp;rsquo;den kaldırmayı gerektirir.
gem &#39;turbolinks&#39; &amp;ldquo;app/assets/javascripts/application.js&amp;quot;den &amp;ldquo;require&amp;rdquo; öğesini kaldırın:
//= require turbolinks Adım 3: Varlık ardışık düzenine AngularJS ekleyin # Angular&amp;rsquo;ın Rails varlık ardışık düzeniyle çalışmasını sağlamak için Gemfile&amp;rsquo;a şunları eklememiz gerekir:
gem &#39;angular-rails-templates&#39; gem &#39;bower-rails&#39; Şimdi komutu çalıştırın
bundle install AngularJS bağımlılığını kurabilmemiz için bower ekleyin:</description>
    </item>
    
    <item>
      <title>Rails&#39;de Kullanıcı Kimlik Doğrulaması</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/railsde-kullanc-kimlik-dogrulamas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/railsde-kullanc-kimlik-dogrulamas/</guid>
      <description>Devise çok güçlü bir mücevherdir, kurulumdan hemen sonra kaydolmanıza, oturum açmanıza ve oturum kapatmanıza olanak tanır. Ayrıca kullanıcı, uygulamalarına kimlik doğrulama ve kısıtlamalar ekleyebilir. Kullanıcı kullanmak isterse, Devise ayrıca kendi görünümleriyle birlikte gelir. Bir kullanıcı ayrıca kayıt olma ve oturum açma formlarını ihtiyaca ve gereksinime göre özelleştirebilir. Devise&amp;rsquo;in, Rails konusunda yeniyseniz, kendi oturum açma bilgilerinizi uygulamanızı önerdiği unutulmamalıdır.
&amp;ldquo;Rails create devise:install&amp;rdquo; kullanılarak aygıt yapılandırmaları oluşturulurken aygıt, terminalde izlenecek bir dizi talimatı listeler.</description>
    </item>
    
    <item>
      <title>ActiveRecord Doğrulamaları</title>
      <link>https://www.wikiod.com/tr/ruby-on-rails/activerecord-dogrulamalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby-on-rails/activerecord-dogrulamalar/</guid>
      <description>Bir özelliğin uzunluğunu doğrulama # class Person &amp;lt; ApplicationRecord validates :name, length: { minimum: 2 } validates :bio, length: { maximum: 500 } validates :password, length: { in: 6..20 } validates :registration_number, length: { is: 6 } end Olası uzunluk kısıtlaması seçenekleri şunlardır:
:minimum - Nitelik, belirtilen uzunluktan daha az olamaz. :maximum - Nitelik belirtilen uzunluktan fazla olamaz. :in (veya :in) - Öznitelik uzunluğu belirli bir aralığa dahil edilmelidir. Bu seçeneğin değeri bir aralık olmalıdır.</description>
    </item>
    
  </channel>
</rss>
