<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker-compose Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/docker-compose/</link>
    <description>Recent content in docker-compose Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker-compose ile başlarken</title>
      <link>https://www.wikiod.com/tr/docker-compose/docker-compose-ile-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/docker-compose/docker-compose-ile-baslarken/</guid>
      <description>Docker-compose ile Ruby on Rails # Docker for Rails uygulaması ve veritabanı kullanmak istiyorsanız, docker kapsayıcısındaki tüm verilerin yok edileceğini bilmeniz gerekir (kapsayıcıyı özellikle veri tutmak için yapılandırmazsanız) Bazen, bir uygulama ile bir liman işçisi kapsayıcısı oluşturmanız ve onu bir veritabanı ile eski bir kapsayıcıya eklemeniz gerekir.
Rails uygulamasına örnek olarak basit bir uygulama kullandım. Komuttan oluşturabilirsiniz:
rails new compose-app --database=postgresql Tabii öncesinde raylar, yakut vb. yüklemeniz gerekiyor.
Ardından projenizde Dockerfile oluşturun ve bu verileri ona ayarlayın:</description>
    </item>
    
    <item>
      <title>Varsayılan ağ ile Docker-oluşturma çok kapsayıcı örneği</title>
      <link>https://www.wikiod.com/tr/docker-compose/varsaylan-ag-ile-docker-olusturma-cok-kapsayc-ornegi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/docker-compose/varsaylan-ag-ile-docker-olusturma-cok-kapsayc-ornegi/</guid>
      <description>Varsayılan olarak Oluştur, uygulamanız için tek bir ağ kurar. Her biri bir hizmet için kapsayıcı varsayılan ağa katılır ve her ikisi de bu ağdaki diğer kapsayıcılar tarafından erişilebilir ve tarafından keşfedilebilir onları kapsayıcı adıyla aynı bir ana bilgisayar adında.
Bağlantılar, bir hizmetin kullanıldığı ek takma adlar tanımlamanıza olanak tanır. başka bir hizmetten ulaşılabilir. Etkinleştirmeleri gerekli değildir iletişim kurulacak hizmetler – varsayılan olarak, herhangi bir hizmet diğerine ulaşabilir o hizmetin adına hizmet.</description>
    </item>
    
    <item>
      <title>Ortam değişkenleri harici dosyası</title>
      <link>https://www.wikiod.com/tr/docker-compose/ortam-degiskenleri-harici-dosyas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/docker-compose/ortam-degiskenleri-harici-dosyas/</guid>
      <description>Docker uygulamasına ortam değişkenlerini dahil etmenin birkaç yolu vardır. İşte bazı örnekler:
Harici Dosya Yoluyla # docker-composer.yml
web: ... env_file: - ./filename dosya adı
variable=value docker-compose içinde # app: ... environment: - var=value </description>
    </item>
    
  </channel>
</rss>
