<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/git/</link>
    <description>Recent content in Git Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/git/giti-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/giti-kullanmaya-baslama/</guid>
      <description>İlk deponuzu oluşturun, ardından dosyaları ekleyin ve kaydedin # Komut satırında önce Git&amp;rsquo;in kurulu olduğunu doğrulayın:
Tüm işletim sistemlerinde:
git --version UNIX benzeri işletim sistemlerinde:
which git Hiçbir şey döndürülmezse veya komut tanınmazsa, yükleyiciyi indirip çalıştırarak Git&amp;rsquo;i sisteminize yüklemeniz gerekebilir. Son derece net ve kolay kurulum talimatları için Git ana sayfasına bakın.
Git&amp;rsquo;i kurduktan sonra, [kullanıcı adınızı ve e-posta adresinizi yapılandırın][2]. Bunu bir taahhütte bulunmadan önce yapın.
Git yüklendikten sonra, sürüm kontrolü altına yerleştirmek istediğiniz dizine gidin ve boş bir Git deposu oluşturun:</description>
    </item>
    
    <item>
      <title>Dosyaları ve Klasörleri Yoksaymak</title>
      <link>https://www.wikiod.com/tr/git/dosyalar-ve-klasorleri-yoksaymak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/dosyalar-ve-klasorleri-yoksaymak/</guid>
      <description>Bu konu, Git deposuna istenmeyen dosyalar (veya dosya değişiklikleri) eklemekten nasıl kaçınılacağını gösterir. Birkaç yol vardır (genel veya yerel &amp;ldquo;.gitignore&amp;rdquo;, &amp;ldquo;.git/exclude&amp;rdquo;, &amp;ldquo;git update-index &amp;ndash;assume-unchanged&amp;rdquo; ve &amp;ldquo;git update-index &amp;ndash;skip-tree&amp;rdquo;), ancak unutmayın Git içeriği yönetiyor, bu şu anlama geliyor: yoksaymak aslında bir klasörü içerik (yani dosyalar) yoksayar. Boş bir klasör zaten eklenemediğinden varsayılan olarak yoksayılır.
.gitignore dosyası içeren dosya ve dizinleri yoksayma # Git&amp;rsquo;in belirli dosyaları ve dizinleri yok saymasını sağlayabilirsiniz — yani Git — deponuzda bir veya daha fazla .</description>
    </item>
    
    <item>
      <title>Kiraz toplama</title>
      <link>https://www.wikiod.com/tr/git/kiraz-toplama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/kiraz-toplama/</guid>
      <description>Bir seçim, bir taahhütte tanıtılan yamayı alır ve şu anda bulunduğunuz dalda yeniden uygulamaya çalışır.
Kaynak: Git SCM Kitabı
Sözdizimi # git kiraz seçimi [&amp;ndash;edit] [-n] [-m ebeveyn numarası] [-s] [-x] [&amp;ndash;ff] [-S[key-id]] commit&amp;hellip; git kiraz toplama &amp;ndash;devam et git kiraz toplama &amp;ndash;quit git kiraz toplama &amp;ndash;abort Parametreler # Parametreler Ayrıntılar -e, &amp;ndash;edit Bu seçenekle, git kiraz-pick taahhütten önce taahhüt mesajını düzenlemenize izin verir. -x Taahhüdü kaydederken, bu değişikliğin hangi taahhütten alındığını belirtmek için orijinal taahhüt mesajına &amp;ldquo;(taahhütten alınan kiraz…​)&amp;rdquo; yazan bir satır ekleyin.</description>
    </item>
    
    <item>
      <title>yeniden temellendirme</title>
      <link>https://www.wikiod.com/tr/git/yeniden-temellendirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/yeniden-temellendirme/</guid>
      <description>Sözdizimi # git rebase [-i | --interactive] [seçenekler] [--exec &amp;lt;cmd&amp;gt;] [--onto &amp;lt;newbase&amp;gt;] [&amp;lt;upstream&amp;gt;] [&amp;lt;branch&amp;gt;] git rebase [-i | --interactive] [seçenekler] [--exec &amp;lt;cmd&amp;gt;] [--onto &amp;lt;newbase&amp;gt;] --root [&amp;lt;branch&amp;gt;] git rebase --devam | --atla | -- iptal | --hepsini düzenle Parametreler # parametre Ayrıntılar &amp;ndash;devam Bir birleştirme çakışmasını çözdükten sonra yeniden temellendirme işlemini yeniden başlatın. &amp;ndash; iptal Yeniden temelleme işlemini iptal edin ve HEAD&amp;rsquo;i orijinal şubeye sıfırlayın. Yeniden başlatma işlemi başlatıldığında şube sağlandıysa, HEAD şubeye sıfırlanacaktır.</description>
    </item>
    
    <item>
      <title>Dallanma</title>
      <link>https://www.wikiod.com/tr/git/dallanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/dallanma/</guid>
      <description>Sözdizimi # git şubesi [--set-upstream | --parça | --no-track] [-l] [-f] &amp;lt;branchname&amp;gt; [&amp;lt;start-point&amp;gt;] git şubesi (--set-upstream-to=&amp;lt;upstream&amp;gt; | -u &amp;lt;upstream&amp;gt;) [&amp;lt;branchname&amp;gt;] git branch --unset-upstream [&amp;lt;branchname&amp;gt;] git dalı (-m | -M) [&amp;lt;oldbranch&amp;gt;] &amp;lt;newbranch&amp;gt; git dalı (-d | -D) [-r] &amp;lt;branchname&amp;gt;…​ git branch --edit-description [&amp;lt;branchname&amp;gt;] git dalı [--color[=&amp;lt;ne zaman&amp;gt;] | --no-color] [-r | -a] [--liste] [-v [--kısaltma=&amp;lt;uzunluk&amp;gt; | --no-kısaltması]] [--sütun[=&amp;lt;seçenekler&amp;gt;] | --no-column] [(--birleştirilmiş | --no-birleştirilmiş | --içerir) [&amp;lt;taahhüt&amp;gt;]] [--sort=&amp;lt;anahtar&amp;gt;] [--points-at &amp;lt;object&amp;gt;] [&amp;lt;pattern &amp;gt;…​] Parametreler # parametre Ayrıntılar -d, &amp;ndash;delete Bir dalı silin.</description>
    </item>
    
    <item>
      <title>saklamak</title>
      <link>https://www.wikiod.com/tr/git/saklamak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/saklamak/</guid>
      <description>Sözdizimi # git stash list [&amp;lt;options&amp;gt;] git stash show [&amp;lt;stash&amp;gt;] git stash drop [-q|--quiet] [&amp;lt;stash&amp;gt;] git stash ( pop | uygula ) [--index] [-q|--quiet] [&amp;lt;stash&amp;gt;] git stash dalı &amp;lt;branchname&amp;gt; [&amp;lt;stash&amp;gt;] git stash [kaydet [-p|--patch] [-k|--[no-]keep-index] [-q|--quiet] [-u|--include-tracked] [-a| --all] [&amp;lt;mesaj&amp;gt;]] git stash clear git stash create [&amp;lt;message&amp;gt;] git stash store [-m|--message &amp;lt;message&amp;gt;] [-q|--quiet] &amp;lt;commit&amp;gt; Parametreler # parametre Ayrıntılar göster Saklamada kaydedilen değişiklikleri, saklanan durum ile orijinal ebeveyni arasındaki fark olarak gösterin.</description>
    </item>
    
    <item>
      <title>Git Farkı</title>
      <link>https://www.wikiod.com/tr/git/git-fark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/git-fark/</guid>
      <description>Sözdizimi # git diff [seçenekler] [&amp;lt;taahhüt&amp;gt;] [--] [&amp;lt;yol&amp;gt;…​] git diff [seçenekler] --cached [&amp;lt;commit&amp;gt;] [--] [&amp;lt;path&amp;gt;…​] git diff [seçenekler] &amp;lt;commit&amp;gt; &amp;lt;commit&amp;gt; [--] [&amp;lt;path&amp;gt;…​] git diff [seçenekler] &amp;lt;blob&amp;gt; &amp;lt;blob&amp;gt; git diff [seçenekler] [--index yok] [--] &amp;lt;yol&amp;gt; &amp;lt;yol&amp;gt; Parametreler # parametre Ayrıntılar -p, -u, &amp;ndash;patch Yama oluştur -s, &amp;ndash;no-yama Fark çıktısını bastır. Varsayılan olarak yamayı gösteren &amp;lsquo;git show&amp;rsquo; gibi komutlar için veya &amp;lsquo;&amp;ndash;patch&amp;rsquo; &amp;ndash;ham Farkı ham biçimde oluşturun &amp;ndash;diff-algoritma= Bir fark algoritması seçin. Varyantlar şu şekildedir: &amp;ldquo;myers&amp;rdquo;, &amp;ldquo;minimal&amp;rdquo;, &amp;ldquo;sabır&amp;rdquo;, &amp;ldquo;histogram&amp;rdquo; &amp;ndash;özet Oluşturmalar, yeniden adlandırmalar ve mod değişiklikleri gibi genişletilmiş başlık bilgilerinin özet bir özetini çıktılayın &amp;ndash;yalnızca isim Yalnızca değiştirilen dosyaların adlarını göster &amp;ndash;isim-durumu Değiştirilen dosyaların adlarını ve durumlarını göster En yaygın durumlar M (Değiştirildi), A (Eklendi) ve D (Silindi) &amp;ndash;kontrol Değişiklikler çakışma işaretleri veya boşluk hataları ortaya çıkarırsa uyar.</description>
    </item>
    
    <item>
      <title>taahhüt</title>
      <link>https://www.wikiod.com/tr/git/taahhut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/taahhut/</guid>
      <description>Git ile yapılan taahhütler, yazarlara koddaki değişiklikleri atfederek hesap verebilirlik sağlar. Git, taahhütlerin özgüllüğü ve güvenliği için birden çok özellik sunar. Bu konu, Git ile taahhütte bulunmaya yönelik uygun uygulamaları ve prosedürleri açıklar ve gösterir.
Sözdizimi # git commit [bayraklar] Parametreler # Parametre Ayrıntılar &amp;ndash;mesaj, -m Taahhüde dahil edilecek mesaj. Bu parametrenin belirtilmesi, Git&amp;rsquo;in normal düzenleyici açma davranışını atlar. &amp;ndash;değiştir Şu anda sahnelenen değişikliklerin önceki işleme eklenmesi (değiştirilmesi) gerektiğini belirtin. Dikkatli olun, bu tarihi yeniden yazabilir!</description>
    </item>
    
    <item>
      <title>ezme</title>
      <link>https://www.wikiod.com/tr/git/ezme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/ezme/</guid>
      <description>Ezmek nedir? # Squashing, birden fazla taahhüt alma ve bunları ilk taahhütlerdeki tüm değişiklikleri kapsayan tek bir taahhütte birleştirme sürecidir.
Ezme ve Uzak Dallar # Uzak bir dalı izleyen bir dalda squash işlemi yaparken özellikle dikkat edin; Zaten uzak bir şubeye gönderilmiş bir taahhüdü ezerseniz, iki dal birbirinden ayrılacak ve bu değişiklikleri uzak şubeye zorlamak için git push -f kullanmanız gerekecek. Bunun, o uzaktaki şubeyi izleyen başkaları için sorunlara neden olabileceğini unutmayın, bu nedenle, zorla sıkıştırılmış taahhütleri herkese açık veya paylaşılan depolara zorlarken dikkatli olunmalıdır.</description>
    </item>
    
    <item>
      <title>Evreleme</title>
      <link>https://www.wikiod.com/tr/git/evreleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/git/evreleme/</guid>
      <description>Evrelemenin &amp;lsquo;dosyaların&amp;rsquo; kendisiyle ve verilen her dosyadaki değişikliklerle ilgili her şeyle çok az ilgisi olduğunu belirtmekte fayda var. Değişiklikleri içeren dosyaları hazırlarız ve git, değişiklikleri taahhüt olarak izler (taahhütteki değişiklikler birkaç dosyada yapılsa bile).
Dosyalar ve taahhütler arasındaki fark önemsiz görünebilir, ancak bu farkı anlamak, kiraz toplama ve fark gibi temel işlevleri anlamak için esastır. ([Dosya yönetim aracı olarak kiraz toplamayı öneren kabul edilmiş bir yanıtın karmaşıklığına ilişkin yorumlarda](http://stackoverflow.com/questions/449541/how-do-you-merge-selective-files- ile-git-merge).)</description>
    </item>
    
  </channel>
</rss>
