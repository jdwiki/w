<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xaml Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/xaml/</link>
    <description>Recent content in xaml Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/xaml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>xaml&#39;e başlarken</title>
      <link>https://www.wikiod.com/tr/xaml/xamle-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/xamle-baslarken/</guid>
      <description>Kurulum veya Kurulum # İlk XAML&amp;rsquo;nizi yazmanın en kolay yolu Microsoft Visual Studio&amp;rsquo;yu yüklemektir. Bu, Microsoft&amp;rsquo;tan ücretsiz olarak temin edilebilir.
Kurulduktan sonra, bir VB.NET veya C# koduyla WPF Uygulaması türünde yeni bir proje oluşturabilirsiniz.
Bu, bir dizi pencereniz olması açısından Windows formlarına benzer, temel fark bu pencerelerin XAML&amp;rsquo;de yazılması ve farklı cihazlara çok daha duyarlı olmasıdır.
Hala iyileştirme ihtiyacı var.
Selam Dünya # İşte WPF&amp;rsquo;deki bir XAML sayfasının basit bir örneği.</description>
    </item>
    
    <item>
      <title>dönüştürücüler</title>
      <link>https://www.wikiod.com/tr/xaml/donusturuculer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/donusturuculer/</guid>
      <description>Parametreler # parametre Ayrıntılar değer Dönüştürülecek değer hedefTürü Dönüştürülmekte olan tür parametre Dönüştürmenin nasıl çalıştığını denetlemek için isteğe bağlı değer kültür CultureInfo nesnesi - yerelleştirme gerekiyorsa gereklidir &amp;lsquo;Dönüştür&amp;rsquo; yöntemi, kaynaktan (genellikle görünüm modeli) gelen değeri hedefe (genellikle bir kontrolün özelliği) dönüştürür.
&amp;lsquo;ConvertBack&amp;rsquo; yöntemi, hedefteki değeri kaynağa geri dönüştürür. Yalnızca bağlama &amp;ldquo;TwoWay&amp;rdquo; veya &amp;ldquo;OneWayToSource&amp;rdquo; ise gereklidir.
Bir &amp;ldquo;ConvertBack&amp;rdquo; desteklenmediğinde, yani dönüşüm öncesi değer ile dönüşüm sonrası değer arasında bire bir eşleme olmadığında, &amp;ldquo;ConvertBack&amp;rdquo; yönteminin &amp;ldquo;DependencyProperty.</description>
    </item>
    
    <item>
      <title>Çeşitli XAML lehçelerindeki farklılıklar</title>
      <link>https://www.wikiod.com/tr/xaml/cesitli-xaml-lehcelerindeki-farkllklar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/cesitli-xaml-lehcelerindeki-farkllklar/</guid>
      <description>XAML, Silverlight, Windows Phone, Windows RT ve UWP uygulamalarında kullanılır. Bunlar arasında kod paylaşmak veya kod dönüştürmek, çeşitli XAML lehçeleri arasındaki ince farklar nedeniyle bazen istenenden daha zordur. Bu konu, kısa bir açıklama ile bu farklılıklara genel bir bakış sunmaya çalışmaktadır.
Derlenmiş veri bağlamaları: {x:Bind} biçimlendirme uzantısı # XAML ile çalışmak için veri tabanları gereklidir. UWP uygulamaları için XAML diyalekti bir tür bağlama sağlar: {x:Bind} biçimlendirme uzantısı.
{Binding XXX} ve {x:Bind XXX} ile çalışmak, x:Bind uzantısının derleme zamanında çalışması farkıyla çoğunlukla eşdeğerdir, bu da daha iyi hata ayıklama yetenekleri (ör.</description>
    </item>
    
    <item>
      <title>Bağlanma verileri</title>
      <link>https://www.wikiod.com/tr/xaml/baglanma-verileri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/baglanma-verileri/</guid>
      <description>Sözdizimi # &amp;lt;TextBlock Text=&amp;quot;{Binding Title}&amp;quot;/&amp;gt;
&amp;lt;TextBlock Text=&amp;quot;{Binding Path=Title}&amp;quot;/&amp;gt;
&amp;lt;MetinBloğu&amp;gt; &amp;lt;TextBlock.Text&amp;gt; &amp;lt;Binding Path=&amp;quot;Title&amp;quot;/&amp;gt; &amp;lt;/TextBlock.Text&amp;gt; &amp;lt;/TextBlock&amp;gt;
Tüm bu etiketler aynı sonucu verir.
Dizeyi Metin özelliğine bağlama # UI içeriğini çalışma zamanında değiştirmek için &amp;ldquo;Binding&amp;quot;i kullanabilirsiniz. Binded özelliği koddan değiştirildiğinde, kullanıcı arayüzünde görüntülenecektir.
&amp;lt;TextBlock Text=&amp;quot;{Binding Title}&amp;quot;/&amp;gt; UI&amp;rsquo;yi değişiklikler hakkında bilgilendirmek için, özelliğin &amp;ldquo;INotifyPropertyChanged&amp;rdquo; arayüzünden &amp;ldquo;PropertyChanged&amp;rdquo; olayını yükseltmesi gerekir veya &amp;ldquo;Bağımlılık Özelliği&amp;quot;ni kullanabilirsiniz.
&amp;ldquo;Title&amp;rdquo; özelliği xaml.cs dosyasında veya &amp;ldquo;XAML&amp;quot;deki Datacontext sınıfındaysa, Binding çalışıyor.
Datacontext, doğrudan XAML&amp;rsquo;de kurulabilir</description>
    </item>
    
    <item>
      <title>Düzen kontrolleri</title>
      <link>https://www.wikiod.com/tr/xaml/duzen-kontrolleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/duzen-kontrolleri/</guid>
      <description>Kafes # Tablo düzenleri oluşturmak için &amp;ldquo;Izgara&amp;rdquo; kullanılır.
Temel satır ve sütun tanımları # &amp;lt;Grid&amp;gt; &amp;lt;!-- Define 3 columns with width of 100 --&amp;gt; &amp;lt;Grid.ColumnDefinitions&amp;gt; &amp;lt;ColumnDefinition Width=&amp;quot;100&amp;quot;/&amp;gt; &amp;lt;ColumnDefinition Width=&amp;quot;100&amp;quot;/&amp;gt; &amp;lt;ColumnDefinition Width=&amp;quot;100&amp;quot;/&amp;gt; &amp;lt;/Grid.ColumnDefinitions&amp;gt; &amp;lt;!-- Define 3 rows with height of 50 --&amp;gt; &amp;lt;Grid.RowDefinitions&amp;gt; &amp;lt;RowDefinition Height=&amp;quot;50&amp;quot;/&amp;gt; &amp;lt;RowDefinition Height=&amp;quot;50&amp;quot;/&amp;gt; &amp;lt;RowDefinition Height=&amp;quot;50&amp;quot;/&amp;gt; &amp;lt;/Grid.RowDefinitions&amp;gt; &amp;lt;!-- This is placed at the top left (first row, first column) --&amp;gt; &amp;lt;Button Grid.Column=&amp;quot;0&amp;quot; Grid.Row=&amp;quot;0&amp;quot; Content=&amp;quot;Top Left&amp;quot;/&amp;gt; &amp;lt;!-- This is placed at the top left (first row, second column) --&amp;gt; &amp;lt;Button Grid.</description>
    </item>
    
    <item>
      <title>Veri şablonları</title>
      <link>https://www.wikiod.com/tr/xaml/veri-sablonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/veri-sablonlar/</guid>
      <description>DataTemplate&amp;rsquo;i ListBox&amp;rsquo;ta Kullanma # Aşağıdaki XAML parçacığına sahip olduğumuzu varsayalım:
&amp;lt;ListBox x:Name=&amp;quot;MyListBox&amp;quot; /&amp;gt; Ardından, bu XAML dosyasının arka planında, yapıcıya aşağıdakini yazıyoruz:
MyListBox.ItemsSource = new[] { 1, 2, 3, 4, 5 }; Uygulamayı çalıştırarak girdiğimiz sayıların bir listesini alıyoruz.
Ancak, bunun gibi özel türdeki nesnelerin bir listesini görüntülemeye çalışırsak
MyListBox.ItemsSource = new[] { new Book { Title = &amp;quot;The Hitchhiker&#39;s Guide to the Galaxy&amp;quot;, Author = &amp;quot;Douglas Adams&amp;quot; }, new Book { Title = &amp;quot;The Restaurant at the End of the Universe&amp;quot;, Author = &amp;quot;Douglas Adams&amp;quot; }, new Book { Title = &amp;quot;Life, the Universe and Everything&amp;quot;, Author = &amp;quot;Douglas Adams&amp;quot; }, new Book { Title = &amp;quot;So Long, and Thanks for All the Fish&amp;quot;, Author = &amp;quot;Douglas Adams&amp;quot; }, new Book { Title = &amp;quot;Mostly Harmless&amp;quot;, Author = &amp;quot;Douglas Adams&amp;quot; } }; &amp;ldquo;Kitap&amp;rdquo; adında bir sınıfımız olduğunu varsayarsak</description>
    </item>
    
    <item>
      <title>XAML Geliştirme Araçları</title>
      <link>https://www.wikiod.com/tr/xaml/xaml-gelistirme-araclar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/xaml-gelistirme-araclar/</guid>
      <description>Microsoft Visual Studio ve Microsoft İfade Karışımı # XAML uygulamaları için önde gelen profesyonel tasarım aracı olan Blend for Visual Studio ile Windows Masaüstü Uygulamaları için ilgi çekici kullanıcı arabirimleri oluşturun. Blend&amp;rsquo;in eksiksiz vektör çizim araçları paketini, güçlü şablon düzenleme özelliklerini, gerçek zamanlı animasyonu, görsel durum yönetimini ve daha fazlasını kullanarak güzel geçişler ve görselleştirmeler oluşturun.
Visual Studio&amp;rsquo;yu İndirin
WPF Denetçisi # WPF Inspector, mizanpaj, veri bağlama veya stil ile ilgili yaygın sorunları gidermek için çalışan bir WPF uygulamasına eklenen bir yardımcı programdır.</description>
    </item>
    
    <item>
      <title>Özel XAML dosyalarıyla çalışma</title>
      <link>https://www.wikiod.com/tr/xaml/ozel-xaml-dosyalaryla-calsma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/ozel-xaml-dosyalaryla-calsma/</guid>
      <description>XAML&amp;rsquo;den bir nesne okuma # Aşağıdaki sınıfların bir yapısının XAML&amp;rsquo;de oluşturulması ve ardından bir CLR nesnesine okunması gerektiğini düşünün:
namespace CustomXaml { public class Test { public string Value { get; set; } public List&amp;lt;TestChild&amp;gt; Children { get; set; } = new List&amp;lt;TestChild&amp;gt;(); } public class TestChild { public string StringValue { get; set; } public int IntValue { get; set; } } } Sınıflar ya açık bir kurucuya sahip olmamalı ya da boş bir kurucu sağlamalıdır.</description>
    </item>
    
    <item>
      <title>Kontrol Şablonları</title>
      <link>https://www.wikiod.com/tr/xaml/kontrol-sablonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xaml/kontrol-sablonlar/</guid>
      <description>Kontrol Şablonları # WPF denetimleri için varsayılan kullanıcı arabirimleri, genellikle diğer denetimler ve şekillerden oluşturulur. Örneğin, bir Düğme, hem ButtonChrome hem de ContentPresenter denetimlerinden oluşur. ButtonChrome standart düğme görünümünü sağlarken ContentPresenter, Content özelliği tarafından belirtildiği gibi düğmenin içeriğini görüntüler. Bazen bir kontrolün varsayılan görünümü, bir uygulamanın genel görünümüyle uyumsuz olabilir. Bu durumda, içeriği ve davranışını değiştirmeden denetimin kullanıcı arabiriminin görünümünü değiştirmek için bir ControlTemplate kullanabilirsiniz.
XAML # &amp;lt;Window xmlns=&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot; xmlns:x=&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot; x:Class=&amp;quot;SDKSample.</description>
    </item>
    
  </channel>
</rss>
