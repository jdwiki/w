<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>symfony3 Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/symfony3/</link>
    <description>Recent content in symfony3 Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/symfony3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>symfony3&#39;e başlarken</title>
      <link>https://www.wikiod.com/tr/symfony3/symfony3e-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/symfony3e-baslarken/</guid>
      <description>3. Windows Sistemleri # Yol ortam değişkeninize php eklemelisiniz. Tez adımlarını izleyin:
Windows 7 :
Bilgisayarım simgesine sağ tıklayın Özellikler&amp;rsquo;i tıklayın Sol gezinme panelinden Gelişmiş sistem ayarları&amp;rsquo;na tıklayın Gelişmiş sekmesine tıklayın Ortam Değişkenleri düğmesini tıklayın Sistem Değişkenleri bölümünde Yol (büyük/küçük harf duyarsız) öğesini seçin ve Düzenle düğmesini tıklayın. Dizenin sonuna noktalı virgül (;) ekleyin, ardından PHP kurulumunuzun tam dosya sistemi yolunu ekleyin (örn. C:\Program Files\PHP) Tüm iletişim kutuları kaybolana kadar Tamam&amp;rsquo;ı tıklamaya devam edin Komut isteminizi kapatın ve tekrar açın Sıralanmış Windows 8 ve 10</description>
    </item>
    
    <item>
      <title>yönlendirme</title>
      <link>https://www.wikiod.com/tr/symfony3/yonlendirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/yonlendirme/</guid>
      <description>Rota, bir URL&amp;rsquo;yi Controller sınıfındaki bir eyleme (işlev) eşlemeye benzer. Aşağıdaki konu, rota oluşturmaya, parametreleri YAML veya açıklama kullanarak bir rota aracılığıyla Controller sınıfına geçirmeye odaklanacaktır.
Symfony çerçevesi tarafından neyin üretildiğini görmek faydalıdır, bu, belirli bir uygulamanın tüm yollarını izlemek için araçlar sağlar.
Symfony Doc&amp;lsquo;den (bir kabukta) şunu kullanın:
php bin/console debug:router Ayrıca, Yönlendirme menüsündeki Çerçeve profil oluşturucudaki tüm ilgili rota bilgilerini izleyebilirsiniz: YAML kullanarak yönlendirme # Yönlendirme yapılandırması, varsayılan olarak &amp;lsquo;app/config/routing.</description>
    </item>
    
    <item>
      <title>Test yapmak</title>
      <link>https://www.wikiod.com/tr/symfony3/test-yapmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/test-yapmak/</guid>
      <description>Symfony3&amp;rsquo;te Basit Test # Ünite testi
Birim testleri, kodunuzun sözdizimi hatası olmadığından emin olmak ve kodunuzun mantığını beklediğiniz gibi çalışacak şekilde test etmek için kullanılır. Hızlı örnek:
src/AppBundle/Calculator/BillCalculator.php
&amp;lt;?php namespace AppBundle\Calculator; use AppBundle\Calculator\TaxCalculator; class BillCalculator { private $taxCalculator; public function __construct(TaxCalculator $taxCalculator) { $this-&amp;gt;taxCalculator = $taxCalculator; } public function calculate($products) { $totalPrice = 0; foreach ($products as $product) { $totalPrice += $product[&#39;price&#39;]; } $tax = $this-&amp;gt;taxCalculator-&amp;gt;calculate($totalPrice); return $totalPrice + $tax; } } src/AppBundle/Calculator/TaxCalculator.</description>
    </item>
    
    <item>
      <title>Web Servisleri ile Çalışmak</title>
      <link>https://www.wikiod.com/tr/symfony3/web-servisleri-ile-calsmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/web-servisleri-ile-calsmak/</guid>
      <description>Dinlenme API&amp;rsquo;si # Symfony&amp;rsquo;de web servislerinin nasıl yapıldığını anlatmak için daha önce bu sitede [documentation][1] yazmıştım.
Symfony &amp;gt;= 3 versiyonu için tekrar bir tutorial yazacağım.
[Symfony Framework][2]&amp;lsquo;ün yapılandırılmış bir sürümünde kurulu bir web sunucumuz olduğunu düşünüyoruz. [besteci][3] (php paket yöneticisi) de kurulu olmalıdır.
Basitleştirmek için, besteci yüklediyseniz, bunu bir terminal / komut istemine yazın:
composer create-project symfony/framework-standard-edition example &amp;quot;3.1.*&amp;quot; Bu, geçerli dizinde standart bir symfony çerçevesi kurulumuyla &amp;ldquo;örnek&amp;rdquo; adlı yeni bir dizin oluşturacaktır.</description>
    </item>
    
    <item>
      <title>Dinamik Formlar</title>
      <link>https://www.wikiod.com/tr/symfony3/dinamik-formlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/dinamik-formlar/</guid>
      <description>AJAX ile seçimleri yüklemek için ChoiceType, EntityType ve DocumentType nasıl genişletilir. # Symfony&amp;rsquo;de yerleşik ChoiceType (ve onu genişleten EntityType veya DocumentType), temel olarak sabit bir seçim listesiyle çalışır.
Ajax çağrılarıyla çalışmasını istiyorsanız, bunları herhangi bir ekstra seçeneği kabul edecek şekilde değiştirmeniz gerekir.
Boş bir seçim listesiyle nasıl başlanır? Formunuzu oluşturduğunuzda, &amp;ldquo;seçimler&amp;rdquo; seçeneğini boş bir &amp;ldquo;array()&amp;rdquo; olarak ayarlamanız yeterlidir:
namespace AppBundle\Form; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\Extension\Core\Type\ChoiceType; class FooType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&#39;tag&#39;, ChoiceType::class, array(&#39;choices&#39;=&amp;gt;array())); } } Böylece seçim yapmadan boş bir seçim girişi alacaksınız.</description>
    </item>
    
    <item>
      <title>Olay Göndericisi</title>
      <link>https://www.wikiod.com/tr/symfony3/olay-gondericisi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/olay-gondericisi/</guid>
      <description>Sözdizimi # $gönderici-&amp;gt;gönder(string $eventName, Event $event);
$gönderici-&amp;gt;addListener(string $eventName, çağrılabilir $dinleyici, int $öncelik = 0);
$gönderici-&amp;gt;addSubscriber(EventSubscriberInterface $abone);
Uygulamanızda, olayları başlatması gereken nesnelere enjekte ettiğiniz tek bir EventDispatcher örneği kullanmak genellikle en iyisidir.
EventDispatcher&amp;rsquo;ınızın yapılandırmasını yönettiğiniz ve olay dinleyicileri eklediğiniz tek bir konuma sahip olmak en iyi uygulamadır. Symfony çerçevesi, Dependency Injection Container&amp;rsquo;ı kullanır.
Bu modeller, olay gönderen herhangi bir modülün kodunu değiştirmenize gerek kalmadan olay dinleyicilerinizi kolayca değiştirmenize olanak tanır.
Symfony EventDispatcher&amp;rsquo;ı bu kadar güçlü yapan şey, olay dinleyici yapılandırmasından olay gönderiminin ayrıştırılmasıdır.</description>
    </item>
    
    <item>
      <title>doğrulama</title>
      <link>https://www.wikiod.com/tr/symfony3/dogrulama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/dogrulama/</guid>
      <description>Aslında, form doğrulaması, &amp;ldquo;Validator Component&amp;rdquo; adlı bir bileşene dayanır.
Bir şablonda bir form göstermeniz gerekmiyorsa, genellikle özel hizmeti kullanabilirsiniz. API&amp;rsquo;ler gibi. Verileri aşağıdaki gibi aynı şekilde doğrulayabilirsiniz:
Örneğin, symfony doc temelinde:
$validator = $this-&amp;gt;get(&#39;validator&#39;); $errors = $validator-&amp;gt;validate($author); if (count($errors) &amp;gt; 0) { /* * Uses a __toString method on the $errors variable which is a * ConstraintViolationList object. This gives us a nice string * for debugging. */ $errorsString = (string) $errors; } Ek açıklamaları kullanarak Symfony doğrulaması # &amp;lsquo;app/config/config.</description>
    </item>
    
    <item>
      <title>Varlıkları Bildirme</title>
      <link>https://www.wikiod.com/tr/symfony3/varlklar-bildirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/varlklar-bildirme/</guid>
      <description>Bir Symfony Varlığını YAML Olarak Bildirme # AppBundle/Entity/Person.php
&lt;?php namespace AppBundle\Entity; /** * Person */ class Person { /** * @var int */ private $id; /** * @var string */ private $name; /** * @var int */ private $age; /** * Get id * * @return int */ public function getId() { return $this-&gt;id; } /** * Set name * * @param string $name * * @return Person */ public function setName($name) { $this-&gt;name = $name; return $this; } /** * Get name * * @return string */ public function getName() { return $this-&gt;name; } /** * Set age * * @param integer $age * * @return Person */ public function setAge($age) { $this-&gt;age = $age; return $this; } /** * Get age * * @return int */ public function getAge() { return $this-&gt;age; } } AppBundle/Resources/config/doctrine/Person.</description>
    </item>
    
    <item>
      <title>Assetic ile Varlık Yönetimi</title>
      <link>https://www.wikiod.com/tr/symfony3/assetic-ile-varlk-yonetimi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/assetic-ile-varlk-yonetimi/</guid>
      <description>Assetic Bundle&amp;rsquo;ı kullanırken, Symfony belgelerine göre lütfen aşağıdakilere dikkat edin:
Symfony 2.8&amp;rsquo;den itibaren Assetic, Symfony Standard Edition&amp;rsquo;a varsayılan olarak dahil edilmemiştir. Özelliklerinden herhangi birini kullanmadan önce, projenizde bu konsol komutunu yürüten AsseticBundle&amp;rsquo;ı kurun:
$ besteci symfony/assetic-bundle gerektirir
Atmanız gereken başka adımlar var. Daha fazla bilgi için şu adrese gidin: http://symfony.com/doc/current/assetic/asset_management.html
Parametreler # İsim Örnek Yol &amp;lsquo;static/images/logo/logo-default.png&amp;rsquo; Standart bir Symfony3 projesinde herkesin erişebileceği varlıklar için klasör &amp;ldquo;/web&amp;quot;dir. Assetic, bu klasörü varlıklar için kök klasör olarak kullanır.</description>
    </item>
    
    <item>
      <title>Yapılandırma</title>
      <link>https://www.wikiod.com/tr/symfony3/yaplandrma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/symfony3/yaplandrma/</guid>
      <description>Symfony uygulamanızı yapılandırmak için resmi belgelerde bulunmayan örnekler ve iyi uygulamalar.
Hizmet kimliği olarak tam nitelikli sınıf adını (FQCN) kullanın # Birçok örnekte, &amp;lsquo;acme.demo.service.id&amp;rsquo; (noktalı bir dize) gibi bir hizmet kimliği bulacaksınız. services.yml dosyanız şöyle görünecek:
services: acme.demo.service.id: class: Acme\DemoBundle\Services\DemoService arguments: [&amp;quot;@doctrine.orm.default_entity_manager&amp;quot;, &amp;quot;@cache&amp;quot;] Kontrol cihazınızda bu hizmeti kullanabilirsiniz:
$service = $this-&amp;gt;get(&#39;acme.demo.service.id&#39;); Bununla ilgili bir sorun olmasa da hizmet kimliği olarak Tam Nitelikli Sınıf Adı (FQCN) kullanabilirsiniz:
services: Acme\DemoBundle\Services\DemoService: class: Acme\DemoBundle\Services\DemoService arguments: [&amp;quot;@doctrine.</description>
    </item>
    
  </channel>
</rss>
