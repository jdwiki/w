<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>openssl Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/openssl/</link>
    <description>Recent content in openssl Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/openssl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Openssl&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/openssl/opensslyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/openssl/opensslyi-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # OpenSSL, Taşıma Katmanı Güvenliği (TLS) ve Güvenli Yuva Katmanı (SSL) protokolleri için sağlam, ticari düzeyde ve tam özellikli bir araç takımı sağlayan açık kaynaklı bir projedir. Aynı zamanda genel amaçlı bir kriptografi kütüphanesidir.
OpenSSL araç takımı, Apache tarzı bir lisans altında lisanslanmıştır; bu, temel olarak, bazı basit lisans koşullarına tabi olarak, ticari ve ticari olmayan amaçlar için alıp kullanmakta özgür olduğunuz anlamına gelir.
Openssl&amp;rsquo;yi Linux/Unix Sistemlerinde Oluşturun ve Yükleyin # Genel Bakış # Bu talimatlar, openssl&amp;rsquo;yi kaynaktan almak, oluşturmak ve kurmak içindir.</description>
    </item>
    
    <item>
      <title>Anahtarlar</title>
      <link>https://www.wikiod.com/tr/openssl/anahtarlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/openssl/anahtarlar/</guid>
      <description>Sözdizimi # EVP_PKEY *EVP_PKEY_new(void); RSA * RSA_new(void); int RSA_generate_key_ex(RSA *rsa, int bitler, BIGNUM *e, BN_GENCB *cb); int EVP_PKEY_assign_RSA(EVP_PKEY *pkey, RSA *anahtar); int PEM_write_PrivateKey(DOSYA *fp, EVP_PKEY *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u); int PEM_write_bio_PrivateKey(BIO *bp, EVP_PKEY *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u); EVP_PKEY *PEM_read_PrivateKey(DOSYA *fp, EVP_PKEY **x, pem_password_cb *cb, geçersiz *u); EVP_PKEY *PEM_read_bio_PrivateKey(BIO *bp, EVP_PKEY **x, pem_password_cb *cb, void *u); geçersiz EVP_PKEY_free(EVP_PKEY *key); RSA Anahtarı Oluştur # Bir RSA anahtarı oluşturmak için önce bir &amp;ldquo;EVP_PKEY&amp;rdquo;, EVP_PKEY_new ile tahsis edilmelidir:</description>
    </item>
    
  </channel>
</rss>
