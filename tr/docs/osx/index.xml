<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>osx Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/osx/</link>
    <description>Recent content in osx Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/osx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>osx&#39;e başlarken</title>
      <link>https://www.wikiod.com/tr/osx/osxe-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/osxe-baslarken/</guid>
      <description>Çerçevelere Genel Bakış # macOS için yazılan uygulamalar genellikle Apple&amp;rsquo;ın Çerçeveleri ile yazılır. Hemen hemen her uygulamanın kullanacağı çerçeveler şunlardır:
AppKit - UI öğeleri oluşturmak ve yönetmek için Temel - genel kullanıcı arabirimi olmayan nesneler ve işlemler için Tüm uygulamalarda olmasa da birçok uygulamada kullanılan başka ortak çerçeveler de vardır:
CoreData - veri depolama için Sevk - birden çok iş parçacığının yönetimi için CoreGraphics - grafiklerle ilgili görevleri çizmek için CoreAnimation - UI öğelerinin animasyonu için </description>
    </item>
    
    <item>
      <title>NSStoryBoard</title>
      <link>https://www.wikiod.com/tr/osx/nsstoryboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/nsstoryboard/</guid>
      <description>Yeni Bir Pencere Denetleyicisi Aç # Yeni bir pencere açmak için, aşağıdaki kodu yeni pencereye referans tutabileceğiniz bir yere ekleyin (I.E., uygulama temsilcisi).
Süratli
let storyboard:NSStoryboard = NSStoryboard(name: &amp;quot;Main&amp;quot;, bundle: nil) guard let controller:NSWindowController = storyboard.instantiateControllerWithIdentifier(&amp;quot;myWindowController&amp;quot;) as? NSWindowController else { return /*or handle error*/ } controller.showWindow(self) Amaç-C
NSStoryboard *storyBoard = [NSStoryboard storyboardWithName:@&amp;quot;Main&amp;quot; bundle:nil]; // get a reference to the storyboard myController = [storyBoard instantiateControllerWithIdentifier:@&amp;quot;secondWindowController&amp;quot;]; // instantiate your window controller [myController showWindow:self]; &amp;ldquo;Kontrolörünüzü&amp;rdquo; oluşturduktan sonra, onu işlev çağrısının dışında bir yere referans olarak sakladığınızdan emin olun.</description>
    </item>
    
    <item>
      <title>NSMenuItem</title>
      <link>https://www.wikiod.com/tr/osx/nsmenuitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/nsmenuitem/</guid>
      <description>Apple&amp;rsquo;ın Belgelerine buradan bakın: https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSMenuItem_Class/
Menü öğelerini etkinleştirme # Menü öğelerini manuel olarak etkinleştirme # Bir menü öğelerinin etkin durumunu manuel olarak kontrol etmek için, onu içeren menü, öğelerinin otomatik olarak etkinleştirilmesini devre dışı bırakmalıdır.
Menüler, otomatik etkinleştirmeyi iki yoldan biriyle kapatabilir:
Arayüz Oluşturucuda Kodda &amp;ldquo;menu.autoenablesItems = false&amp;rdquo;
Her iki mekanizma da NSMenu üzerinde autoenablesItems özelliğini ayarlar menü).
Menü, menü öğelerini etkinleştirip devre dışı bırakmadığında, menü öğeleri iki yoldan biriyle programlı olarak ayarlanabilir.</description>
    </item>
    
    <item>
      <title>NSTextView</title>
      <link>https://www.wikiod.com/tr/osx/nstextview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/nstextview/</guid>
      <description>NSTextView, Apple&amp;rsquo;ın AppKit&amp;rsquo;in metin sisteminin ana işleyicisidir. OS X (yeniden adlandırılan macOS) uygulamalarında bir metin görüntüleyici/düzenleyici alanı oluşturmak için ihtiyacınız olan her şeyi içerir.
NSTextView Oluşturma # grafiksel olarak # XCode&amp;rsquo;da Nesne Kitaplığından birini sürükleyip bırakarak basit bir NSTextView oluşturulabilir.
Bu NSTextView, metin görünümüyle dikey olarak genişleyecek şekilde otomatik olarak ayarlanan bir NSScrollView içinde bulunur. Seçenek(⌥)-sürüklendiğinde, kaydırma görünümüyle değil, metin görünümüyle bağlantı kurduğunuzdan emin olun.
programatik olarak # Programlı olarak bir NSTextView oluşturmak, daha fazla kontrol ve özelleştirme sağlar.</description>
    </item>
    
    <item>
      <title>NSRunLoop</title>
      <link>https://www.wikiod.com/tr/osx/nsrunloop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/nsrunloop/</guid>
      <description>basit arka plan programı uygulaması # Bir [arka plan süreci][1], arka planda, genellikle kullanıcı etkileşimi olmadan bir programı yürütür. Aşağıdaki örnek, bir arka plan programının nasıl oluşturulacağını ve tüm açık uygulamaları izleyen bir dinleyicinin nasıl kaydedileceğini gösterir. Ana kısım, arka plan programını başlatan NSRunLoop.mainRunLoop().run() işlev çağrısıdır.
class MyObserver: NSObject { override init() { super.init() // app listeners NSWorkspace.sharedWorkspace().notificationCenter.addObserver(self, selector: &amp;quot;SwitchedApp:&amp;quot;, name: NSWorkspaceDidActivateApplicationNotification, object: nil) } func SwitchedApp(notification: NSNotification!) { print(notification) } } let observer = MyObserver() // simply to keep the command line tool alive - as a daemon process NSRunLoop.</description>
    </item>
    
    <item>
      <title>Kullanıcıdan bir dosya isteme</title>
      <link>https://www.wikiod.com/tr/osx/kullancdan-bir-dosya-isteme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/kullancdan-bir-dosya-isteme/</guid>
      <description>NSOpenPanel, kullanıcıdan bir dosyanın açılmasını istemek için bir API sağlar. Bu menü, Aç (⌘O) menü öğesi tarafından sunulan standart kullanıcı arayüzüdür.
Dosyaları açma # Herhangi bir dosyayı açma # NSOpenPanel *openPanel = [NSOpenPanel openPanel]; [openPanel beginWithCompletionHandler:^(NSInteger result) { NSURL *url = openPanel.URL; if (result == NSFileHandlingPanelCancelButton || !url) { return; } // do something with a URL }]; Birden fazla dosyanın açılmasına izin verilmesi # NSOpenPanel *openPanel = [NSOpenPanel openPanel]; openPanel.</description>
    </item>
    
    <item>
      <title>NS Font</title>
      <link>https://www.wikiod.com/tr/osx/ns-font/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/ns-font/</guid>
      <description>NSFont, Mac uygulamalarına öncelikle görüntüleme için kullanılacak glif bilgileri ve yazı tipi özellikleri sağlayan nesnedir. NSFont nesnelerini hem yaygın hem de yaygın olmayan çeşitli şekillerde nasıl oluşturacağınızı ve kullanacağınızı öğreneceksiniz.
NSFont nesnesi oluşturma # NSFont nesnesi oluşturmanın tercih edilen ve en yaygın yolu şudur:
Amaç-C # // Name is PostScript name of font; size is in points. NSFont *essayFont = [NSFont fontWithName:@&amp;quot;Times New Roman&amp;quot; size:12.0]; </description>
    </item>
    
    <item>
      <title>Ortam değişkenlerini ayarla</title>
      <link>https://www.wikiod.com/tr/osx/ortam-degiskenlerini-ayarla/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/ortam-degiskenlerini-ayarla/</guid>
      <description>Mac OS X&amp;rsquo;te ortam değişkenlerini aşağıdaki dosyalardan birinde ayarlayabilirsiniz:
~/.bashrc
~/.bash_profile
~/.profil
Varsayılan olarak, Mac OS X&amp;rsquo;te yukarıdaki dosyalar yoktur, manuel olarak oluşturmanız gerekir.
Yol ekle # 1.vim ~/.bash_profile
Dosya mevcut olmayabilir (eğer yoksa, onu oluşturabilirsiniz).
Bunu yazın ve dosyayı kaydedin:
export PATH=$PATH:YOUR_PATH_HERE</description>
    </item>
    
    <item>
      <title>Dosya ilişkilendirme</title>
      <link>https://www.wikiod.com/tr/osx/dosya-iliskilendirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/osx/dosya-iliskilendirme/</guid>
      <description>Uygulamamı bir dosya türü için varsayılan uygulama olarak ayarla # - (NSString *) UTIforFileExtension:(NSString *) extension { NSString * UTIString = (NSString *)UTTypeCreatePreferredIdentifierForTag(kUTTagClassFilenameExtension, (CFStringRef)extension, NULL); return [UTIString autorelease]; } - (BOOL) setMyselfAsDefaultApplicationForFileExtension:(NSString *) fileExtension { OSStatus returnStatus = LSSetDefaultRoleHandlerForContentType ( (CFStringRef) [self UTIforFileExtension:fileExtension], kLSRolesAll, (CFStringRef) [[NSBundle mainBundle] bundleIdentifier] ); if (returnStatus != 0) { NSLog(@&amp;quot;Got an error when setting default application - %d&amp;quot;, returnStatus); // Please see the documentation or LSInfo.</description>
    </item>
    
  </channel>
</rss>
