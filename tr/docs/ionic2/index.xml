<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ionic2 Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/ionic2/</link>
    <description>Recent content in ionic2 Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/ionic2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ionic2&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/ionic2/ionic2yi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/ionic2yi-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # Ionic 2 her geçen gün daha iyi hale geldiğinden, en son değişiklikleri ve iyileştirmeleri takip etmek için lütfen her zaman resmi belgeleri kontrol edin.
Ön koşullar: Ionic 2 projeleri oluşturmak için NodeJS&amp;rsquo;ye ihtiyacınız olacak. Düğümü buradan indirip yükleyebilir ve npm ve Ionic 2&amp;rsquo;nin kullandığı paketler hakkında daha fazla bilgi edinebilirsiniz [buradan](http://ionicframework.com/docs/resources/using- npm/). # 1. Ionic 2&amp;rsquo;yi yükleme # Ionic 1 gibi, uygulamaları doğrudan tarayıcıda hızlı bir şekilde oluşturmak ve test etmek için Ionic CLI veya GUI&amp;rsquo;yi kullanabilirsiniz.</description>
    </item>
    
    <item>
      <title>Ionic2 CSS bileşenleri</title>
      <link>https://www.wikiod.com/tr/ionic2/ionic2-css-bilesenleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/ionic2-css-bilesenleri/</guid>
      <description>Kafes # Ionic&amp;rsquo;in ızgara sistemi, Ionic&amp;rsquo;in desteklediği tüm cihazlar tarafından desteklenen bir CSS özelliği olan flexbox&amp;rsquo;a dayanmaktadır. Izgara, ızgara, satırlar ve sütunlardan oluşan üç birimden oluşur. Sütunlar, satırlarını dolduracak şekilde genişler ve ek sütunlara uyacak şekilde yeniden boyutlandırılır.
Sınıf Genişlik genişlik-10 %10 genişlik-20 %20 genişlik-25 %25 genişlik-33 %33,3333 genişlik-50 %50 genişlik-67 66.6666% genişlik-75 %75 genişlik-80 80% genişlik-90 %90 Örnek.
&amp;lt;ion-grid&amp;gt; &amp;lt;ion-row&amp;gt; &amp;lt;ion-col width-10&amp;gt;This column will take 10% of space&amp;lt;/ion-col&amp;gt; &amp;lt;/ion-row&amp;gt; &amp;lt;/ion-grid&amp;gt; Kartlar # Kartlar, önemli içerik parçalarını görüntülemenin harika bir yoludur ve uygulamalar için temel bir tasarım modeli olarak hızla ortaya çıkmaktadır.</description>
    </item>
    
    <item>
      <title>Hizmetleri Kullanma</title>
      <link>https://www.wikiod.com/tr/ionic2/hizmetleri-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/hizmetleri-kullanma/</guid>
      <description>Paylaşılan hizmetleri kullanmayla ilgili çok önemli bir şey, paylaşılmaları gereken en üstteki bileşenin &amp;ldquo;sağlayıcılar&amp;rdquo; dizisine dahil edilmeleri gerektiğidir.
Nedenmiş? Diyelim ki, her bir &amp;lsquo;Bileşen&amp;rsquo;den &amp;lsquo;sağlayıcılar&amp;rsquo; dizisine &amp;lsquo;MyService&amp;rsquo; referansını dahil ettiğimizi varsayalım. Gibi bir şey:
@Component({ templateUrl:&amp;quot;page1.html&amp;quot;, providers: [MyService] }) Ve
@Component({ templateUrl:&amp;quot;page2.html&amp;quot;, providers: [MyService] }) Bu şekilde her bileşen için hizmetin yeni bir örneği oluşturulacaktır, böylece bir sayfanın verileri kaydedeceği örnek, verileri almak için kullanılan örnekten farklı olacaktır. Yani bu işe yaramayacak.</description>
    </item>
    
    <item>
      <title>Sekmeleri Kullanma</title>
      <link>https://www.wikiod.com/tr/ionic2/sekmeleri-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/sekmeleri-kullanma/</guid>
      <description>En son değişikliklerden ve güncellemelerden haberdar olmak için her zaman Ionic 2 Tab belgelerine bakmayı unutmayın.
Seçili sekmeyi alt Sayfadan programlı olarak değiştir # Bu working Plunker içinde tam koda göz atabilirsiniz.
Bu örnekte, sekme içindeki sayfalar (alt sayfalar) ile sekme kabı (sekmeleri tutan bileşen) arasındaki iletişimi yönetmek için paylaşılan bir hizmet kullanıyorum. Muhtemelen Events ile yapabilseniz de, paylaşılan hizmet yaklaşımını seviyorum çünkü anlaşılması daha kolay ve ayrıca uygulama başladığında kontrol edilmesi daha kolay büyüyor.</description>
    </item>
    
    <item>
      <title>modlar</title>
      <link>https://www.wikiod.com/tr/ionic2/modlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/modlar/</guid>
      <description>Oluşturmada parametrelerle modal: # Parametreleri bir kipine geçirmek, değerleri bir NavController&amp;rsquo;a nasıl ilettiğimize benzer. Bunu yapmak için, home.html&amp;rsquo;deki listemizi, bir liste öğesini tıklatırken bir modal açmak için değiştiriyoruz ve gerekli parametreleri create yöntemine ikinci bir argüman olarak iletiyoruz.
Ana Sayfa.html
&amp;lt;ion-list&amp;gt; &amp;lt;ion-item *ngFor=&amp;quot;let datum of data&amp;quot; (click)=&amp;quot;openModalwithNavParams(datum)&amp;quot;&amp;gt; &amp;lt;h1&amp;gt;{{datum.name}}&amp;lt;/h1&amp;gt; &amp;lt;/ion-item&amp;gt; &amp;lt;/ion-list&amp;gt; Home.ts
import {EditProfilePage} from &#39;../edit-profile/edit-profile&#39;; openModalwithNavParams(data){ let modalWithNavParams = this.modalCtrl.create(EditProfilePage,{Data: data}); modalWithNavParams.present(); } Diğer görünümlere benzer şekilde, önceki görünümden gönderilen verileri almak için NavParams kullanıyoruz.</description>
    </item>
    
    <item>
      <title>Angularfire2Firebase ile Sosyal Giriş</title>
      <link>https://www.wikiod.com/tr/ionic2/angularfire2firebase-ile-sosyal-giris/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/angularfire2firebase-ile-sosyal-giris/</guid>
      <description>Angularfire2/Firebase ile Yerel Facebook Girişi # app.ts
import {Component} from &#39;@angular/core&#39;; import {Platform, ionicBootstrap} from &#39;ionic-angular&#39;; import {StatusBar} from &#39;ionic-native&#39;; import {LoginPage} from &#39;./pages/login/login&#39;; import {FIREBASE_PROVIDERS, defaultFirebase, AuthMethods, AuthProviders, firebaseAuthConfig} from &#39;angularfire2&#39;; @Component({ template: &#39;&amp;lt;ion-nav [root]=&amp;quot;rootPage&amp;quot;&amp;gt;&amp;lt;/ion-nav&amp;gt;&#39; }) export class MyApp { private rootPage: any; constructor(private platform: Platform) { this.rootPage = LoginPage; platform.ready().then(() =&amp;gt; { // Okay, so the platform is ready and our plugins are available. // Here you can do any higher level native things you might need.</description>
    </item>
    
    <item>
      <title>Push bildirimi gönderildi ve alın</title>
      <link>https://www.wikiod.com/tr/ionic2/push-bildirimi-gonderildi-ve-aln/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/push-bildirimi-gonderildi-ve-aln/</guid>
      <description>Başlatma örneğinde bulunan SenderID, size google tarafından verilen bir gcm gönderen kimliğidir. Eklentiyi kurduğunuzda da mevcut olmalıdır.
ionic plugin add phonegap-plugin-push --variable SENDER_ID=&amp;quot;XXXXXXX&amp;quot; Anında iletme bildirimlerinize ek veri eklemek istiyorsanız, nasıl daha fazla yazı ekleyeceğinizi açıklayan bu bağlantıya bakın. https://github.com/phonegap/phonegap-plugin-push/blob/master/docs/TYPESCRIPT.md
Başlatma # Anında iletme bildirimi eklentisi, eklentinin sağlanan gönderen kimliğini kullanarak çalışmaya başlamasını söyleyen bir başlatma başlatma gerektirir.
let push = Push.init({ android: { senderID: &amp;quot;------------&amp;quot;, }, ios: { alert: &amp;quot;true&amp;quot;, badge: true, sound: &amp;quot;false&amp;quot;, }, windows: {}, }); Kayıt # Kayıt adımı, uygulamayı cihazın sistemine kaydeder ve bir kayıt kimliği döndürür</description>
    </item>
    
    <item>
      <title>coğrafi konum</title>
      <link>https://www.wikiod.com/tr/ionic2/cografi-konum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/cografi-konum/</guid>
      <description>Basit kullanım # &amp;ldquo;package.json&amp;rdquo; dosyanıza bağımlılıkları eklediğinizden emin olun:
{ ... &amp;quot;dependencies&amp;quot;: { ... &amp;quot;ionic-native&amp;quot;: &amp;quot;^1.3.10&amp;quot;, ... }, ... } Coğrafi konumu kullanmak için:
// custom-component.ts import {Geolocation} from &#39;ionic-native&#39;; import template from &#39;./custom-component.html&#39;; @Component({ selector: &#39;custom-component&#39;, template: template }) export class CustomComponent { constructor() { // get the geolocation through a promise Geolocation.getCurrentPosition().then((position:Geoposition)=&amp;gt; { console.log( position.coords.latitude, position.coords.longitude); }); } } Pozisyonu izlemek # Daha gerçek zamanlı bir çözüm için Geolocation&amp;rsquo;da bir hata veya konum değişikliği meydana geldiğinde bildirimde bulunan watchPosition işlevini kullanabilirsiniz.</description>
    </item>
    
    <item>
      <title>&lt;ion-list&gt; kullanımdan kaldırılmasında &#39;göster-sil&#39; için geçici çözüm</title>
      <link>https://www.wikiod.com/tr/ionic2/ion-list-kullanmdan-kaldrlmasnda-goster-sil-icin-gecici-cozum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/ion-list-kullanmdan-kaldrlmasnda-goster-sil-icin-gecici-cozum/</guid>
      <description>Çözüm # Angular 2 ile ionic 2 kullanarak bir mobil uygulama geliştiriyorum.
İyon listesiyle doldurulmuş iyon öğelerim var. Bu iyon öğesinin, iyonik web sitesinde burada sunulduğu gibi gerektiğinde silinebilme yeteneğine sahip olmasını istiyorum.
Bununla birlikte, ilk sürümden bu yana ionic 2&amp;lsquo;de çok şey değişti ve yukarıdaki tüm ion-item öğelerini tek seferde açan tek düğme stili, göster-sil ve show-reorder artık desteklenmiyor. Mevcut tek seçenek, bize sil düğmesini ortaya çıkarmak için her bir öğeyi birer birer kaydırma yeteneği veren iyon öğesi olarak iyon-öğe-kaydırma&amp;lsquo;ya sahip olmaktır.</description>
    </item>
    
    <item>
      <title>Birim Testi</title>
      <link>https://www.wikiod.com/tr/ionic2/birim-testi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ionic2/birim-testi/</guid>
      <description>Genel olarak Birim Testi, özellikleri değiştirirken/eklerken sorunları önlemek için bir ürüne ek güvenlik sağlar. &amp;ldquo;HER ŞEY HALA ÇALIŞIYOR&amp;rdquo; yazan bir güvenlik ağı. Birim Testleri, uygun bir QA&amp;rsquo;nın yapabileceği gerçek kullanıcı testlerinin hiçbir şekilde yerini almaz.
Bu belgede örnekleri bu depoya dayandıracağız: https://github.com/driftyco/ionic-unit-testing-example
Karma/Yasemin ile Birim Testleri # İyonikte birim testi, herhangi bir açısal uygulamadakiyle aynıdır.
Bunu yapmak için birkaç çerçeve kullanacağız.
Karma - testleri çalıştırmak için bir çerçeve
Yasemin - testler yazmak için bir çerçeve</description>
    </item>
    
  </channel>
</rss>
