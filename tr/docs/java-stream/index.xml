<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java akışı Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/java-stream/</link>
    <description>Recent content in java akışı Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/java-stream/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java akışına başlarken</title>
      <link>https://www.wikiod.com/tr/java-stream/java-aksna-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/java-stream/java-aksna-baslarken/</guid>
      <description>Kurulum veya Kurulum # Java akışını kurma veya yükleme hakkında ayrıntılı talimatlar.
Android Studio kullanarak Android&amp;rsquo;de Java Stream Api (Java 8) ile çalışma # Gradle Kurulumu:
build.gradle(Modül: uygulama)
compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } jackOptions { enabled true } Akış API&amp;rsquo;si nedir?
Akış, Java 8&amp;rsquo;de tanıtılan yeni bir soyut katmandır. Akış, akış kaynağından gelen bir dizi öğedir (nesneler, ilkel türler). Bu nedenle akış bir veri yapısı değildir ve birlikte çalıştığı öğeleri saklamaz.</description>
    </item>
    
    <item>
      <title>Java 8 – Haritayı Listeye Dönüştür</title>
      <link>https://www.wikiod.com/tr/java-stream/java-8--haritay-listeye-donustur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/java-stream/java-8--haritay-listeye-donustur/</guid>
      <description>Akış API&amp;rsquo;sini kullanarak Haritayı Java 8&amp;rsquo;de Listeye Dönüştür
Java 8 – Haritayı Listeye Dönüştür # public class ConvertMapToList { public static void main(String[] args) { Map&amp;lt;Integer, String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); map.put(10, &amp;quot;apple&amp;quot;); map.put(20, &amp;quot;orange&amp;quot;); map.put(30, &amp;quot;banana&amp;quot;); map.put(40, &amp;quot;watermelon&amp;quot;); map.put(50, &amp;quot;dragonfruit&amp;quot;); System.out.println(&amp;quot;\n1. Export Map Key as List of Integrer method 1&amp;quot;); List&amp;lt;Integer&amp;gt; methodOneIntegers= map.entrySet().stream() .map(x -&amp;gt; x.getKey()) .collect(Collectors.toList()); methodOneIntegers.forEach(System.out::println); System.out.println(&amp;quot;\n1. Export Map Key as List of Integrer method 2&amp;quot;); List&amp;lt;Integer&amp;gt; methodTwoIntegers= map.</description>
    </item>
    
  </channel>
</rss>
