<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>büyük-o Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/big-o/</link>
    <description>Recent content in büyük-o Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/big-o/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Big-o ile başlarken</title>
      <link>https://www.wikiod.com/tr/big-o/big-o-ile-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/big-o/big-o-ile-baslarken/</guid>
      <description>Big-O Notasyonu nedir? # Big-O notasyonu, fonksiyonların uzun vadeli büyüme oranları hakkında konuşmak için kullanılan bir notasyondur. Bir algoritmanın çalışma zamanı veya uzay karmaşıklığı gibi ilgili kavramlar hakkında konuşmak için genellikle algoritmaların analizinde kullanılır.
Yaygın kullanımda, bir algoritmanın çalışma zamanının girdi boyutu olarak nasıl ölçeklendiği hakkında konuşmak için büyük-O notasyonu kullanılır. Örneğin, çalışma zamanı sıralanacak dizinin boyutunun bir fonksiyonu olarak ikinci dereceden büyüdüğü için, seçim sıralamasının çalışma zamanının O(n2) olduğunu söyleyebiliriz.</description>
    </item>
    
    <item>
      <title>Big-O&#39;yu Hesaplamak</title>
      <link>https://www.wikiod.com/tr/big-o/big-oyu-hesaplamak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/big-o/big-oyu-hesaplamak/</guid>
      <description>O(n) işlevleri. # O(n) olan işlevler, girdi çok büyüdükçe işlem sayısını doğrusal olarak artırır. O(n) işlevine basit bir örnek, girdi boyutu için bir kez çalışan doğrusal arama algoritmasıdır.
Aşağıdaki sözde kod &amp;lsquo;O(n)&amp;rsquo; olacaktır, çünkü algoritma hiçbir zaman giriş boyutundan daha fazla kez çalışmayacağından, her zaman giriş boyutuyla yukarıda sınırlandırılacaktır.
function LinearSearch (SearchArray, SearchFor) for each element in SearchArray if the element is SearchFor return the index of element </description>
    </item>
    
  </channel>
</rss>
