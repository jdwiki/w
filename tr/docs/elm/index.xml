<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Karaağaç Dili Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/elm/</link>
    <description>Recent content in Karaağaç Dili Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/elm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elm Dilini kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/elm/elm-dilini-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/elm-dilini-kullanmaya-baslama/</guid>
      <description>Kurulum # Elm ile geliştirmeye başlamak için elm-platform adlı bir dizi araç yüklemeniz gerekir.
Şunları içerir: elm-make, elm-reactor, elm-repl ve elm-package.
Bu araçların tümüne CLI üzerinden erişilebilir, yani bunları terminalinizden kullanabilirsiniz.
Elm&amp;rsquo;i yüklemek için aşağıdaki yöntemlerden birini seçin:
Yükleyiciyi kullanma # Yükleyiciyi resmi web sitesinden indirin ve kurulum sihirbazını takip edin.
npm&amp;rsquo;yi kullanma # Elm platformunu kurmak için Düğüm Paket Yöneticisi&amp;rsquo;ni kullanabilirsiniz.
Küresel kurulum:
$ npm install elm -g Yerel kurulum:</description>
    </item>
    
    <item>
      <title>Bağlantı noktaları (JS birlikte çalışması)</title>
      <link>https://www.wikiod.com/tr/elm/baglant-noktalar-js-birlikte-calsmas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/baglant-noktalar-js-birlikte-calsmas/</guid>
      <description>Sözdizimi # Karaağaç (alma): port functionName : (değer -&amp;gt; mesaj) -&amp;gt; Alt mesaj JS (gönderme): app.ports.functionName.send(değer) Karaağaç (gönderme): port functionName : args -&amp;gt; Cmd msg JS (alma): app.ports.functionName.subscribe(function(args) { &amp;hellip; }); Bu örnekleri anlamanıza yardımcı olması için The Elm Guide&amp;lsquo;dan http://guide.elm-lang.org/interop/javascript.html&amp;rsquo;ye bakın.
Dışa dönük # Giden bağlantı noktaları, &amp;ldquo;güncelleme&amp;rdquo; işlevinizden döndürdüğünüz Komutlar olarak kullanılır.
Karaağaç tarafı # Giden bağlantı noktasını tanımlayın:
port output : () -&amp;gt; Cmd msg Bu örnekte, yalnızca JavaScript tarafında bir aboneliği tetiklemek için boş bir Tuple gönderiyoruz.</description>
    </item>
    
    <item>
      <title>Karaağaç Mimarisi</title>
      <link>https://www.wikiod.com/tr/elm/karaagac-mimarisi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/karaagac-mimarisi/</guid>
      <description>Uygulamalarınızı yapılandırmanın önerilen yolu &amp;lsquo;Elm Mimarisi&amp;rsquo; olarak adlandırılır.
En basit program, güncellenebilecek tüm verileri depolayan bir &amp;ldquo;model&amp;rdquo; kaydından, programınızın bu verileri güncelleme yollarını tanımlayan bir &amp;ldquo;Msg&amp;rdquo; birleşim türünden, modeli alan bir &amp;ldquo;güncelleme&amp;rdquo; işlevinden ve bir &amp;ldquo;Mesaj&amp;rdquo; döndüren bir işlevden oluşur. yeni model ve bir model alan ve sayfanızın göstereceği HTML&amp;rsquo;yi döndüren bir işlev &amp;lsquo;görünüm&amp;rsquo;. Bir işlev bir &amp;ldquo;Msg&amp;rdquo; döndürdüğünde, Elm çalışma zamanı onu sayfayı güncellemek için kullanır.
Bayraklı Program # &amp;ldquo;programWithFlags&amp;quot;ın &amp;ldquo;program&amp;quot;dan yalnızca bir farkı vardır.</description>
    </item>
    
    <item>
      <title>Listeler ve Yineleme</title>
      <link>https://www.wikiod.com/tr/elm/listeler-ve-yineleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/listeler-ve-yineleme/</guid>
      <description>&amp;ldquo;Liste&amp;rdquo; (bağlantılı liste) sıralı erişim ile öne çıkıyor:
ilk öğeye erişim listenin önüne hazırlanıyor listenin önünden silme Öte yandan, rastgele erişim (yani n&amp;rsquo;inci öğeyi alma) ve ters sırada geçiş için ideal değildir ve &amp;lsquo;Dizi&amp;rsquo; veri yapısıyla daha iyi şansınız (ve performansınız) olabilir.
Aralığa göre liste oluşturma # 0.18.0 tarihinden önce aşağıdaki gibi aralıklar oluşturabilirsiniz:
&amp;gt; range = [1..5] [1,2,3,4,5] : List number &amp;gt; &amp;gt; negative = [-5..3] [-5,-4,-3,-2,-1,0,1,2,3] : List number son sürüm 0.</description>
    </item>
    
    <item>
      <title>hata ayıklama</title>
      <link>https://www.wikiod.com/tr/elm/hata-ayklama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/hata-ayklama/</guid>
      <description>Sözdizimi # Debug.log anyValue &amp;ldquo;etiket&amp;rdquo; &amp;ldquo;Debug.log&amp;rdquo; iki parametre alır, konsoldaki hata ayıklama çıktısını etiketlemek için bir &amp;ldquo;Dize&amp;rdquo; (böylece nereden geldiğini/mesajın neye karşılık geldiğini bilirsiniz) ve herhangi bir türden bir değer. &amp;ldquo;Debug.log&amp;rdquo;, etiketi ve değeri JavaScript konsoluna kaydetmenin yan etkisini yürütür ve ardından değeri döndürür. JS&amp;rsquo;deki uygulama şöyle görünebilir:
function log (tag, value){ console.log(tag, value); return value } JavaScript&amp;rsquo;in örtük dönüşümleri vardır, bu nedenle yukarıdaki kodun çalışması için &amp;ldquo;değer&amp;quot;in açıkça &amp;ldquo;Dize&amp;quot;ye dönüştürülmesi gerekmez.</description>
    </item>
    
    <item>
      <title>Türler, Tür Değişkenleri ve Tür Oluşturucular</title>
      <link>https://www.wikiod.com/tr/elm/turler-tur-degiskenleri-ve-tur-olusturucular/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/turler-tur-degiskenleri-ve-tur-olusturucular/</guid>
      <description>Lütfen gerçekten ustalaşmak için bu kavramlarla kendiniz oynayın! &amp;rsquo;elm-repl&amp;rsquo; (bkz. REPL&amp;rsquo;ye Giriş) yukarıdaki kodla oynamak için iyi bir yerdir. Ayrıca elm-repl çevrim içi ile de oynayabilirsiniz.
Yeni Tipler Kullanarak Tip Güvenliğini İyileştirme # Örtüşme türleri, standart metni azaltır ve okunabilirliği artırır, ancak diğer ad türünün kendisinden daha güvenli değildir. Aşağıdakileri göz önünde bulundur:
type alias Email = String type alias Name = String someEmail = &amp;quot;holmes@private.com&amp;quot; someName = &amp;quot;Benedict&amp;quot; sendEmail : Email -&amp;gt; Cmd msg sendEmail email = .</description>
    </item>
    
    <item>
      <title>Fonksiyonlar ve Kısmi Uygulama</title>
      <link>https://www.wikiod.com/tr/elm/fonksiyonlar-ve-ksmi-uygulama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/fonksiyonlar-ve-ksmi-uygulama/</guid>
      <description>Sözdizimi # &amp;ndash; argümansız bir fonksiyon tanımlamak, basitçe bir değer tanımlamakla aynı görünüyor dil = &amp;ldquo;Karaağaç&amp;rdquo; &amp;ndash; bağımsız değişkeni olmayan bir işlevi adını belirterek çağırmak dil &amp;ndash; parametreler boşluklarla ayrılır ve işlevin adını takip eder x y = x + y ekleyin &amp;ndash; aynı şekilde bir işlevi çağırın 5 2 ekle &amp;ndash; sadece bazı parametrelerini sağlayarak bir işlevi kısmen uygular artış = 1 ekle &amp;ndash; soldaki ifadeyi sağdaki fonksiyona geçirmek için |&amp;gt; operatörünü kullanın on = 9 |&amp;gt; artış &amp;ndash; &amp;lt;| operatör sağdaki ifadeyi soldaki fonksiyona geçirir artış &amp;lt;| 5 4 ekle &amp;ndash; &amp;raquo; operatörüyle birlikte iki işlevi zincirleme/oluşturma tersYell = String.</description>
    </item>
    
    <item>
      <title>Json.Decode</title>
      <link>https://www.wikiod.com/tr/elm/jsondecode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/jsondecode/</guid>
      <description>&amp;ldquo;Json.Decode&amp;rdquo;, bir yükün kodunu çözmek için iki işlev sunar; birincisi, bir &amp;ldquo;Json.Encode.Value&amp;rdquo; kodunu çözmeye çalışan &amp;ldquo;decodeValue&amp;rdquo;, ikincisi ise bir JSON dizesinin kodunu çözmeye çalışan &amp;ldquo;decodeString&amp;quot;dir. Her iki işlev de 2 parametre alır, bir kod çözücü ve bir &amp;ldquo;Json.Encode.Value&amp;rdquo; veya Json dizesi.
Bir alanın kodunu önceden çözün ve kodu çözülen değere bağlı olarak geri kalanını çözün # Aşağıdaki örnekler https://ellie-app.com/m9vmQ8NcMc/0 adresinde test edilebilir.
import Html exposing (..) import Json.Decode payload = &amp;quot;&amp;quot;&amp;quot; [ { &amp;quot;bark&amp;quot;: true, &amp;quot;tag&amp;quot;: &amp;quot;dog&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Zap&amp;quot;, &amp;quot;playful&amp;quot;: true } , { &amp;quot;whiskers&amp;quot;: true, &amp;quot;tag&amp;quot; : &amp;quot;cat&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Felix&amp;quot; } , {&amp;quot;color&amp;quot;: &amp;quot;red&amp;quot;, &amp;quot;tag&amp;quot;: &amp;quot;tomato&amp;quot;} ] &amp;quot;&amp;quot;&amp;quot; -- OUR MODELS type alias Dog = { bark: Bool , name: String , playful: Bool } type alias Cat = { whiskers: Bool , name: String } -- OUR DIFFERENT ANIMALS type Animal = DogAnimal Dog | CatAnimal Cat | NoAnimal main = Json.</description>
    </item>
    
    <item>
      <title>Veri Grupları, Kayıtları ve Sözlükleri Toplama</title>
      <link>https://www.wikiod.com/tr/elm/veri-gruplar-kaytlar-ve-sozlukleri-toplama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/veri-gruplar-kaytlar-ve-sozlukleri-toplama/</guid>
      <description>Sözlükler # Sözlükler bir Dict çekirdek kitaplığında uygulanır.
Benzersiz anahtarları değerlere eşleyen bir sözlük. Anahtarlar herhangi biri olabilir karşılaştırılabilir tür. Buna Int, Float, Time, Char, String ve kümeler veya karşılaştırılabilir türlerin listeleri.
Ekleme, kaldırma ve sorgulama işlemlerinin tümü O(log n) zaman alır.
Tuples ve Records&amp;rsquo;tan farklı olarak, Sözlükler yapılarını değiştirebilir, yani anahtar ekleyip çıkarmak mümkündür.
Bir değeri bir anahtarla güncellemek mümkündür.
Dinamik anahtarları kullanarak bir değere erişmek veya bir değeri güncellemek de mümkündür.</description>
    </item>
    
    <item>
      <title>Desen Eşleştirme</title>
      <link>https://www.wikiod.com/tr/elm/desen-eslestirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/elm/desen-eslestirme/</guid>
      <description>Tek tip yapısı çözülmüş argüman # type ProjectIdType = ProjectId String getProject : ProjectIdType -&amp;gt; Cmd Msg getProject (ProjectId id) = Http.get &amp;lt;| &amp;quot;/projects/&amp;quot; ++ id İşlev bağımsız değişkenleri # type Dog = Dog String dogName1 dog = case dog of Dog name -&amp;gt; name dogName2 (Dog name) -&amp;gt; name &amp;ldquo;dogName1&amp;rdquo; ve &amp;ldquo;dogName2&amp;rdquo; eşdeğerdir. Bunun yalnızca tek bir kurucuya sahip ADT&amp;rsquo;ler için işe yaradığını unutmayın.
type alias Pet = { name: String , weight: Float } render : Pet -&amp;gt; String render ({name, weight} as pet) = (findPetEmoji pet) ++ &amp;quot; &amp;quot; ++ name ++ &amp;quot; weighs &amp;quot; ++ (toString weight) findPetEmoji : Pet -&amp;gt; String findPetEmoji pet = Debug.</description>
    </item>
    
  </channel>
</rss>
