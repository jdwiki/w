<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android etkinliği Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/android-activity/</link>
    <description>Recent content in android etkinliği Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/android-activity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android etkinliğine başlarken</title>
      <link>https://www.wikiod.com/tr/android-activity/android-etkinligine-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/android-activity/android-etkinligine-baslarken/</guid>
      <description>Aktivite # Etkinlik tam ekrandır. Kullanıcı arayüzü XML tabanlıdır ve
package com.example.android.activity; import android.os.Bundle; import android.app.Activity; public class MainActivity extends Activity { @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); } } NOT Aktivite, kullanılmadan önce &amp;ldquo;AndroidManifest.xml&amp;rdquo; içinde bildirilmelidir.
Örneğin:
&amp;lt;activity android:name=&amp;quot;.MainActivity&amp;quot;&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;quot;android.intent.action.MAIN&amp;quot; /&amp;gt; &amp;lt;category android:name=&amp;quot;android.intent.category.LAUNCHER&amp;quot; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/activity&amp;gt; Her aktivitenin xml formatında düzen dosyası vardır, düzenini Activity sınıfının setContentView yöntemini kullanarak dahil ederiz. Örneğin. setContentView(R.layout.activity_main)
Düzen dosyası örneği</description>
    </item>
    
    <item>
      <title>Selam Dünya</title>
      <link>https://www.wikiod.com/tr/android-activity/selam-dunya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/android-activity/selam-dunya/</guid>
      <description>onCreate() bir aktivitenin en önemli kısmıdır, aktivite mantığınızın çoğunun gittiği yerdir.
Temel Etkinlik yapısı # Activity, &amp;ldquo;Android&amp;quot;deki &amp;ldquo;UserInterface&amp;rdquo; köküdür ve kendi yaşam döngüsüne sahiptir.
MainActivity.java
public class MainActivity extends Activity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Toast.makeText(this, &amp;quot;Activity created sucessfully!&amp;quot;, Toast.LENGTH_LONG).show(); } } AndroidManifest.xml (düzenlenmelidir)
&amp;lt;manifest ... &amp;gt; &amp;lt;application ... &amp;gt; &amp;lt;activity android:name=&amp;quot;.MainActivity&amp;quot; android:theme=&amp;quot;@android:style/Theme.AppCompat&amp;quot;&amp;gt; &amp;lt;/activity&amp;gt; &amp;lt;/application&amp;gt; &amp;lt;/manifest&amp;gt; </description>
    </item>
    
    <item>
      <title>geçersiz kılma geri düğmesi</title>
      <link>https://www.wikiod.com/tr/android-activity/gecersiz-klma-geri-dugmesi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/android-activity/gecersiz-klma-geri-dugmesi/</guid>
      <description>Uygulamayı kapatmak için iki kez geri dönün # Birçok uygulamanın, uygulamadan çıkmak için çift geri tıklama işlevine sahip olduğunu fark etmiş olabilirsiniz. Bu örnekte, &amp;lsquo;onBackPressed()&amp;rsquo; yöntemini geçersiz kılmayı kullanarak varsayılan geri düğmesi eylemini geçersiz kılıyoruz.
Bu yöntem, tek geri tıklama eylemi için bir mesaj &amp;rsquo;toast&amp;rsquo; edecek ve kullanıcı iki saniye içinde geri düğmesine iki kez tıklarsa uygulamayı kapatacaktır. İki saniyelik aralığa dayanan işlevsellik için bir İşleyici kullanıyoruz.
boolean singleBack = false; @Override public void onBackPressed() { if (singleBack) { super.</description>
    </item>
    
  </channel>
</rss>
