<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws-lambda Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/aws-lambda/</link>
    <description>Recent content in aws-lambda Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/aws-lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>aws-lambda&#39;yı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/aws-lambda/aws-lambday-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/aws-lambda/aws-lambday-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # AWS Konsolunuzda oturum açın ve altındaki Lambda&amp;lsquo;ya tıklayın. Services tab.
İşlevler altında, aynı etiketli düğmeyi kullanarak Lambda işlevi oluşturabileceksiniz. Bir plan seçebileceğiniz bir ekran gösterilecektir. Bunlar, Lambda&amp;rsquo;yı hızlı bir şekilde başlatmak için mevcut Lambda işlevlerine yönelik basit başlangıç ​​noktalarıdır. Bir sonraki ekranda, bu Lambda işlevini &amp;ldquo;ayarlamak&amp;rdquo; için kullanmak istediğiniz tetikleyicileri yapılandırabilirsiniz. Oluşturacağınız işlevi başlatmak için tetikleyici olmaması (daha sonra görevinize bağlı olarak manuel kurulum yoluyla), API Ağ Geçidi (sunucusuz bir REST istemcisi oluşturmak için), Alexa Becerileri veya diğer birçok seçenek arasından seçim yapabilirsiniz.</description>
    </item>
    
    <item>
      <title>Yerel bir makinede aws-lambda(C#) nasıl geliştirilir</title>
      <link>https://www.wikiod.com/tr/aws-lambda/yerel-bir-makinede-aws-lambdac-nasl-gelistirilir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/aws-lambda/yerel-bir-makinede-aws-lambdac-nasl-gelistirilir/</guid>
      <description>Sunucusuz hareketinin bir parçası olarak, AWS kısa süre önce AWS Lambda işlevleri için C# desteğini duyurdu. Bu yazımda size Visual Studio 2015 kullanarak basit bir C# AWS Lambda Function nasıl geliştireceğinizi, kuracağınızı ve çağıracağınızı göstereceğim.
Bu örneğe başlamadan önce, ilk olarak bu belgenin Açıklamalar bölümüne gidin ve gerekli tüm bileşenlerin kurulu olduğundan emin olun.
Gerekli Bileşenleri Yükleyin # Bu yazının yazıldığı tarihte (Ocak 2017), aşağıdaki bileşenlerin bu sırayla makinenize yüklenmesi gerekecektir.</description>
    </item>
    
    <item>
      <title>Sunucusuz Çerçeve</title>
      <link>https://www.wikiod.com/tr/aws-lambda/sunucusuz-cerceve/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/aws-lambda/sunucusuz-cerceve/</guid>
      <description>AWS Lambda ve daha fazlasında sunucusuz mimarileri kolayca oluşturmaya yönelik açık kaynaklı uygulama çerçevesi. Bu bölüm, ilgili örneklerle uygulama geliştirme için sunucusuz çerçevenin nasıl kurulacağını içerir.
&amp;ldquo;Sunucusuz&amp;rdquo; bir çerçevedir: https://serverless.com/
Basit CRUD İşlemi Oluşturun # Sunucusuz Çerçeveyi Kullanarak basit CRUD İşlemi Oluşturun
Sunucusuz çerçeveyi global olarak kurun npm install serverless -g Basit Lambda Hizmeti oluşturun serverless create --template aws-nodejs --path myService İçermesi gereken myService Dizinine gidin
sunucusuz.yml işleyici.js olay.json Tüm Sunucusuz hizmet yapılandırması serverless.</description>
    </item>
    
    <item>
      <title>Python kullanarak AWS Lambda</title>
      <link>https://www.wikiod.com/tr/aws-lambda/python-kullanarak-aws-lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/aws-lambda/python-kullanarak-aws-lambda/</guid>
      <description>Merhaba Dünya - Lambda İşlevi # Bu, en basit lambda işlevlerinden biridir. Merhaba Dünya programına eşdeğerdir. İlk programınızı oluşturmak için aşağıda belirtilen adımları izleyin.
AWS Konsolunda oturum açın Hesaplamanın altında Lambda&amp;rsquo;yı tıklayın Bir Lambda İşlevi oluştur &amp;rsquo;e tıklayın Plan seçme bölümünü atlayın Tetik yapılandırmasında noktalı dikdörtgene tıklayın API Ağ Geçidini Seçin Gerekli bilgileri görseldeki gibi doldurunuz. API Adı, oluşturacağınız API&amp;rsquo;nizin adıdır. Kaynak Modeli, Lambda işlevinizi çağırabileceğiniz URL yoludur. Gerekli http yöntemini seçin.</description>
    </item>
    
    <item>
      <title>S3 tarafından tetiklenen aws-lambda</title>
      <link>https://www.wikiod.com/tr/aws-lambda/s3-tarafndan-tetiklenen-aws-lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/aws-lambda/s3-tarafndan-tetiklenen-aws-lambda/</guid>
      <description>Sözdizimi # Seri durumdan çıkarılmış JSON tabanlı nesne &amp;ldquo;Kayıtlar&amp;rdquo; anahtarında bir veya daha fazla gerçek olay var Her alt olay nesnesi, neyin değiştiğini belirlemek için ihtiyacınız olan tüm bilgileri içerir Parametreler # parametre Ayrıntılar Kayıtlar -&amp;gt; [] -&amp;gt; s3 -&amp;gt; kova -&amp;gt; ad S3 paketinin adı Kayıtlar -&amp;gt; [] -&amp;gt; s3 -&amp;gt; nesne -&amp;gt; anahtar Dosyanın yolu ve adı. Dosya adları # Çoğu dosya yolunun aksine, S3 anahtar adı (JSON Şeması: $.</description>
    </item>
    
    <item>
      <title>S3 ile AWS Lambda</title>
      <link>https://www.wikiod.com/tr/aws-lambda/s3-ile-aws-lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/aws-lambda/s3-ile-aws-lambda/</guid>
      <description>Lambda geliştiricileri, diğer AWS kaynaklarının kullanılmasını gerektiren sorunları ele alacaktır. Bu konu, statik dosyaları ve diğer yapılandırmaları depolamak için yaygın olarak kullanılacak olan S3&amp;rsquo;e (Basit Depolama Hizmeti) odaklanmaktadır. Bu belge, lambda&amp;rsquo;da AWS-SDK kullanmayı, Lambda&amp;rsquo;dan S3&amp;rsquo;teki dosyalara erişmeyi ve bir S3 olayı tetiklendiğinde Lambda işlevlerini tetiklemeyi ele alacaktır.
Kopya kağıdı # javascript için AWS-SDK Lambda, global olarak aws-sdk (https://aws.amazon.com/sdk-for-node-js/) içerir, dolayısıyla bu düğüm modülünü zip&#39;e yüklemeye gerek yoktur. const AWS = require(&#39;aws-sdk&#39;); Örnek işlev module.</description>
    </item>
    
    <item>
      <title>alexa-beceri-kiti</title>
      <link>https://www.wikiod.com/tr/aws-lambda/alexa-beceri-kiti/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/aws-lambda/alexa-beceri-kiti/</guid>
      <description>Blueprint Kullanarak Alexa Beceri Kiti Oluşturun # AWS Management Console&amp;rsquo;da oturum açın ve AWS Lambda&amp;rsquo;ya gidin.
Yeni fonksiyon oluştur&amp;rsquo;a tıklayın, ardından bu pencereyi göreceksiniz.
Çalışma zamanı ortamını seçin, ancak planı (örnek kod) yalnızca node.js ve python için seçin
Alexa skill kiti için iki örnek conation vardır. Bunları filtreleyebilirsiniz.
Bu mavi baskılardan birini seçerek. Tetikleyicileri yapılandır penceresini yanında gerekli alanları doldurarak görüntüleyebilirsiniz. İşlevi yapılandır penceresinde lambda işleviniz için bir ad ekleyebilir ve işlevin yürütülmesi için rol eklemeniz gerekir.</description>
    </item>
    
  </channel>
</rss>
