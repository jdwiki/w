<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sbt Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/sbt/</link>
    <description>Recent content in sbt Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/sbt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>sbt&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/sbt/sbtye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sbt/sbtye-baslarken/</guid>
      <description>SBT&amp;rsquo;yi Linux&amp;rsquo;a yükleyin # Tam talimatlar [burada [1] bulunabilir].
[JDK&amp;rsquo;yı yükleyin][2].
Java Ortamı değişkenini ayarlayın.
export JAVA_HOME=/usr/local/java/jdk1.8.0_102 echo $JAVA_HOME /usr/local/java/jdk1.8.0_102 export PATH=$PATH:$JAVA_HOME/bin/ echo $PATH ...:/usr/local/java/jdk1.8.0_102/bin/ Scala&amp;rsquo;yı yükleyin.
sudo wget http://www.scala-lang.org/files/archive/scala-2.11.8.deb sudo dpkg -i scala-2.11.8.deb sudo apt-get update sudo apt-get install scala SBT&amp;rsquo;yi kurun.
wget https://bintray.com/artifact/download/sbt/debian/sbt-0.13.9.deb sudo dpkg -i sbt-0.13.9.deb sudo apt-get update sudo apt-get install sbt RPM tabanlı Linux Dağıtımları # SBT veri havuzu tanımlarını indirin ve YUM&amp;rsquo;a ekleyin: kıvrılma https://bintray.</description>
    </item>
    
    <item>
      <title>bağımlılıklar</title>
      <link>https://www.wikiod.com/tr/sbt/bagmllklar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sbt/bagmllklar/</guid>
      <description>Yönetilen Kitaplık Bağımlılığı Ekle # &amp;rsquo;libraryDependency&amp;rsquo;, sağlanan sürümlerle eşleşen, otomatik olarak indirilen bağımlılıklar olan &amp;lsquo;yönetilen&amp;rsquo; kitaplık bağımlılıklarını işleyen &amp;lsquo;SettingKey&amp;rsquo;dir. Tek bir bağımlılık eklemek için:
libraryDependencies += &amp;quot;com.typesafe.slick&amp;quot; %% &amp;quot;slick&amp;quot; % &amp;quot;3.2.0-M1&amp;quot; İlk kısım olan &amp;quot;com.typesafe.slick&amp;quot;, kitaplık paketini gösterir. İkinci kısım olan &amp;quot;kaygan&amp;quot;, söz konusu kütüphanedir. Son kısım olan &amp;quot;3.2.0-M1&amp;quot;, sürümdür. Kitaplığa %% ile katıldığından, scalaVersion ayar anahtarı tarafından sağlanan Scala sürümü kullanılacaktır.
++= kullanarak aynı anda birden çok kitaplık ekleyebilirsiniz:</description>
    </item>
    
    <item>
      <title>Derlemeye Genel Bakış</title>
      <link>https://www.wikiod.com/tr/sbt/derlemeye-genel-baks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sbt/derlemeye-genel-baks/</guid>
      <description>Resmi belgeler www.scala-sbt.org adresindedir.
Dizin Yapısı # SBT tarafından inşa edilen bir proje için standart yapı:
projectName/ build.sbt project/ &amp;lt;SBT sub-build information&amp;gt; src/ main/ scala/ &amp;lt;Scala source files&amp;gt; java/ &amp;lt;Java source files&amp;gt; resources/ &amp;lt;Resource files&amp;gt; test/ scala/ &amp;lt;Scala test files&amp;gt; java/ &amp;lt;Java test files&amp;gt; resources/ &amp;lt;Resource files&amp;gt; Başka dizinler de olabilir, ancak yapı öncelikle bunlarla ilgilenir. Temel dizinde build.sbt yer alır ve içeriği en az aşağıdaki gibidir:
name := &amp;lt;yapının adı&amp;gt;: Bu, projenin adıdır.</description>
    </item>
    
    <item>
      <title>Projeler</title>
      <link>https://www.wikiod.com/tr/sbt/projeler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sbt/projeler/</guid>
      <description>Aynı Yapıda Birden Çok Proje (Alt Projeler) # Bazen bir yapı, her biri kendi &amp;lsquo;projesi&amp;rsquo; olan birden çok kaynak dizini birleştirir. Örneğin, şöyle bir yapı yapınız olabilir:
proje Adı/ build.sbt project/ src/ main/ &amp;hellip; test/ &amp;hellip; core/ src/ main/ &amp;hellip; test/ &amp;hellip; webapp/ src/ main/ &amp;hellip; test/ &amp;hellip;
Yukarıdaki projede, &amp;lsquo;projectName/src&amp;rsquo; içindeki kod &amp;lsquo;root&amp;rsquo; projesi olarak kabul edilir. Diğer iki modül veya &amp;lsquo;alt proje&amp;rsquo;, &amp;lsquo;çekirdek&amp;rsquo; ve &amp;lsquo;webapp&amp;rsquo; vardır.
Bir alt projeyi yapılandırmak, projede alt dizinin belirtilmesi dışında kök projeyi yapılandırmaya benzer.</description>
    </item>
    
    <item>
      <title>Görevler</title>
      <link>https://www.wikiod.com/tr/sbt/gorevler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sbt/gorevler/</guid>
      <description>Basit Bir Görev Oluşturun # Bir görevi tanımlamak için gereken tek şey, türünün bildirimi ve açıklamasıdır:
lazy val exampleTask = taskKey[Unit](&amp;quot;An example task that will return no value.&amp;quot;) Tür &amp;ldquo;Birim&amp;rdquo; olduğundan, bu görev tamamen yan etkilerden oluşur. Bir kez tanımlandıktan sonra, eylemleri uygulamak için:
exampleTask := { val s: TaskStreams = streams.value s.log.info(&amp;quot;The example task was executed.&amp;quot;) } Bunlar build.sbt içinde tanımlanmışsa, projeyi yükleyebilir ve yürütebilirsiniz:
&amp;gt; exampleTask [info] The example task was executed.</description>
    </item>
    
    <item>
      <title>Günlük geliştirmeye başlarken</title>
      <link>https://www.wikiod.com/tr/sbt/gunluk-gelistirmeye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/sbt/gunluk-gelistirmeye-baslarken/</guid>
      <description>Scala ile günlük sürekli geliştirme örneği # # install sbt with homebrew (if you didn&#39;t) brew install sbt # - create a new scala project # - name your project name when asked like: hello-world sbt new sbt/scala-seed.g8 # go to the new project directory that you named cd hello-world # run sbt to open the sbt shell sbt # run your project in continuous running mode ~ run # to continuously see the test outputs # open up a new terminal tab, run sbt, type: ~ test # to continuously compile # open up a new terminal tab, run sbt, type: ~ compile ~ sbt&amp;rsquo;de yukarıda görüldüğü gibi sürekli işlemler için kullanılır.</description>
    </item>
    
  </channel>
</rss>
