<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>arduino Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/arduino/</link>
    <description>Recent content in arduino Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/arduino/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>arduino&#39;ya başlarken</title>
      <link>https://www.wikiod.com/tr/arduino/arduinoya-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/arduinoya-baslarken/</guid>
      <description>Sadece Minimum # İşte &amp;lsquo;çıplak minimum&amp;rsquo; Arduino taslağı. Bu, File &amp;gt; Samples &amp;gt; 01. Basics &amp;gt; Bare Minimum seçilerek Arduino IDE&amp;rsquo;ye yüklenebilir.
void setup() { // put your setup code here, to run once } void loop() { // put your main code here, to run repeatedly } setup() işlevindeki kod, program başladığında bir kez çalıştırılacaktır. Bu, G/Ç pinlerini ayarlamak, değişkenleri başlatmak vb. için kullanışlıdır. loop() fonksiyonundaki kod, Arduino kapatılana veya yeni bir program yüklenene kadar tekrar tekrar çalışacaktır.</description>
    </item>
    
    <item>
      <title>PWM - Darbe Genişlik Modülasyonu</title>
      <link>https://www.wikiod.com/tr/arduino/pwm---darbe-genislik-modulasyonu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/pwm---darbe-genislik-modulasyonu/</guid>
      <description>PWM kullanarak Seri bağlantı noktası üzerinden bir DC motoru kontrol edin # Bu örnekte en yaygın görevlerden birini gerçekleştirmeyi hedefliyoruz: Küçük bir DC motorum var, onu kontrol etmek için Arduino&amp;rsquo;mu nasıl kullanırım? analogWrite() işlevini kullanarak PWM ve seri iletişim ile kolay ve Seri kitaplığı.
Temeller # Darbe Genişliği Modülasyonu veya kısaca PWM, dijital çıkış kullanarak analog sinyalleri taklit etmek için kullanılan bir tekniktir. Bu nasıl çalışıyor? Her periyotta yüksek seviyedeki zaman (dijital 1, genellikle 5V) ile düşük seviyedeki zaman (dijital 0, 0V) arasındaki D (görev döngüsü) ilişkisi bu iki seviye arasında bir ortalama voltaj üretmek için değiştirilebilir bir darbe dizisi kullanarak:</description>
    </item>
    
    <item>
      <title>Arduino&#39;yu Atmel Studio 7 ile Kullanmak</title>
      <link>https://www.wikiod.com/tr/arduino/arduinoyu-atmel-studio-7-ile-kullanmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/arduinoyu-atmel-studio-7-ile-kullanmak/</guid>
      <description>Kurmak # Atmel Studio 7&amp;rsquo;yi buradan indirip yükleyin. Bir hata ayıklayıcı satın alın. Bir ISP programcısı ile idare edebilirsiniz, ancak Atmel Studio kullanmanın en büyük avantajlarından biri olan hata ayıklama yetenekleri istiyorsanız, bir hata ayıklayıcı isteyeceksiniz. AVR tabanlı arduinolar (Uno, pro mini, vb. gibi) ve Zero ve Due gibi ARM tabanlı Arduino&amp;rsquo;lar için hata ayıklama yetenekleri sağladığı için Atmel ICE&amp;lsquo;yi öneririm. Bütçeniz kısıtlıysa, plastik kasa olmadan alabilirsiniz ve şok etme yapmamaya dikkat edin.</description>
    </item>
    
    <item>
      <title>SPI İletişimi</title>
      <link>https://www.wikiod.com/tr/arduino/spi-iletisimi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/spi-iletisimi/</guid>
      <description>Çip seçme sinyalleri # Çoğu bağımlı, aktif bir düşük çip seçme girişine sahiptir. Bir çip seçme pinini başlatmak ve kullanmak için uygun kod şudur:
#define CSPIN 1 // or whatever else your CS pin is // init: pinMode(CSPIN, OUTPUT); digitalWrite(CSPIN, 1); // deselect // use: digitalWrite(CSPIN, 0); // select ... perform data transfer ... digitalWrite(CSPIN, 1); // deselect Bir bağımlı birimin seçimini kaldırmak, onu seçmek kadar önemlidir, çünkü bir bağımlı, seçiliyken MISO hattını çalıştırabilir.</description>
    </item>
    
    <item>
      <title>Donanım pimleri</title>
      <link>https://www.wikiod.com/tr/arduino/donanm-pimleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/donanm-pimleri/</guid>
      <description>Arduino Uno R3 # Mikrodenetleyiciler, devrenin geri kalanıyla etkileşim kurmak için pinleri kullanır. Bu pinler genellikle giriş/çıkış pinlerinden biri, vin veya toprak olacaktır. I/O pinleri basit dijital I/O pinleri olabilir veya darbe genişlik modülasyonu kullanarak çıkışlarının voltajını değiştirebilmek gibi bazı özel özelliklere sahip olabilirler. İşte Arduino R3 Uno ve pinlerinin bir şeması.
(kaynak)
PWM Pinleri
PWM, çıkışı yüksek ve düşük arasında çok hızlı bir şekilde değiştirerek çıkışın voltajını kontrol etmenizi sağlar.</description>
    </item>
    
    <item>
      <title>Seri iletişim</title>
      <link>https://www.wikiod.com/tr/arduino/seri-iletisim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/seri-iletisim/</guid>
      <description>Sözdizimi # Serial.begin(speed) // Verilen baud hızında seri portu açar Serial.begin(hız, yapılandırma) Serial[1-3].begin(speed) // Sadece Arduino Mega! 1-3 yazarken, seri portu seçerken 1 ile 3 arasındaki sayılar arasında seçim yapabileceğiniz anlamına gelir. Serial[1-3].begin(speed, config) // Sadece Arduino Mega! 1-3 yazarken, seri portu seçerken 1 ile 3 arasındaki sayılar arasında seçim yapabileceğiniz anlamına gelir. Serial.peek() // Girdinin bir sonraki baytını arabellekten çıkarmadan okur Serial.available() // Tampondaki bayt sayısını alır Serial.print(text) // Seri bağlantı noktasına metin yazar Serial.</description>
    </item>
    
    <item>
      <title>Python, Arduino Uno ile nasıl bütünleşir?</title>
      <link>https://www.wikiod.com/tr/arduino/python-arduino-uno-ile-nasl-butunlesir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/python-arduino-uno-ile-nasl-butunlesir/</guid>
      <description>Sözdizimi # `Serial.begin(baudrate) // Seri veri iletimi için baud hızını (bit/saniye) ayarla&#39; Serial.println(değer) // Verileri seri bağlantı noktasına ve ardından Satır Başı \r ve Yeni Satır karakteri \n yazdırır `serial.Serial((port=Yok, baud hızı=9600, bytesize=EIGHTBITS, parity=PARITY_NONE, stopbits=STOPBITS_ONE, zaman aşımı=Yok, xonxoff=Yanlış, rtscts=Yanlış, write_timeout=Yok, dsrdtr=Yanlış_zaman aşımı=byNone ) // Seri bağlantı noktasını tüm parametrelerle başlat&#39; serial.readline() // Satır Başı \r ve Yeni Satır karakteri \n içeren seri verileri okuyun Parametreler # parametre Ayrıntılar seri Python paketi, seri bağlantı noktasına erişmek için sınıflar ve yöntemler içerir zaman Python paketi zamanla ilgili işlevleri içerir Windows 10&amp;rsquo;da çalışan Arduino IDE 1.</description>
    </item>
    
    <item>
      <title>Zaman yönetimi</title>
      <link>https://www.wikiod.com/tr/arduino/zaman-yonetimi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/zaman-yonetimi/</guid>
      <description>Sözdizimi # işaretsiz uzun millis()
işaretsiz uzun mikrolar()
geçersiz gecikme (işaretsiz uzun milisaniye)
geçersiz gecikmeMikrosaniye(işaretsiz uzun mikrosaniye)
Bu sınıfın yapıcıları ve işleçleri için geçenMillis üstbilgisine bakın. Kısacası:
geçenMillis geçenMillisObject; yaratıldığından beri veya zaman içinde açıkça belirlenmiş başka bir noktadan beri zamanı takip etmek için bir nesne yaratır
geçenMillisObject = 0; nesne tarafından izlenen süreyi &amp;ldquo;şimdiden beri&amp;rdquo; olarak sıfırlayın
imzasız uzun deltaT = geçenMillisObject; izlenen zamana bakmamıza izin verir
elapsedMillisObject += ve -= bunlar beklendiği gibi çalışır</description>
    </item>
    
    <item>
      <title>Arduino IDE&#39;si</title>
      <link>https://www.wikiod.com/tr/arduino/arduino-idesi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/arduino-idesi/</guid>
      <description>Windows&amp;rsquo;a yükleme # https://www.arduino.cc/en/Main/Software adresine gidin. &amp;ldquo;Windows Installer&amp;rdquo; bağlantısını tıklayın Talimatları izleyin Fedora&amp;rsquo;ya yükleme # Bir terminal açın ve şunu çalıştırın: sudo dnf install arduino Arduino uygulamasını açın veya terminale &amp;lsquo;arduino&amp;rsquo; yazın Ubuntu&amp;rsquo;ya Yükleme # Bir terminal açın ve şunu çalıştırın: sudo apt-get install arduino Arduino uygulamasını açın veya terminale &amp;lsquo;arduino&amp;rsquo; yazın Windows&amp;rsquo;ta taşınabilir uygulama # Arduino IDE&amp;rsquo;yi yüklemeye gerek kalmadan Windows üzerinde kullanmak için:
https://www.arduino.cc/en/Main/Software adresine gidin. &amp;ldquo;Yönetici olmayan yükleme için Windows ZIP dosyası&amp;rdquo; bağlantısını tıklayın Arşivi bir klasöre çıkarın Klasörü açın ve Arduino.</description>
    </item>
    
    <item>
      <title>Bluetooth İletişimi</title>
      <link>https://www.wikiod.com/tr/arduino/bluetooth-iletisimi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/arduino/bluetooth-iletisimi/</guid>
      <description>Parametreler # yöntem ayrıntılar SoftwareSerial.h Belgeler SoftwareSerial(rxPin, txPin, inverse_logic) Yapıcı. rxPin: Veri girişi (alma) pimi, varsayılan olarak 0&amp;rsquo;dır. txPin: Veri çıkışı (gönderme) pimi, varsayılan değer 1&amp;rsquo;dir. ters_mantık: Doğruysa, DÜŞÜK&amp;rsquo;ü YÜKSEK olarak değerlendirir ve YÜKSEK, bit değerleri belirlenirken DÜŞÜK olarak. varsayılan olarak false olur. başla(hız) Seri iletişim için baud hızını ayarlar. Desteklenen baud hızları 300, 600, 1200, 2400, 4800, 9600, 14400, 19200, 28800, 31250, 38400, 57600 ve 115200&amp;rsquo;dür. kullanılabilir() Seri üzerinden veri olup olmadığını kontrol edin oku() Seriden bir dize okur isListing() İstenen yazılım seri portunun aktif olarak dinleyip dinlemediğini kontrol eder.</description>
    </item>
    
  </channel>
</rss>
