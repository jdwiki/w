<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pandalar Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/pandas/</link>
    <description>Recent content in pandalar Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/pandas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pandalarla Başlarken</title>
      <link>https://www.wikiod.com/tr/pandas/pandalarla-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/pandalarla-baslarken/</guid>
      <description>Kurulum veya Kurulum # Pandaları kurmak veya kurmakla ilgili ayrıntılı talimatlar burada resmi belgelerde bulunabilir.
Anaconda ile panda yükleme
Pandaları ve NumPy ve SciPy yığınının geri kalanını yüklemek, deneyimsiz kullanıcılar için biraz zor olabilir.
Yalnızca pandaları değil, Python&amp;rsquo;u ve SciPy yığınını oluşturan en popüler paketleri (IPython, NumPy, Matplotlib, &amp;hellip;) kurmanın en basit yolu, bir çapraz platform olan Anaconda ile (Linux, Mac) OS X, Windows) Veri analitiği ve bilimsel hesaplama için Python dağıtımı.</description>
    </item>
    
    <item>
      <title>pandalar veri çerçevesini bir csv dosyasına kaydedin</title>
      <link>https://www.wikiod.com/tr/pandas/pandalar-veri-cercevesini-bir-csv-dosyasna-kaydedin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/pandalar-veri-cercevesini-bir-csv-dosyasna-kaydedin/</guid>
      <description>Parametreler # parametre Açıklama yol_veya_tampon dize veya dosya tanıtıcısı, varsayılan Yok Dosya yolu veya nesnesi, Yok sağlanırsa sonuç bir dize olarak döndürülür. eylül karakter, varsayılan &amp;lsquo;,&amp;rsquo; Çıktı dosyası için alan sınırlayıcı. na_rep dize, varsayılan “” Eksik veri gösterimi float_format dize, varsayılan Yok Kayan noktalı sayılar için dize biçimi sütunlar sıra, isteğe bağlı Yazılacak Sütunlar başlık boolean veya dize listesi, varsayılan True Sütun adlarını yazın. Bir dize listesi verilirse, sütun adları için takma adlar olduğu varsayılır dizin boolean, varsayılan True Write satır adları (dizin) indeks_etiket dizi veya dizi veya istenirse dizin sütunları için Yanlış, varsayılan Yok Sütun etiketi.</description>
    </item>
    
    <item>
      <title>Pandalar Veri Okuyucu</title>
      <link>https://www.wikiod.com/tr/pandas/pandalar-veri-okuyucu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/pandalar-veri-okuyucu/</guid>
      <description>Pandas veri okuyucusu, şu anda aşağıdakiler dahil olmak üzere çeşitli internet veri kaynaklarından bir veri çerçevesi oluşturmaya izin veren bir alt pakettir:
-Yahoo! finans
Google Finans St.Louis FED (FRED) Kenneth French&amp;rsquo;in veri kütüphanesi Dünya Bankası Google Analytics Daha fazla bilgi için buraya bakın.
Veri okuyucu temel örneği (Yahoo Finans) # from pandas_datareader import data # Only get the adjusted close. aapl = data.DataReader(&amp;quot;AAPL&amp;quot;, start=&#39;2015-1-1&#39;, end=&#39;2015-12-31&#39;, data_source=&#39;yahoo&#39;)[&#39;Adj Close&#39;] &amp;gt;&amp;gt;&amp;gt; aapl.plot(title=&#39;AAPL Adj. Closing Price&#39;) # Convert the adjusted closing prices to cumulative returns.</description>
    </item>
    
    <item>
      <title>Veri Çerçeveleri Oluşturma</title>
      <link>https://www.wikiod.com/tr/pandas/veri-cerceveleri-olusturma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/veri-cerceveleri-olusturma/</guid>
      <description>DataFrame, Series ve Panel dışında pandas kitaplığı tarafından sağlanan bir veri yapısıdır. 2 boyutlu bir yapıdır ve bir satır ve sütun tablosuna benzetilebilir.
Her satır, bir tamsayı dizini (0..N) veya bir DataFrame nesnesi oluşturulurken açıkça ayarlanmış bir etiket ile tanımlanabilir. Her sütun farklı türde olabilir ve bir etiketle tanımlanır.
Bu konu, bir DataFrame nesnesi oluşturmanın/oluşturmanın çeşitli yollarını kapsar. Eski. Numpy dizilerinden, tuples listesinden, sözlükten.
Örnek bir DataFrame oluşturun # import pandas as pd İki sütun içeren bir sözlükten bir DataFrame oluşturun: &amp;ldquo;sayılar&amp;rdquo; ve &amp;ldquo;renkler&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Verileri Gruplandırma</title>
      <link>https://www.wikiod.com/tr/pandas/verileri-gruplandrma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/verileri-gruplandrma/</guid>
      <description>Sayıya göre boyuta göre toplama # &amp;ldquo;size&amp;rdquo; ve &amp;ldquo;count&amp;rdquo; arasındaki fark şudur:
size &amp;lsquo;NaN&amp;rsquo; sayar değerler, count değil .
df = pd.DataFrame( {&amp;quot;Name&amp;quot;:[&amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Mallory&amp;quot;, &amp;quot;Mallory&amp;quot;, &amp;quot;Bob&amp;quot; , &amp;quot;Mallory&amp;quot;], &amp;quot;City&amp;quot;:[&amp;quot;Seattle&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Portland&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Seattle&amp;quot;, &amp;quot;Portland&amp;quot;], &amp;quot;Val&amp;quot;: [4, 3, 3, np.nan, np.nan, 4]}) df # Output: # City Name Val # 0 Seattle Alice 4.0 # 1 Seattle Bob 3.0 # 2 Portland Mallory 3.0 # 3 Seattle Mallory NaN # 4 Seattle Bob NaN # 5 Portland Mallory 4.</description>
    </item>
    
    <item>
      <title>Tatil Takvimleri</title>
      <link>https://www.wikiod.com/tr/pandas/tatil-takvimleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/tatil-takvimleri/</guid>
      <description>Özel bir takvim oluşturun # Özel bir takvimin nasıl oluşturulacağı aşağıda açıklanmıştır. Verilen örnek bir fransız takvimidir - bu yüzden birçok örnek sağlar.
from pandas.tseries.holiday import AbstractHolidayCalendar, Holiday, EasterMonday, Easter from pandas.tseries.offsets import Day, CustomBusinessDay class FrBusinessCalendar(AbstractHolidayCalendar): &amp;quot;&amp;quot;&amp;quot; Custom Holiday calendar for France based on https://en.wikipedia.org/wiki/Public_holidays_in_France - 1 January: New Year&#39;s Day - Moveable: Easter Monday (Monday after Easter Sunday) - 1 May: Labour Day - 8 May: Victory in Europe Day - Moveable Ascension Day (Thursday, 39 days after Easter Sunday) - 14 July: Bastille Day - 15 August: Assumption of Mary to Heaven - 1 November: All Saints&#39; Day - 11 November: Armistice Day - 25 December: Christmas Day &amp;quot;&amp;quot;&amp;quot; rules = [ Holiday(&#39;New Years Day&#39;, month=1, day=1), EasterMonday, Holiday(&#39;Labour Day&#39;, month=5, day=1), Holiday(&#39;Victory in Europe Day&#39;, month=5, day=8), Holiday(&#39;Ascension Day&#39;, month=1, day=1, offset=[Easter(), Day(39)]), Holiday(&#39;Bastille Day&#39;, month=7, day=14), Holiday(&#39;Assumption of Mary to Heaven&#39;, month=8, day=15), Holiday(&#39;All Saints Day&#39;, month=11, day=1), Holiday(&#39;Armistice Day&#39;, month=11, day=11), Holiday(&#39;Christmas Day&#39;, month=12, day=25) ] Özel bir takvim kullanın # Özel takvimi nasıl kullanacağınız aşağıda açıklanmıştır.</description>
    </item>
    
    <item>
      <title>SQL Server&#39;ı Dataframe&#39;e okuyun</title>
      <link>https://www.wikiod.com/tr/pandas/sql-server-dataframee-okuyun/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/sql-server-dataframee-okuyun/</guid>
      <description>pyodbc&amp;rsquo;yi kullanma # import pandas.io.sql import pyodbc import pandas as pd Parametreleri belirtin
# Parameters server = &#39;server_name&#39; db = &#39;database_name&#39; UID = &#39;user_id&#39; Bağlantıyı oluştur
# Create the connection conn = pyodbc.connect(&#39;DRIVER={SQL Server};SERVER=&#39; + server + &#39;;DATABASE=&#39; + db + &#39;; UID = &#39; + UID + &#39;; PWD = &#39; + UID + &#39;Trusted_Connection=yes&#39;) pandalar veri çerçevesine sorgulama
# Query into dataframe df= pandas.io.sql.read_sql(&#39;sql_query_string&#39;, conn) pyodbc&amp;rsquo;yi bağlantı döngüsüyle kullanma # import os, time import pyodbc import pandas.</description>
    </item>
    
    <item>
      <title>DataFrames hakkında bilgi alma</title>
      <link>https://www.wikiod.com/tr/pandas/dataframes-hakknda-bilgi-alma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/dataframes-hakknda-bilgi-alma/</guid>
      <description>DataFrame bilgilerini ve bellek kullanımını alın # Sütun adları ve veri türleri dahil olmak üzere bir DataFrame hakkında temel bilgileri almak için:
import pandas as pd df = pd.DataFrame({&#39;integers&#39;: [1, 2, 3], &#39;floats&#39;: [1.5, 2.5, 3], &#39;text&#39;: [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], &#39;ints with None&#39;: [1, None, 3]}) df.info() &amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt; Int64Index: 3 entries, 0 to 2 Data columns (total 4 columns): floats 3 non-null float64 integers 3 non-null int64 ints with None 2 non-null float64 text 3 non-null object dtypes: float64(2), int64(1), object(1) memory usage: 120.</description>
    </item>
    
    <item>
      <title>Verileri indeksleme ve seçme</title>
      <link>https://www.wikiod.com/tr/pandas/verileri-indeksleme-ve-secme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/verileri-indeksleme-ve-secme/</guid>
      <description>Yola Bağlı Dilimleme # Bir sonraki öğenin veya sonraki satırın önceden seçilen öğeye veya satıra bağlı olacağı şekilde bir serinin öğelerini veya bir veri çerçevesinin satırlarını çaprazlamak gerekli olabilir. Buna yol bağımlılığı denir.
Aşağıdaki düzensiz frekanslı s zaman serilerini göz önünde bulundurun.
#starting python community conventions import numpy as np import pandas as pd # n is number of observations n = 5000 day = pd.to_datetime([&#39;2013-02-06&#39;]) # irregular seconds spanning 28800 seconds (8 hours) seconds = np.</description>
    </item>
    
    <item>
      <title>pandalar yakaladım</title>
      <link>https://www.wikiod.com/tr/pandas/pandalar-yakaladm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/pandas/pandalar-yakaladm/</guid>
      <description>Genel olarak Gotcha, belgelenmiş olmasına rağmen sezgisel olmayan bir yapıdır. Gotchas, karşı-sezgisel karakteri nedeniyle normalde beklenmeyen bazı çıktılar üretir.
Pandalar paketinde, bunlardan haberdar olmayan birinin kafasını karıştırabilecek birkaç hata vardır ve bunlardan bazıları bu dokümantasyon sayfasında sunulmaktadır.
np.nan ile eksik değerleri algılama # ile eksikleri tespit etmek istiyorsanız
df=pd.DataFrame({&#39;col&#39;:[1,np.nan]}) df==np.nan aşağıdaki sonucu alacaksınız:
col 0 False 1 False Bunun nedeni, eksik değeri herhangi bir şeyle karşılaştırmanın Yanlış ile sonuçlanmasıdır - bunun yerine kullanmalısınız</description>
    </item>
    
  </channel>
</rss>
