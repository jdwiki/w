<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>selenyum Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/selenium/</link>
    <description>Recent content in selenyum Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/selenium/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Selenyum ile başlarken</title>
      <link>https://www.wikiod.com/tr/selenium/selenyum-ile-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/selenyum-ile-baslarken/</guid>
      <description>Java&amp;rsquo;da basit Selenyum testi # Aşağıdaki kod, selenyum kullanan basit bir java programıdır. Aşağıdaki kodun yolculuğu
Firefox tarayıcısını açın
Google sayfasını açın
Google sayfasının başlığını yazdırın
Arama kutusu konumunu bulun
Arama kutusuna değeri Selenium olarak iletin
Formu gönderin
Tarayıcıyı kapatın
package org.openqa.selenium.example;
import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import java.util.concurrent.TimeUnit;
public class Selenium2Example { public static void main(String[] args) { // Create a new instance of the Firefox driver WebDriver driver = new FirefoxDriver();</description>
    </item>
    
    <item>
      <title>Web Sürücüsü Fabrikası</title>
      <link>https://www.wikiod.com/tr/selenium/web-surucusu-fabrikas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/web-surucusu-fabrikas/</guid>
      <description>Web Sürücüsü Fabrikası C# # using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Firefox; using OpenQA.Selenium.IE; /// &amp;lt;summary&amp;gt; /// Factory for creating WebDriver for various browsers. /// &amp;lt;/summary&amp;gt; public static class WebDriverFactory { /// &amp;lt;summary&amp;gt; /// Initilizes IWebDriver base on the given WebBrowser name. /// &amp;lt;/summary&amp;gt; /// &amp;lt;param name=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt; public static IWebDriver CreateWebDriver(WebBrowser name) { switch (name) { case WebBrowser.Firefox: return new FirefoxDriver(); case WebBrowser.IE: case WebBrowser.InternetExplorer: InternetExplorerOptions ieOption = new InternetExplorerOptions(); ieOption.</description>
    </item>
    
    <item>
      <title>Bir web sayfasının ekran görüntüsünü alın</title>
      <link>https://www.wikiod.com/tr/selenium/bir-web-sayfasnn-ekran-goruntusunu-aln/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/bir-web-sayfasnn-ekran-goruntusunu-aln/</guid>
      <description>Java Selenium web sayfasının ekran görüntüsünü al/kaydet ve rapora ekle # public void Screenshot() throws Throwable{ final byte[] screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES); scenario.embed(screenshot, &amp;quot;image/png&amp;quot;); // ... and embed it in the report. Thread.sleep(1000); } dönüşümlü olarak
public static void captureScreenShot(WebDriver ldriver){ // Take screenshot and store as a file format File src= ((TakesScreenshot)ldriver).getScreenshotAs(OutputType.FILE); try { // now copy the screenshot to desired location using copyFile method FileUtils.copyFile(src, new File(&amp;quot;C:/selenium/&amp;quot;+System.currentTimeMillis()+&amp;quot;.png&amp;quot;)); } catch (IOException e) { System.</description>
    </item>
    
    <item>
      <title>Selenyumda Beklemek</title>
      <link>https://www.wikiod.com/tr/selenium/selenyumda-beklemek/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/selenyumda-beklemek/</guid>
      <description>Yeni Selenium kullanıcıları için en yaygın engellerden biri, bir sayfa tamamen yüklenene kadar beklemektir. İnsan kullanıcılar, bir sayfanın tamamen yüklenip yüklenmediğini veya hala yüklenip yüklenmediğini kolayca anlayabilir. Ancak selenyum sadece belirli bir süre bekler. Bu nedenle, bir sayfadaki öğeleri beklemenin iyi bir yolunun olması genellikle uygundur. Bunu bir döngü ve uyku() işlevleriyle yapmak mümkün olsa da, Selenium&amp;rsquo;da zaten yerleşik olarak bulunan çok daha temiz yollar vardır.
Python&amp;rsquo;da Açık Bekleyin # Tarayıcı dinamik bir sayfaya gittiğinde (en yaygın olarak AJAX tabanlı web uygulaması), sayfadaki öğelerin yüklenmesi farklı zaman alabilir ve ayrıca: bazı öğeler yalnızca bazı kullanıcı eylemlerine yanıt olarak yüklenir.</description>
    </item>
    
    <item>
      <title>Selenium ile açılır uyarıları kabul etme</title>
      <link>https://www.wikiod.com/tr/selenium/selenium-ile-aclr-uyarlar-kabul-etme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/selenium-ile-aclr-uyarlar-kabul-etme/</guid>
      <description>Uyarı kabul etme Python örneği # from selenium import webdriver # Create a new webdriver driver = webdriver.Chrome() # Get a page that has a popup window (Use mouse to click &amp;quot;try it&amp;quot; button) driver.get(&amp;quot;http://www.w3schools.com/js/tryit.asp?filename=tryjs_alert&amp;quot;) # Accept the opened alert driver.switch_to.alert.accept() WebDriver&amp;rsquo;a C# Uzantıları # public static IWebDriver dismissAlert(this IWebDriver driver) { try { IAlert alert = driver.SwitchTo().Alert(); alert.Dismiss(); } catch {} return driver; } public static IWebDriver acceptAlert(this IWebDriver driver) { try { IAlert alert = driver.</description>
    </item>
    
    <item>
      <title>Java ile selenyumda ilk proje</title>
      <link>https://www.wikiod.com/tr/selenium/java-ile-selenyumda-ilk-proje/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/java-ile-selenyumda-ilk-proje/</guid>
      <description>Bu, Java kullanarak Selenium&amp;rsquo;a bir giriştir. Selenium hakkında bir şey bilmenizi beklemiyoruz ama bu kursu takip etmek için önceden Java bilgisine sahip olmanız gerekiyor.
Bağlantılar İndir :
Selenyum
IntelliJ IDEA
ChromeDriver
JDK 8
Selenyumda Eleman Alma # Selenium&amp;rsquo;daki her Html Öğesine &amp;ldquo;WebElement&amp;rdquo; adı verilir. Örneğin, bir &amp;ldquo;p&amp;rdquo; etiketi &amp;ldquo;WebElement&amp;rdquo;, &amp;ldquo;a&amp;rdquo; etiketi &amp;ldquo;WebElement&amp;rdquo; olabilir, vb. Aşağıdaki html Yapısını göz önünde bulundurun:
&amp;lt;a id=&amp;quot;link1&amp;quot; href=&amp;quot;https://www.google.com&amp;quot;&amp;gt;google&amp;lt;/a&amp;gt; &amp;lt;p class=&amp;quot;p1&amp;quot;&amp;gt; This is a paragraph &amp;lt;/p&amp;gt; Şimdi, eğer &amp;ldquo;a&amp;rdquo; etiketini almak istiyorsak, bunu yapabilirdik.</description>
    </item>
    
    <item>
      <title>Python&#39;da Selenium&#39;u kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/selenium/pythonda-seleniumu-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/pythonda-seleniumu-kullanmaya-baslama/</guid>
      <description>Selenyum nedir?
Selenium, gerçek bir kullanıcı gibi bir tarayıcı ile programcı arayüzüne yardımcı olan bir komut kütüphanesidir.
Selenium&amp;rsquo;un yaptığı şeyler:
Bir web sayfasının html&amp;rsquo;sinde eleman(lar) bulma
Tek bir öğe bulur:
driver.find_element_by_css_selector(&amp;quot;css.selector.of.element&amp;quot;) CSS Selector help driver.find_element_by_xpath(&amp;quot;//xpath//of//element&amp;quot;) XPATH help driver.find_element_by_name(&amp;quot;name_of_element&amp;quot;) driver.find_element_by_id(&amp;quot;id_of_element&amp;quot;) driver.find_element_by_partial_link_text(&amp;quot;element_link_text&amp;quot;) driver.find_element_by_class_name(&amp;quot;class_name_of_element&amp;quot;) driver.find_element_by_tag_name(&amp;quot;tag_name_of_element&amp;quot;) Öğelerin bir listesini bulur:
driver.find_elements_by_css_selector(&amp;quot;css.selector.of.elements&amp;quot;) driver.find_elements_by_xpath(&amp;quot;//xpath//of//elements&amp;quot;) driver.find_elements_by_name(&amp;quot;name_of_elements&amp;quot;) driver.find_elements_by_partial_link_text(&amp;quot;elements_link_text&amp;quot;) driver.find_elements_by_class_name(&amp;quot;class_name_of_elements&amp;quot;) driver.find_elements_by_tag_name(&amp;quot;tag_name_of_elements&amp;quot;) Resmi belgeler: Selenium-python belgeleri okuyun
Öğelerle etkileşim:
&amp;ldquo;yöntem&amp;rdquo;, bir öğeyi veya öğe listesini bulmak için yukarıdaki yöntemlerden herhangi birini temsil eder.</description>
    </item>
    
    <item>
      <title>selenyum IDE</title>
      <link>https://www.wikiod.com/tr/selenium/selenyum-ide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/selenyum-ide/</guid>
      <description>Basit bir Selenyum komut dosyası deneyin: Google&amp;rsquo;da Wikipedia&amp;rsquo;da arama yapın # Önkoşullar:
Firefox&amp;rsquo;u yükleyin Selenium IDE eklentisini kurun (https://addons.mozilla.org/fr/firefox/addon/selenium-ide/) Eklentiyi açın. Kırmızı daire gösteren bir düğme gösterilmelidir. Eğer basılırsa, senaryonuzu başlatabileceğiniz anlamına gelir. Eklenti, bu Firefox örneğinde yaptığınız her şeyi kaydediyor.
Kaydedilmesini istediğiniz şeyi yapın.
Sonunda senaryonuzu kaydedin; Selenium IDE&amp;rsquo;nin senaryolarının html dosyaları olduğunu fark edeceksiniz.
Ayrıca diğer kullanıcılardan gelen dosyaları da açabilirsiniz. Örneğin, aşağıdaki kodu yeni bir html dosyasına kopyalayıp yapıştırın ve eklentiniz aracılığıyla içe aktarın.</description>
    </item>
    
    <item>
      <title>Selenium için WebDriverManager - Boni Garcia&#39;dan çok temiz bir araç</title>
      <link>https://www.wikiod.com/tr/selenium/selenium-icin-webdrivermanager---boni-garciadan-cok-temiz-bir-arac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/selenium-icin-webdrivermanager---boni-garciadan-cok-temiz-bir-arac/</guid>
      <description>Selenium 3&amp;rsquo;e geçtim ve Firefox yerine Chrome kullanmaya başladım. Chrome için, WebDriver&amp;rsquo;ın tarayıcıyı işlemesi için bir ikili dosya indirmem gerektiğini keşfettim. Bunun çalışması için bu ikili dosyanın mutlak yolunu Java değişkeni olarak ayarlamam gerekiyor. İkili güncellenirse, bu ikiliyi test çerçevemde manuel olarak güncellemem gerekiyor - bu zaman alıyor ve gerçekten sinir bozucu. Bunu benim için yapan çok temiz bir Java kitaplığı keşfettim: https://github.com/bonigarcia/webdrivermanager
Aşağıdaki örnekler, kullanımının ne kadar kolay olduğunu gösterir # ChromeDriverManager.</description>
    </item>
    
    <item>
      <title>Mobil uygulama otomasyonu</title>
      <link>https://www.wikiod.com/tr/selenium/mobil-uygulama-otomasyonu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/selenium/mobil-uygulama-otomasyonu/</guid>
      <description>Android + Chrome + Python # Testleri çalıştırabilmek için Chrome broser Android cihaza önceden yüklenmiş olmalıdır,
Python + Chrome + Android # &amp;lsquo;Selenium&amp;rsquo; kullanan &amp;lsquo;Android&amp;rsquo; cihazında web uygulaması ile çalışabilmek için aşağıdaki ön koşulların karşılanması gerekir:
Android SDK bilgisayarda yüklü &amp;ldquo;Android&amp;rdquo; cihazında yüklü &amp;ldquo;Chrome&amp;rdquo; tarayıcısı &amp;ldquo;Android&amp;rdquo; cihazında Hata ayıklama modu etkinleştirildi &amp;ldquo;cmd&amp;rdquo;/&amp;ldquo;Terminal&amp;quot;den aşağıdaki komutlarla &amp;ldquo;adb&amp;rdquo; ve &amp;ldquo;chromedriver&amp;rdquo; sunucusunu başlatın:
adb start-server chromedriver Şuna benzeyen günlükten &amp;ldquo;chromedriver&amp;rdquo; sunucu bağlantı noktası numarasını not edin</description>
    </item>
    
  </channel>
</rss>
