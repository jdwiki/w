<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cakephp Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/cakephp/</link>
    <description>Recent content in cakephp Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/cakephp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cakephp&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/cakephp/cakephpye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/cakephp/cakephpye-baslarken/</guid>
      <description>Temel ilk boş proje # İlk Oluşturma ve İndirme (CakePHP 3.x) # Yeni CakePHP projesi oluşturmanın en kolay yolu Composer&amp;rsquo;dır (besteci hakkında bilginiz yoksa daha fazla bilgi için buraya bakın)
Besteci Yükle # Yüklemeniz gerekiyorsa ve bir Windows makinesindeyseniz bu kılavuzu izleyin.
Linux/Unix/OSX kullanıyorsanız [bu kılavuzu] izleyin(https://getcomposer.org/doc/00-intro.md#installation-linux-unix-osx)
İlk CakePHP Projesini Oluşturun # Bir konsol penceresi açın ve php kurulumunuza gidin (varsayılan xampp kurulumu ile Windows&amp;rsquo;ta bu C:\xampp\phpdir)
Boş bir proje oluşturmak için aşağıdaki komutu çalıştırın:</description>
    </item>
    
    <item>
      <title>CakePHP3 Kodlama İpuçları</title>
      <link>https://www.wikiod.com/tr/cakephp/cakephp3-kodlama-ipuclar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/cakephp/cakephp3-kodlama-ipuclar/</guid>
      <description>Yeni Denetleyici Oluşturma # namespace App\Controller; class PostsController extends AppController { public function initialize(){ parent::initialize(); // code that you want to run before every action } public function view($id) { //Your code here } } $_POST&amp;rsquo;a eşdeğer gönderi verileri alınıyor # Gönderi verilerini Array olarak alabilirsiniz.
$post_data= $this-&amp;gt;request-&amp;gt;data; Belirli bir anahtar için gönderi verilerini alabilirsiniz.
$this-&amp;gt;request-&amp;gt;data[&#39;field&#39;]; Belirli anahtar değerini al
$this-&amp;gt;request-&amp;gt;data(&#39;key_name&#39;); İç içe dizinin belirli anahtar değerini alın
$this-&amp;gt;request-&amp;gt;data(&#39;data.subfield&#39;); dizi gösterimi ile &amp;ldquo;data()&amp;rdquo; yöntemi arasındaki fark, &amp;ldquo;data()&amp;ldquo;nın hataya karşı güvenli olması ve anahtar dizide yoksa &amp;ldquo;null&amp;rdquo; döndürmesidir.</description>
    </item>
    
    <item>
      <title>Modelleri başka bir veri kaynağından örnekleme</title>
      <link>https://www.wikiod.com/tr/cakephp/modelleri-baska-bir-veri-kaynagndan-ornekleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/cakephp/modelleri-baska-bir-veri-kaynagndan-ornekleme/</guid>
      <description>CakePHP uygulamanızın birden fazla veritabanını sorgulaması gerekeceği bir zaman gelecek. Varsayılan olmayan veritabanlarından Model talep etme yöntemi resmi belgelerde mevcut değildir.
Modal için anında veritabanı değişiklikleri # Birden çok veritabanı için, ihtiyacınız olduğu kadar çok veritabanı ayarlayabileceğiniz database.php dosyasına sahipsiniz.
Anında belirli bir model için bir veritabanını &amp;ldquo;değiştirmek&amp;rdquo; istiyorsanız, setDataSource() yöntemini kullanın.
Örneğin iki veritabanınız varsa bunları database.php dosyasında örnek olarak &amp;ldquo;default&amp;rdquo; ve &amp;ldquo;sandbox&amp;rdquo; olarak tanımlayabilirsiniz.
Ardından, kodunuzda:
$this-&amp;gt;MyModal-&amp;gt;setDataSource(&amp;lsquo;sandbox&amp;rsquo;);
Korumalı alan, yapılandırmanın adıdır ve veritabanının gerçek adı, database.</description>
    </item>
    
    <item>
      <title>Ajax istek işleme</title>
      <link>https://www.wikiod.com/tr/cakephp/ajax-istek-isleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/cakephp/ajax-istek-isleme/</guid>
      <description>Temel CakePHP 2.x örneği # Denetleyici: Controller&amp;rsquo;da RequestHandler bileşenini eklemeniz gerekir. Bu, CakePHP&amp;rsquo;nin Ajax isteklerini otomatik olarak algılamasını sağlar (daha fazla bilgi için bkz: http://book.cakephp.org/2.0/en/core-libraries/components/request-handling.html):
class YourController extends AppController { public $components = array(&#39;RequestHandler&#39;); //... public function ajaxCall() { if($this-&amp;gt;request-&amp;gt;is(&#39;ajax&#39;){ // some code that should be executed // ... // variables you want to return $this-&amp;gt;set(compact(&#39;firstVariable&#39;, &#39;secondVariable&#39;)); $this-&amp;gt;set(&#39;_serialize&#39;, array(&#39;firstVariable&#39;, secondVariable)) } } Kodu Görüntüle (jQuery kullanarak):
&amp;lt;script&amp;gt; $.ajax({ type: &#39;POST&#39;, url: &#39;/yourController/ajaxCall&#39;, success: function (result) { // result is a JSON array of the returned Variables }, error: function (result){ console.</description>
    </item>
    
  </channel>
</rss>
