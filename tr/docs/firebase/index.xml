<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>firebase Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/firebase/</link>
    <description>Recent content in firebase Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/firebase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Firebase&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/firebase/firebasei-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/firebasei-kullanmaya-baslama/</guid>
      <description>Android Projenize Firebase Ekleyin # Burada bir Firebase projesi oluşturmak ve bir Android uygulamasına bağlanmak için gereken adımlar.
Firebase&amp;rsquo;i uygulamanıza ekleyin # Firebase konsolunda bir Firebase projesi oluşturun ve Yeni Proje Oluştur&amp;lsquo;a tıklayın.
Firebase&amp;rsquo;i Android uygulamanıza ekleyin&amp;lsquo;i tıklayın ve kurulum adımlarını izleyin.
İstendiğinde, uygulamanızın paket adını girin. Uygulamanızın kullandığı paket adını girmeniz önemlidir; bu, yalnızca Firebase projenize bir uygulama eklediğinizde ayarlanabilir.
Yetkilendirmede Dinamik Bağlantılar, Davetler ve Google Oturum Açma desteği için gerekli olan hata ayıklama imzalama sertifikası SHA1&amp;rsquo;i eklemek için, Android Studio&amp;rsquo;da projenize gidin, sağ taraftaki &amp;lsquo;Gradle&amp;rsquo; sekmesine tıklayın.</description>
    </item>
    
    <item>
      <title>Veritabanı Kuralları</title>
      <link>https://www.wikiod.com/tr/firebase/veritaban-kurallar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/veritaban-kurallar/</guid>
      <description>Firebase Realtime Database ile Veritabanı kurallarınız, sunucu tarafı güvenliğinizdir. Veritabanınıza kimlerin eriştiği konusunda çok dikkatli olmanız ve farkında olmanız gerekir. Verilerinize erişmemesi gereken hiç kimsenin erişmemesi önemlidir.
Varsayılan olarak, Firebase Gerçek Zamanlı Veritabanı kuralları, kimliği doğrulanmış herhangi bir kullanıcının tüm verileri okumasına ve yazmasına izin verir, muhtemelen uygulamanızın yapmasını istediğiniz şey bu değildir.
Farklı senaryolar için aşağıdaki örneklere bir göz atın.
Firebase Gerçek Zamanlı Veritabanı, verilerinizin nasıl yapılandırılması gerektiğini, nasıl dizine eklenmesi gerektiğini ve verilerinizin ne zaman okunup yazılabileceğini kolayca tanımlamak için JavaScript benzeri sözdizimine sahip esnek, ifade tabanlı bir kural dili sağlar.</description>
    </item>
    
    <item>
      <title>Firebase&#39;i Düğümle Kullanma</title>
      <link>https://www.wikiod.com/tr/firebase/firebasei-dugumle-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/firebasei-dugumle-kullanma/</guid>
      <description>Düğümde Hello World Firebase Gerçek Zamanlı Veritabanı # Sistem gereksinimleri:
Düğüm JS Başlarken
Önce Firebase Konsolu&amp;rsquo;na gidin ve Yeni Proje Oluşturun.
Projeyi oluşturduktan sonra, projede sol kenar çubuğunda proje Adının yanında ayarlar simgesine tıklayın ve İzinler&amp;rsquo;i seçin.
İzinler Sayfasında, sol kenar çubuğundaki Hizmet hesapları&amp;rsquo;na ve ardından Hizmet Hesabı Oluştur&amp;rsquo;a tıklayın.
Açılır pencerede hizmet hesap adınızı girin ve Hesap Rolü&amp;rsquo;nü seçin ve Yeni bir özel anahtar sağla&amp;rsquo;yı seçin ve ardından JSON&amp;rsquo;u seçin ve Oluştur&amp;rsquo;u tıklayın (Google Uygulaması Etki Alanı Genelinde Yetkilendirmeyi Etkinleştirmeyi İşaretsiz Bırakın).</description>
    </item>
    
    <item>
      <title>RecyclerAdapter yerine FirebaseRecyclerAdapter nasıl kullanılır?</title>
      <link>https://www.wikiod.com/tr/firebase/recycleradapter-yerine-firebaserecycleradapter-nasl-kullanlr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/recycleradapter-yerine-firebaserecycleradapter-nasl-kullanlr/</guid>
      <description>İşte FirebaseUi bileşeni FirebaseRecyclerAdapter Kullanım Örneği # Merhaba arkadaşlar başlangıç ​​kodundan önce firebase ui bileşenine bağımlılık bildirmemiz gerekiyor, bu yüzden bunu derecenize koyabileceğiniz bağımlılık, aksi takdirde bağımlılığı jar olarak da ekleyebilirsiniz.
compile &#39;com.firebaseui:firebase-ui-database:0.4.0&#39; Daha sonra firebase veritabanında aşağıdaki gibi veriler için sorgulama yaptıktan sonra
DatabaseReference databaseReference = database.getReference().child(&amp;quot;users&amp;quot;); Query query = databaseReference.limitToFirst(50); Daha sonra sorguyu FirebaseRecyclerAdapter içinde aşağıdaki gibi geçirdikten sonra
private void setUpFirebaseAdapter(Query query) { mFirebaseAdapter = new FirebaseRecyclerAdapter&amp;lt;UserModel, FirebaseUserViewHolder&amp;gt; (UserModel.</description>
    </item>
    
    <item>
      <title>Firebase Authentication kullanıcılarının bir listesini tutmak için Firebase Veritabanı nasıl kullanılır?</title>
      <link>https://www.wikiod.com/tr/firebase/firebase-authentication-kullanclarnn-bir-listesini-tutmak-icin-firebase-veritaban-nasl-kullanlr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/firebase-authentication-kullanclarnn-bir-listesini-tutmak-icin-firebase-veritaban-nasl-kullanlr/</guid>
      <description>Kullanıcı profili verileri nasıl kaydedilir # Kimliği doğrulanmış her kullanıcının, tüm sağlayıcılar arasında benzersiz olan ve her kimlik doğrulama yönteminin sonucunda döndürülen bir Firebase &amp;ldquo;uid&amp;quot;i vardır.
Kullanıcınızın verilerini depolamanın iyi bir yolu, tüm kullanıcıların verilerini tutmak ve güvenlik kurallarınızı kullanarak korumak için bir düğüm oluşturmaktır.
- Veri tabanı
{ &amp;quot;users&amp;quot;: { &amp;quot;uid1&amp;quot; : { &amp;quot;name&amp;quot;: &amp;quot;Steve&amp;quot;, &amp;quot;surname&amp;quot;: &amp;quot;Jobs&amp;quot; }, &amp;quot;uid2&amp;quot; : { &amp;quot;name&amp;quot;: &amp;quot;Bill&amp;quot;, &amp;quot;surname&amp;quot;: &amp;quot;Gates&amp;quot; } } } - Güvenlik</description>
    </item>
    
    <item>
      <title>Kilitlenme Raporlama</title>
      <link>https://www.wikiod.com/tr/firebase/kilitlenme-raporlama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/kilitlenme-raporlama/</guid>
      <description>Kilitlenme Raporlama, uygulamanızdaki hataların ayrıntılı raporlarını oluşturur. Hatalar, benzer yığın izlerinden oluşan kümeler halinde gruplandırılır ve kullanıcılarınız üzerindeki etkinin ciddiyetine göre önceliklendirilir. Otomatik raporlara ek olarak, kilitlenmeye yol açan adımları yakalamaya yardımcı olması için özel olayları günlüğe kaydedebilirsiniz.
Biz Android ve iOS&amp;rsquo;ta bilinen bazı sorunları çözerken Crash Reporting şu anda beta sürümündedir.
Resmi Belgeler # https://firebase.google.com/docs/crash/
Android&amp;rsquo;de hatayı bildirin # Firebase Crash Reporting, önemli hatalar (veya yakalanmamış istisnalar) için otomatik olarak raporlar oluşturur.</description>
    </item>
    
    <item>
      <title>Veritabanına erişirken hataları nasıl dinlerim?</title>
      <link>https://www.wikiod.com/tr/firebase/veritabanna-erisirken-hatalar-nasl-dinlerim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/veritabanna-erisirken-hatalar-nasl-dinlerim/</guid>
      <description>Bir okuma veya yazma işleminin başarısız olmasının birçok nedeni vardır. Sık görülen bir tanesi, güvenlik kurallarınızın işlemi reddetmesidir, örneğin kimliğiniz doğrulanmadığınız için (varsayılan olarak bir veritabanına yalnızca kimliği doğrulanmış bir kullanıcı tarafından erişilebilir) veya yapmadığınız bir yerde yazıyor/dinliyor olduğunuz için. izin almak.
Android&amp;rsquo;de bir değer yazarken hataları tespit edin # Bir yazma işleminin başarısız olmasının birçok nedeni vardır. Sık görülen bir tanesi, güvenlik kurallarınızın, örneğin kimliğiniz doğrulanmadığınız için işlemi reddetmesidir (varsayılan olarak bir veritabanına yalnızca kimliği doğrulanmış bir kullanıcı tarafından erişilebilir).</description>
    </item>
    
    <item>
      <title>Depolamak</title>
      <link>https://www.wikiod.com/tr/firebase/depolamak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/depolamak/</guid>
      <description>Firebase Storage, ağ kalitesinden bağımsız olarak Firebase uygulamalarınız için güvenli dosya yüklemeleri ve indirmeleri sağlar. Görüntüleri, sesleri, videoları veya kullanıcı tarafından oluşturulan diğer içeriği depolamak için kullanabilirsiniz. Firebase Storage, güçlü, basit ve uygun maliyetli bir nesne depolama hizmeti olan Google Cloud Storage tarafından desteklenir.
Firebase Storage, dosyalarınızı varsayılan Google App Engine uygulamasıyla paylaşılan bir Google Cloud Storage paketinde depolayarak hem Firebase hem de Google Cloud API&amp;rsquo;leri aracılığıyla erişilebilir hale getirir. Bu, Firebase aracılığıyla mobil istemcilerden dosya yükleme ve indirme esnekliğine ve Google Cloud Platform&amp;rsquo;u kullanarak görüntü filtreleme veya video kod dönüştürme gibi sunucu tarafı işlemleri yapmanıza olanak tanır.</description>
    </item>
    
    <item>
      <title>FirebaseUI (Android)</title>
      <link>https://www.wikiod.com/tr/firebase/firebaseui-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/firebaseui-android/</guid>
      <description>Bağımlılıkları ekleme # FirebaseUI, Firebase Auth ve Firebase Database için kolay UI bağlamaları sağlayan, yalnızca Google&amp;rsquo;ın açık kaynaklı bir kitaplığıdır.
Uygulamanıza FirebaseUI eklemeye başlamak için şu bağımlılıkları uygulamanızın &amp;ldquo;build.gradle&amp;rdquo; dosyasına ekleyin:
android { // ... } dependencies { // Required for FirebaseUI Database compile &#39;com.google.firebase:firebase-database:9.4.0&#39; compile &#39;com.firebaseui:firebase-ui-database:0.5.1&#39; // FirebaseUI Auth only compile &#39;com.google.firebase:firebase-auth:9.4.0&#39; compile &#39;com.firebaseui:firebase-ui-auth:0.5.1&#39; // Single dependency if you&#39;re using both compile &#39;com.firebaseui:firebase-ui:0.5.1&#39; } apply plugin: &#39;com.google.gms.google-services&#39; Liste Görünümü Doldurma # Android Studio&amp;rsquo;da zaten bir uygulama kurduğunuzu varsayarsak, bir düzene bir &amp;lsquo;ListView&amp;rsquo; ekleyin (veya zaten yapıldıysa atlayın):</description>
    </item>
    
    <item>
      <title>Firebase Çevrimdışı Yetenekleri</title>
      <link>https://www.wikiod.com/tr/firebase/firebase-cevrimds-yetenekleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/firebase/firebase-cevrimds-yetenekleri/</guid>
      <description>Bu yazıda, &amp;ldquo;Firebase&amp;rdquo; kullanırken çevrimdışı yetenekleri uygulamanın farklı yollarını, çevrimdışı yetenekleri etkinleştirmenin ne zaman ve neden iyi bir fikir olabileceğine ilişkin bilgileri ve Android platformuyla bunun örneklerini bulacaksınız.
Ne kullanmalıyım? Disk kalıcılığı mı yoksa KeepSynced çağrıları mı?
Tecrübelerime göre, bunun her zaman uygulamanızın ne çalıştığına ve uygulamanızın işlemlerini ve veritabanını nasıl yönettiğinize bağlı olduğunu söyleyebilirim. Örneğin, kullanıcının sadece veri yazıp okuduğu bir uygulamanız varsa, ancak onu silemez veya düzenleyemiyorsa, DiskPersistence kullanmak doğru seçim olacaktır.</description>
    </item>
    
  </channel>
</rss>
