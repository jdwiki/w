<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xcode Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/xcode/</link>
    <description>Recent content in Xcode Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/xcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Xcode&#39;u kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/xcode/xcodeu-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/xcodeu-kullanmaya-baslama/</guid>
      <description>Xcode&amp;rsquo;un birden çok sürümünü kullanın # Aynı anda birden fazla Xcode sürümü yükleyebilirsiniz (beta sürümleri dahil). Çakışmaları önlemek için uygulamayı Finder&amp;rsquo;da yeniden adlandırın.
Not: Xcode&amp;rsquo;u App Store&amp;rsquo;dan yüklemek, makinenizdeki mevcut bir sürümün üzerine yazılmasına neden olur. Sahip olduğunuz sürümler üzerinde daha fazla kontrol sahibi olmak için Xcode&amp;rsquo;u bir doğrudan indirmeden da yükleyebilirsiniz.
Xcode&amp;rsquo;un her kopyası komut satırı araçlarını içerir (&amp;lsquo;clang&amp;rsquo;, &amp;lsquo;xcodebuild&amp;rsquo;, vb.). Hangilerinin /usr/bin içindeki komutlar tarafından çağrılacağını seçebilirsiniz.
Xcode&amp;rsquo;un tercihlerinde, Konumlar sekmesi altında bir Xcode sürümü seçin:</description>
    </item>
    
    <item>
      <title>Komut Satırı Araçları</title>
      <link>https://www.wikiod.com/tr/xcode/komut-satr-araclar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/komut-satr-araclar/</guid>
      <description>Kullanılabilir hedefleri, şemaları ve yapı yapılandırmalarını listeleyin # Mevcut dizininizdeki proje için mevcut tüm şemaları listelemek için
xcodebuild -list İsteğe bağlı olarak bir proje veya çalışma alanı dosyasına bir yol iletebilirsiniz.
xcodebuild -list -workspace ./MyApp.xcworkspace xcodebuild -list -project ./MyApp.xcodeproj Örnek çıktı
Information about project &amp;quot;Themoji&amp;quot;: Targets: Themoji ThemojiUITests Unit Build Configurations: Debug Release If no build configuration is specified and -scheme is not passed then &amp;quot;Release&amp;quot; is used. Schemes: Themoji ThemojiUITests Units Testleri Çalıştırma # Birim testlerinizi simülatörde &amp;ldquo;xcodebuild&amp;rdquo; kullanarak çalıştırmak için</description>
    </item>
    
    <item>
      <title>Projeler ve Çalışma Alanları</title>
      <link>https://www.wikiod.com/tr/xcode/projeler-ve-calsma-alanlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/projeler-ve-calsma-alanlar/</guid>
      <description>Projenizi oluşturun, çalıştırın, profilleyin, test edin ve analiz edin # Projenizi oluşturmak ve çalıştırmak için araç çubuğundaki Çalıştır düğmesine tıklayın (veya ⌘R&amp;rsquo;ye basın). Yürütmeyi durdurmak için Durdur&amp;rsquo;a tıklayın (veya ⌘ tuşuna basın).
Diğer eylemleri görmek için tıklayın ve basılı tutun, Test Et (⌘U), Profil (⌘I) ve Analiz Et (⇧⌘B). Daha fazla değişken için ⌥ seçenek, ⇧ shift ve ⌃ kontrol değiştirici tuşlarını basılı tutun.
Aynı eylemler Ürün menüsünde de mevcuttur:</description>
    </item>
    
    <item>
      <title>@IBDesignable ile Interface Builder&#39;da Özel Kontroller Oluşturma</title>
      <link>https://www.wikiod.com/tr/xcode/ibdesignable-ile-interface-builderda-ozel-kontroller-olusturma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/ibdesignable-ile-interface-builderda-ozel-kontroller-olusturma/</guid>
      <description>Swift&amp;rsquo;de @IBDesignable ve @IBInspectable direktiflerinin tanıtılmasıyla Interface Builder&amp;rsquo;da özel kontroller oluşturmak çok daha kolay hale geldi. Geliştiriciler artık yalnızca birkaç ekstra kod satırı kullanarak zengin, karmaşık, tamamen animasyonlu kontroller oluşturabilir. Bu özelliği henüz tam olarak benimsememiş olan geliştiricilerin sayısına şaşırıyorum ve mevcut sınıflara yalnızca birkaç satır kod eklemenin onlarla çalışmayı çok daha kolay hale getirebileceğini sık sık görüyorum.
Bu özelliklerin Objective-C&amp;rsquo;de de mevcut olduğunu ve eski sınıflara hayat vermenin harika bir yolu olduğunu unutmayın.</description>
    </item>
    
    <item>
      <title>Xcode İpuçları</title>
      <link>https://www.wikiod.com/tr/xcode/xcode-ipuclar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/xcode-ipuclar/</guid>
      <description>Xcode&amp;rsquo;da kod parçacıklarını yeniden kullanın # Kod snippet&amp;rsquo;lerinizi daha sonra kullanmak üzere basitçe sürükleyip bırakarak kaydedebilirsiniz. Örneğin: projede başka bir yerde bu kadar çok yerde kullanılan bir NSLog deyiminiz varsa, NSLog deyimlerini kod parçacıkları kitaplığına kaydedebilirsiniz.
NSLog ifadesini kod parçacığı kitaplığına sürükleyin.
Artık kod parçacığını projede başka herhangi bir yerde yeniden kullanabilirsiniz. Ayrıca kod parçacığını özelleştirebilir ve bw &amp;lt;# ve #&amp;gt; ifadeleri vererek yer tutucu metinler ekleyebilirsiniz.
Bu kod parçacığını sürükleyip bırakın, yer tutucu metin içeren bir NSLog verir.</description>
    </item>
    
    <item>
      <title>Sertifikalar, Sağlama Profilleri ve Kod İmzalama</title>
      <link>https://www.wikiod.com/tr/xcode/sertifikalar-saglama-profilleri-ve-kod-imzalama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/sertifikalar-saglama-profilleri-ve-kod-imzalama/</guid>
      <description>Doğru kod imzalama yaklaşımını seçin # Yeni bir projeye yeni başlıyorsanız, kod imzalamayı nasıl ele almak istediğinizi düşünmek önemlidir.
Kod imzalama konusunda yeniyseniz, Xcode&amp;rsquo;da kod imzalamanın temellerini açıklayan WWDC oturumuna göz atın.
Uygulamanızı uygun şekilde kod imzalamak için yerel makinenizde aşağıdaki kaynaklara sahip olmanız gerekir:
Özel anahtar (.p12 dosyası) Özel anahtarla eşleşen sertifika (.cer dosyası) Yerel olarak yüklenen sertifika ve özel anahtarla eşleşen ön hazırlık profili (.mobileprovision dosyası) Apple Developer Portal&amp;rsquo;da ayrıca ön hazırlık profilinizle ilişkili geçerli bir Uygulama Kimliğine sahip olmanız gerekir.</description>
    </item>
    
    <item>
      <title>Platformlar Arası Geliştirme</title>
      <link>https://www.wikiod.com/tr/xcode/platformlar-aras-gelistirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/platformlar-aras-gelistirme/</guid>
      <description>HedefKoşullar # TargetConditionals.h sistem başlığı, hangi platformu kullandığınızı belirlemek için C ve Objective-C&amp;rsquo;den kullanabileceğiniz birkaç makro tanımlar.
#import &amp;lt;TargetConditionals.h&amp;gt; // imported automatically with Foundation - (void)doSomethingPlatformSpecific { #if TARGET_OS_IOS // code that is compiled for iPhone / iPhone Simulator #elif TARGET_OS_MAC &amp;amp;&amp;amp; !TARGET_OS_IPHONE // code that is compiled for OS X only #else // code that is compiled for other platforms #endif } Makroların değerleri şunlardır:
iOS 9.1, tvOS 9.0, watchOS 2.</description>
    </item>
    
    <item>
      <title>Xcode IDE&#39;yi Özelleştirme</title>
      <link>https://www.wikiod.com/tr/xcode/xcode-ideyi-ozellestirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/xcode-ideyi-ozellestirme/</guid>
      <description>Bu, Xcode IDE&amp;rsquo;nizi özelleştirmek ve geliştirmek için farklı ipuçları ve püf noktaları topluluğudur.
Mevcut Xcode proje klasöründe Terminal&amp;rsquo;i açın # Xcode, kısayol tuşuyla herhangi bir komut dosyasını çalıştırma yeteneğine sahiptir.
Geçerli proje klasöründe Terminal uygulamasını açmak için ⌘+⌥+⌃+⇧+T kısayol tuşunun nasıl atanacağı örneği.
Bash betiği oluşturun ve bir klasöre kaydedin
#!/bin/bash
Project Name: $XcodeProject # Project Dir: $XcodeProjectPath # Workspace Dir: $XcodeWorkspacePath # open -a Terminal &amp;ldquo;$(dirname $XcodeProjectPath)&amp;rdquo;
Komut dosyasını yürütülebilir yapın: komut dosyası klasöründe Terminal&amp;rsquo;i açın ve chmod +x your_script_name.</description>
    </item>
    
    <item>
      <title>oyun alanları</title>
      <link>https://www.wikiod.com/tr/xcode/oyun-alanlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/oyun-alanlar/</guid>
      <description>Oyun Alanına Başlarken # Yeni bir oyun alanı dosyası oluşturun:
First option: From Xcode welcome screen, select the first option (Get started with a playground). Second option: From menu select File → New → Playground (⌥⇧⌘N). Oyun alanınıza bir ad verin ve platformu seçin (iOS/macOS/tvOS), ardından İleri&amp;lsquo;ye tıklayın.
Bir sonraki ekranda oyun alanınızı nereye kaydetmek istediğinizi seçin ve ardından Oluştur&amp;lsquo;a tıklayın. En Son Değer, Değer Geçmişi ve Grafik # Playground&amp;rsquo;u kullanarak, değişiklik olurken döngülerin veya nesnelerin içinde olduğunu görmek kolaydır.</description>
    </item>
    
    <item>
      <title>Xcode 8 özellikleri</title>
      <link>https://www.wikiod.com/tr/xcode/xcode-8-ozellikleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/xcode/xcode-8-ozellikleri/</guid>
      <description>Bu yalnızca Swift 3+ kullanan projelerle çalışır
Renk ve görüntü değişmezleri # Xcode 8, Varlık Kataloğu&amp;rsquo;ndaki tüm resimleri otomatik olarak tanır ve bunları bir UIImage başlatıcısı içinde öneri olarak sunar.
Böylece temelde yeni bir değişken bildirebilir ve ardından varlık kataloğunuza eklediğiniz bir varlık adı ekleyebilirsiniz. Örneğin &amp;rsquo;let img = köpek&amp;rsquo;. &amp;ldquo;img&amp;rdquo; artık varlık kataloğunda bulunan &amp;ldquo;köpek&amp;rdquo; resmini içermiyor.
Kaputun altında şuna benzeyen bir kod oluşturuyor: #imageLiteral(resourceName: &amp;ldquo;dog.png&amp;rdquo;). Ancak kaynak düzenleyicide satır içi, yalnızca görüntünün dosya adını görürsünüz.</description>
    </item>
    
  </channel>
</rss>
