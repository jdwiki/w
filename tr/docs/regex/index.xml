<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Normal İfadeler Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/regex/</link>
    <description>Recent content in Normal İfadeler Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/regex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Normal İfadeleri kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/regex/normal-ifadeleri-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/normal-ifadeleri-kullanmaya-baslama/</guid>
      <description>Karakter Rehberi # Bazı sözdizimi öğelerinin ifadeye bağlı olarak farklı davranışları olduğunu unutmayın.
sözdizimi Tanım ? Önceki karakteri veya alt ifadeyi 0 veya 1 kez eşleştirin. Yakalamayan gruplar ve adlandırılmış yakalama grupları için de kullanılır. * Önceki karakteri veya alt ifadeyi 0 veya daha fazla kez eşleştirin. + Önceki karakteri veya alt ifadeyi 1 veya daha fazla kez eşleştirin. {n} Önceki karakteri veya alt ifadeyi tam olarak n kez eşleştirin. {dk,} Önceki karakteri veya min alt ifadesini veya daha fazla kez eşleştirin.</description>
    </item>
    
    <item>
      <title>Çapa Karakterleri İmleç (^)</title>
      <link>https://www.wikiod.com/tr/regex/capa-karakterleri-imlec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/capa-karakterleri-imlec/</guid>
      <description>Terminoloji
Caret (^) karakteri aşağıdaki terimlerle de anılır:
şapka kontrol yukarı ok şerit inceltme vurgusu Kullanım
Normal ifadelerde iki kullanımı vardır:
Satırın başlangıcını belirtmek için Köşeli parantezden ([^) hemen sonra kullanılırsa, izin verilen karakter kümesini olumsuzlama işlevi görür (yani, [123] 1, 2 veya 3 karakterine izin verilirken, [^123] deyimi 1, 2 veya 3 dışında herhangi bir karaktere izin verildiği anlamına gelir. Karakterden Kaçış
Özel bir anlamı olmayan bir şapka işaretini ifade etmek için, önüne ters eğik çizgi ile kaçınılmalıdır; yani \^.</description>
    </item>
    
    <item>
      <title>Açgözlü ve Tembel niceleyiciler</title>
      <link>https://www.wikiod.com/tr/regex/acgozlu-ve-tembel-niceleyiciler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/acgozlu-ve-tembel-niceleyiciler/</guid>
      <description>Parametreler # Niceleyiciler Tanım ? Önceki karakteri veya alt ifadeyi 0 veya 1 kez (tercihen 1) eşleştirin. * Önceki karakteri veya alt ifadeyi 0 veya daha fazla kez (mümkün olduğunca çok) eşleştirin. + Önceki karakteri veya alt ifadeyi 1 veya daha fazla kez (mümkün olduğunca çok) eşleştirin. {n} Önceki karakteri veya alt ifadeyi tam olarak n kez eşleştirin. {dk,} Önceki karakteri veya alt ifadeyi min veya daha fazla (mümkün olduğunca çok) eşleştirin.</description>
    </item>
    
    <item>
      <title>İleri ve Arkaya Bak</title>
      <link>https://www.wikiod.com/tr/regex/ileri-ve-arkaya-bak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/ileri-ve-arkaya-bak/</guid>
      <description>Sözdizimi # Pozitif öngörü: (?=kalıp) Olumsuz bakış açısı: (?!desen) Pozitif arkadan bakış: (?&amp;lt;=kalıp) Olumsuz bakış: (?&amp;lt;!pattern) Tüm normal ifade motorları tarafından desteklenmez.
Ek olarak, birçok normal ifade motoru, arka plandaki kalıpları sabit uzunluklu dizelerle sınırlar. Örneğin, &amp;ldquo;(?&amp;lt;=a+)b&amp;rdquo; kalıbının &amp;ldquo;aaab&amp;quot;daki &amp;ldquo;b&amp;rdquo; ile eşleşmesi gerekir, ancak Python&amp;rsquo;da bir hata verir.
Grupları yakalamaya izin verilir ve geri referanslar da dahil olmak üzere beklendiği gibi çalışır. Bununla birlikte, ileriye dönük/arkaya bakan bir yakalama grubu değildir.</description>
    </item>
    
    <item>
      <title>Regex değiştiricileri (bayraklar)</title>
      <link>https://www.wikiod.com/tr/regex/regex-degistiricileri-bayraklar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/regex-degistiricileri-bayraklar/</guid>
      <description>Normal ifade kalıpları genellikle, normal ifade davranışını yeniden tanımlayan değiştiriciler (bayraklar olarak da adlandırılır) ile birlikte kullanılır. Normal ifade değiştiricileri normal (ör. &amp;ldquo;/abc/i&amp;rdquo;) ve satır içi (veya gömülü) (ör. &amp;ldquo;(?i)abc&amp;rdquo;) olabilir. En yaygın değiştiriciler genel, büyük/küçük harfe duyarlı olmayan, çok satırlı ve noktalı değiştiricilerdir. Ancak, normal ifade türleri, desteklenen normal ifade değiştiricilerinin sayısı ve türleri bakımından farklılık gösterir.
PCRE Değiştiriciler Değiştirici satır içi Açıklama PCRE_CASELESS (?i) Büyük/küçük harfe duyarsız eşleşme PCRE_MULTILINE (?</description>
    </item>
    
    <item>
      <title>Yakalama Grupları</title>
      <link>https://www.wikiod.com/tr/regex/yakalama-gruplar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/yakalama-gruplar/</guid>
      <description>Temel Yakalama Grupları # Bir grup, &amp;ldquo;()&amp;rdquo; parantezleri içine alınmış normal bir ifadenin bir bölümüdür. Bu genellikle &amp;ldquo;alt ifade&amp;rdquo; olarak adlandırılır ve iki amaca hizmet eder:
Alt ifadeyi atomik hale getirir, yani bir bütün olarak eşleşir, başarısız olur veya tekrar eder. Eşleşen metnin kısmına, ifadenin geri kalanında ve programın geri kalanında erişilebilir. Gruplar, normal ifade motorlarında 1 ile başlayarak numaralandırılır. Geleneksel olarak maksimum grup sayısı 9&amp;rsquo;dur, ancak birçok modern normal ifade çeşidi daha yüksek grup sayılarını destekler.</description>
    </item>
    
    <item>
      <title>Karakter sınıfları</title>
      <link>https://www.wikiod.com/tr/regex/karakter-snflar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/karakter-snflar/</guid>
      <description>Basit sınıflar # normal ifade Maçlar [abc] Aşağıdaki karakterlerden herhangi biri: &amp;ldquo;a&amp;rdquo;, &amp;ldquo;b&amp;rdquo; veya &amp;ldquo;c&amp;rdquo; [a-z] &amp;ldquo;a&amp;rdquo; ile &amp;ldquo;z&amp;rdquo; arasındaki herhangi bir karakter, dahil (buna aralık denir) [0-9] &amp;ldquo;0&amp;rdquo; ile &amp;ldquo;9&amp;rdquo; arasındaki herhangi bir rakam, dahil Ortak sınıflar # Bazı karakter grupları/aralıkları o kadar sık ​​kullanılıyor ki, özel kısaltmaları var:
normal ifade Maçlar \w Alfanümerik karakterler artı alt çizgi (&amp;ldquo;kelime karakterleri&amp;rdquo; olarak da anılır) \W Kelime olmayan karakterler ([^\w] ile aynı) \d Rakamlar (Farsça rakamları, Hint rakamlarını vb.</description>
    </item>
    
    <item>
      <title>Kelime sınırı</title>
      <link>https://www.wikiod.com/tr/regex/kelime-snr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/kelime-snr/</guid>
      <description>Sözdizimi # POSIX stili, kelimenin sonu: `[[:&amp;gt;:]]&#39; POSIX stili, kelimenin başlangıcı: `[[:&amp;lt;:]]&#39; POSIX stili, kelime sınırı: `[[:&amp;lt;:][:&amp;gt;:]]&#39; SVR4/GNU, kelimenin sonu: \&amp;gt; SVR4/GNU, kelimenin başlangıcı: \&amp;lt; Perl/GNU, sözcük sınırı: `\b&#39; Tcl, kelimenin sonu: \M Tcl, kelimenin başlangıcı: \m Tcl, kelime sınırı: \y Taşınabilir ERE, kelimenin başlangıcı: (^|[^[:alnum:]_]) Taşınabilir ERE, kelimenin sonu: ([^[:alnum:]_]|$) Ek kaynaklar # Normal ifadelerle ilgili POSIX bölümü Perl düzenli ifade belgeleri Tcl yeniden sözdizimi kılavuzu sayfası GNU grep ters eğik çizgi ifadeleri [BSD yeniden biçimi][yeni biçim] Daha fazla okuma Kelime sınırları # &amp;ldquo;\b&amp;rdquo; meta karakteri # Tüm kelimeleri bulmayı kolaylaştırmak için \b meta karakterini kullanabiliriz.</description>
    </item>
    
    <item>
      <title>Maç Sıfırlama K</title>
      <link>https://www.wikiod.com/tr/regex/mac-sfrlama-k/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/mac-sfrlama-k/</guid>
      <description>Regex101, \K işlevselliğini şu şekilde tanımlar:
\K, bildirilen eşleşmenin başlangıç ​​noktasını sıfırlar. Daha önce tüketilen karakterler artık final maçına dahil edilmeyecek
&amp;ldquo;\K&amp;rdquo; kaçış dizisi, aşağıdakiler gibi çeşitli motorlar, diller veya araçlar tarafından desteklenir:
artırmak (çünkü ???) grep -P ← PCRE kullanır Oniguruma (5.13.3&amp;rsquo;ten beri) PCRE (7.2&amp;rsquo;den beri) Perl (5.10.0&amp;rsquo;dan beri) PHP (5.2.4&amp;rsquo;ten beri) Yakut (2.0.0&amp;rsquo;dan beri) &amp;hellip; ve (şimdiye kadar) tarafından desteklenmiyor:
.NET awk bash GNU ICU Java Javascript Not Defteri++ Amaç-C POSIX Python Qt/QRegExp sed Tcl vim XML XPath \K operatörünü kullanarak arayın ve değiştirin # Metin verildiğinde:</description>
    </item>
    
    <item>
      <title>Faydalı Normal İfade Vitrini</title>
      <link>https://www.wikiod.com/tr/regex/faydal-normal-ifade-vitrini/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/regex/faydal-normal-ifade-vitrini/</guid>
      <description>Bir e-posta adresini eşleştirin # Bir dizi içinde bir e-posta adresini eşleştirmek zor bir iştir, çünkü onu tanımlayan spesifikasyon, RFC2822, karmaşıktır ve normal ifade olarak uygulanmasını zorlaştırır. Neden olduğu hakkında daha fazla ayrıntı için bir e-postayı normal ifadeyle eşleştirmek iyi bir fikir değil, lütfen antipattern örneği [ne zaman normal ifade kullanılmamalı: eşleştirme için e-postalar](https://www.wikiod.com/tr/regex/normal-ifadeleri-ne-zaman-kullanmamalisiniz numara veya kredi kartı numarası veya#t=201607301200162540574). Bu sayfadan not edilmesi gereken en iyi tavsiye, bir meslektaş tarafından gözden geçirilmiş ve yaygın olarak bunu uygulamak için en sevdiğiniz dilde kitaplık.</description>
    </item>
    
  </channel>
</rss>
