<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VBA Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/vba/</link>
    <description>Recent content in VBA Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/vba/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VBA&#39;yı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/vba/vbay-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/vbay-kullanmaya-baslama/</guid>
      <description>Microsoft Office&amp;rsquo;te Visual Basic Düzenleyicisine Erişme # VB düzenleyicisini herhangi bir Microsoft Office uygulamasında Alt+F11 tuşlarına basarak veya Geliştirici sekmesine gidip &amp;ldquo;Visual Basic&amp;rdquo; düğmesini tıklayarak açabilirsiniz. Şeritte Geliştirici sekmesini görmüyorsanız, bunun etkin olup olmadığını kontrol edin.
Varsayılan olarak Geliştirici sekmesi devre dışıdır. Geliştirici sekmesini etkinleştirmek için Dosya -&amp;gt; Seçenekler&amp;rsquo;e gidin, soldaki listeden Şeridi Özelleştir&amp;rsquo;i seçin. Sağdaki &amp;ldquo;Şeridi Özelleştir&amp;rdquo; ağaç görünümünde Geliştirici ağacı öğesini bulun ve Geliştirici onay kutusunun işaretini işaretli olarak ayarlayın.</description>
    </item>
    
    <item>
      <title>Scripting.Dictionary nesnesi</title>
      <link>https://www.wikiod.com/tr/vba/scriptingdictionary-nesnesi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/scriptingdictionary-nesnesi/</guid>
      <description>Komut Dosyası Sözlüğü nesnesinin erken bağlamasını uygulamak için VBE&amp;rsquo;nin Araçlar → Başvurular komutu aracılığıyla VBA projesine Microsoft Komut Dosyası Çalıştırma Zamanı eklemelisiniz. Bu kütüphane referansı proje ile birlikte taşınır; VBA projesi dağıtıldığında ve başka bir bilgisayarda çalıştırıldığında yeniden başvurulması gerekmez.
Özellikler ve Yöntemler # Bir Komut Dosyası Sözlüğü nesnesi, bilgileri Anahtar/Öğe çiftlerinde depolar. Anahtarlar benzersiz olmalı ve bir dizi olmamalıdır, ancak ilişkili Öğeler tekrarlanabilir (benzersizlikleri tamamlayıcı Anahtar tarafından tutulur) ve herhangi bir türde değişken veya nesne olabilir.</description>
    </item>
    
    <item>
      <title>Değişkenleri Bildirmek</title>
      <link>https://www.wikiod.com/tr/vba/degiskenleri-bildirmek/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/degiskenleri-bildirmek/</guid>
      <description>Tip İpuçları # Tip İpuçları şiddetle önerilmez. Tarihsel ve geriye dönük uyumluluk nedenleriyle burada mevcutturlar ve belgelenmiştir. Bunun yerine As [DataType] sözdizimini kullanmalısınız.
Public Sub ExampleDeclaration() Dim someInteger% &#39;% Equivalent to &amp;quot;As Integer&amp;quot; Dim someLong&amp;amp; &#39;&amp;amp; Equivalent to &amp;quot;As Long&amp;quot; Dim someDecimal@ &#39;@ Equivalent to &amp;quot;As Currency&amp;quot; Dim someSingle! &#39;! Equivalent to &amp;quot;As Single&amp;quot; Dim someDouble# &#39;# Equivalent to &amp;quot;As Double&amp;quot; Dim someString$ &#39;$ Equivalent to &amp;quot;As String&amp;quot; Dim someLongLong^ &#39;^ Equivalent to &amp;quot;As LongLong&amp;quot; in 64-bit VBA hosts End Sub Yazım ipuçları, kodun okunabilirliğini önemli ölçüde azaltır ve aynı zamanda okunabilirliği engelleyen eski bir Macar Notasyonu teşvik eder:</description>
    </item>
    
    <item>
      <title>Öznitellikler</title>
      <link>https://www.wikiod.com/tr/vba/oznitellikler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/oznitellikler/</guid>
      <description>Sözdizimi # Nitelik VB_Name = &amp;ldquo;ClassOrModuleName&amp;rdquo; Nitelik VB_GlobalNameSpace = False &amp;rsquo; Yok sayıldı Nitelik VB_Creatable = False &amp;rsquo; Yok sayıldı Öznitelik VB_PredeclaredId = {True | Yanlış} Öznitelik VB_Exposed = {Doğru | Yanlış} Öznitelik değişkeniName.VB_VarUserMemId = 0 &amp;rsquo; Sıfır, bunun sınıfın varsayılan üyesi olduğunu gösterir. Nitelik değişkeniName.VB_VarDescription = &amp;ldquo;bazı dize&amp;rdquo; &amp;rsquo; Metni, bu değişken için Nesne Tarayıcı bilgilerine ekler. Attribute procName.VB_Description = &amp;ldquo;bazı dize&amp;rdquo; &amp;rsquo; Metni, prosedür için Nesne Tarayıcı bilgilerine ekler.</description>
    </item>
    
    <item>
      <title>CreateObject ve GetObject karşılaştırması</title>
      <link>https://www.wikiod.com/tr/vba/createobject-ve-getobject-karslastrmas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/createobject-ve-getobject-karslastrmas/</guid>
      <description>En basit haliyle, &amp;ldquo;CreateObject&amp;rdquo; bir nesnenin örneğini oluştururken &amp;ldquo;GetObject&amp;rdquo; bir nesnenin mevcut bir örneğini alır. Bir nesnenin oluşturulup oluşturulamayacağını veya elde edilip edilemeyeceğini belirlemek, onun Örnekleme özelliğine bağlıdır. -2147217396). Bazı nesneler SingleUse&amp;rsquo;dur (örneğin, WMI) ve zaten mevcutlarsa oluşturulamazlar. Diğer nesneler (örn. Excel) MultiUse&amp;rsquo;dur ve aynı anda birden çok örneğin çalışmasına izin verir. Bir nesnenin örneği zaten mevcut değilse ve &amp;lsquo;GetObject&amp;rsquo;i denerseniz, aşağıdaki yakalanabilir mesajı alırsınız: &amp;lsquo;Çalışma zamanı hatası &amp;lsquo;429&amp;rsquo;: ActiveX bileşeni nesne oluşturamıyor&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Adlandırma Kuralları</title>
      <link>https://www.wikiod.com/tr/vba/adlandrma-kurallar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/adlandrma-kurallar/</guid>
      <description>Değişken Adları # Değişkenler verileri tutar. Bir isim kullanarak veri türlerinden veya kapsamlarından sonra değil, kullanıldıklarından sonra adlandırın. Değişkenlerinizi numaralandırmaya mecbur hissediyorsanız (ör. &amp;ldquo;şey1, şey2, şey3&amp;rdquo;), bunun yerine uygun bir veri yapısı kullanmayı düşünün (ör. bir dizi, &amp;ldquo;Koleksiyon&amp;rdquo; veya &amp;ldquo;Sözlük&amp;rdquo;).
Yinelenebilir bir değer kümesini temsil eden değişkenlerin adları - ör. bir dizi, bir &amp;ldquo;Koleksiyon&amp;rdquo;, bir &amp;ldquo;Sözlük&amp;rdquo; veya bir &amp;ldquo;Aralık&amp;rdquo; hücre çoğul olmalıdır.
Bazı yaygın VBA adlandırma kuralları şu şekildedir:
Prosedür düzeyindeki Değişkenler için:</description>
    </item>
    
    <item>
      <title>Veri Tipleri ve Limitleri</title>
      <link>https://www.wikiod.com/tr/vba/veri-tipleri-ve-limitleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/veri-tipleri-ve-limitleri/</guid>
      <description>Varyant # Dim Value As Variant &#39;Explicit Dim Value &#39;Implicit Varyant, rastgele türlerin değerlerini depolamak ve değiştirmek için kullanılan bir COM veri türüdür ve VBA&amp;rsquo;daki diğer herhangi bir tür bir Varyanta atanabilir. &amp;lsquo;As [Tür]&amp;rsquo; tarafından belirtilen açık bir tür olmadan bildirilen değişkenler, varsayılan olarak Variant&amp;rsquo;tır.
Varyantlar bellekte bir bayt türü tanımlayıcısından oluşan bir VARIANT yapısı olarak depolanır. (VARTYPE) ardından 6 ayrılmış bayt, ardından 8 baytlık bir veri alanı. Sayısal türler için (Tarih ve Boolean dahil), temel alınan değer Variant&amp;rsquo;ın kendisinde depolanır.</description>
    </item>
    
    <item>
      <title>Scripting.FileSystemObject</title>
      <link>https://www.wikiod.com/tr/vba/scriptingfilesystemobject/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/scriptingfilesystemobject/</guid>
      <description>Bir dosya yolundan yalnızca yolu al # GetParentFolderName yöntemi, herhangi bir yol için üst klasörü döndürür. Bu, klasörlerle de kullanılabilse de, yolu mutlak bir dosya yolundan çıkarmak için tartışmasız daha kullanışlıdır:
Dim fso As New Scripting.FileSystemObject Debug.Print fso.GetParentFolderName(&amp;quot;C:\Users\Me\My Documents\SomeFile.txt&amp;quot;) C:\Kullanıcılar\Ben\Belgelerim yazdırır
Sondaki yol ayırıcının döndürülen dizeye dahil edilmediğine dikkat edin.
Bir dosya adından yalnızca uzantıyı alın # Dim fso As New Scripting.FileSystemObject Debug.Print fso.GetExtensionName(&amp;quot;MyFile.something.txt&amp;quot;) &amp;ldquo;txt&amp;rdquo; yazdırır GetExtensionName() yönteminin bir dosya adında birden çok noktayı zaten işlediğine dikkat edin.</description>
    </item>
    
    <item>
      <title>Hata yönetimi</title>
      <link>https://www.wikiod.com/tr/vba/hata-yonetimi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/hata-yonetimi/</guid>
      <description>Hata koşullarından kaçınma # Bir çalışma zamanı hatası oluştuğunda, bunu iyi kod işlemelidir. En iyi hata işleme stratejisi, hata koşullarını kontrol eden ve çalışma zamanı hatasıyla sonuçlanan kodun yürütülmesinden kaçınan kod yazmaktır.
Çalışma zamanı hatalarını azaltmanın kilit unsurlarından biri, tek bir şey yapan küçük prosedürler yazmaktır. Prosedürlerin başarısız olması için ne kadar az neden varsa, kodun bir bütün olarak hata ayıklaması o kadar kolay olur.
Çalışma zamanı hatasından kaçınma 91 - Nesne veya Blok değişkeni ayarlanmadı:</description>
    </item>
    
    <item>
      <title>diziler</title>
      <link>https://www.wikiod.com/tr/vba/diziler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/vba/diziler/</guid>
      <description>Çok Boyutlu Diziler # Çok Boyutlu Diziler # Adından da anlaşılacağı gibi, çok boyutlu diziler, genellikle iki veya üç olmak üzere birden fazla boyut içeren ancak 32&amp;rsquo;ye kadar boyuta sahip olabilen dizilerdir.
Bir çoklu dizi, çeşitli düzeylerde bir matris gibi çalışır, örneğin bir, iki ve üç Boyut arasında bir karşılaştırma yapın.
One Dimension, tipik dizinizdir, bir öğe listesi gibi görünür.
Dim 1D(3) as Variant *1D - Visually* (0) (1) (2) İki Boyut, bir Sudoku Izgarası veya bir Excel sayfası gibi görünür, diziyi başlatırken, dizinin kaç satır ve sütuna sahip olacağını tanımlarsınız.</description>
    </item>
    
  </channel>
</rss>
