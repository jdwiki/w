<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.js Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/node-js/</link>
    <description>Recent content in Node.js Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/node-js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node.js&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/node-js/nodejsyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/nodejsyi-kullanmaya-baslama/</guid>
      <description>Merhaba Dünya HTTP sunucusu # İlk olarak, platformunuz için Node.js&amp;rsquo;yi yükleyin.
Bu örnekte, tarayıcıya Merhaba Dünya! gönderen 1337 numaralı bağlantı noktasını dinleyen bir HTTP sunucusu oluşturacağız. 1337 numaralı bağlantı noktasını kullanmak yerine, şu anda başka bir hizmet tarafından kullanılmayan istediğiniz herhangi bir bağlantı noktası numarasını kullanabileceğinizi unutmayın.
&amp;ldquo;http&amp;rdquo; modülü bir Node.js&amp;rsquo;dir [core module](https://www.wikiod.com/tr/node-js/nodejsyi-kullanmaya-baslama#Çekirdek modüller ) (Ek kaynakların yüklenmesini gerektirmeyen, Node.js&amp;rsquo;nin kaynağında bulunan bir modül). http modülü, http.createServer() yöntemini kullanarak bir HTTP sunucusu oluşturma işlevselliği sağlar.</description>
    </item>
    
    <item>
      <title>Node.js&#39;yi yükleme</title>
      <link>https://www.wikiod.com/tr/node-js/nodejsyi-yukleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/nodejsyi-yukleme/</guid>
      <description>Düğüm Sürüm Yöneticisini Kullanma (nvm) # Node Version Manager, diğer adıyla nvm, birden çok Node.js sürümünün yönetimini basitleştiren bir bash betiğidir.
nvm&amp;rsquo;yi kurmak için sağlanan kurulum komut dosyasını kullanın:
$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.3/install.sh | bash Windows için, yükleyici içeren bir nvm-windows paketi vardır. Bu GithHub sayfası, nvm-windows paketini yükleme ve kullanmayla ilgili ayrıntılara sahiptir.
nvm&amp;rsquo;yi kurduktan sonra komut satırından &amp;ldquo;nvm on&amp;rdquo; komutunu çalıştırın. Bu, nvm&amp;rsquo;nin düğüm sürümlerini kontrol etmesini sağlar.</description>
    </item>
    
    <item>
      <title>Express ile Web Uygulamaları</title>
      <link>https://www.wikiod.com/tr/node-js/express-ile-web-uygulamalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/express-ile-web-uygulamalar/</guid>
      <description>Express, web uygulamaları oluşturmak için sağlam bir dizi özellik sağlayan, minimal ve esnek bir Node.js web uygulaması çerçevesidir.
Express&amp;rsquo;in resmi web sitesi expressjs.com&amp;lsquo;dir. Kaynak GitHub adresinde bulunabilir.
Sözdizimi # app.get(yol [, ara katman yazılımı], geri arama[, geri arama&amp;hellip;]) app.put(yol [, ara katman yazılımı], geri arama[, geri arama&amp;hellip;]) app.post(yol [, ara katman], geri arama[, geri arama&amp;hellip;]) app[&amp;lsquo;delete&amp;rsquo;](yol [, ara katman yazılımı], geri arama[, geri arama&amp;hellip;]) app.use(yol [, ara katman yazılımı], geri arama[, geri arama&amp;hellip;]) app.</description>
    </item>
    
    <item>
      <title>npm</title>
      <link>https://www.wikiod.com/tr/node-js/npm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/npm/</guid>
      <description>Düğüm Paket Yöneticisi (npm) aşağıdaki iki ana işlevi sağlar: node.js paketleri/modülleri için search.nodejs.org&amp;rsquo;da aranabilen çevrimiçi depolar. Node.js paketlerini yüklemek, Node.js paketlerinin sürüm yönetimini ve bağımlılık yönetimini yapmak için komut satırı yardımcı programı.
Sözdizimi # npm &amp;lt;command&amp;gt; burada &amp;lt;command&amp;gt; şunlardan biridir: kullanıcı ekle aduser apihelp yazar çöp Kutusu böcekler c [önbellek] tamamlama [yapılandırma] [ddp][dedupe] [tekilleştirme] kullanımdan kaldırmak belgeler Düzenle keşfetmek SSS bulmak bul-dupes [al][yapılandırma] [Yardım Edin] [yardım arama] ev [i][17] [yükle][17] bilgi [ısı][ısı] değil konular [bağ][11] [liste] LL ln giriş yapmak ls modası geçmiş [sahip] ambalaj önek [kuru erik] yayınla r [rb][yeniden inşa] [yeniden inşa] kaldırmak [repo] [tekrar başlat] [rm] kök [çalıştır komut dosyası][komut dosyası] [s][ara] [se][ara] [arama] [ayarla][yapılandırma] göstermek streç film [yıldız][9] [yıldızlar][16] [başlangıç][15] [durdur][14] [alt modül][13] [etiket][4] [deneme][3] [tst][3] [ve][12] [kaldır][12] [bağlantıyı kaldır][11] [yayından kaldır][10] [yıldızı kaldır][9] [yukarı][8] [güncelleme][8] [v][7] [sürüm][7] [görünüm][6] [vay][5] 2: https://www.</description>
    </item>
    
    <item>
      <title>MySQL entegrasyonu</title>
      <link>https://www.wikiod.com/tr/node-js/mysql-entegrasyonu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/mysql-entegrasyonu/</guid>
      <description>Bu konuda, MYSQL veritabanı yönetim aracını kullanarak Node.js ile nasıl entegre edeceğinizi öğreneceksiniz. Bir nodejs programı ve betiği kullanarak mysql&amp;rsquo;de bulunan verilerle bağlantı kurmanın ve bunlarla etkileşim kurmanın çeşitli yollarını öğreneceksiniz.
MySQL&amp;rsquo;e bağlanın # MySQL&amp;rsquo;e bağlanmanın en kolay yollarından biri mysql modülünü kullanmaktır. Bu modül, Node.js uygulaması ile MySQL sunucusu arasındaki bağlantıyı yönetir. Diğer modüller gibi kurabilirsiniz:
npm install --save mysql Şimdi daha sonra sorgulayabileceğiniz bir mysql bağlantısı oluşturmanız gerekiyor.</description>
    </item>
    
    <item>
      <title>Node.js uygulamalarının güvenliğini sağlama</title>
      <link>https://www.wikiod.com/tr/node-js/nodejs-uygulamalarnn-guvenligini-saglama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/nodejs-uygulamalarnn-guvenligini-saglama/</guid>
      <description>Node.js&amp;rsquo;de SSL/TLS # Node.js uygulamanızda SSL/TLS&amp;rsquo;yi işlemeyi seçerseniz, bu noktada SSL/TLS saldırılarını önleme sorumluluğunun da size ait olduğunu düşünün. Birçok sunucu-istemci mimarisinde, SSL/TLS, hem uygulama karmaşıklığını azaltmak hem de güvenlik yapılandırmasının kapsamını azaltmak için bir ters proxy üzerinde sonlandırılır.
Node.js uygulamanızın SSL/TLS&amp;rsquo;yi işlemesi gerekiyorsa, anahtar ve sertifika dosyaları yüklenerek güvenliği sağlanabilir.
Sertifika sağlayıcınız bir sertifika yetkilisi (CA) zinciri gerektiriyorsa, &amp;lsquo;ca&amp;rsquo; seçeneğine bir dizi olarak eklenebilir. Tek bir dosyada birden çok girişi olan bir zincir, birden çok dosyaya bölünmeli ve Node.</description>
    </item>
    
    <item>
      <title>paket.json</title>
      <link>https://www.wikiod.com/tr/node-js/paketjson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/paketjson/</guid>
      <description>ile package.json oluşturabilirsiniz.
npm init lisans tanımlayıcısı dahil olmak üzere projelerinizle ilgili temel bilgileri size soracaktır.
Kodlar # Başka bir komut dosyasından önce veya sonra çalıştırılabilen veya tetiklenen komut dosyaları tanımlayabilirsiniz.
{ &amp;quot;scripts&amp;quot;: { &amp;quot;pretest&amp;quot;: &amp;quot;scripts/pretest.js&amp;quot;, &amp;quot;test&amp;quot;: &amp;quot;scripts/test.js&amp;quot;, &amp;quot;posttest&amp;quot;: &amp;quot;scripts/posttest.js&amp;quot; } } Bu durumda, aşağıdaki komutlardan birini çalıştırarak komut dosyasını çalıştırabilirsiniz:
$ npm run-script test $ npm run test $ npm test $ npm t Önceden tanımlanmış komut dosyaları # Komut Dosyası Adı Açıklama ön yayın Paket yayınlanmadan önce çalıştırın.</description>
    </item>
    
    <item>
      <title>Dosya sistemi GÇ</title>
      <link>https://www.wikiod.com/tr/node-js/dosya-sistemi-gc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/dosya-sistemi-gc/</guid>
      <description>Node.js&amp;rsquo;de, G/Ç gibi yoğun kaynak işlemleri zaman uyumsuz olarak gerçekleştirilir, ancak eşzamanlı bir karşılığı vardır (örneğin, bir &amp;ldquo;fs.readFile&amp;rdquo; vardır ve karşılığı &amp;ldquo;fs.readFileSync&amp;quot;dir). Düğüm tek iş parçacıklı olduğundan, senkronize işlemleri kullanırken dikkatli olmalısınız, çünkü bunlar tüm işlemi engeller.
Bir işlem senkronize bir işlem tarafından engellenirse, tüm yürütme döngüsü (olay döngüsü dahil) durdurulur. Bu, olaylar ve olay işleyicileri dahil olmak üzere diğer eşzamansız kodun çalışmayacağı ve programınızın tek engelleme işlemi tamamlanana kadar beklemeye devam edeceği anlamına gelir.</description>
    </item>
    
    <item>
      <title>Üretimde Node.js uygulamalarını dağıtma</title>
      <link>https://www.wikiod.com/tr/node-js/uretimde-nodejs-uygulamalarn-dagtma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/uretimde-nodejs-uygulamalarn-dagtma/</guid>
      <description>NODE_ENV=&amp;ldquo;üretim&amp;rdquo; ayarı # Üretim dağıtımları birçok yönden farklılık gösterecektir, ancak üretimde dağıtım yaparken standart bir kural, &amp;ldquo;NODE_ENV&amp;rdquo; adlı bir ortam değişkeni tanımlamak ve değerini &amp;ldquo;üretim&amp;rdquo; olarak ayarlamaktır.
Çalışma zamanı bayrakları # Uygulamanızda çalışan herhangi bir kod (harici modüller dahil) &amp;ldquo;NODE_ENV&amp;rdquo; değerini kontrol edebilir:
if(process.env.NODE_ENV === &#39;production&#39;) { // We are running in production mode } else { // We are running in development mode } Bağımlılıklar # &amp;lsquo;NODE_ENV&amp;rsquo; ortam değişkeni &amp;lsquo;üretim&amp;rsquo; olarak ayarlandığında, package.</description>
    </item>
    
    <item>
      <title>Olay Yayıcıları</title>
      <link>https://www.wikiod.com/tr/node-js/olay-yayclar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/node-js/olay-yayclar/</guid>
      <description>Bir olay &amp;ldquo;harekete geçtiğinde&amp;rdquo; (&amp;ldquo;bir olay yayınlama&amp;rdquo; veya &amp;ldquo;bir olay yayma&amp;rdquo; ile aynı anlama gelir), her dinleyici, kendisine iletilen eşlik eden verilerle birlikte eşzamanlı olarak (kaynak) çağrılır. emit(), kaç tane argüman iletirseniz iletin:
myDog.on(&#39;bark&#39;, (howLoud, howLong, howIntense) =&amp;gt; { // handle the event }) myDog.emit(&#39;bark&#39;, &#39;loudly&#39;, &#39;5 seconds long&#39;, &#39;fiercely&#39;) Dinleyiciler, kayıtlı oldukları sıraya göre aranacaktır:
myDog.on(&#39;urinate&#39;, () =&amp;gt; console.log(&#39;My first thought was &amp;quot;Oh-no&amp;quot;&#39;)) myDog.on(&#39;urinate&#39;, () =&amp;gt; console.log(&#39;My second thought was &amp;quot;Not my lawn :)&amp;quot;&#39;)) myDog.</description>
    </item>
    
  </channel>
</rss>
