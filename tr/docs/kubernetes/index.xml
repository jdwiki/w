<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/kubernetes/</link>
    <description>Recent content in kubernetes Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/kubernetes/kubernetesi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/kubernetes/kubernetesi-kullanmaya-baslama/</guid>
      <description>Google Cloud&amp;rsquo;a yükleyin # Kubernetes, ilk olarak Google tarafından Container Engine için geliştirilmiştir. Bu nedenle, Kubernetes kümeleri Google&amp;rsquo;da birinci sınıf bir vatandaştır.
Kapsayıcı motorunda bir Kubernetes kümesi oluşturmak için Google Cloud SDK&amp;lsquo;dan &amp;ldquo;gcloud&amp;rdquo; komutu gerekir. Bu komutu yerel olarak yüklemek için aşağıdaki seçeneklerden birini kullanın:
etkileşimli yükleyiciyi kullanın (yeni başlayanlar için en kolay yol): curl https://sdk.cloud.google.com | bash exec -l $SHELL gcloud init https://cloud.google.com/sdk/ adresinden SDK&amp;rsquo;yı indirin ve uygun yükleme dosyasını çalıştırın.</description>
    </item>
    
    <item>
      <title>Kubernetes API&#39;sini çağırma</title>
      <link>https://www.wikiod.com/tr/kubernetes/kubernetes-apisini-cagrma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/kubernetes/kubernetes-apisini-cagrma/</guid>
      <description>Kubernetes Go İstemcisini Kullanma - Kümenin Dışında # package main import ( &amp;quot;fmt&amp;quot; &amp;quot;k8s.io/client-go/1.5/kubernetes&amp;quot; &amp;quot;k8s.io/client-go/1.5/pkg/api/v1&amp;quot; &amp;quot;k8s.io/client-go/1.5/tools/clientcmd&amp;quot; ) func main() { config, err := clientcmd.BuildConfigFromFlags(&amp;quot;&amp;quot;, &amp;lt;kube-config-path&amp;gt;) if err != nil { return nil, err } c, err := kubernetes.NewForConfig(config) if err != nil { return nil, err } // Get Pod by name pod, err := c.Pods(v1.NamespaceDefault).Get(&amp;quot;my-pod&amp;quot;) if err != nil { fmt.Println(err) return } // Print its creation time fmt.Println(pod.GetCreationTimestamp()) } Kubernetes Go İstemcisini Kullanma - Kümenin İçinde # package main import ( &amp;quot;fmt&amp;quot; &amp;quot;k8s.</description>
    </item>
    
    <item>
      <title>Kubernet&#39;ler üretimde</title>
      <link>https://www.wikiod.com/tr/kubernetes/kubernetler-uretimde/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/kubernetes/kubernetler-uretimde/</guid>
      <description>Üretim ortamında kubernet&amp;rsquo;lerin nasıl kullanılacağını tanıtın
Kubernetes ve ceph kullanarak üretimde zookeeper kümesini dağıtın # Dockerize hayvan bakıcısı-3.4.6 # Bir Docker dosyası oluşturun:
####################################################### # Image: img.reg.3g:15000/zookeeper:3.4.6 ####################################################### FROM img.reg.3g:15000/jdk:1.7.0_67 MAINTAINER lth9739@gmail.com USER root ENV ZOOKEEPER_VERSION 3.4.6 ADD Dockerfile / ADD zookeeper/ /opt/ COPY zoo.cfg /opt/zookeeper/conf/zoo.cfg RUN mkdir -p /opt/zookeeper/{data,log} WORKDIR /opt/zookeeper VOLUME [&amp;quot;/opt/zookeeper/conf&amp;quot;, &amp;quot;/opt/zookeeper/data&amp;quot;, &amp;quot;/opt/zookeeper/log&amp;quot;] COPY config-and-run.sh /opt/zookeeper/bin/ EXPOSE 2181 2888 3888 CMD [&amp;quot;/opt/zookeeper/bin/config-and-run.sh&amp;quot;] Daha fazla ayrıntıya bakın
Zookeeper çoğaltma denetleyicisini kubernetes kümesine dağıtın # Zookeeper&amp;rsquo;ın çoğaltma denetleyicisini dağıtmak için bu komutu kullanabilirsiniz:</description>
    </item>
    
  </channel>
</rss>
