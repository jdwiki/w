<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebSockets Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/websocket/</link>
    <description>Recent content in WebSockets Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/websocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WebSockets&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/websocket/websocketsi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/websocket/websocketsi-kullanmaya-baslama/</guid>
      <description>web soketi İstemci örneği # Bu, javascript&amp;rsquo;teki bir web soketi istemcisinin bir örneğidir. BT:
Canlı bir demo sunucusuna bağlanır. Bir mesaj gönderir. Mesaj(lar)ı alır. Bir aradan sonra bağlantı kesilir. var mySocket = null; var serverUrl = &#39;wss://echo.websocket.org&#39;; // wss: is ws: but using SSL. var oWebSocket = window.WebSocket || window.MozWebSocket; if (oWebSocket) { mySocket = new oWebSocket (serverUrl); if (mySocket) { console.log (mySocket); mySocket.onopen = onSocketOpen; mySocket.onclose = onSocketClose; mySocket.onmessage = onSocketMessage; mySocket.</description>
    </item>
    
    <item>
      <title>WebSockets ve AJAX arasındaki farklar</title>
      <link>https://www.wikiod.com/tr/websocket/websockets-ve-ajax-arasndaki-farklar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/websocket/websockets-ve-ajax-arasndaki-farklar/</guid>
      <description>Ajax, HTTP Protokolünü kullanır ve İstemciden Sunucuya POST/GET yöntemlerini kullanarak istek gönderebilir.
WebSocket, HTTP&amp;rsquo;den farklı olarak İstemci ve Sunucu arasında iletişim kurmak için bir protokoldür.
Ajax&amp;rsquo;ta bir istek gönderdiğinizde, sunucu o isteğe yanıt gönderir ve bağlantı sona erer.
Server ile bağlantı kurduğunuzda WebSockets kullanarak client ile server arasında istediğiniz kadar haberleşebilir ve bağlantıyı canlı tutabilirsiniz.
örnek bildirim alma # Ajax :
Yeni istek : Client sends request : Server , Do you have new notification ?</description>
    </item>
    
  </channel>
</rss>
