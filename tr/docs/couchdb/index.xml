<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sofadb Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/couchdb/</link>
    <description>Recent content in sofadb Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/couchdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>sofadb&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/couchdb/sofadbyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/couchdb/sofadbyi-kullanmaya-baslama/</guid>
      <description>Kurulum ve Kurulum # Ubuntu # En son Ubuntu sürümlerinde, sudo apt-get install couchdb ile CouchDB&amp;rsquo;nin güncel bir sürümünü yükleyebilirsiniz. Ubuntu 14.04 gibi daha eski sürümler için şunları çalıştırmalısınız:
sudo add-apt-repository ppa:couchdb/stable -y sudo apt-get update sudo apt-get install couchdb -y fötr şapka # Kanepedb&amp;rsquo;yi fedora r&amp;rsquo;ye kurmak için sudo dnf kanepedb&#39;yi kurun yapabilirsiniz.
Mac OS X # CouchDB&amp;rsquo;yi Mac OS X&amp;rsquo;e yüklemek için CouchDB indirmeleri bölümünden Mac uygulamasını yükleyebilirsiniz.</description>
    </item>
    
    <item>
      <title>Ektorp java istemcisi</title>
      <link>https://www.wikiod.com/tr/couchdb/ektorp-java-istemcisi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/couchdb/ektorp-java-istemcisi/</guid>
      <description>Ölçek
CouchDB ile bağlantı açma # HttpClient httpClient = new StdHttpClient.Builder(). url(&amp;quot;http://yourcouchdbhost:5984&amp;quot;). username(&amp;quot;admin&amp;quot;). password(&amp;quot;password&amp;quot;). build(); CouchDbInstance dbInstance = new StdCouchDbInstance(httpClient); POJO&amp;rsquo;larla basit CRUD # Ektorp ile ilgili harika şeylerden biri, kutudan çıktığı anda ORM benzeri işlevsellik sağlamasıdır. Bu örnek, basit bir POJO oluşturma ve üzerinde standart CRUD işlemi yapma konusunda size yol gösterecektir.
Basit bir POJO oluşturma # İlk olarak, bir POJO&amp;rsquo;yu aşağıdaki gibi tanımlıyoruz.
import com.fasterxml.jackson.annotation.JsonInclude; import com.fasterxml.jackson.annotation.JsonProperty; @JsonInclude(JsonInclude.Include.NON_NULL) public class Person { @JsonProperty(&amp;quot;_id&amp;quot;) private String id; @JsonProperty(&amp;quot;_rev&amp;quot;) private String revision; private String name; public String getId() { return id; } public String getRevision() { return revision; } public String getName() { return name; } public void setId(String id) { this.</description>
    </item>
    
    <item>
      <title>Tasarım Belgeleri</title>
      <link>https://www.wikiod.com/tr/couchdb/tasarm-belgeleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/couchdb/tasarm-belgeleri/</guid>
      <description>Tasarım belgeleri, revizyonlar, çoğaltma ve çakışmalar açısından tüm belgeler gibi davranır. Ayrıca tasarım belgelerine ekler de ekleyebilirsiniz.
_tasarım/örnek # Tasarım belgeleri uygulama mantığı içerir. Bir veritabanındaki &amp;ldquo;_design/&amp;rdquo; ile başlayan _id&amp;rsquo;ye sahip herhangi bir belge tasarım belgesi olarak kullanılabilir. Genellikle her uygulama için bir tasarım belgesi vardır.
{ &amp;quot;_id&amp;quot;: &amp;quot;_design/example&amp;quot;, &amp;quot;view&amp;quot;: { &amp;quot;foo&amp;quot;: { &amp;quot;map&amp;quot;: &amp;quot;function(doc){...};&amp;quot;, &amp;quot;reduce&amp;quot;: &amp;quot;function(keys, values, rereduce){...};&amp;quot; } } } Yukarıdaki örnek, veritabanının db: olarak adlandırıldığı varsayılarak, aşağıdaki yoldan istenebilecek foo adında bir görünüm tanımlar.</description>
    </item>
    
    <item>
      <title>Görüntüleme</title>
      <link>https://www.wikiod.com/tr/couchdb/goruntuleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/couchdb/goruntuleme/</guid>
      <description>İnsanlar için görüntülemeler # Görünümlerin nasıl çalıştığını size göstermek için, kişi türündeki belgeyi sorgulamak istediğimizi varsayacağız. Bunu yapmak için öncelikle görüşlerimizi tutacak bir tasarım belgesine ihtiyacımız olacak.
Not: Örnek amacıyla, 1 tasarım belgesinin içinde birçok görünüm kullanacağız. Bu nedenle, bir üretim ortamında, tasarım belgesi başına 1 görünüm tercih edebilirsiniz. Bunun nedeni, tasarım belgesini her güncellediğinizde tüm görünümlerin yeniden çalıştırılmasıdır (en azından Cloudant için).
Bu noktada, bir tasarım belgesinin ne olduğunu ve nasıl çalıştığını bildiğinizi varsayıyorum.</description>
    </item>
    
  </channel>
</rss>
