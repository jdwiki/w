<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>d3.js Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/d3-js/</link>
    <description>Recent content in d3.js Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/d3-js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>d3.js&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/d3-js/d3jsyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/d3jsyi-kullanmaya-baslama/</guid>
      <description>Kurulum # D3&amp;rsquo;ü indirmenin ve kullanmanın çeşitli yolları vardır.
Doğrudan Komut Dosyası İndirme # d3.zip dosyasını indirin ve çıkarın Ortaya çıkan klasörü projenizin bağımlılıklarını tutacağınız yere kopyalayın HTML&amp;rsquo;nizde d3.js (geliştirme için) veya d3.min.js (üretim için) referansı: &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;scripts/d3/d3.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; NPM # Henüz yapmadıysanız, projenizde NPM&amp;rsquo;yi başlatın: npm init NPM D3&amp;rsquo;ü kurun: `npm kurulumu &amp;ndash; d3&amp;rsquo;ü kaydedin&#39; HTML&amp;rsquo;nizde d3.js (geliştirme için) veya d3.min.js (üretim için) referansı: &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;node_modules/d3/build/d3.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; CDN # HTML&amp;rsquo;nizde d3.</description>
    </item>
    
    <item>
      <title>Olayları d3.dispatch ile Gönderme</title>
      <link>https://www.wikiod.com/tr/d3-js/olaylar-d3dispatch-ile-gonderme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/olaylar-d3dispatch-ile-gonderme/</guid>
      <description>Sözdizimi # d3.gönderme - özel bir olay gönderici oluşturun. sevk.on - bir olay dinleyicisini kaydedin veya kaydını silin. sevk.kopyala - bir sevk programının bir kopyasını oluşturun. sevk.call - kayıtlı dinleyicilere bir olay gönderir. sevk.uygula - kayıtlı dinleyicilere bir olay gönderir. Gönderme, gevşek birleştirilmiş kodla ilgili sorunları ayırmak için uygun bir mekanizmadır: adlandırılmış geri aramaları kaydedin ve ardından bunları isteğe bağlı argümanlarla çağırın. d3-request gibi çeşitli D3 bileşenleri, olayları dinleyicilere yaymak için bu mekanizmayı kullanır.</description>
    </item>
    
    <item>
      <title>D3&#39;ü JSON ve CSV ile Kullanma</title>
      <link>https://www.wikiod.com/tr/d3-js/d3u-json-ve-csv-ile-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/d3u-json-ve-csv-ile-kullanma/</guid>
      <description>Sözdizimi # d3.csv(url[[, satır], geri arama]) d3.tsv(url[[, satır], geri arama]) d3.html(url[, geri arama]) d3.json(url[, geri arama]) d3.text(url[, geri arama]) d3.xml(url[, geri arama]) CSV dosyalarından veri yükleme # DOM öğelerine bağlayacağınız verileri almanın birkaç yolu vardır. Daha basit olanı, verilerinizi komut dosyanızda bir dizi olarak bulundurmaktır &amp;hellip;
var data = [ ... ]; Ancak D3.js, harici bir dosyadan veri yüklememize izin verir. Bu örnekte, bir CSV dosyasındaki verilerin nasıl düzgün şekilde yükleneceğini ve bunlarla nasıl ilgilenileceğini göreceğiz.</description>
    </item>
    
    <item>
      <title>güncelleme kalıbı</title>
      <link>https://www.wikiod.com/tr/d3-js/guncelleme-kalb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/guncelleme-kalb/</guid>
      <description>Sözdizimi # seçim.enter() seçim.çıkış() seçim.birleştirme() Verilerin güncellenmesi: temel bir giriş, güncelleme ve seçimlerden çıkış örneği # Statik bir veri kümesi görüntüleyen bir grafik oluşturmak nispeten basittir. Örneğin, veri olarak bu nesne dizisine sahipsek:
var data = [ {title: &amp;quot;A&amp;quot;, value: 53}, {title: &amp;quot;B&amp;quot;, value: 12}, {title: &amp;quot;C&amp;quot;, value: 91}, {title: &amp;quot;D&amp;quot;, value: 24}, {title: &amp;quot;E&amp;quot;, value: 59} ]; Her çubuğun &amp;ldquo;başlık&amp;rdquo; adlı bir ölçüyü temsil ettiği ve genişliğinin o ölçünün değerini temsil ettiği bir çubuk grafik oluşturabiliriz.</description>
    </item>
    
    <item>
      <title>D3 Projeksiyonları</title>
      <link>https://www.wikiod.com/tr/d3-js/d3-projeksiyonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/d3-projeksiyonlar/</guid>
      <description>Albers Projeksiyonları # Bir Albers projeksiyonu veya daha doğrusu bir Albers eşit alan konik projeksiyonu, ortak bir konik projeksiyon ve ABD nüfus sayımı bürosu ve Kanada&amp;rsquo;daki British Columbia eyaleti gibi bir dizi yargı ve kuruluşun resmi bir projeksiyonudur. Haritanın şekil, açı ve mesafe gibi diğer yönleri pahasına alanı korur.
Genel Özellikler # Genel dönüşüm aşağıdaki gif&amp;rsquo;te yakalanmıştır:
( Mike Bostock&amp;rsquo;un block bloğuna dayanarak)
Albers projeksiyonu, iki standart paralel etrafında bozulmayı en aza indirir.</description>
    </item>
    
    <item>
      <title>seçimler</title>
      <link>https://www.wikiod.com/tr/d3-js/secimler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/secimler/</guid>
      <description>Sözdizimi # d3.seç(seçici) d3.Tümünü seç(seçici) seçim.seç(seçici) seçim.Tümünü seç(seçici) seçim.filtre(filtre) seçim.birleştirme(diğer) İlgili Okumalar:
Seçimler Nasıl Çalışır - Mike Bostock d3-selection README &amp;ldquo;Giriş&amp;rdquo; seçimlerinde yer tutucuların rolü # Giriş seçimi nedir?
D3.js&amp;rsquo;de, veriler DOM öğelerine bağlandığında üç durum mümkündür:
Elemanların sayısı ve veri noktalarının sayısı aynıdır; Veri noktalarından daha fazla öğe vardır; Öğelerden daha fazla veri noktası vardır; #3 durumunda, karşılık gelen bir DOM öğesi olmayan tüm veri noktaları enter seçimine aittir. Bu nedenle, D3.</description>
    </item>
    
    <item>
      <title>D3.js görselleştirmesinde kullanılan temel SVG kavramları</title>
      <link>https://www.wikiod.com/tr/d3-js/d3js-gorsellestirmesinde-kullanlan-temel-svg-kavramlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/d3js-gorsellestirmesinde-kullanlan-temel-svg-kavramlar/</guid>
      <description>Koordinat sistemi # Normal bir matematiksel koordinat sisteminde, x=0, y=0 noktası grafiğin sol alt köşesindedir. Ancak SVG koordinat sisteminde, bu (0,0) noktası &amp;rsquo;tuvalin&amp;rsquo; sol üst köşesindedir, konumu mutlak/sabit olarak belirlediğinizde ve kontrol etmek için üst ve sol kullandığınızda CSS&amp;rsquo;ye benzer. elemanın tam noktası.
SVG&amp;rsquo;de y arttıkça şekillerin aşağı doğru hareket ettiğini akılda tutmak önemlidir.
Diyelim ki her noktanın bir x değerine ve y değerine karşılık geldiği bir dağılım grafiği oluşturacağız. Değeri ölçeklendirmek için etki alanını ve aralığı şu şekilde ayarlamamız gerekir:</description>
    </item>
    
    <item>
      <title>D3 js kullanan SVG çizelgeleri</title>
      <link>https://www.wikiod.com/tr/d3-js/d3-js-kullanan-svg-cizelgeleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/d3-js-kullanan-svg-cizelgeleri/</guid>
      <description>SVG öğeleri oluşturmak için D3 js kullanma # D3, SVG öğelerini işlemeye özel olmasa da, karmaşık SVG tabanlı veri görselleştirmelerini oluşturmak ve işlemek için yaygın olarak kullanılır. D3, çeşitli geometrik SVG yapılarını kolaylıkla oluşturmaya yardımcı olan birçok güçlü yöntem sağlar.
Önce SVG belirtimlerinin temel kavramlarını anlamanız, ardından görselleştirmeler oluşturmak için kapsamlı D3 js örnekleri kullanmanız önerilir.
D3 js örnekleri
SVG&amp;rsquo;nin Temelleri</description>
    </item>
    
    <item>
      <title>D3&#39;ü diğer çerçevelerle kullanma</title>
      <link>https://www.wikiod.com/tr/d3-js/d3u-diger-cercevelerle-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/d3u-diger-cercevelerle-kullanma/</guid>
      <description>Açısal ile D3js # D3js&amp;rsquo;yi Angular ile kullanmak, veriler güncellenir güncellenmez grafiklerin canlı olarak güncellenmesi gibi yeni olasılıkların önünü açabilir. Tam grafik işlevselliğini bir Angular yönergesi içinde kolayca yeniden kullanılabilir hale getirebiliriz.
index.html &amp;raquo;
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html ng-app=&amp;quot;myApp&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script data-require=&amp;quot;angular.js@1.4.1&amp;quot; data-semver=&amp;quot;1.4.1&amp;quot; src=&amp;quot;https://code.angularjs.org/1.4.1/angular.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;app.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;bar-chart.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div ng-controller=&amp;quot;MyCtrl&amp;quot;&amp;gt; &amp;lt;!-- reusable d3js bar-chart directive, data is sent using isolated scope --&amp;gt; &amp;lt;bar-chart data=&amp;quot;data&amp;quot;&amp;gt;&amp;lt;/bar-chart&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Verileri denetleyiciyi kullanarak grafiğe aktarabilir ve direktifte grafiğin canlı güncellenmesini sağlamak için verilerdeki değişiklikleri izleyebiliriz:</description>
    </item>
    
    <item>
      <title>Duyarlı d3.js çizelgeleri oluşturma yaklaşımları</title>
      <link>https://www.wikiod.com/tr/d3-js/duyarl-d3js-cizelgeleri-olusturma-yaklasmlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/d3-js/duyarl-d3js-cizelgeleri-olusturma-yaklasmlar/</guid>
      <description>Sözdizimi # var genişlik = document.getElementById(&amp;lsquo;chartArea&amp;rsquo;).clientWidth; var yükseklik = genişlik / 3.236; window.onresize = resizeFunctionCall; Önyüklemeyi kullanma # Sıklıkla kullanılan bir yaklaşım, grafiğin içinde bulunacağı alanı tanımlamak için bootstrap&amp;lsquo;in ızgaralı çerçevesini kullanmaktır. Bunu clientWidth değişkeni ve window.onresize olayı, duyarlı d3 SVG&amp;rsquo;leri oluşturmak çok kolaydır.
Önce grafiğimizin oluşturulacağı bir satır ve bir sütun oluşturalım.
index.html # &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css&amp;quot;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;col-xs-12 col-lg-6&amp;quot; id=&amp;quot;chartArea&amp;quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script src=&amp;quot;https://cdnjs.</description>
    </item>
    
  </channel>
</rss>
