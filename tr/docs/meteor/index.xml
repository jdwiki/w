<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>meteor Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/meteor/</link>
    <description>Recent content in meteor Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/meteor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Meteorla başlarken</title>
      <link>https://www.wikiod.com/tr/meteor/meteorla-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/meteorla-baslarken/</guid>
      <description>Başlarken # Meteor&amp;rsquo;u yükle # OS X ve Linux&amp;rsquo;ta # Terminalinizden en son resmi Meteor sürümünü yükleyin:
$ curl https://install.meteor.com/ | sh Windows&amp;rsquo;ta # Resmi Meteor yükleyicisini buradan indirin.
Uygulamanızı oluşturun # Meteor&amp;rsquo;u yükledikten sonra bir proje oluşturun:
$ meteor create myapp Çalıştır # Yerel olarak çalıştırın:
$ cd myapp $ meteor npm install $ meteor Not: Şu ​​anda çalışan Meteor sunucusu: http://localhost:3000/
Ardından yeni Meteor uygulamanızı görmek için http://localhost:3000 adresine gidin.</description>
    </item>
    
    <item>
      <title>Veri Yayınlama</title>
      <link>https://www.wikiod.com/tr/meteor/veri-yaynlama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/veri-yaynlama/</guid>
      <description>Meteor&amp;rsquo;un veri alt sistemi içinde, bir sunucu yayını ve buna karşılık gelen istemci abonelikleri, temel alınan verilerin sunucu ve istemci arasında sürekli olarak senkronize edildiği reaktif, canlı veri aktarımının ana mekanizmalarıdır.
Küresel yayınlar # Global yayının bir adı yoktur ve bağlı istemciden bir abonelik gerektirmez ve bu nedenle istemci sunucuya bağlanır bağlanmaz bağlı istemci tarafından kullanılabilir.
Bunu başarmak için, yayını şöyle &amp;lsquo;boş&amp;rsquo; olarak adlandırmak yeterlidir.
Meteor.publish(null, function() { return SomeCollection.find(); }) Bir yayında hata oluşturma ve yanıt verme.</description>
    </item>
    
    <item>
      <title>Dizin Yapısı</title>
      <link>https://www.wikiod.com/tr/meteor/dizin-yaps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/dizin-yaps/</guid>
      <description>Meteor 1.3&amp;rsquo;ün piyasaya sürülmesinden önce, Meteor geliştiricileri Meteor.js&amp;rsquo;nin dosya bağımlılıklarını ve global değişkenleri işlemesinden bıkmıştı. Buna karşılık, Meteor proje bağımlılık sistemini daha akıcı hale getirmek için proje yapıları için yeni standartlar belirledi. Bu konu, standartlaştırılmış proje yapısını ve bunun arkasındaki ilkeleri açıklar.
müşteri İstemci dizinindeki tüm kodlar yalnızca istemci tarafında veya web tarayıcısında çalıştırılır.
istemci/uyumluluk Uyumluluk dizini, jQuery kitaplıkları vb. gibi eski veya 3. taraf kodunu içerir.
lib Lib dizini, Meteor projenizdeki diğer dizinlerden önce yüklenir ve hem sunucuya hem de istemciye yüklenir.</description>
    </item>
    
    <item>
      <title>AWS EC2&#39;ye Meteor 1.4 Kurulumu için Başlangıç ​​Kılavuzu</title>
      <link>https://www.wikiod.com/tr/meteor/aws-ec2ye-meteor-14-kurulumu-icin-baslangc-klavuzu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/aws-ec2ye-meteor-14-kurulumu-icin-baslangc-klavuzu/</guid>
      <description>AWS Hizmetine Kaydolun # Yeni başlayanların çoğu bulut barındırma konusunda kafası karıştığından, bu kılavuzu ubuntu işletim sistemi ile aws&amp;rsquo;de meteor ayarlamayı öğrenmek için yazıyorum. Bulut sunucunuz zaten çalışıyorsa, bu adımı atlamaktan çekinmeyin ve doğrudan aws&amp;rsquo;ye meteor yüklemeye gidin.
AWS Konsolunda oturum açın.EC2&amp;rsquo;yi seçin. EC2 Dashboard&amp;rsquo;a gidin. Örnek Oluştur altında, örneği başlat&amp;rsquo;a tıklayın. Sonraki adımda ubuntu örneğini seçin Anahtar çifti oluşturun ve yerel makinenize özel anahtarı indirin.
Kabuk üzerinden aws&amp;rsquo;ye giriş yapın (özel anahtarı kullanarak, özel anahtarın yolunuzda olduğundan emin olun veya özel anahtarı içeren dizinden komutu çalıştırın)</description>
    </item>
    
    <item>
      <title>Meteor &#43; Tepki</title>
      <link>https://www.wikiod.com/tr/meteor/meteor--tepki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/meteor--tepki/</guid>
      <description>React, kullanıcı arayüzleri oluşturmak için bir JavaScript kitaplığıdır. Facebook tarafından geliştirilen ve sürdürülen açık kaynak. Meteor, React için üretime hazır desteğe sahiptir.
Kaynaklar:
React öğreticisi Meteor + React öğreticisi Kurulum ve &amp;ldquo;Merhaba Dünya&amp;rdquo; # Projenize React ekleyin:
meteor npm install --save react react-dom react-mounter Basit bir React bileşenini görüntülemek için &amp;lsquo;client/helloworld.jsx&amp;rsquo; dosyasını oluşturun:
import React, { Component } from &#39;react&#39;; import { mount } from &#39;react-mounter&#39;; // This component only renders a paragraph containing &amp;quot;Hello World!</description>
    </item>
    
    <item>
      <title>Meteor&#39;u Proxy Sunucuyla Kullanma</title>
      <link>https://www.wikiod.com/tr/meteor/meteoru-proxy-sunucuyla-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/meteoru-proxy-sunucuyla-kullanma/</guid>
      <description>HTTP[S]_PROXY env değişkenini kullanma # Bu sayfada Meteor komut satırı aracının (örneğin paketleri indirirken, uygulamanızı dağıtırken vb.) bir proxy sunucusunun arkasında nasıl kullanılacağı açıklanmaktadır.
Diğer birçok komut satırı yazılımı gibi, Meteor aracı da proxy yapılandırmasını &amp;ldquo;HTTP_PROXY&amp;rdquo; ve &amp;ldquo;HTTPS_PROXY&amp;rdquo; ortam değişkenlerinden okur (küçük harf varyantları da çalışır). Bir proxy arkasında Meteor çalıştırma örnekleri:
Linux veya Mac OS X&amp;rsquo;te export HTTP_PROXY=http://user:password@1.2.3.4:5678 export HTTPS_PROXY=http://user:password@1.2.3.4:5678 meteor update Windows&amp;rsquo;ta SET HTTP_PROXY=http://user:password@1.2.3.4:5678 SET HTTPS_PROXY=http://user:password@1.2.3.4:5678 meteor update Proxy Katmanı Ayarlama # [Nginx Proxy ile Meteor Uygulamasını Ubuntu&amp;rsquo;ya Dağıtın](https://www.</description>
    </item>
    
    <item>
      <title>Electrify - Meteor&#39;u Yerel Olarak Yüklenebilir Bir Uygulama Olarak Derleme</title>
      <link>https://www.wikiod.com/tr/meteor/electrify---meteoru-yerel-olarak-yuklenebilir-bir-uygulama-olarak-derleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/electrify---meteoru-yerel-olarak-yuklenebilir-bir-uygulama-olarak-derleme/</guid>
      <description>Meteor uygulaması için Electrify&amp;rsquo;ı yükleme # Electron, HTML web uygulamalarını yerel masaüstü uygulamaları oluşturmak da dahil olmak üzere bir dizi cihaz için yerel uygulamalara bağlar. Başlamak da çok kolay!
Başlamak için, &amp;rsquo;elektron&amp;rsquo;, &amp;rsquo;nodejs&amp;rsquo;, &amp;rsquo;npm&amp;rsquo;, &amp;lsquo;git&amp;rsquo; ve &amp;lsquo;meteor&amp;rsquo; kurulu olmalıdır. Bu araçlara aşinalık Meteor ile çalışmak için çok önemlidir, bu yüzden önce bu şeyleri bildiğinizden emin olun.
Elektron
npm install -g electrify &amp;ldquo;elektron&amp;rdquo; kullandığımız şey! Daha fazlasını buradan okuyun. &amp;rsquo;electrify&amp;rsquo; Meteor uygulamalarını paketlemek için bir araçtır.</description>
    </item>
    
    <item>
      <title>MongoDB</title>
      <link>https://www.wikiod.com/tr/meteor/mongodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/mongodb/</guid>
      <description>MongoDB, ücretsiz ve açık kaynaklı bir çapraz platform belge yönelimli veritabanı programıdır. Klasik SQL veritabanlarından farklı olarak MongoDB, verileri depolamak için BSON (JSON gibi) kullanır. Meteor, veritabanı depolaması için MongoDB&amp;rsquo;yi kullanmak üzere tasarlanmıştır ve bu konu, MongoDB depolamasının Meteor uygulamalarına nasıl uygulanacağını açıklar.
Uzak Mongo DB&amp;rsquo;yi Dışa Aktarın, Yerel Meteor Mongo DB&amp;rsquo;ye İçe Aktarın # Yerel olarak oynamak için bir üretim veritabanının bir kopyasını almak istediğinizde yararlıdır.
mongodump --host some-mongo-host.com:1234 -d DATABASE_NAME -u DATABASE_USER -p DATABASE_PASSWORD Bu, yerel bir döküm&#39; dizini oluşturacaktır; bu dizinde DATABASE_NAME` ile bir dizin göreceksiniz.</description>
    </item>
    
    <item>
      <title>Blaze Şablonu</title>
      <link>https://www.wikiod.com/tr/meteor/blaze-sablonu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/blaze-sablonu/</guid>
      <description>Blaze, dinamik, reaktif HTML şablonları yazarak kullanıcı arabirimleri oluşturmaya yönelik güçlü bir kitaplıktır. Blaze şablonlama, döngülerin ve koşullu mantığın doğrudan HTML işaretlemesinde kullanılmasına izin verir. Bu bölüm, Blaze ile Meteor.js&amp;rsquo;de şablonlamanın doğru kullanımını açıklar ve gösterir.
Bir yöntem çağrısından bir şablon doldurun # &amp;lt;template name=&amp;quot;myTemplate&amp;quot;&amp;gt; {{#each results}} &amp;lt;div&amp;gt;&amp;lt;span&amp;gt;{{name}}&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;{{age}}&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt; {{/each}} &amp;lt;/template&amp;gt; Template.myTemplate.onCreated(function() { this.results = new ReactiveVar(); Meteor.call(&#39;myMethod&#39;, (error, result) =&amp;gt; { if (error) { // do something with the error } else { // results is an array of {name, age} objects this.</description>
    </item>
    
    <item>
      <title>Bir Meteor.call&#39;dan veri alma</title>
      <link>https://www.wikiod.com/tr/meteor/bir-meteorcalldan-veri-alma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/meteor/bir-meteorcalldan-veri-alma/</guid>
      <description>Meteor.call&amp;rsquo;ın temelleri # Meteor.call(name, [arg1, arg2...], [asyncCallback]) (1) isim Dize (2) Çağrılacak yöntemin adı (3) arg1, arg2&amp;hellip; EJSON uyumlu Nesne [Opsiyonel]
(4) asyncCallback İşlevi [Opsiyonel]
Bir yandan şunları yapabilirsiniz: (Session değişken veya ReactiveVar aracılığıyla)
var syncCall = Meteor.call(&amp;quot;mymethod&amp;quot;) // Sync call Bunun anlamı, sunucu tarafında şöyle bir şey yaparsanız şunları yapacaksınız:
Meteor.methods({ mymethod: function() { let asyncToSync = Meteor.wrapAsync(asynchronousCall); // do something with the result; return asyncToSync; } }); Öte yandan, bazen geri aramanın sonucu ile saklamak isteyeceksiniz?</description>
    </item>
    
  </channel>
</rss>
