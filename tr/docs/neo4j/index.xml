<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>neo4j Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/neo4j/</link>
    <description>Recent content in neo4j Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/neo4j/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>neo4j&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/neo4j/neo4jyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/neo4j/neo4jyi-kullanmaya-baslama/</guid>
      <description>Şifreli Sorgu Dili # Bu, Neo4j&amp;rsquo;nin sorgulama dili olan Cypher&amp;rsquo;dır. Cypher birçok yönden SQL&amp;rsquo;e benzer, eğer aşinaysanız SQL&amp;rsquo;in bir tabloda depolanan öğeleri, Cypher ise bir grafikte depolanan öğeleri ifade etmesi dışında.
İlk olarak, bir grafiğin nasıl oluşturulacağını ve ilişkiler ekleneceğini öğrenerek başlamalıyız, çünkü esasen Neo4j&amp;rsquo;nin konusu budur.
CREATE (ab:Object { age: 30, destination: &amp;quot;England&amp;quot;, weight: 99 }) Veri oluşturmak için CREATE kullanırsınız Bir düğümü belirtmek için parantez kullanırsınız: () ab:Object kısmı şu şekilde ayrılabilir: yeni düğüm için bir &amp;lsquo;ab&amp;rsquo; değişkeni ve &amp;lsquo;Object&amp;rsquo; etiketi.</description>
    </item>
    
    <item>
      <title>şifre</title>
      <link>https://www.wikiod.com/tr/neo4j/sifre/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/neo4j/sifre/</guid>
      <description>Cypher, Neo4j tarafından kullanılan sorgulama dilidir. Bir Neo4j Graph&amp;rsquo;a karşı görevleri ve eşleşmeleri gerçekleştirmek için Cypher&amp;rsquo;ı kullanırsınız.
Cypher &amp;ldquo;SQL&amp;rsquo;den ilham almıştır&amp;rdquo; ve ilişkileri tanımlama biçiminiz, yani tipik olarak desenin çizilmesi için sezgisel olarak tasarlanmıştır desenin Cypher temsiline benzer görünecektir.
Silme # Tüm düğümleri sil # MATCH (n) DETACH DELETE n &amp;lsquo;DETACH&amp;rsquo; eski sürümlerde (2.3&amp;rsquo;ten daha az) çalışmaz, önceki sürümler için kullanılır
MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE n, r Belirli bir etiketin tüm düğümlerini sil # MATCH (n:Book) DELETE n Bir Düğümü Güncelle # MATCH (n) WHERE n.</description>
    </item>
    
    <item>
      <title>piton</title>
      <link>https://www.wikiod.com/tr/neo4j/piton/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/neo4j/piton/</guid>
      <description>neo4jrestclient&amp;rsquo;i yükleyin # pip install neo4jrestclient neo4j&amp;rsquo;ye bağlanın # from neo4jrestclient.client import GraphDatabase db = GraphDatabase(&amp;quot;http://localhost:7474&amp;quot;, username=&amp;quot;neo4j&amp;quot;, password=&amp;quot;mypass&amp;quot;) Etiketlerle bazı düğümler oluşturun # user = db.labels.create(&amp;quot;User&amp;quot;) u1 = db.nodes.create(name=&amp;quot;user1&amp;quot;) user.add(u1) u2 = db.nodes.create(name=&amp;quot;user2&amp;quot;) user.add(u2) Bir etiketi tek seferde birçok düğümle ilişkilendirebilirsiniz # Language = db.labels.create(&amp;quot;Language&amp;quot;) b1 = db.nodes.create(name=&amp;quot;C++&amp;quot;) b2 = db.nodes.create(name=&amp;quot;Python&amp;quot;) beer.add(b1, b2) İlişkiler oluşturun # u1.relationships.create(&amp;quot;likes&amp;quot;, b1) u1.relationships.create(&amp;quot;likes&amp;quot;, b2) u2.relationships.create(&amp;quot;likes&amp;quot;, b1) Çift yönlü ilişkiler # u1.relationships.create(&amp;quot;friends&amp;quot;, u2) neo4jrestclient kullanarak eşleştirme # from neo4jrestclient import client q = &#39;MATCH (u:User)-[r:likes]-&amp;gt;(m:language) WHERE u.</description>
    </item>
    
  </channel>
</rss>
