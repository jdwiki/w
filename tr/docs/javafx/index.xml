<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javafx Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/javafx/</link>
    <description>Recent content in javafx Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/javafx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>javafx&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/javafx/javafxi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/javafxi-kullanmaya-baslama/</guid>
      <description>Merhaba Dünya programı # Aşağıdaki kod, tıklandığında konsola bir &amp;ldquo;Dize&amp;rdquo; yazdıran tek bir &amp;ldquo;Düğme&amp;rdquo; içeren basit bir kullanıcı arabirimi oluşturur.
import javafx.application.Application; import javafx.scene.Scene; import javafx.scene.control.Alert; import javafx.scene.control.Alert.AlertType; import javafx.scene.control.Button; import javafx.scene.layout.StackPane; import javafx.stage.Stage; public class HelloWorld extends Application { @Override public void start(Stage primaryStage) { // create a button with specified text Button button = new Button(&amp;quot;Say &#39;Hello World&#39;&amp;quot;); // set a handler that is executed when the user activates the button // e.</description>
    </item>
    
    <item>
      <title>JavaFX&#39;te Uluslararasılaştırma</title>
      <link>https://www.wikiod.com/tr/javafx/javafxte-uluslararaslastrma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/javafxte-uluslararaslastrma/</guid>
      <description>Kaynak Paketi Yükleniyor # JavaFX, kullanıcı arayüzlerinizi uluslararası hale getirmenin kolay bir yolunu sunar. Bir FXML dosyasından bir görünüm oluştururken, &amp;lsquo;FXMLLoader&amp;rsquo;a bir kaynak paketi sağlayabilirsiniz:
Locale locale = new Locale(&amp;quot;en&amp;quot;, &amp;quot;UK&amp;quot;); ResourceBundle bundle = ResourceBundle.getBundle(&amp;quot;strings&amp;quot;, locale); Parent root = FXMLLoader.load(getClass().getClassLoader() .getResource(&amp;quot;ui/main.fxml&amp;quot;), bundle); Sağlanan bu paket, FXML dosyanızdaki &amp;ldquo;%&amp;rdquo; ile başlayan tüm metinleri çevirmek için otomatik olarak kullanılır. Diyelim ki strings_en_UK.properties özellik dosyanız aşağıdaki satırı içeriyor:
ui.button.text=I&#39;m a Button FXML&amp;rsquo;nizde şöyle bir düğme tanımınız varsa:</description>
    </item>
    
    <item>
      <title>FXML ve Kontrolörler</title>
      <link>https://www.wikiod.com/tr/javafx/fxml-ve-kontrolorler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/fxml-ve-kontrolorler/</guid>
      <description>Sözdizimi # xmlns:fx=&amp;ldquo;http://javafx.com/fxml&amp;rdquo; // ad alanı bildirimi Ayar Özellikleri # fxml&amp;rsquo;de bir nesneye veri eklemenin birden çok yolu vardır:
&amp;lt;özellik&amp;gt; etiketi # Bir özelliğin adını taşıyan bir etiket, bir örnek oluşturmak için kullanılan bir öğenin alt öğesi olarak eklenebilir. Bu etiketin alt öğesi, ayarlayıcı kullanılarak özelliğe atanır veya özelliğin içeriğine eklenir (salt okunur liste/harita özellikleri).
Varsayılan özellik # Bir sınıfa &amp;ldquo;@DefaultProperty&amp;rdquo; notu eklenebilir. Bu durumda öğeler, özelliğin adıyla bir öğe kullanılmadan doğrudan alt öğe olarak eklenebilir.</description>
    </item>
    
    <item>
      <title>Sahne Oluşturucu</title>
      <link>https://www.wikiod.com/tr/javafx/sahne-olusturucu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/sahne-olusturucu/</guid>
      <description>JavaFX Scene Builder, kullanıcıların JavaFX uygulaması kullanıcı arabirimlerini kodlamadan hızlı bir şekilde tasarlamasını sağlayan bir görsel düzen aracıdır. FXML dosyaları oluşturmak için kullanılır.
JavaFX Scene Builder, kullanıcıların JavaFX uygulaması kullanıcı arabirimlerini kodlamadan hızlı bir şekilde tasarlamasını sağlayan bir görsel düzen aracıdır. Kullanıcılar, UI bileşenlerini bir çalışma alanına sürükleyip bırakabilir, özelliklerini değiştirebilir, stil sayfaları uygulayabilir ve oluşturdukları düzen için FXML kodu arka planda otomatik olarak oluşturulur. Sonuç, daha sonra kullanıcı arayüzünü uygulamanın mantığına bağlayarak bir Java projesiyle birleştirilebilen bir FXML dosyasıdır.</description>
    </item>
    
    <item>
      <title>Düzenler</title>
      <link>https://www.wikiod.com/tr/javafx/duzenler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/duzenler/</guid>
      <description>SınırBölmesi # &amp;lsquo;BorderPane&amp;rsquo; beş farklı alana ayrılmıştır.
Sınır alanları (Üst, Sağ, Alt, Sol) içeriklerine göre tercih edilen boyutlandırılmıştır. Varsayılan olarak, yalnızca ihtiyaç duyduklarını alacaklar, &amp;ldquo;Merkez&amp;rdquo; alanı ise kalan alanı alacaktır. Bordür alanları boş olduğunda yer kaplamaz.
Her alan yalnızca bir öğe içerebilir. setTop(Node), setRight(Node), setBottom(Node), setLeft(Node), setCenter(Node) yöntemleri kullanılarak eklenebilir. Birden fazla öğeyi tek bir alana yerleştirmek için diğer düzenleri kullanabilirsiniz.
//BorderPane example BorderPane pane = new BorderPane(); Label top = new Label(&amp;quot;Top&amp;quot;); Label right = new Label(&amp;quot;Right&amp;quot;); HBox bottom = new HBox(); bottom.</description>
    </item>
    
    <item>
      <title>Tablo görünümü</title>
      <link>https://www.wikiod.com/tr/javafx/tablo-gorunumu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/tablo-gorunumu/</guid>
      <description>PropertyValueFactory # &amp;ldquo;PropertyValueFactory&amp;rdquo;, bir &amp;ldquo;TableColumn&amp;rdquo; içinde &amp;ldquo;cellValueFactory&amp;rdquo; olarak kullanılabilir. Bir &amp;ldquo;TableView&amp;rdquo; öğesinden verileri almak için belirli bir kalıpla eşleşen yöntemlere erişmek için yansıma kullanır:
Örnek
TableColumn&amp;lt;Person, String&amp;gt; nameColumn = ... PropertyValueFactory&amp;lt;Person, String&amp;gt; valueFactory = new PropertyValueFactory&amp;lt;&amp;gt;(&amp;quot;name&amp;quot;); nameColumn.setCellValueFactory(valueFactory); Verileri almak için kullanılan yöntemin adı, &amp;ldquo;PropertyValueFactory&amp;rdquo; için yapıcı parametresine bağlıdır.
Mülkiyet yöntemi: Bu tür bir yöntemin, verileri içeren bir &amp;lsquo;ObservableValue&amp;rsquo; döndürmesi beklenir. Değişiklikler gözlemlenebilir. &amp;ldquo;&amp;lt;yapıcı parametresi&amp;gt;Özellik&amp;rdquo; kalıbıyla eşleşmeleri ve hiçbir parametre almamaları gerekir.</description>
    </item>
    
    <item>
      <title>WebView ve WebEngine</title>
      <link>https://www.wikiod.com/tr/javafx/webview-ve-webengine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/webview-ve-webengine/</guid>
      <description>&amp;lsquo;WebView&amp;rsquo;, JavaFX bileşen ağacına entegre edilmiş JavaFX Düğümü&amp;rsquo;dür. Bir &amp;ldquo;WebEngine&amp;quot;i yönetir ve içeriğini görüntüler.
&amp;lsquo;WebEngine&amp;rsquo;, temelde tüm işi yapan temeldeki Tarayıcı Motorudur.
Sayfa yükleniyor # WebView wv = new WebView(); WebEngine we = wv.getEngine(); we.load(&amp;quot;https://stackoverflow.com&amp;quot;); WebView, WebEngine etrafındaki UI kabuğudur docs.oracle.com/javase/8/javafx/api/javafx/scene/web/WebEngine.html). Bir sayfayla UI dışı etkileşim için neredeyse tüm kontroller &amp;ldquo;WebEngine&amp;rdquo; sınıfı aracılığıyla yapılır.
Bir Web Görünümünün sayfa geçmişini alın # WebHistory history = webView.getEngine().getHistory(); Tarih, temelde girişlerin bir listesidir. Her giriş, ziyaret edilen bir sayfayı temsil eder ve URL, başlık ve sayfanın en son ziyaret edildiği tarih gibi ilgili sayfa bilgilerine erişim sağlar.</description>
    </item>
    
    <item>
      <title>CSS</title>
      <link>https://www.wikiod.com/tr/javafx/css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/css/</guid>
      <description>Sözdizimi # NodeClass /* Node sınıfına göre seçici */ .someclass /* sınıfa göre seçici */ #someId /* kimliğe göre seçici */ [selector1] &amp;gt; [selector2] /* selector1 ile eşleşen, selector2 ile eşleşen bir düğümün doğrudan çocuğu için seçici */ [selektör1] [seçici2] /* seçici1 ile eşleşen ve seçici2 ile eşleşen bir düğümün soyundan gelen için seçici */ Stil için CSS kullanma # CSS birden çok yerde uygulanabilir:
satır içi (Node.setStyle) bir stil sayfasında bir &amp;ldquo;Sahne&amp;quot;ye as user agent stylesheet (not demonstrated here) as &amp;ldquo;normal&amp;rdquo; stylesheet for the Scene bir &amp;ldquo;Düğüme&amp;rdquo; Bu, &amp;ldquo;Düğümler&amp;quot;in biçimlendirilebilir özelliklerini değiştirmeye izin verir.</description>
    </item>
    
    <item>
      <title>Özellikler ve Gözlenebilir</title>
      <link>https://www.wikiod.com/tr/javafx/ozellikler-ve-gozlenebilir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/ozellikler-ve-gozlenebilir/</guid>
      <description>Özellikler gözlemlenebilir ve bunlara dinleyiciler eklenebilir. Düğümlerin özellikleri için sürekli olarak kullanılırlar.
Özellik türleri ve adlandırma # Standart özellikler # Mülkün türüne bağlı olarak, tek bir mülk için en fazla 3 yöntem vardır. &amp;lsquo;&amp;lt;özellik&amp;gt;&amp;rsquo; bir özelliğin adını ve &amp;lsquo;&amp;lt;Özellik&amp;gt;&amp;rsquo; özelliğin adını büyük harfle göstersin. Ve özelliğin türü T olsun; ilkel sarmalayıcılar için burada ilkel türü kullanırız, ör. &amp;ldquo;StringProperty&amp;rdquo; için &amp;ldquo;String&amp;rdquo; ve &amp;ldquo;ReadOnlyDoubleProperty&amp;rdquo; için &amp;ldquo;double&amp;rdquo;.
Yöntem adı parametreler Dönüş türü Amaç &amp;ldquo;&amp;lt;mülk&amp;gt;Mülk&amp;rdquo; () Özelliğin kendisi, ör.</description>
    </item>
    
    <item>
      <title>diyaloglar</title>
      <link>https://www.wikiod.com/tr/javafx/diyaloglar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javafx/diyaloglar/</guid>
      <description>JavaFX 8 güncelleme 40&amp;rsquo;a diyaloglar eklendi.
MetinGirdiDiyalogu # &amp;ldquo;TextInputDialog&amp;rdquo;, kullanıcıdan tek bir &amp;ldquo;Dize&amp;rdquo; girmesini istemesine izin verir.
TextInputDialog dialog = new TextInputDialog(&amp;quot;42&amp;quot;); dialog.setHeaderText(&amp;quot;Input your favourite int.&amp;quot;); dialog.setTitle(&amp;quot;Favourite number?&amp;quot;); dialog.setContentText(&amp;quot;Your favourite int: &amp;quot;); Optional&amp;lt;String&amp;gt; result = dialog.showAndWait(); String s = result.map(r -&amp;gt; { try { Integer n = Integer.valueOf(r); return MessageFormat.format(&amp;quot;Nice! I like {0} too!&amp;quot;, n); } catch (NumberFormatException ex) { return MessageFormat.format(&amp;quot;Unfortunately \&amp;quot;{0}\&amp;quot; is not a int!&amp;quot;, r); } }).orElse(&amp;quot;You really don&#39;t want to tell me, huh?</description>
    </item>
    
  </channel>
</rss>
