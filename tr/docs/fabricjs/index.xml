<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fabricjs Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/fabricjs/</link>
    <description>Recent content in Fabricjs Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/fabricjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fabricjs&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/fabricjs/fabricjsi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fabricjs/fabricjsi-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # Fabric.js, yalnızca tuvale özgü diğer JS kitaplıkları gibidir. Kurulumu ve başlaması kolaydır. Yapmanız gereken tek şey, BURADA adresinden Fabric.js dosyasını indirmek ve tıpkı diğer JS kitaplıklarında olduğu gibi, örneğin jQuery için yaptığınız gibi onu projenize eklemektir. Ardından, index.html&amp;rsquo;nin aşağıdaki gibi olduğunu varsayalım, html dosyasını oluşturun:
&amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;fabric.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;canvas id=&amp;quot;canvas&amp;quot; width=&amp;quot;400&amp;quot; height=&amp;quot;400&amp;quot; style=&amp;quot;border:2px solid #000000&amp;lt;/canvas&amp;gt; &amp;lt;script&amp;gt; var canvas = new fabric.Canvas(&#39;canvas&#39;); canvas.add(new fabric.Circle({ radius: 30, fill: &#39;#f55&#39;, top: 100, left: 100 })); &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; komut dosyasındaki src özelliği, aynı klasörde tutulan bir Fabric.</description>
    </item>
    
    <item>
      <title>Fabricjs tuval etkinlikleri</title>
      <link>https://www.wikiod.com/tr/fabricjs/fabricjs-tuval-etkinlikleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fabricjs/fabricjs-tuval-etkinlikleri/</guid>
      <description>Sözdizimi # on(eventName, handler) - Nesneye geri arama ile bir olay dinleyicisi ekler.
off(eventName, handler) - Olay dinleyicisini nesneden kaldırın. Bu işlevi herhangi bir argüman olmadan çağırmak, nesnedeki tüm olay dinleyicilerini kaldıracaktır.
trigger(eventName, optionsopt) - Olayı ve isteğe bağlı seçenekler nesnesini tetikler.
Parametreler # parametre Açıklama olayAdı Abone olmak istediğiniz etkinliğin adı, örneğin &amp;rsquo;nesne:hareketli&#39; eventHandler Belirli bir olay tetiklendiğinde yürütmek istediğiniz işlev optionsopt Seçenekler nesnesi Fabric, etkileşime ve genişletilebilirliğe izin vermek için bir dizi olayı destekler.</description>
    </item>
    
    <item>
      <title>FabricJS tuval Serileştirme</title>
      <link>https://www.wikiod.com/tr/fabricjs/fabricjs-tuval-serilestirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fabricjs/fabricjs-tuval-serilestirme/</guid>
      <description>FabricJS ile bir uygulama oluşturmaya başladığınızda, tuvalin/içeriğinin sonuçlarını sunucuya kaydetmeniz gerektiğini anladığınızda geç kalmış olmayacaksınız. Veya bunları istemciye dosya olarak dışa aktarabilir. Bu amaçla tuval serileştirmeye ihtiyacınız olacak. Şimdi bazılarınız neden Serileştirmeyi resim olarak kaydedebiliriz diye sorabilir. Bu nedenle yanıt, bir sunucuya görüntü kaydetme bant genişliği gerektirir ve bu durumda metin çok daha iyi olur.
Sözdizimi # JSON.stringify(canvas) - geçirilen nesnede örtük olarak toJSON yöntemini çağırır. String temsili verir canvas.toObject() - toJSON ile aynı temsili, yalnızca gerçek nesne biçiminde döndürür canvas.</description>
    </item>
    
  </channel>
</rss>
