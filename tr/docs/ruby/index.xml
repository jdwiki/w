<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby Dili Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/ruby/</link>
    <description>Recent content in Ruby Dili Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ruby Dilini kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/ruby/ruby-dilini-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/ruby-dilini-kullanmaya-baslama/</guid>
      <description>Selam Dünya # Bu örnek, Ruby&amp;rsquo;nin kurulu olduğunu varsayar.
Aşağıdakileri &amp;ldquo;hello.rb&amp;rdquo; adlı bir dosyaya yerleştirin:
puts &#39;Hello World&#39; Kaynak dosyadan Ruby kodunu çalıştırmak için komut satırından aşağıdaki komutu yazın:
$ ruby hello.rb Bu çıktı vermelidir:
Hello World Çıktı hemen konsolda görüntülenecektir. Ruby kaynak dosyalarının çalıştırılmadan önce derlenmesi gerekmez. Ruby yorumlayıcısı, Ruby dosyasını çalışma zamanında derler ve yürütür.
Kendi Kendine Yürütülebilir Dosya Olarak Merhaba Dünya—Shebang kullanarak (yalnızca Unix benzeri işletim sistemleri) # Komut dosyanıza bir yorumlayıcı yönergesi (shebang) ekleyebilirsiniz.</description>
    </item>
    
    <item>
      <title>Hash&#39;ler</title>
      <link>https://www.wikiod.com/tr/ruby/hashler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/hashler/</guid>
      <description>Hash, benzersiz anahtarların ve değerlerinin sözlük benzeri bir koleksiyonudur. İlişkili diziler olarak da adlandırılırlar, Dizilere benzerler, ancak bir Dizinin dizini olarak tamsayıları kullandığı durumlarda, Hash herhangi bir nesne türünü kullanmanıza izin verir. Anahtarına başvurarak bir Hash&amp;rsquo;te yeni bir giriş alır veya yeni bir giriş oluşturursunuz.
Sözdizimi # { ad_adı: &amp;ldquo;Noel&amp;rdquo;, ikinci_adı: &amp;ldquo;Edmonds&amp;rdquo; }
{ :first_name =&amp;gt; &amp;ldquo;Noel&amp;rdquo;, :second_name =&amp;gt; &amp;ldquo;Edmonds&amp;rdquo; }
{ &amp;ldquo;İlk Ad&amp;rdquo; =&amp;gt; &amp;ldquo;Noel&amp;rdquo;, &amp;ldquo;İkinci Ad&amp;rdquo; =&amp;gt; &amp;ldquo;Edmonds&amp;rdquo; }</description>
    </item>
    
    <item>
      <title>Kontrol akışı</title>
      <link>https://www.wikiod.com/tr/ruby/kontrol-aks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/kontrol-aks/</guid>
      <description>if, elsif, else ve son # Ruby, dallanma mantığı için &amp;rsquo;end&amp;rsquo; anahtar sözcüğüyle sonlandırılan beklenen &amp;lsquo;if&amp;rsquo; ve &amp;rsquo;else&amp;rsquo; ifadelerini sunar:
# Simulate flipping a coin result = [:heads, :tails].sample if result == :heads puts &#39;The coin-toss came up &amp;quot;heads&amp;quot;&#39; else puts &#39;The coin-toss came up &amp;quot;tails&amp;quot;&#39; end Ruby&amp;rsquo;de &amp;ldquo;if&amp;rdquo; ifadeleri bir değer olarak değerlendirilen ifadelerdir ve sonuç bir değişkene atanabilir:
status = if age &amp;lt; 18 :minor else :adult end Ruby ayrıca şu şekilde ifade edilebilen C-tarzı üçlü operatörler de sunar ([ayrıntılar için buraya bakın][1]):</description>
    </item>
    
    <item>
      <title>diziler</title>
      <link>https://www.wikiod.com/tr/ruby/diziler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/diziler/</guid>
      <description>Sözdizimi # a = [] # dizi değişmezi kullanılarak a = Array.new # değişmezi kullanmaya eşdeğer a = Array.new(5) # nil değerine sahip 5 elemanlı bir dizi oluşturun. a = Array.new(5, 0) # varsayılan değeri 0 olan 5 elemanlı bir dizi oluşturun. Dize Dizisi Oluştur # Ruby&amp;rsquo;nin yüzde dizesi sözdizimi kullanılarak dize dizileri oluşturulabilir:
array = %w(one two three four) Bu, diziyi şu şekilde tanımlamaya işlevsel olarak eşdeğerdir:
array = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;] %w() yerine diğer eşleşen sınırlayıcı çiftlerini kullanabilirsiniz: %w{.</description>
    </item>
    
    <item>
      <title>Bloklar ve İşlemler ve Lambdalar</title>
      <link>https://www.wikiod.com/tr/ruby/bloklar-ve-islemler-ve-lambdalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/bloklar-ve-islemler-ve-lambdalar/</guid>
      <description>Sözdizimi # Proc.new(blok) lambda { |args| kod } -&amp;gt;(arg1, arg2) { kod } nesne.to_proc { |single_arg| kod } yap |arg, (anahtar, değer)| code son Aşağıdakiler gibi zincirlenmiş birden çok yöntem içeren bir satırınız olduğunda operatör önceliğine dikkat edin:
str = &amp;quot;abcdefg&amp;quot; puts str.gsub(/./) do |match| rand(2).zero? ? match.upcase : match.downcase end Beklediğiniz gibi &amp;ldquo;abCDeFg&amp;rdquo; gibi bir şey yazdırmak yerine, &amp;ldquo;#Enumerator:0x00000000af42b28&amp;rdquo; gibi bir şey yazdırır &amp;ndash; bunun nedeni &amp;ldquo;do &amp;hellip; end&amp;rdquo; öğesinin yöntemlerden daha düşük önceliğe sahip olmasıdır, bu da &amp;ldquo;gsub&amp;rdquo; anlamına gelir yalnızca/.</description>
    </item>
    
    <item>
      <title>Ruby&#39;de Tasarım Kalıpları ve Deyimler</title>
      <link>https://www.wikiod.com/tr/ruby/rubyde-tasarm-kalplar-ve-deyimler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/rubyde-tasarm-kalplar-ve-deyimler/</guid>
      <description>Dekoratör Deseni # Dekoratör deseni, aynı sınıftaki diğer nesneleri etkilemeden nesnelere davranış ekler. Dekoratör deseni, alt sınıflar oluşturmak için kullanışlı bir alternatiftir.
Her dekoratör için bir modül oluşturun. Bu yaklaşım, kalıtımdan daha esnektir çünkü sorumlulukları daha fazla kombinasyonda karıştırıp eşleştirebilirsiniz. Ek olarak, şeffaflık dekoratörlerin özyinelemeli olarak iç içe geçmesine izin verdiği için sınırsız sayıda sorumluluğa izin verir.
Pizza sınıfının 300 döndüren bir maliyet yöntemi olduğunu varsayalım:
class Pizza def cost 300 end end Eklenen peynir katmanıyla pizzayı temsil edin ve maliyet 50 artar.</description>
    </item>
    
    <item>
      <title>sınıflar</title>
      <link>https://www.wikiod.com/tr/ruby/snflar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/snflar/</guid>
      <description>Sözdizimi # sınıf adı #sınıf davranışını açıklayan bazı kodlar son Ruby&amp;rsquo;deki sınıf adları Sabitlerdir, bu nedenle ilk harf büyük olmalıdır.
class Cat # correct end class dog # wrong, throws an error end Yapıcı # Bir sınıfın yalnızca bir yapıcısı olabilir, bu &amp;ldquo;initialize&amp;rdquo; adı verilen bir yöntemdir. Sınıfın yeni bir örneği oluşturulduğunda yöntem otomatik olarak çağrılır.
class Customer def initialize(name) @name = name.capitalize end end sarah = Customer.new(&#39;sarah&#39;) sarah.name #=&amp;gt; &#39;Sarah&#39; Bir sınıf oluşturma # class anahtar sözcüğünü kullanarak yeni bir sınıf tanımlayabilirsiniz.</description>
    </item>
    
    <item>
      <title>istisnalar</title>
      <link>https://www.wikiod.com/tr/ruby/istisnalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/istisnalar/</guid>
      <description>Bir istisna, istisnai bir durumun ortaya çıkışını temsil eden bir nesnedir. Başka bir deyişle, bir şeylerin yanlış gittiğini gösterir.
Ruby&amp;rsquo;de istisnalar genellikle hatalar olarak adlandırılır. Bunun nedeni, temel &amp;lsquo;İstisna&amp;rsquo; sınıfının bir üst düzey istisna nesne öğesi olarak var olması, ancak kullanıcı tanımlı yürütme istisnalarının genellikle &amp;lsquo;StandardError&amp;rsquo; veya torunları olmasıdır.
Özel bir istisna türü oluşturma # Özel bir istisna, &amp;ldquo;İstisna&amp;quot;yı genişleten herhangi bir sınıf veya &amp;ldquo;İstisna&amp;quot;nın bir alt sınıfıdır.
Genel olarak, her zaman &amp;ldquo;StandardError&amp;rdquo; veya bir alt öğeyi genişletmelisiniz.</description>
    </item>
    
    <item>
      <title>yöntemler</title>
      <link>https://www.wikiod.com/tr/ruby/yontemler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/yontemler/</guid>
      <description>Ruby&amp;rsquo;deki işlevler, bir dizi eylemi önceden oluşturmak için organize, yeniden kullanılabilir kod sağlar. Fonksiyonlar kodlama sürecini basitleştirir, gereksiz mantığı önler ve kodun takip edilmesini kolaylaştırır. Bu konu, Ruby&amp;rsquo;de işlevlerin, bağımsız değişkenlerin, parametrelerin, verim ifadelerinin ve kapsamın bildirilmesini ve kullanımını açıklar.
Bir yöntem, bir veya daha fazla nesneyle ilişkilendirilen ve genellikle ada ek olarak bir parametre listesiyle tanımlanan adlandırılmış bir kod bloğudur.
def hello(name) &amp;quot;Hello, #{name}&amp;quot; end Bir yöntem çağırma, yöntem adını, çağrılacak nesneyi (bazen alıcı olarak adlandırılır) ve adlandırılmış yöntem parametrelerine atanan sıfır veya daha fazla bağımsız değişken değerini belirtir.</description>
    </item>
    
    <item>
      <title>Mücevher Kullanımı</title>
      <link>https://www.wikiod.com/tr/ruby/mucevher-kullanm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/ruby/mucevher-kullanm/</guid>
      <description>Yakut taşları yükleme # Bu kılavuz, Ruby&amp;rsquo;nin zaten kurulu olduğunu varsayar. Ruby &amp;lt; 1.9 kullanıyorsanız, yerel olarak dahil edilmeyeceğinden manuel olarak RubyGems yüklemeniz gerekir.
Bir Ruby gem yüklemek için şu komutu girin:
gem install [gemname] Mücevher bağımlılıkları listesi olan bir proje üzerinde çalışıyorsanız, bunlar &amp;lsquo;Gemfile&amp;rsquo; adlı bir dosyada listelenecektir. Projeye yeni bir gem yüklemek için, &amp;ldquo;Gemfile&amp;rdquo; içine aşağıdaki kod satırını ekleyin:
gem &#39;gemname&#39; Bu &amp;ldquo;Gemfile&amp;rdquo;, projenizin gerektirdiği bağımlılıkları yüklemek için Bundler gem tarafından kullanılır, ancak bu, önce Bundler&amp;rsquo;ı çalıştırarak (henüz yapmadıysanız) kurmanız gerektiği anlamına gelir:</description>
    </item>
    
  </channel>
</rss>
