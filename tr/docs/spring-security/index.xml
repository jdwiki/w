<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bahar güvenliği Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/spring-security/</link>
    <description>Recent content in bahar güvenliği Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/spring-security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Yay güvenliğine başlarken</title>
      <link>https://www.wikiod.com/tr/spring-security/yay-guvenligine-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/spring-security/yay-guvenligine-baslarken/</guid>
      <description>REST API uç noktalarını korumak için Bahar Güvenliği # Aşağıdaki girişleri pom.xml içine ekleyin.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.security&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-security-web&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.1.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.security&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-security-config&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.1.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 3.1&amp;rsquo;den büyük Spring sürümü için önemlidir:
&amp;lsquo;org.springframework.security.filterChains&amp;rsquo; için fasulye oluşturma hatası, 3.1&amp;rsquo;den daha yüksek Spring sürümünü kullandığınızda ve &amp;lsquo;spring-aop&amp;rsquo;, &amp;lsquo;spring-jdbc&amp;rsquo;, &amp;lsquo;spring-tx&amp;rsquo; ve &amp;lsquo;spring&amp;rsquo; için manuel olarak bağımlılık eklemediğinizde ortaya çıkıyor. &amp;ldquo;pom.xml&amp;rdquo; dosyanızdaki -ifadeler.
Spring bağlamında aşağıdaki girişleri ekleyin. İki REST uç noktasını (merhaba dünya ve hoşçakal) korumak istiyoruz.</description>
    </item>
    
    <item>
      <title>Yay Güvenlik Yapılandırması</title>
      <link>https://www.wikiod.com/tr/spring-security/yay-guvenlik-yaplandrmas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/spring-security/yay-guvenlik-yaplandrmas/</guid>
      <description>Yapılandırma # İşte ilgili Java yapılandırması:
Spring Security yapılandırmasının herhangi bir &amp;ldquo;WebSecurityConfigurer&amp;quot;da veya daha büyük olasılıkla &amp;ldquo;WebSecurityConfigurerAdapter&amp;rdquo; temel sınıfını genişleterek ve bireysel yöntemleri geçersiz kılarak tanımlanmasını sağlamak için bu açıklamayı bir &amp;ldquo;@Configuration&amp;rdquo; sınıfına ekleyin:
@Configuration @EnableWebSecurity @Profile(&amp;quot;container&amp;quot;) public class XSecurityConfig extends WebSecurityConfigurerAdapter { inMemoryAuthentication &amp;ldquo;Kullanıcı&amp;rdquo; kullanıcı adına, &amp;ldquo;parola&amp;rdquo; parolasına ve &amp;ldquo;ROLE_USER&amp;rdquo; rolüne sahip bir kullanıcıyla bir bellek içi kimlik doğrulama şeması tanımlar.
@Override protected void configure(AuthenticationManagerBuilder auth) throws Exception { auth .</description>
    </item>
    
    <item>
      <title>Java ile Spring Security yapılandırması (XML değil)</title>
      <link>https://www.wikiod.com/tr/spring-security/java-ile-spring-security-yaplandrmas-xml-degil/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/spring-security/java-ile-spring-security-yaplandrmas-xml-degil/</guid>
      <description>Tipik veritabanı destekli, açıklama tabanlı yay güvenlik kurulumu.
Sözdizimi # configurationGlobal() auth nesnesini yapılandırın. Sonraki iki SQL isteğe bağlı olabilir. 3.config() yöntemi, spring mvc&amp;rsquo;ye isteğin nasıl doğrulanacağını söyler Bazı url&amp;rsquo;leri doğrulamamız gerekmiyor Diğerleri, henüz kimliği doğrulanmamışsa /login&amp;rsquo;e yönlendirilecektir. Açıklamalı temel yay güvenliği, SQL veri kaynağı # @Configuration public class AppSecurityConfig extends WebSecurityConfigurerAdapter { @Autowired DataSource dataSource; @Autowired public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception { auth.jdbcAuthentication().dataSource(dataSource) .passwordEncoder(new BCryptPasswordEncoder()) .usersByUsernameQuery(&amp;quot;select username,password, enabled from users where username=?</description>
    </item>
    
  </channel>
</rss>
