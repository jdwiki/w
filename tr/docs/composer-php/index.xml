<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>besteci-php Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/composer-php/</link>
    <description>Recent content in besteci-php Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/composer-php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Besteci-php&#39;ye başlarken</title>
      <link>https://www.wikiod.com/tr/composer-php/besteci-phpye-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/composer-php/besteci-phpye-baslarken/</guid>
      <description>Composer&amp;rsquo;ı Ubuntu&amp;rsquo;ya Yükleme # Composer&amp;rsquo;ı indirip kurmadan önce, sunucumuzda tüm bağımlılıkların kurulu olduğundan emin olmamız gerekiyor.
İlk önce, aşağıdakileri çalıştırarak paket yöneticisi önbelleğini güncelleyin:
sudo apt-get update Şimdi bağımlılıkları yükleyelim. Composer&amp;rsquo;ı indirmek için &amp;lsquo;curl&amp;rsquo;a ve onu kurmak ve çalıştırmak için &amp;lsquo;php5-cli&amp;rsquo;ye ihtiyacımız olacak. git Composer tarafından proje bağımlılıklarını indirmek için kullanılır. Her şey aşağıdaki komutla yüklenebilir:
sudo apt-get install curl php5-cli git Şimdi yükleyelim:
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer Bu, Composer&amp;rsquo;ı /usr/local/bin altında besteci adlı sistem çapında bir komut olarak indirecek ve kuracaktır.</description>
    </item>
    
    <item>
      <title>Besteci ile otomatik yükleme</title>
      <link>https://www.wikiod.com/tr/composer-php/besteci-ile-otomatik-yukleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/composer-php/besteci-ile-otomatik-yukleme/</guid>
      <description>Otomatik yükleme # Otomatik yükleme bilgilerini belirten kitaplıklar için Composer, bir satıcı/autoload.php dosyası oluşturur. Bu dosyayı basitçe dahil edebilirsiniz ve ücretsiz olarak otomatik yükleme elde edersiniz.
require __DIR__ . &#39;/vendor/autoload.php&#39;; Bu, üçüncü taraf kodunu kullanmayı gerçekten kolaylaştırır. Örneğin: Projeniz Monolog&amp;rsquo;a bağlıysa, ondan sınıfları kullanmaya başlayabilirsiniz ve bunlar otomatik olarak yüklenecektir.
$log = new Monolog\Logger(&#39;name&#39;); $log-&amp;gt;pushHandler(new Monolog\Handler\StreamHandler(&#39;app.log&#39;, Monolog\Logger::WARNING)); $log-&amp;gt;addWarning(&#39;Foo&#39;); Hatta &amp;lsquo;composer.json&amp;rsquo; dosyasına bir &amp;lsquo;autoload&amp;rsquo; alanı ekleyerek otomatik yükleyiciye kendi kodunuzu ekleyebilirsiniz.</description>
    </item>
    
    <item>
      <title>Composer ile özel depolar nasıl kullanılır?</title>
      <link>https://www.wikiod.com/tr/composer-php/composer-ile-ozel-depolar-nasl-kullanlr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/composer-php/composer-ile-ozel-depolar-nasl-kullanlr/</guid>
      <description>Parametreler # parametreler Ayrıntılar depolar Composer&amp;rsquo;a gerekli paketleri nereden indirebileceğini söyler. tür: vcs Composer&amp;rsquo;a depoyu nasıl ele alacağını söyler. url: http://&amp;hellip; Composer&amp;rsquo;a deponun nerede olduğunu söyler. özel depoları kullanmak için type: &amp;quot;vcs&amp;quot; sözdizimini kullanın.
Yerel bir makinede geliştirme yaparken özel havuza erişimi yönetmek için, bir auth.json dosyası kullanın ve bunu proje havuzunuzda taahhüt etmeyin. Bunun yerine, her bir geliştiriciye özel havuza erişim izni verin, böylece her biri kendi NOT COMMITTED &amp;lsquo;auth.</description>
    </item>
    
  </channel>
</rss>
