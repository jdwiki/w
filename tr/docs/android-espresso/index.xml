<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android-espresso Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/android-espresso/</link>
    <description>Recent content in android-espresso Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/android-espresso/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android-espresso&#39;yu kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/android-espresso/android-espressoyu-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/android-espresso/android-espressoyu-kullanmaya-baslama/</guid>
      <description>Seçenekler Menüsü öğelerini kontrol etme (ekran görüntüsü almak için Kaşık kullanma) # /** * @author piotrek1543 * * This example provides a specific UI testing problem and how it is already solved * with Google&#39;s Espresso. Notice that I used also Spoon framework, as Espresso * lacks of taking screenshots functionality. */ @RunWith(AndroidJUnit4.class) public class MainActivityAndroidTest { @Rule public ActivityTestRule&amp;lt;MainActivity&amp;gt; mRule = new ActivityTestRule&amp;lt;&amp;gt;(MainActivity.class); @Test public void checkIfSettingsMenuItemsAreVisible() throws InterruptedException { //open OptionsMenu to see available items openActionBarOverflowOrOptionsMenu(mRule.</description>
    </item>
    
    <item>
      <title>Özel Eşleştiriciler Nasıl Oluşturulur?</title>
      <link>https://www.wikiod.com/tr/android-espresso/ozel-eslestiriciler-nasl-olusturulur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/android-espresso/ozel-eslestiriciler-nasl-olusturulur/</guid>
      <description>TextView hata mesajını test etmek için Özel eşleştirici örneği # Test paketinizin içinde aşağıdaki kodla bir ErrorMatcher sınıf adı oluşturun:
public class ErrorMatcher {
@NonNull public static Matcher&amp;lt;View&amp;gt; withError(final String expectedErrorText) { Checks.checkNotNull(expectedErrorText); return new BoundedMatcher&amp;lt;View, TextView&amp;gt;(TextView.class) { @Override public void describeTo(final Description description) { description.appendText(&amp;quot;error text: &amp;quot;); stringMatcher.describeTo(description); } @Override public boolean matchesSafely(final TextView textView) { return expectedErrorText.equals(textView.getError().toString()); } }; } }
Eşleştirme mantığı, düzen hiyerarşisinde bulunan &amp;lsquo;TextView&amp;rsquo; alanlarının alt kümesinden geçerek, hata mesajı metninin beklenen hata metni değerine eşit olduğu &amp;lsquo;TextView&amp;rsquo; öğesini bulmaktır.</description>
    </item>
    
  </channel>
</rss>
