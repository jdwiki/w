<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mavi kuş Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/bluebird/</link>
    <description>Recent content in mavi kuş Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/bluebird/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bluebird&#39;e başlarken</title>
      <link>https://www.wikiod.com/tr/bluebird/bluebirde-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bluebird/bluebirde-baslarken/</guid>
      <description>Kurulum veya Kurulum # Node.js # npm install bluebird O zamanlar:
var Promise = require(&amp;quot;bluebird&amp;quot;); Tarayıcılar # Tarayıcılarda bluebird kullanmanın birçok yolu vardır:
Doğrudan indirmeler Full build bluebird.js Full build minified bluebird.min.js Core build bluebird.core.js Core build minified bluebird.core.min.js Ana dışa aktarmada tarayıcıyı kullanabilirsiniz bower paketini kullanabilirsiniz. Komut dosyası etiketlerini kullanırken, &amp;ldquo;Söz&amp;rdquo; ve &amp;ldquo;P&amp;rdquo; (&amp;ldquo;Söz&amp;quot;ün diğer adı) global değişkenleri kullanılabilir hale gelir. Bluebird, eski sürümler de dahil olmak üzere çok çeşitli tarayıcılarda çalışır.</description>
    </item>
    
    <item>
      <title>Bir geri arama API&#39;sini vaatlere dönüştürme.</title>
      <link>https://www.wikiod.com/tr/bluebird/bir-geri-arama-apisini-vaatlere-donusturme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bluebird/bir-geri-arama-apisini-vaatlere-donusturme/</guid>
      <description>Sözlerin durumu vardır, beklemede olarak başlarlar ve aşağıdakilere karar verebilirler:
fulfilled, hesaplamanın başarıyla tamamlandığı anlamına gelir. reddedildi, hesaplamanın başarısız olduğu anlamına gelir. Dönen işlevlerin sözünü verme asla atmamalı, bunun yerine ret döndürmeleri gerekir. Bir söz döndürme işlevinden atmak, sizi hem } catch { _ hem de .catch kullanmaya zorlayacaktır. Söz verilen API&amp;rsquo;leri kullanan kişiler, vaatlerde bulunmayı beklemezler. JS&amp;rsquo;de zaman uyumsuz API&amp;rsquo;lerin nasıl çalıştığından emin değilseniz - lütfen [bu cevaba bakın](http://stackoverflow.com/questions/14220321/how-to-return-the-response-from-an-asynchronous-call/ 16825593#16825593) ilk.</description>
    </item>
    
    <item>
      <title>söz.hepsi</title>
      <link>https://www.wikiod.com/tr/bluebird/sozhepsi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bluebird/sozhepsi/</guid>
      <description>Promise.all( Iterable&amp;lt;any&amp;gt; | Promise&amp;lt;Iterable&amp;lt;any&amp;gt;&amp;gt; input ) -&amp;gt; Promise Bu yöntem, birden fazla sözün tamamlanmasını beklemek istediğinizde kullanışlıdır.
&amp;lsquo;Yinelenebilir&amp;rsquo;(diziler &amp;lsquo;Yinelenebilir&amp;rsquo;dir) veya bir &amp;lsquo;Yinelenebilir&amp;rsquo; vaadi verildiğinde vaatler (veya vaatler ve değerler karışımı) üreten, &amp;ldquo;Yinelenebilir&amp;rdquo; içindeki tüm değerleri bir dizide yineleyin ve dizideki tüm öğeler yerine getirildiğinde yerine getirilen bir söz döndürün. Sözün yerine getirme değeri, orijinal diziyle ilgili konumlarda gerçekleştirme değerlerine sahip bir dizidir. Dizideki herhangi bir söz reddedilirse, iade edilen söz reddedilme nedeni ile reddedilir.</description>
    </item>
    
  </channel>
</rss>
