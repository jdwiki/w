<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>phpunit Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/phpunit/</link>
    <description>Recent content in phpunit Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/phpunit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iddialar</title>
      <link>https://www.wikiod.com/tr/phpunit/iddialar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/phpunit/iddialar/</guid>
      <description>Bir İstisnanın Atıldığını İddia Edin # PHPUnit, 5.2.0 ile yayınlanan, atılan istisnaları izlemek için aşağıdaki işlevleri sağlar:
expectException($istisna) expectExceptionMessage($message) expectExceptionCode($kod) expectExceptionMessageRegExp($messageRegExp) Bunlar, atılacak bir istisnayı izlemek ve o istisnanın özelliklerini incelemek için kullanılır.
Bölen bir matematik işleviyle başlayalım (sadece basitlik için). Payda sıfır ise bir istisna oluşturacaktır.
function divide($numerator, $denominator) { if ($denominator !== 0) { return $numerator/$denominator; } else { throw new \Exception(&amp;quot;Cannot divide by zero&amp;quot;, 100); } } Şimdi test kodu için.</description>
    </item>
    
    <item>
      <title>Test Çiftleri (Mocks ve Stub&#39;lar)</title>
      <link>https://www.wikiod.com/tr/phpunit/test-ciftleri-mocks-ve-stublar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/phpunit/test-ciftleri-mocks-ve-stublar/</guid>
      <description>Basit alay # Giriiş # PHPUnit Kılavuzu alay etmeyi şu şekilde açıklar:
Bir nesneyi doğrulayan bir test çiftiyle değiştirme uygulaması örneğin bir yöntemin çağrıldığını iddia etmek gibi beklentiler, alay olarak anılır.
Bu nedenle, kodu saplamak yerine, yalnızca susturulması gereken kodu değiştirmekle kalmayan, aynı zamanda gerçek dünyada belirli bir etkinliğin olacağını gözlemleyen bir gözlemci oluşturulur.
Kurmak # Açıklık sağlamak amacıyla, parametreye gönderilen metni basitçe gösteren basit bir günlükçü sınıfıyla başlayalım (normalde bu, bir veritabanını güncellemek gibi birim testi için sorunlu olabilecek bir şey yapar):</description>
    </item>
    
    <item>
      <title>PHPUnit&#39;e Başlarken</title>
      <link>https://www.wikiod.com/tr/phpunit/phpunite-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/phpunit/phpunite-baslarken/</guid>
      <description>Linux veya MacOSX&amp;rsquo;e kurulum # PHP Arşivini kullanarak global kurulum # wget https://phar.phpunit.de/phpunit.phar # download the archive file chmod +x phpunit.phar # make it executable sudo mv phpunit.phar /usr/local/bin/phpunit # move it to /usr/local/bin phpunit --version # show installed version number Composer kullanarak global kurulum # # If you have composer installed system wide composer global require phpunit/phpunit # set PHPUnit as a global dependency phpunit --version # show installed version number # If you have the .</description>
    </item>
    
  </channel>
</rss>
