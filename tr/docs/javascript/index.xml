<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/javascript/</link>
    <description>Recent content in JavaScript Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/javascript/javascripti-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/javascripti-kullanmaya-baslama/</guid>
      <description>console.log()&amp;lsquo;u kullanma # Giriiş # Tüm modern web tarayıcıları, NodeJ&amp;rsquo;ler ve hemen hemen tüm diğer JavaScript ortamları, bir dizi günlük kaydı yöntemi kullanarak bir konsola mesaj yazmayı destekler. Bu yöntemlerden en yaygın olanı console.log() yöntemidir.
Bir tarayıcı ortamında, &amp;ldquo;console.log()&amp;rdquo; işlevi ağırlıklı olarak hata ayıklama amacıyla kullanılır.
Başlarken # JavaScript Konsolunu tarayıcınızda açın, aşağıdakini yazın ve Enter&amp;rsquo;a basın :
console.log(&amp;quot;Hello, World!&amp;quot;); Bu, aşağıdakileri konsola kaydeder:
Yukarıdaki örnekte, &amp;lsquo;console.log()&amp;rsquo; işlevi konsola &amp;lsquo;Merhaba, Dünya!</description>
    </item>
    
    <item>
      <title>vaatler</title>
      <link>https://www.wikiod.com/tr/javascript/vaatler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/vaatler/</guid>
      <description>Sözdizimi # yeni Söz ( /* yürütücü işlevi: */ işlev(çöz, reddet) { }) söz.then(onFulfilled[, onRejected]) söz.catch(Reddedildi) Promise.resolve(çözünürlük) Söz vermek.reddetmek(sebep) Promise.all(yinelenebilir) Promise.race (yinelenebilir) Sözler, ECMAScript 2015 spesifikasyonunun bir parçasıdır ve tarayıcı desteği sınırlıdır, Temmuz 2017 itibariyle dünya çapındaki tarayıcıların %88&amp;rsquo;i bunu desteklemektedir. Aşağıdaki tablo, vaatler için destek sağlayan en eski tarayıcı sürümlerine genel bir bakış sunmaktadır.
| krom | Kenar | Firefox | Internet Explorer | Opera | Opera Mini | Safari | iOS Safari | | :&amp;mdash;-: | :&amp;ndash;: | :&amp;mdash;-: | :&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-:: | :&amp;mdash;: | :&amp;mdash;&amp;mdash;-: | :&amp;mdash;-: | :&amp;mdash;&amp;mdash;-: | | 32 | 12 | 27 | x | 19 | x | 7.</description>
    </item>
    
    <item>
      <title>Ok Fonksiyonları</title>
      <link>https://www.wikiod.com/tr/javascript/ok-fonksiyonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/ok-fonksiyonlar/</guid>
      <description>Ok işlevleri, [ECMAScript 2015 (ES6)] içinde sözlüksel olarak kapsamlı işlevler olan [anonim](https://www.wikiod.com/tr/javascript/fonksiyonlar#Anonim İşlev) yazmanın kısa bir yoludur. (https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_2015_support_in_Mozilla).
Sözdizimi # x =&amp;gt; y // Örtük dönüş x =&amp;gt; { dönüş y } // Açık dönüş (x, y, z) =&amp;gt; { &amp;hellip; } // Birden çok argüman zaman uyumsuz () =&amp;gt; { &amp;hellip; } // Zaman uyumsuz ok işlevleri (() =&amp;gt; { &amp;hellip; })() // Hemen çağrılan fonksiyon ifadesi const myFunc = x =&amp;gt; x*2 // Okun önündeki satır sonu &amp;lsquo;Beklenmeyen belirteç&amp;rsquo; hatası verir</description>
    </item>
    
    <item>
      <title>diziler</title>
      <link>https://www.wikiod.com/tr/javascript/diziler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/diziler/</guid>
      <description>Sözdizimi # dizi = [değer, değer, &amp;hellip;] dizi = yeni Dizi(değer, değer, &amp;hellip;) dizi = Array.of(değer, değer, &amp;hellip;) dizi = Array.from(arrayLike) Özet: JavaScript&amp;rsquo;teki diziler, oldukça basit, gelişmiş bir prototipe sahip değiştirilmiş &amp;ldquo;Nesne&amp;rdquo; örnekleridir ve listeyle ilgili çeşitli görevleri gerçekleştirebilir. ECMAScript 1st Edition&amp;rsquo;a eklendiler ve diğer prototip yöntemler ECMAScript 5.1 Edition&amp;rsquo;a geldi.
Uyarı: new Array() yapıcısında n adında bir sayısal parametre belirtilirse, o zaman n elemanlı bir dizi bildirir, değeri olan 1 elemanlı bir dizi ilan etmez n!</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>https://www.wikiod.com/tr/javascript/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/json/</guid>
      <description>JSON (JavaScript Object Notation), hafif bir veri değişim biçimidir. İnsanların okuması ve yazması, makinelerin ayrıştırması ve üretmesi kolaydır. JavaScript&amp;rsquo;te JSON&amp;rsquo;un bir nesne değil bir dize olduğunu anlamak önemlidir.
Birçok farklı programlama dilinde standardın uygulamalarına bağlantılar da içeren json.org web sitesinde temel bir genel bakış bulunabilir.
Sözdizimi # JSON.parse(girdi[, canlandırma]) JSON.stringify(değer[, replacer[, boşluk]]) Parametreler # parametre Ayrıntılar JSON.parse JSON dizesini ayrıştırma giriş(dize) Ayrıştırılacak JSON dizesi. &amp;lsquo;canlandırıcı(işlev)&amp;rsquo; Giriş JSON dizesi için bir dönüşüm öngörür.</description>
    </item>
    
    <item>
      <title>Yaratıcı Tasarım Desenleri</title>
      <link>https://www.wikiod.com/tr/javascript/yaratc-tasarm-desenleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/yaratc-tasarm-desenleri/</guid>
      <description>Tasarım desenleri, kodunuzu okunabilir ve KURU tutmanın iyi bir yoludur. KURU kendini tekrar etme anlamına gelir. Aşağıda en önemli tasarım desenleri hakkında daha fazla örnek bulabilirsiniz.
Yazılım mühendisliğinde, bir yazılım tasarım deseni, yazılım tasarımında belirli bir bağlamda yaygın olarak ortaya çıkan bir soruna genel olarak yeniden kullanılabilir bir çözümdür.
Fabrika İşlevleri # Bir fabrika işlevi, yalnızca bir nesneyi döndüren bir işlevdir.
Fabrika işlevleri &amp;rsquo;new&amp;rsquo; anahtar sözcüğünün kullanımını gerektirmez, ancak yine de bir kurucu gibi bir nesneyi başlatmak için kullanılabilir.</description>
    </item>
    
    <item>
      <title>Konsol</title>
      <link>https://www.wikiod.com/tr/javascript/konsol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/konsol/</guid>
      <description>Bir tarayıcının hata ayıklama konsolu veya web konsolu genellikle geliştiriciler tarafından hataları belirlemek, yürütme akışını anlamak, verileri günlüğe kaydetmek ve çalışma zamanında birçok başka amaç için kullanılır. Bu bilgilere console nesnesi aracılığıyla erişilir.
Sözdizimi # void console.log(obj1 [, obj2, &amp;hellip;, objN]); void console.log(msg [, sub1, &amp;hellip;, subN]); Parametreler # parametre Açıklama obj1 &amp;hellip; objN Dizi gösterimleri konsolda gösterilen JavaScript nesnelerinin listesi mesaj Sıfır veya daha fazla ikame dizesi içeren bir JavaScript dizesi.</description>
    </item>
    
    <item>
      <title>Fonksiyonlar</title>
      <link>https://www.wikiod.com/tr/javascript/fonksiyonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/fonksiyonlar/</guid>
      <description>JavaScript&amp;rsquo;teki işlevler, bir dizi eylemi gerçekleştirmek için düzenli, yeniden kullanılabilir kod sağlar. Fonksiyonlar kodlama sürecini basitleştirir, gereksiz mantığı önler ve kodun takip edilmesini kolaylaştırır. Bu konu, JavaScript&amp;rsquo;te işlevlerin, bağımsız değişkenlerin, parametrelerin, dönüş ifadelerinin ve kapsamın bildirilmesini ve kullanımını açıklar.
Sözdizimi # fonksiyon örneği(x) { dönüş x }
var örnek = işlev (x) { dönüş x }
(işlev() { &amp;hellip; })(); // Hemen Çağrılan İşlev İfadesi (IIFE)
var örnek = yeni Örnek(x);</description>
    </item>
    
    <item>
      <title>Zaman uyumsuz işlevler (zaman uyumsuzbeklemede)</title>
      <link>https://www.wikiod.com/tr/javascript/zaman-uyumsuz-islevler-zaman-uyumsuzbeklemede/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/zaman-uyumsuz-islevler-zaman-uyumsuzbeklemede/</guid>
      <description>&amp;ldquo;async&amp;rdquo; ve &amp;ldquo;await&amp;rdquo;, satır içi eşzamansız eylemleri ifade etmek için vaatlerin ve oluşturucuların üzerine kuruludur. Bu, eşzamansız veya geri arama kodunun bakımını çok daha kolay hale getirir.
&amp;ldquo;async&amp;rdquo; anahtar sözcüğüne sahip işlevler bir &amp;ldquo;Söz&amp;rdquo; döndürür ve bu sözdizimi ile çağrılabilir.
Bir &amp;lsquo;async işlevi&amp;rsquo; içinde &amp;lsquo;await&amp;rsquo; anahtar sözcüğü herhangi bir &amp;lsquo;Söz&amp;rsquo;e uygulanabilir ve söz çözüldükten sonra &amp;lsquo;bekleme&amp;rsquo;den sonra tüm işlev gövdesinin yürütülmesine neden olur.
Sözdizimi # zaman uyumsuz işlev foo() { &amp;hellip;</description>
    </item>
    
    <item>
      <title>hata ayıklama</title>
      <link>https://www.wikiod.com/tr/javascript/hata-ayklama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/javascript/hata-ayklama/</guid>
      <description>Etkileşimli yorumlayıcı değişkenleri # Bunların yalnızca belirli tarayıcıların geliştirici araçlarında çalıştığını unutmayın.
&amp;ldquo;$_&amp;rdquo;, en son değerlendirilen ifadenin değerini verir.
&amp;quot;foo&amp;quot; // &amp;quot;foo&amp;quot; $_ // &amp;quot;foo&amp;quot; &amp;ldquo;$0&amp;rdquo;, Inspector&amp;rsquo;da halihazırda seçili olan DOM öğesini ifade eder. Bu nedenle, &amp;ldquo;&amp;rdquo; vurgulanırsa:
$0 // &amp;lt;div id=&amp;quot;foo&amp;quot;&amp;gt; $0.getAttribute(&#39;id&#39;) // &amp;quot;foo&amp;quot; &amp;ldquo;$1&amp;rdquo; önceden seçilen öğeye, &amp;ldquo;$2&amp;rdquo; ondan önce seçilen öğeye ve &amp;ldquo;$3&amp;rdquo; ve &amp;ldquo;$4&amp;rdquo; için bu şekilde devam eder.
Bir CSS seçiciyle eşleşen bir öğe koleksiyonu elde etmek için $$(selector) kullanın.</description>
    </item>
    
  </channel>
</rss>
