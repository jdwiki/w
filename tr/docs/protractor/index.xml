<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iletki Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/protractor/</link>
    <description>Recent content in iletki Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/protractor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>İletki ile başlarken</title>
      <link>https://www.wikiod.com/tr/protractor/iletki-ile-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/iletki-ile-baslarken/</guid>
      <description>İletki Yükleme ve Ayarlama (Windows&amp;rsquo;ta) # Gereksinimler: İletki, kurulumdan önce aşağıdaki bağımlılıkların yüklenmesini gerektirir:
Java JDK 1.7 veya üstü Node.js v4 veya üstü Kurulum: Node.js&amp;rsquo;yi şu URL&amp;rsquo;den indirin ve kurun: https://nodejs.org/en/
Node.js kurulumunun başarılı olup olmadığını görmek için Ortam değişkenlerine gidip kontrol edebilirsiniz. Sistem Değişkenleri altındaki &amp;lsquo;Yol&amp;rsquo; otomatik olarak güncellenecektir.
Aynısını, size kurulu sürümü verecek olan komut istemine npm -version komutunu yazarak da kontrol edebilirsiniz.
Artık İletki iki şekilde kurulabilir: Yerel veya Küresel.</description>
    </item>
    
    <item>
      <title>CSS Seçiciler</title>
      <link>https://www.wikiod.com/tr/protractor/css-seciciler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/css-seciciler/</guid>
      <description>Sözdizimi # by.css(&amp;lsquo;css seçici&amp;rsquo;) by.id(&amp;lsquo;id&amp;rsquo;) by.model(&amp;lsquo;model&amp;rsquo;) by.binding(&amp;lsquo;bağlayıcı&amp;rsquo;) Parametreler # parametre Ayrıntılar css seçici Sınıf adının temelinde öğeyi seçmek için &#39;.class-name&#39; gibi bir css seçici kimlik dom öğesinin kimliği model Dom elemanı için kullanılan model bağlama Belirli bir öğeye bağlanmak için kullanılan bağlamanın adı Css seçicileri nasıl yazılır?
CSS seçicileri yazmak için en önemli nitelikler dom sınıfı ve kimliğidir. Bir örnek için, bir html dom aşağıdaki örneğe benziyorsa:
&amp;lt;form class=&amp;quot;form-signin&amp;quot;&amp;gt; &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;email&amp;quot; class=&amp;quot;form-control&amp;quot; placeholder=&amp;quot;Email&amp;quot;&amp;gt; &amp;lt;input type=&amp;quot;password&amp;quot; id=&amp;quot;password&amp;quot; class=&amp;quot;form-control&amp;quot; placeholder=&amp;quot;Password&amp;quot;&amp;gt; &amp;lt;button class=&amp;quot;btn btn-block&amp;quot; id=&amp;quot;signin-button&amp;quot; type=&amp;quot;submit&amp;quot;&amp;gt;Sign in&amp;lt;/button&amp;gt; &amp;lt;/form&amp;gt; Ardından e-posta giriş alanını seçmek için css seçiciyi şu şekilde yazabilirsiniz:</description>
    </item>
    
    <item>
      <title>İletki&#39;de XPath seçicileri</title>
      <link>https://www.wikiod.com/tr/protractor/iletkide-xpath-secicileri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/iletkide-xpath-secicileri/</guid>
      <description>İletki kullanarak bir DOM öğesi seçme # İletki, CSS, model ve bağlama seçicilerinin yanı sıra xpath kullanarak öğeleri de bulabilir. görüş
&amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&#39;http://www.google.com&#39;&amp;gt;Go to google&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; kod
var googleLink= element(by.xpath(&#39;//ul/li/a&#39;)); expect(element.getText()).to.eventually.equal(&#39;Go to google&#39;,&#39;The text you mention was not found&#39;); Belirli niteliklere sahip öğeleri seçme # XPath seçicileri, sınıf, kimlik, başlık vb. gibi belirli niteliklere sahip öğeleri seçmek için kullanılabilir.
Sınıfa Göre # Görüş:
&amp;lt;div class=&amp;quot;HakunaMatata&amp;quot;&amp;gt; Hakuna Matata &amp;lt;/div&amp;gt; Kod:</description>
    </item>
    
    <item>
      <title>browser.wait() ile açık beklemeler</title>
      <link>https://www.wikiod.com/tr/protractor/browserwait-ile-ack-beklemeler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/browserwait-ile-ack-beklemeler/</guid>
      <description>browser.sleep() ve browser.wait() karşılaştırması # Zamanlama sorunuyla başa çıkmak söz konusu olduğunda, &amp;ldquo;hızlı&amp;rdquo; bir browser.sleep(&amp;lt;timeout_in_milliseconds&amp;gt;) yazıp devam etmek cazip ve kolaydır.
Sorun şu ki, bir gün başarısız olacaktı. Hangi uyku zaman aşımının ayarlanacağı konusunda altın/genel bir kural yoktur ve bu nedenle, bir noktada ağ veya performans veya diğer sorunlar nedeniyle bir sayfanın yüklenmesi veya öğenin görünür hale gelmesi vb. daha fazla zaman alabilir. Ayrıca, çoğu zaman, aslında olması gerekenden daha fazlasını beklersiniz.</description>
    </item>
    
    <item>
      <title>İletki Hata Ayıklayıcı</title>
      <link>https://www.wikiod.com/tr/protractor/iletki-hata-ayklayc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/iletki-hata-ayklayc/</guid>
      <description>Sözdizimi # tarayıcı.duraklat() tarayıcı.hata ayıklayıcı() Bu bölüm, iletki testlerinde nasıl hata ayıklayabileceğimizi açıklar.
browser.pause() kullanımı # pause() yöntemi, İletki&amp;rsquo;nin kodda hata ayıklamanızı sağladığı en kolay çözümlerden biridir, onu kullanmak için, yürütmeyi duraklatmak istediğiniz yere kodunuza eklemeniz gerekir. Yürütme duraklatıldığında:
İlerlemek için C (tip C) kullanabilirsiniz. Kullanırken dikkatli olun, c tuşuna basmayı geciktirirseniz onaylama kitaplığınızdan zaman aşımı hatası alabileceğiniz için bu komutu gecikmeden yazmanız gerekir.
Etkileşimli moda girmek için &amp;lsquo;repl&amp;rsquo; yazın. Etkileşimli mod, tarayıcı komutlarını doğrudan tarayıcı örneğini açmak için göndermek için kullanılır.</description>
    </item>
    
    <item>
      <title>İletki yapılandırma dosyası</title>
      <link>https://www.wikiod.com/tr/protractor/iletki-yaplandrma-dosyas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/iletki-yaplandrma-dosyas/</guid>
      <description>Yapılandırma dosyası, İletki&amp;rsquo;nin test komut dosyanızı çalıştırmak için kullandığı bilgileri içerir. Burada birkaç farklı varyasyon vermeye çalışacağım.
Basit Yapılandırma dosyası - Chrome # var config = {}; var timeout = 120000; config.framework = &#39;jasmine2&#39;; config.allScriptsTimeout = timeout; config.getPageTimeout = timeout; config.jasmineNodeOpts.isVerbose = true; config.jasmineNodeOpts.defaultTimeoutInterval = timeout; config.specs = [&#39;qa/**/*Spec.js&#39;]; config.browserName = &#39;chrome&#39;; exports.config = config; Yetenekli yapılandırma dosyası - Chrome # var config = {}; var timeout = 120000; config.framework = &#39;jasmine2&#39;; config.</description>
    </item>
    
    <item>
      <title>Açısal olmayan uygulamaları İletki ile test etme</title>
      <link>https://www.wikiod.com/tr/protractor/acsal-olmayan-uygulamalar-iletki-ile-test-etme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/acsal-olmayan-uygulamalar-iletki-ile-test-etme/</guid>
      <description>Açısal uygulamaları test etmek için iletki yapılır. Bununla birlikte, gerekirse açısal olmayan uygulamaları İletki ile test etmek hala mümkündür.
Açısal olmayan uygulamayı İletki ile test etmek için gerekli değişiklikler # driver yerine browser.driver kullanın
browser.driver.ignoreSynchronization = true kullanın
Nedeni: İletki, herhangi bir yürütmeye başlamadan önce açısal bileşenlerin bir web sayfasına tamamen yüklenmesini bekler. Ancak sayfalarımız açısal olmadığından, İletki test zaman aşımı ile başarısız olana kadar &amp;lsquo;açısal&amp;rsquo; yüklenmesini beklemeye devam eder. Bu nedenle, İletki&amp;rsquo;ye &amp;lsquo;açısal&amp;rsquo; için beklememesini açıkça söylemeliyiz.</description>
    </item>
    
    <item>
      <title>Kontrol Akışı ve Sözler</title>
      <link>https://www.wikiod.com/tr/protractor/kontrol-aks-ve-sozler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/kontrol-aks-ve-sozler/</guid>
      <description>İletki/WebDriverJS, Kontrol Akışı adlı bu mekanizmaya sahiptir - bu bir dahili söz sırasıdır, kod yürütmesini düzenli tutar.
Kontrol Akışını Anlama # Aşağıdaki testi düşünün:
it(&#39;should test something&#39;, function() { browser.get(&#39;/dashboard/&#39;); $(&amp;quot;#myid&amp;quot;).click(); expect(element(by.model(&#39;username&#39;)).getText()).toEqual(&#39;Test&#39;); console.log(&amp;quot;HERE&amp;quot;); }); Aşağıdaki testte, console.log() çalıştırıldığında ve konsolda BURADA yazısını gördüğünüzde, önceki satırlardan İletki komutlarının hiçbiri yürütülmemiştir. Bu tamamen zaman uyumsuz bir davranıştır. Komutlar, taahhütler olarak temsil edilir ve taahhütleri sırayla tek tek uygulayacak ve çözecek olan Kontrol Akışına konulmuştur.</description>
    </item>
    
    <item>
      <title>Sayfa Nesneleri</title>
      <link>https://www.wikiod.com/tr/protractor/sayfa-nesneleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/sayfa-nesneleri/</guid>
      <description>Sayfa nesneleri, daha az kod kopyası, kolay bakım ve daha fazla okunabilirlik sağlayan bir tasarım modelidir.
İlk Sayfa Nesnesi # /* save the file in &#39;pages/loginPage&#39; var LoginPage = function(){ }; /*Application object properties*/ LoginPage.prototype = Object.create({}, { userName: { get: function() { return browser.driver.findElement(By.id(&#39;userid&#39;)); } }, userPass: { get: function() { return browser.driver.findElement(By.id(&#39;password&#39;)); } }, submitBtn: { get: function() { return browser.driver.findElement(By.id(&#39;btnSubmit&#39;)); } } }); /* Adding functions */ LoginPage.</description>
    </item>
    
    <item>
      <title>Öğeleri Yerleştirme</title>
      <link>https://www.wikiod.com/tr/protractor/ogeleri-yerlestirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/protractor/ogeleri-yerlestirme/</guid>
      <description>Bir sayfayla etkileşime girebilmek için İletki&amp;rsquo;ye tam olarak hangi öğeyi arayacağını söylemeniz gerekir. Öğeleri seçmek için kullanılan temel, konum belirleyicilerdir. İletki, genel Selenium seçicileri içermesinin yanı sıra, daha sağlam ve değişikliklere karşı kalıcı olan Açısal&amp;rsquo;a özgü konum belirleyicilere de sahiptir. Ancak bazen Angular bir uygulamada bile normal konumlandırıcılar kullanılmalıdır.
Parametreler # parametre Detay seçici Seçicinin değerini belirten bir dize (yer belirleyiciye bağlıdır) İletkiye özel konumlandırıcılar (Açısal tabanlı uygulamalar için) # Bu konum belirleyiciler, bir uygulamadaki değişikliklere karşı daha kalıcı olduklarından, kolayca kırılabilen css veya xpath tabanlı konumlayıcılardan daha kalıcı olduklarından, mümkün olduğunda öncelikli olarak kullanılmalıdır.</description>
    </item>
    
  </channel>
</rss>
