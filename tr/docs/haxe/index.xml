<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>haxe Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/haxe/</link>
    <description>Recent content in haxe Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/haxe/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hax&#39;ı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/haxe/hax-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/haxe/hax-kullanmaya-baslama/</guid>
      <description>Selam Dünya # Gereksinimler # Haxe araç setinin bir sürümü kurulmalıdır Sistem yolunuzda Haxe bulunmalıdır Komut satırı erişilebilir olmalıdır Kod # İstediğiniz proje dizinine gidin ve aşağıdaki içeriğe sahip bir &amp;ldquo;Test.hx&amp;rdquo; kaynak dosyası oluşturun:
class Test { static function main() { trace(&amp;quot;Hello world&amp;quot;); } } Haxe kaynak dosyalarına modüller denir. Bir modül, modül adıyla aynı tanımlayıcıya sahip bir tür (&amp;ldquo;soyut&amp;rdquo;, &amp;ldquo;sınıf&amp;rdquo;, &amp;ldquo;enum&amp;rdquo;, &amp;ldquo;arayüz&amp;rdquo; veya &amp;ldquo;typedef&amp;rdquo;) tanımlamalıdır - bu durumda &amp;ldquo;Test&amp;rdquo; sınıfı.</description>
    </item>
    
    <item>
      <title>Numaralandırmalar</title>
      <link>https://www.wikiod.com/tr/haxe/numaralandrmalar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/haxe/numaralandrmalar/</guid>
      <description>Sözdizimi # enum tanımlayıcı { yapıcılar } Enum değerlerini yakalama # Numaralandırma yapıcı bağımsız değişkenleri olarak iletilen değerler, kalıp eşleştirme kullanılarak değişkenler halinde yakalanabilir.
Aşağıdaki numaralandırmayı varsayalım:
enum Color { RGB(r : Int, g : Int, b : Int); HSV(h : Int, s : Float, v : Float); } Kırmızı kanal değeri aşağıdaki gibi yakalanabilir:
var color = Color.RGB(255, 127, 0); var red = switch (color) { // Match the Color.</description>
    </item>
    
    <item>
      <title>döngüler</title>
      <link>https://www.wikiod.com/tr/haxe/donguler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/haxe/donguler/</guid>
      <description>Sözdizimi # for (yinelenen koleksiyondaki değişken tanımlayıcı*) { ifade } while (durum) { ifade } do { ifade } while (koşul); kırmak; devam et; İçin # For-döngüler yinelenen bir koleksiyon üzerinde yinelenir. Yinelenen koleksiyon, Haxe standart kitaplığındaki &amp;lsquo;Yineleyici&amp;rsquo; veya &amp;lsquo;Yinelenebilir&amp;rsquo; türleriyle yapısal olarak birleşen herhangi bir sınıftır.
0 ila 10 (hariç) aralığındaki sayıları kaydeden bir for-döngüsü aşağıdaki gibi yazılabilir:
for (i in 0...10) { trace(i); } &amp;ldquo;i&amp;rdquo; değişken tanımlayıcısı, yinelenen koleksiyondaki öğelerin tek tek değerini tutar.</description>
    </item>
    
    <item>
      <title>desen eşleştirme</title>
      <link>https://www.wikiod.com/tr/haxe/desen-eslestirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/haxe/desen-eslestirme/</guid>
      <description>Kalıp eşleştirme, sağlanan kalıplara bağlı olarak dallanma işlemidir. Tüm kalıp eşleştirmeleri bir &amp;ldquo;switch&amp;rdquo; ifadesi içinde yapılır ve bireysel &amp;ldquo;case&amp;rdquo; ifadeleri kalıpları temsil eder.
Kalıp eşleştirmenin temel kuralları şunlardır:
desenler her zaman yukarıdan aşağıya eşleştirilecektir; giriş değeriyle eşleşen en üstteki desenin ifadesi yürütülür; &amp;ldquo;_&amp;rdquo; kalıbı herhangi bir şeyle eşleşir, bu nedenle &amp;ldquo;case _:&amp;rdquo;, &amp;ldquo;varsayılan:&amp;rdquo; değerine eşittir. Tüm olası durumlar işlendiğinde, tümünü yakalama &amp;lsquo;_&amp;rsquo; kalıbı veya &amp;lsquo;varsayılan&amp;rsquo; durum gerekli değildir.
Yapı eşleştirme # Aşağıdaki yapıyı varsayın:</description>
    </item>
    
    <item>
      <title>Özetler</title>
      <link>https://www.wikiod.com/tr/haxe/ozetler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/haxe/ozetler/</guid>
      <description>Sözdizimi # özet tanımlayıcı(underyling tipi) { &amp;hellip; } özet tanımlayıcı(temel tür) typeA&amp;lsquo;dan typeB&amp;lsquo;ye &amp;hellip;&amp;lsquo;den typeA&amp;lsquo;ya typeB&amp;lsquo;ye { &amp;hellip; } Bir soyut tür, çalışma zamanında temel türe çözümlenen bir derleme zamanı türüdür. Bu, Haxe derleyicisi tarafından oluşturulan kaynak kodda soyut türün yok olduğu anlamına gelir. Bunun yerine temel tip veya örtük döküm için tanımlanan tipler yerleştirilir.
Özetler, &amp;lsquo;abstract&amp;rsquo; anahtar sözcüğüyle belirtilir, ardından bir tanımlayıcı ve parantez içinde temel tür gelir.
Özetler yalnızca yöntem alanlarını ve fiziksel olmayan özellik alanlarını tanımlayabilir.</description>
    </item>
    
    <item>
      <title>Dallanma</title>
      <link>https://www.wikiod.com/tr/haxe/dallanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/haxe/dallanma/</guid>
      <description>Sözdizimi # if (durum) { &amp;hellip; } if (durum) { &amp;hellip; } else { &amp;hellip; } if (durum) { &amp;hellip; } else if (durum) { &amp;hellip; } else { &amp;hellip; } // Parantezler tek satırlık ifadeler için isteğe bağlıdır if (condition) &amp;hellip; else if (condition) &amp;hellip; else &amp;hellip; geçiş (ifade) { vaka desen: &amp;hellip; varsayılan: &amp;hellip; } şart ? ifade doğruysa : yanlışsa ifade; Tüm dallanma ifadeleri, değerlendirilen ifadelerin döndürülmesini mümkün kılar.</description>
    </item>
    
  </channel>
</rss>
