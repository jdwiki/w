<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>indexeddb Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/indexeddb/</link>
    <description>Recent content in indexeddb Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/indexeddb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>indexeddb&#39;yi kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/indexeddb/indexeddbyi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/indexeddb/indexeddbyi-kullanmaya-baslama/</guid>
      <description>Genel Bakış # IndexedDB, dosyalar/bloblar dahil olmak üzere önemli miktarda yapılandırılmış verinin istemci tarafında depolanması için düşük seviyeli bir API&amp;rsquo;dir. Bu API, bu verilerin yüksek performanslı aranmasını sağlamak için dizinleri kullanır. Web Depolama, daha küçük miktarlarda veri depolamak için kullanışlı olsa da, daha büyük miktarlarda yapılandırılmış veri depolamak için daha az kullanışlıdır. IndexedDB standardı, Javascript nesnelerinin bir tarayıcıda ölçeklenebilir, performanslı depolanmasını ve alınmasını sağlamak için oluşturulmuştur.
Temel bilgiler # indexedDB, {prop1 : value, prop2 : value} gibi Javascript nesne değişmezlerini depolamak için tasarlanmıştır.</description>
    </item>
    
    <item>
      <title>Dizine alınmış veritabanı örnekleri</title>
      <link>https://www.wikiod.com/tr/indexeddb/dizine-alnms-veritaban-ornekleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/indexeddb/dizine-alnms-veritaban-ornekleri/</guid>
      <description>Bir veritabanı aç # function openDatabase(dbName) { var request = indexedDB.open(dbName); request.onsuccess = function (e) { var database = request.result; if (database) { console.log(&amp;quot;Database initialized.&amp;quot;); } else { console.error(&amp;quot;Database is not initialized!&amp;quot;); } //Your code goes here database.close(); } request.onerror = function (e) { console.error( e.target.error.message); } } Veritabanını başlat - tablo oluştur - bilinen db sürümüyle # Bir &amp;ldquo;yükseltme gerekli&amp;rdquo; olayını tetiklemek için, mevcut sürümden daha yüksek bir sürüme sahip veritabanını talep etmeniz gerekir - aksi takdirde olay tetiklenmez.</description>
    </item>
    
  </channel>
</rss>
