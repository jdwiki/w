<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>amazon-web-services Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/amazon-web-services/</link>
    <description>Recent content in amazon-web-services Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/amazon-web-services/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>amazon-web-services&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/amazon-web-services/amazon-web-servicesi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/amazon-web-services/amazon-web-servicesi-kullanmaya-baslama/</guid>
      <description>Çok geç olmadan # Kötü durumlardan kaçınmak için İpuçları ve Püf Noktaları
EC2 Bulut Sunucuları ve EBS
IAM Rolleri ayarlayın. Etiketlerin aksine, IAM Rolü EC2 örneklemesinde bir kez ve herkes için belirlenir (4 yıl sonra bile) ! Örneklerinizi önceden belirlemeye ve kategorilere ayırmaya çalışın, böylece onlara uygun IAM rolleri verebilirsiniz. IAM Rolleri, makinelerinizi tanımlamanın güzel bir yoludur, amazon&amp;rsquo;un Örnek Profili kimlik bilgilerini otomatik olarak makinelerinizde güvenli bir şekilde saklamasına izin verir ve kolayca ekstra ayrıcalıklar verebilirsiniz.</description>
    </item>
    
    <item>
      <title>ECS kullanarak bir liman işçisi kapsayıcı görüntüsü dağıtın</title>
      <link>https://www.wikiod.com/tr/amazon-web-services/ecs-kullanarak-bir-liman-iscisi-kapsayc-goruntusu-dagtn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/amazon-web-services/ecs-kullanarak-bir-liman-iscisi-kapsayc-goruntusu-dagtn/</guid>
      <description>ECS örneklerini bir kümeye ekleyebilmeniz için önce EC2 Yönetim Konsolu&amp;rsquo;na gitmeli ve &amp;lsquo;AmazonEC2ContainerServiceforEC2Role&amp;rsquo; ilkesinin ekli olduğu bir IAM rolüyle &amp;rsquo;ecs için optimize edilmiş&amp;rsquo; örnekler oluşturmalısınız.
EC2 Kontrol Panelinize gidin ve &amp;lsquo;Örneği Başlat&amp;rsquo; düğmesini tıklayın.
&amp;lsquo;Topluluk AMI&amp;rsquo;leri&amp;rsquo; altında, &amp;rsquo;ecs-optimized&amp;rsquo; ifadesini arayın ve proje ihtiyaçlarınıza en uygun olanı seçin. Herhangi biri işe yarayacaktır. Sonrakine tıkla.
&amp;ldquo;Örnek Ayrıntılarını Yapılandır&amp;quot;a ulaştığınızda, &amp;ldquo;yeni IAM rolü oluştur bağlantısı&amp;quot;na tıklayın ve &amp;ldquo;ecsInstanceRole&amp;rdquo; adlı yeni bir rol oluşturun.</description>
    </item>
    
    <item>
      <title>Amazon Cognito&#39;su</title>
      <link>https://www.wikiod.com/tr/amazon-web-services/amazon-cognitosu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/amazon-web-services/amazon-cognitosu/</guid>
      <description>Amazon Cognito kullanarak Kullanıcı Kimliği yönetimi # var app = {}; app.signUp = function(){ app.userName = $(&#39;#userName&#39;).val(); app.password = $(&#39;#password&#39;).val(); app.email = $(&#39;#form-email&#39;).val(); app.phoneNumber = $(&#39;#form-phone&#39;).val(); app.emailRegex = /^(([^&amp;lt;&amp;gt;()\[\]\.,;:\s@\&amp;quot;]+(\.[^&amp;lt;&amp;gt;()\[\]\.,;:\s@\&amp;quot;]+)*)|(\&amp;quot;.+\&amp;quot;))@(([^&amp;lt;&amp;gt;()[\]\.,;:\s@\&amp;quot;]+\.)+[^&amp;lt;&amp;gt;()[\]\.,;:\s@\&amp;quot;]{2,})$/i; /* Put the User input validation logic here. */ if (!app.userName) { alert(&amp;quot;Please provide a user name&amp;quot;); return; } if (!app.password) { alert(&amp;quot;Please provide a password&amp;quot;); return; } if (!app.email) { alert(&amp;quot;Please provide an Email address&amp;quot;); return; } if(!app.emailRegex.test(app.email)){ alert(&amp;quot;Please provide a valid Email address&amp;quot;); return; } if (!</description>
    </item>
    
    <item>
      <title>AWS CloudFormation</title>
      <link>https://www.wikiod.com/tr/amazon-web-services/aws-cloudformation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/amazon-web-services/aws-cloudformation/</guid>
      <description>İlişkilendirilecek bir Güvenlik Grubu ile birlikte bir EC2 örneği oluşturmak için CloudFormation örnek komut dosyası. # Bu örnek, Amazon Linux çalıştıran N.Virginia bölgesinde t2.micro türünde bir EC2 örneği oluşturacaktır. Yürütme sırasında, kullanılacak KeyPair&amp;rsquo;in seçilmesini ve bir I.P. CIDR&amp;rsquo;den örneğe SSH yapabileceğiniz yerden, SSH&amp;rsquo;yi internete açmak için varsayılanı kullanın
{ &#34;AWSTemplateFormatVersion&#34;: &#34;2010-09-09&#34;, &#34;Description&#34; : &#34;AWS CloudFormation Örnek Şablonu EC2InstanceWithSecurityGroupSample: Amazon Linux AMI çalıştıran bir Amazon EC2 bulut sunucusu oluşturun. Bu örnek, bulut sunucusu için size SSH erişimi sağlamak üzere bir EC2 güvenlik grubu oluşturur.</description>
    </item>
    
    <item>
      <title>AWS Lambda</title>
      <link>https://www.wikiod.com/tr/amazon-web-services/aws-lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/amazon-web-services/aws-lambda/</guid>
      <description>AWS Lambda, sunucuları tedarik etmenize veya yönetmenize gerek kalmadan arka uç kodu çalıştırmanıza izin veren bir hizmettir. AWS Lambda, ölçeklendirme ve yüksek kullanılabilirlik ile ilgilenir. Maliyet, doğrudan kodunuzun ne sıklıkta ve ne kadar süreyle yürütüldüğüne bağlıdır.
AWS Lambda işlevlerinin farklı dillerde nasıl oluşturulacağına ve dağıtılacağına ilişkin örnekler bulacaksınız.
AWS Lambda kodu durum bilgisi olmadan yazılmalıdır. Bir lambda örneği korunup yeniden kullanılabilse de, bunu asla beklememelisiniz. Temel Gradle Java projesi # Java kodunu AWS Lambda&amp;rsquo;ya dağıtmak için, çalışma zamanı sırasında ihtiyaç duyulan tüm bağımlılıkları içeren bir dağıtım zip dosyası oluşturmanız gerekir.</description>
    </item>
    
    <item>
      <title>Amazon DinamoDB</title>
      <link>https://www.wikiod.com/tr/amazon-web-services/amazon-dinamodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/amazon-web-services/amazon-dinamodb/</guid>
      <description>NodeJS kullanarak DynamoDB temel Crud İşlemi # let doc = require(&#39;dynamodb-doc&#39;); izin ver dinamo = yeni doc.DynamoDB(); var tblName = &#34;Tablom&#34;; export.handler = (olay, bağlam, geri arama) =&gt; { readOperation(context); } function readOperation(cnxt) { var params = { TableName: tblName, Key: { &#34;id&#34;: &#34;2013&#34;, &#34;topic&#34;: &#34;Turn It Down, Or Else!&#34; }, AttributesToGet: [ &#34;id&#34;, &#34;client_name&#34;, &#34;info&#34; ], ConsistentRead: false }; dynamo.getItem(params, function(err, data) { if (err) console.log(&#34;Error: &#34;+err); // an error occurred else { var jsonDoc = JSON.</description>
    </item>
    
    <item>
      <title>elastik fasulye sapı</title>
      <link>https://www.wikiod.com/tr/amazon-web-services/elastik-fasulye-sap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/amazon-web-services/elastik-fasulye-sap/</guid>
      <description>Mevcut Sınırlamalar (2016-10-03 itibariyle)
Ortam Etiketleri Ortam oluşturulduktan sonra değiştirilemez, bu nedenle akıllıca seçim yapın. Elastic Beanstalk&amp;rsquo;ta otomatik ölçeklendirme Basit ve Zamanlanmış ile sınırlıdır, bu nedenle Adım Ölçekleme&amp;lsquo;yi kullanmak istiyorsanız, Elastic Beanstalk&amp;rsquo;ın uygun olup olmadığını yeniden düşünün. Jenkins ile otomasyon
Jenkins için Elastic Beanstalk&amp;rsquo;a dağıtım için tak-çalıştır özelliğine sahip harika bir AWSEB Dağıtım Eklentisi vardır (otomatik boşta sonlandırmalı mavi/yeşil dağıtımlar yalnızca bir onay kutusu uzağınızdadır).
Elastic Beanstalk&amp;rsquo;a Giriş # Elastic Beanstalk (EB), Golden AMI&amp;rsquo;ler ve CloudFormation arasında bir melezdir ve Puppet veya Chef&amp;lsquo;ün öğrenme eğrisini büyük ölçüde basitleştirir.</description>
    </item>
    
    <item>
      <title>Kök Sınıfı</title>
      <link>https://www.wikiod.com/tr/amazon-web-services/kok-snf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/amazon-web-services/kok-snf/</guid>
      <description>Amazon api kök sınıfı aşağıdaki gibidir. # public class AmazonRootobject { public Itemsearchresponse ItemSearchResponse { get; set; } } public class Itemsearchresponse { public string xmlns { get; set; } public Operationrequest OperationRequest { get; set; } public Items Items { get; set; } } public class Operationrequest { public Httpheaders HTTPHeaders { get; set; } public string RequestId { get; set; } public Arguments Arguments { get; set; } public string RequestProcessingTime { get; set; } } public class Httpheaders { public Header Header { get; set; } } public class Header { public string Name { get; set; } public string Value { get; set; } } public class Arguments { public Argument[] Argument { get; set; } } public class Argument { public string Name { get; set; } public object Value { get; set; } } public class Items { public Request Request { get; set; } public string TotalResults { get; set; } public string TotalPages { get; set; } public string MoreSearchResultsUrl { get; set; } public Item[] Item { get; set; } } public class Request { public string IsValid { get; set; } public Itemsearchrequest ItemSearchRequest { get; set; } } public class Itemsearchrequest { public string Keywords { get; set; } public string[] ResponseGroup { get; set; } public string SearchIndex { get; set; } public string Sort { get; set; } } public class Item { public string ASIN { get; set; } public string ParentASIN { get; set; } public string DetailPageURL { get; set; } public Itemlinks ItemLinks { get; set; } public Smallimage SmallImage { get; set; } public Mediumimage MediumImage { get; set; } public Largeimage LargeImage { get; set; } public Imagesets ImageSets { get; set; } public Itemattributes ItemAttributes { get; set; } public OfferSummary OfferSummary { get; set; } public Offers Offers { get; set; } public Variationsummary VariationSummary { get; set; } } public class Variationsummary { public Highestprice HighestPrice { get; set; } public Lowestprice LowestPrice { get; set; } public Highestsaleprice HighestSalePrice { get; set; } public Lowestsaleprice LowestSalePrice { get; set; } } public class Highestprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Lowestprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Highestsaleprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Lowestsaleprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Itemlinks { public Itemlink[] ItemLink { get; set; } } public class Itemlink { public string Description { get; set; } public string URL { get; set; } } public class Smallimage { public string URL { get; set; } public Height Height { get; set; } public Width Width { get; set; } } public class Height { public string Units { get; set; } public string text { get; set; } } public class Width { public string Units { get; set; } public string text { get; set; } } public class Mediumimage { public string URL { get; set; } public Height1 Height { get; set; } public Width1 Width { get; set; } } public class Height1 { public string Units { get; set; } public string text { get; set; } } public class Width1 { public string Units { get; set; } public string text { get; set; } } public class Largeimage { public string URL { get; set; } public Height2 Height { get; set; } public Width2 Width { get; set; } } public class Height2 { public string Units { get; set; } public string text { get; set; } } public class Width2 { public string Units { get; set; } public string text { get; set; } } public class Imagesets { public object ImageSet { get; set; } } public class Itemattributes { public string Binding { get; set; } public string Brand { get; set; } public string Color { get; set; } public string Model { get; set; } public string Manufacturer { get; set; } public string ProductGroup { get; set; } public string Title { get; set; } public ListPrice ListPrice { get; set; } } public class ListPrice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class OfferSummary { public Lowestnewprice LowestNewPrice { get; set; } public Lowestusedprice LowestUsedPrice { get; set; } public string TotalNew { get; set; } public string TotalUsed { get; set; } public string TotalCollectible { get; set; } public string TotalRefurbished { get; set; } public Lowestrefurbishedprice LowestRefurbishedPrice { get; set; } } public class Lowestnewprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Lowestusedprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Lowestrefurbishedprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Offers { public string TotalOffers { get; set; } public string TotalOfferPages { get; set; } public string MoreOffersUrl { get; set; } public Offer Offer { get; set; } } public class Offer { public Merchant Merchant { get; set; } public Offerattributes OfferAttributes { get; set; } public Offerlisting OfferListing { get; set; } } public class Merchant { public string Name { get; set; } } public class Offerattributes { public string Condition { get; set; } } public class Offerlisting { public string OfferListingId { get; set; } public string PricePerUnit { get; set; } public Price Price { get; set; } public string Availability { get; set; } public Availabilityattributes AvailabilityAttributes { get; set; } public string IsEligibleForSuperSaverShipping { get; set; } public string IsEligibleForPrime { get; set; } public Saleprice SalePrice { get; set; } public Amountsaved AmountSaved { get; set; } public string PercentageSaved { get; set; } } public class Price { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Availabilityattributes { public string AvailabilityType { get; set; } public string MinimumHours { get; set; } public string MaximumHours { get; set; } } public class Saleprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Amountsaved { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } İş adamı sınıfı # using System; using System.</description>
    </item>
    
  </channel>
</rss>
