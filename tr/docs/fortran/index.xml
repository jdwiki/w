<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fortran Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/fortran/</link>
    <description>Recent content in Fortran Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/fortran/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fortran&#39;ı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/fortran/fortran-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/fortran-kullanmaya-baslama/</guid>
      <description>Selam Dünya # Herhangi bir Fortran programı, son ifade olarak &amp;rsquo;end&amp;rsquo;i içermelidir. Bu nedenle, en basit Fortran programı şöyle görünür:
end İşte &amp;ldquo;merhaba, dünya&amp;rdquo; programlarından bazı örnekler:
print *, &amp;quot;Hello, world&amp;quot; end &amp;lsquo;write&amp;rsquo; ifadesi ile:
write(*,*) &amp;quot;Hello, world&amp;quot; end Anlaşılır olması açısından, artık bir programı başlatmak ve ona bir isim vermek için &amp;lsquo;program&amp;rsquo; ifadesini kullanmak yaygındır. &amp;rsquo;end&amp;rsquo; ifadesi daha sonra neyi kastettiğini açıklığa kavuşturmak için bu isme başvurabilir ve derleyicinin kodun doğruluğunu kontrol etmesine izin verebilir.</description>
    </item>
    
    <item>
      <title>diziler</title>
      <link>https://www.wikiod.com/tr/fortran/diziler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/diziler/</guid>
      <description>Dizi oluşturucuları # Sözdizimi ile bir array yapıcı kullanılarak bir rank-1 dizi değeri oluşturulabilir.
(/ ... /) [ ... ] [...] formu Fortran 2003&amp;rsquo;te tanıtıldı ve özellikle karmaşık ifadelerde genellikle okunması daha net olarak kabul edilir. Bu form yalnızca bu örnekte kullanılmıştır.
Bir dizi yapıcısında bulunan değerler, skaler değerler, dizi değerleri veya ima edilen-do döngüleri olabilir.
Oluşturulan dizinin tür ve tür parametreleri, dizi yapıcısındaki değerlerle eşleşir.
[1, 2, 3] ! A rank-1 length-3 array of default integer type [1.</description>
    </item>
    
    <item>
      <title>Veri tipleri</title>
      <link>https://www.wikiod.com/tr/fortran/veri-tipleri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/veri-tipleri/</guid>
      <description>Kayan noktalı sayıların kesinliği # &amp;ldquo;real&amp;rdquo; türündeki kayan noktalı sayıların gerçek değeri olamaz. Belirli bir ondalık basamağa kadar gerçek sayıları temsil edebilirler.
FORTRAN 77 iki kayan nokta türünü garanti eder ve daha yeni standartlar en az iki gerçek türü garanti eder. Gerçek değişkenler olarak bildirilebilir
real x double precision y Buradaki &amp;ldquo;x&amp;rdquo; varsayılan türden bir gerçeldir ve &amp;ldquo;y&amp;rdquo;, &amp;ldquo;x&amp;quot;den daha büyük ondalık kesinliği olan bir tür gerçelidir. Fortran 2008&amp;rsquo;de, &amp;ldquo;y&amp;quot;nin ondalık kesinliği en az 10 ve ondalık üs aralığı en az 37&amp;rsquo;dir.</description>
    </item>
    
    <item>
      <title>Nesne yönelimli programlama</title>
      <link>https://www.wikiod.com/tr/fortran/nesne-yonelimli-programlama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/nesne-yonelimli-programlama/</guid>
      <description>Türetilmiş tür tanımı # Fortran 2003, nesne yönelimli programlama desteğini tanıttı. Bu özellik, modern programlama tekniklerinden yararlanmayı sağlar. Türetilmiş türler aşağıdaki formla tanımlanır:
TYPE [[, attr-list] :: ] name [(name-list)] [def-stmts] [PRIVATE statement or SEQUENCE statement]. . . [component-definition]. . . [procedure-part] END TYPE [name] nerede,
attr-list - nitelik belirteçlerinin listesi ad - türetilmiş veri türünün adı name-list - virgülle ayrılmış tür parametre adlarının listesi def-stmts - ad listesinde belirtilen tür parametrelerinin bir veya daha fazla INTEGER bildirimi bileşen-tanımı - türetilmiş türün bileşenini tanımlayan bir veya daha fazla tür bildirim ifadesi veya prosedür işaretçi ifadesi prosedür bölümü - isteğe bağlı olarak bir PRIVATE ifadesi ve bir veya daha fazla prosedür bağlama ifadesi tarafından takip edilen bir CONTAINS ifadesi Örnek:</description>
    </item>
    
    <item>
      <title>Tarihi özelliklere modern alternatifler</title>
      <link>https://www.wikiod.com/tr/fortran/tarihi-ozelliklere-modern-alternatifler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/tarihi-ozelliklere-modern-alternatifler/</guid>
      <description>Aritmetik if ifadesi # Aritmetik &amp;ldquo;if&amp;rdquo; ifadesi, bir aritmetik ifadenin sonucuna bağlı olarak üç dalın kullanılmasına izin verir.
if (arith_expr) label1, label2, label3 Bu &amp;ldquo;if&amp;rdquo; ifadesi, kontrol akışını bir koddaki etiketlerden birine aktarır. &amp;lsquo;arith_expr&amp;rsquo; sonucu negatif ise &amp;rsquo;label1&amp;rsquo;, sonuç sıfır ise &amp;rsquo;label2&amp;rsquo;, sonuç pozitif ise son &amp;rsquo;label3&amp;rsquo; uygulanır. Aritmetik &amp;lsquo;if&amp;rsquo;, üç etiketi de gerektirir, ancak etiketlerin yeniden kullanılmasına izin verir, bu nedenle bu ifade iki dallı bir &amp;lsquo;if&amp;rsquo; olarak basitleştirilebilir.</description>
    </item>
    
    <item>
      <title>Program birimleri ve dosya düzeni</title>
      <link>https://www.wikiod.com/tr/fortran/program-birimleri-ve-dosya-duzeni/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/program-birimleri-ve-dosya-duzeni/</guid>
      <description>Dahili alt programlar # Dahili bir alt program olmayan bir program birimi, dahili alt programlar olarak adlandırılan diğer program birimlerini içerebilir.
program prog implicit none contains function f() end function f subroutine g() end subroutine g end program Böyle bir dahili alt programın bir dizi özelliği vardır:
alt programdaki varlıklar ile dış programdaki varlıklar arasında ana bilgisayar ilişkisi var örtük yazım kuralları miras alınır (&amp;ldquo;örtük yok&amp;rdquo;, yukarıdaki &amp;ldquo;f&amp;rdquo; içinde geçerlidir) dahili alt programlar, ana bilgisayarda bulunan açık bir arayüze sahiptir Modül alt programları ve harici alt programlar, aşağıdaki gibi dahili alt programlara sahip olabilir:</description>
    </item>
    
    <item>
      <title>Prosedürler - Fonksiyonlar ve Alt Programlar</title>
      <link>https://www.wikiod.com/tr/fortran/prosedurler---fonksiyonlar-ve-alt-programlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/prosedurler---fonksiyonlar-ve-alt-programlar/</guid>
      <description>Fonksiyonlar ve altyordamlar, modüller ile birlikte bir programı birimlere ayırmaya yarayan araçlardır. Bu, programı daha okunabilir ve yönetilebilir hale getirir. Bu birimlerin her biri, ideal olarak ayrı ayrı derlenip test edilebilecek kodun bir parçası olarak düşünülebilir. Ana program(lar), bir görevi gerçekleştirmek için bu tür alt programları (fonksiyonlar veya alt rutinler) çağırabilir (veya çağırabilir).
Fonksiyonlar ve alt programlar şu anlamda farklıdır:
İşlevler tek bir nesne döndürür ve - genellikle - argümanlarının değerlerini değiştirmez (yani, tıpkı bir matematiksel işlev gibi davranırlar!</description>
    </item>
    
    <item>
      <title>Modüllerin Kullanımı</title>
      <link>https://www.wikiod.com/tr/fortran/modullerin-kullanm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/modullerin-kullanm/</guid>
      <description>Modül sözdizimi # Modül, tür bildirimleri, veri bildirimleri ve prosedürlerin bir koleksiyonudur. Temel sözdizimi şöyledir:
module module_name use other_module_being_used ! The use of implicit none here will set it for the scope of the module. ! Therefore, it is not required (although considered good practice) to repeat ! it in the contained subprograms. implicit none ! Parameters declaration real, parameter, public :: pi = 3.14159 ! The keyword private limits access to e parameter only for this module real, parameter, private :: e = 2.</description>
    </item>
    
    <item>
      <title>Açık ve kapalı arayüzler</title>
      <link>https://www.wikiod.com/tr/fortran/ack-ve-kapal-arayuzler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/ack-ve-kapal-arayuzler/</guid>
      <description>Harici alt programlar ve örtük arayüzler # Bir alt program, ana programda veya bir modülde veya başka bir alt programda yer almıyorsa harici olduğu söylenir. Özellikle Fortran dışında bir programlama dili aracılığıyla tanımlanabilir.
Harici bir alt program çağrıldığında, derleyici koduna erişemez, bu nedenle derleyiciye izin verilen tüm bilgiler, çağıran programın çağrı ifadesinde ve kukla argümanların değil, acutal argümanların özellikleri türünde bulunur ( beyanı derleyici tarafından bilinmiyor). Bu durumda arayüzün örtük olduğunu söylüyoruz.</description>
    </item>
    
    <item>
      <title>Yürütme Kontrolü</title>
      <link>https://www.wikiod.com/tr/fortran/yurutme-kontrolu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/fortran/yurutme-kontrolu/</guid>
      <description>Eğer yapı # &amp;lsquo;if&amp;rsquo; yapısı (FORTRAN 77&amp;rsquo;de blok IF ifadesi olarak adlandırılır) birçok programlama dilinde yaygındır. Mantıksal bir ifade doğru olarak değerlendirildiğinde koşullu olarak bir kod bloğunu yürütür.
[name:] IF (expr) THEN block [ELSE IF (expr) THEN [name] block] [ELSE [name] block] END IF [name] nerede,
name - if yapısının adı (isteğe bağlı) expr - parantez içine alınmış bir skaler mantıksal ifade blok - sıfır veya daha fazla ifade veya yapı dizisi Bir &amp;ldquo;if then&amp;rdquo; ifadesinin başındaki bir yapı adı, &amp;ldquo;end if&amp;rdquo; ifadesindeki yapı adıyla aynı değere sahip olmalı ve geçerli kapsam birimi için benzersiz olmalıdır.</description>
    </item>
    
  </channel>
</rss>
