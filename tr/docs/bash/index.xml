<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/bash/</link>
    <description>Recent content in Bash Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bash&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/bash/bashi-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/bashi-kullanmaya-baslama/</guid>
      <description>Selam Dünya # Etkileşimli Kabuk # Bash kabuğu yaygın olarak etkileşimli olarak kullanılır: Komutları girmenize ve düzenlemenize izin verir, ardından Return tuşuna bastığınızda bunları yürütür. Birçok Unix tabanlı ve Unix benzeri işletim sistemi, varsayılan kabuğu olarak Bash&amp;rsquo;i kullanır (özellikle Linux ve macOS). Terminal, başlangıçta otomatik olarak etkileşimli bir Bash kabuk işlemine girer.
Aşağıdakileri yazarak &amp;ldquo;Merhaba Dünya&amp;rdquo; çıktısını alın:
echo &amp;quot;Hello World&amp;quot; #&amp;gt; Hello World # Output Example Notlar # Terminalde sadece kabuğun adını yazarak kabuğu değiştirebilirsiniz.</description>
    </item>
    
    <item>
      <title>diziler</title>
      <link>https://www.wikiod.com/tr/bash/diziler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/diziler/</guid>
      <description>Dizi Atamaları # Liste Atama
Perl, C veya Java hakkında bilginiz varsa, Bash&amp;rsquo;in dizi öğelerini ayırmak için virgül kullanacağını düşünebilirsiniz, ancak durum böyle değil; bunun yerine Bash boşluk kullanır:
# Array in Perl my @array = (1, 2, 3, 4); # Array in Bash array=(1 2 3 4) Yeni öğeler içeren bir dizi oluşturun:
array=(&#39;first element&#39; &#39;second element&#39; &#39;third element&#39;) Abone Ataması
Açık öğe dizinleriyle bir dizi oluşturun:
array=([3]=&#39;fourth element&#39; [4]=&#39;fifth element&#39;) endekse göre atama</description>
    </item>
    
    <item>
      <title>Sinyallere ve sistem olaylarına tepki vermek için tuzak kullanma</title>
      <link>https://www.wikiod.com/tr/bash/sinyallere-ve-sistem-olaylarna-tepki-vermek-icin-tuzak-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/sinyallere-ve-sistem-olaylarna-tepki-vermek-icin-tuzak-kullanma/</guid>
      <description>Sözdizimi # trap action sigspec&amp;hellip; # Sinyal listesinde &amp;ldquo;action&amp;rdquo; çalıştır trap sigspec&amp;hellip; # Eylemi atlamak, sinyaller için tuzakları sıfırlar Parametreler # Parametre Anlam -p Şu anda kurulu tuzakları listele -l Sinyal adlarını ve karşılık gelen numaraları listeleyin trap yardımcı programı, yerleşik özel bir kabuktur. POSIX&amp;rsquo;te tanımlanmıştır, ancak bash bazı yararlı uzantılar da ekler.
POSIX uyumlu örnekler &amp;ldquo;#!/bin/sh&amp;rdquo; ile başlar ve &amp;ldquo;#!/bin/bash&amp;rdquo; ile başlayan örnekler bir bash uzantısı kullanır.
Sinyaller, bir sinyal numarası, bir sinyal adı (SIG öneki olmadan) veya özel &amp;lsquo;EXIT&amp;rsquo; anahtar sözcüğü olabilir.</description>
    </item>
    
    <item>
      <title>İç değişkenler</title>
      <link>https://www.wikiod.com/tr/bash/ic-degiskenler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/ic-degiskenler/</guid>
      <description>Bash&amp;rsquo;in dahili değişkenlerine, bunların nerede, nasıl ve ne zaman kullanılacağına genel bir bakış.
Bir bakışta dahili değişkenleri Bash # Değişken Detaylar $* / $@ İşlev/kod konum parametreleri (argümanlar). Aşağıdaki gibi genişletin:
$* ve $@, $1 $2 ... ile aynıdır (bunları alıntı yapmadan bırakmanın genellikle bir anlamı olmadığını unutmayın)
&amp;quot;$* &amp;quot;, &amp;quot;$1 $2 ...&amp;quot; ile aynıdır &amp;lt;sup&amp;gt;1&amp;lt;/sup&amp;gt; &amp;lt;br&amp;gt;&amp;quot;$@&amp;quot;, &amp;quot;$1&amp;quot; &amp;ldquo;$2&amp;rdquo; &amp;hellip;` ile aynıdır 1. Bağımsız değişkenler, boşluk olması gerekmeyen $IFS&amp;rsquo;nin ilk karakteriyle ayrılır.</description>
    </item>
    
    <item>
      <title>Bash Parametre Genişletme</title>
      <link>https://www.wikiod.com/tr/bash/bash-parametre-genisletme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/bash-parametre-genisletme/</guid>
      <description>&amp;ldquo;$&amp;rdquo; karakteri, parametre genişletme, komut değiştirme veya aritmetik genişletmeyi tanıtır. Genişletilecek parametre adı veya sembol, isteğe bağlı olan ancak genişletilecek değişkeni, adının bir parçası olarak yorumlanabilecek hemen ardından gelen karakterlerden korumaya yarayan parantezler içine alınabilir.
Bash Kullanıcı Kılavuzunda daha fazlasını okuyun.
Sözdizimi # ${parameter:offset} # Ofsetten başlayan alt dize ${parameter:offset:length} # &amp;ldquo;uzunluk&amp;rdquo; uzunluğunun ofsetten başlayan alt dizisi ${#parameter} # Parametrenin uzunluğu ${parameter/pattern/string} # Modelin ilk oluşumunu string ile değiştir ${parameter//pattern/string} # Tüm kalıp oluşumlarını string ile değiştir ${parameter/#pattern/string} # Desen başlangıçta ise, deseni dize ile değiştirin ${parameter/%pattern/string} # Kalıp sondaysa kalıbı dize ile değiştirin ${parameter#pattern} # Modelin en kısa eşleşmesini parametrenin başından kaldır ${parameter##pattern} # Modelin en uzun eşleşmesini parametrenin başından kaldır ${parameter%pattern} # Modelin en kısa eşleşmesini parametrenin sonundan kaldır ${parameter%%pattern} # Parametrenin sonundaki en uzun kalıp eşleşmesini kaldır ${parameter:-word} # Parametre unset/undefined ise word&amp;rsquo;e genişlet ${parameter:=word} # Eğer parametre unset/undefined ise word&amp;rsquo;e genişlet ve parametreyi ayarla ${parameter:+word} # Parametre ayarlanmış/tanımlı ise kelimeye genişlet Alfabetik karakterlerin durumunu değiştirme # büyük harfe</description>
    </item>
    
    <item>
      <title>yeniden yönlendirme</title>
      <link>https://www.wikiod.com/tr/bash/yeniden-yonlendirme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/yeniden-yonlendirme/</guid>
      <description>Sözdizimi # komut &amp;lt;/path/to/file # Standart girdiyi dosyaya yönlendir komut &amp;gt;/path/to/file # Standart çıktıyı uçmaya yönlendir komut file_descriptor&amp;gt;/path/to/file # file_descriptor çıktısını dosyaya yönlendir komut &amp;gt;&amp;amp;file_descriptor # Çıktıyı file_descriptor&amp;rsquo;a yönlendir file_descriptor&amp;gt;&amp;amp;another_file_descriptor komutu # file_descriptor dosyasını başka bir_file_descriptor&amp;rsquo;a yönlendir &amp;lt;&amp;amp;file_descriptor komutu # file_descriptor dosyasını standart girdiye yönlendir komut &amp;amp;&amp;gt;/path/to/file # Standart çıktıyı ve standart hatayı dosyaya yönlendir Parametreler # parametre Ayrıntılar dahili dosya tanımlayıcı Bir tam sayı. yön &amp;gt;, &amp;lt; veya &amp;lt;&amp;gt; harici dosya tanımlayıcısı veya yolu &amp;ldquo;&amp;amp;&amp;rdquo; ve ardından dosya tanımlayıcı veya yol için bir tamsayı gelir.</description>
    </item>
    
    <item>
      <title>Burada belgeler ve burada dizeler</title>
      <link>https://www.wikiod.com/tr/bash/burada-belgeler-ve-burada-dizeler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/burada-belgeler-ve-burada-dizeler/</guid>
      <description>Komutu burada belgeyle yürütün # ssh -p 21 example@example.com &amp;lt;&amp;lt;EOF echo &#39;printing pwd&#39; echo &amp;quot;\$(pwd)&amp;quot; ls -a find &#39;*.txt&#39; EOF Geçerli kabuk tarafından genişletilmesini istemediğimiz için &amp;ldquo;$&amp;rdquo; kaçar, yani &amp;ldquo;$(pwd)&amp;rdquo; uzak kabukta yürütülür.
Diğer yol:
ssh -p 21 example@example.com &amp;lt;&amp;lt;&#39;EOF&#39; echo &#39;printing pwd&#39; echo &amp;quot;$(pwd)&amp;quot; ls -a find &#39;*.txt&#39; EOF Not: Kapanış EOF olmalı satırın başında olmalıdır (Önceden boşluk bırakılmamalıdır). Girinti gerekliyse, heredoc&amp;rsquo;unuzu `&amp;laquo;-&amp;rsquo; ile başlatırsanız sekmeler kullanılabilir. [Buradaki belgelere girinti ekleme](https://www.</description>
    </item>
    
    <item>
      <title>Fonksiyonlar</title>
      <link>https://www.wikiod.com/tr/bash/fonksiyonlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/fonksiyonlar/</guid>
      <description>Sözdizimi # &amp;ldquo;function&amp;rdquo; anahtar sözcüğüyle bir işlev tanımlayın:
function f { }
() ile bir fonksiyon tanımlayın:
f(){ }
Hem &amp;ldquo;function&amp;rdquo; anahtar sözcüğü hem de &amp;ldquo;()&amp;rdquo; ile bir işlev tanımlayın:
function f(){ }
Argümanlı fonksiyonlar # &amp;ldquo;helloJohn.sh&amp;rdquo; içinde:
#!/bin/bash greet() { local name=&amp;quot;$1&amp;quot; echo &amp;quot;Hello, $name&amp;quot; } greet &amp;quot;John Doe&amp;quot; # running above script $ bash helloJohn.sh Hello, John Doe Eğer argümanı herhangi bir şekilde değiştirmezseniz, onu bir &amp;ldquo;yerel&amp;rdquo; değişkene kopyalamanıza gerek yoktur - sadece &amp;ldquo;echo &amp;ldquo;Merhaba, $1&amp;rdquo;`.</description>
    </item>
    
    <item>
      <title>Dosyaları Listeleme</title>
      <link>https://www.wikiod.com/tr/bash/dosyalar-listeleme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/dosyalar-listeleme/</guid>
      <description>Sözdizimi # ls [SEÇENEK]&amp;hellip; [DOSYA]&amp;hellip; Parametreler # Seçenek Açıklama -a, --all Nokta ile başlayanlar dahil tüm girişleri listeleyin -A, `&amp;ndash;neredeyse-hepsi&#39; . ve .. dışındaki tüm girişleri listele -c Dosyaları değiştirme zamanına göre sırala -d, --dizin Dizin girişlerini listele -h, `&amp;ndash;insan tarafından okunabilir&#39; Boyutları insan tarafından okunabilir biçimde göster (yani K, M) -H Yukarıdakiyle aynı, yalnızca 1024 -l İçeriği uzun liste biçiminde göster -o Grup bilgisi olmayan uzun listeleme formatı -r, `&amp;ndash;ters&#39; İçeriği ters sırada göster -s, --size Her dosyanın bloklar halinde yazdırma boyutu -S Dosya boyutuna göre sırala --sort=Kelime İçeriği bir kelimeye göre sıralayın.</description>
    </item>
    
    <item>
      <title>Bulmak</title>
      <link>https://www.wikiod.com/tr/bash/bulmak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/bash/bulmak/</guid>
      <description>find, bir ölçütle eşleşen dosyalar (veya dizinler) için bir dizinde tekrar tekrar arama yapmak ve ardından seçilen dosyalar üzerinde bazı eylemler gerçekleştirmek için kullanılan bir komuttur.
search_path seçim_kriterini bul eylemi
Sözdizimi # bul [-H] [-L] [-P] [-D hata ayıklamaları] [-Olevel] [yol&amp;hellip;] ​​[ifade] Ada veya uzantıya göre dosya arama # &amp;lsquo;pwd&amp;rsquo; ile ilgili olarak belirli bir ada sahip dosyaları/dizinleri bulmak için:
$ find . -name &amp;quot;myFile.txt&amp;quot; ./myFile.txt Belirli bir uzantıya sahip dosyaları/dizinleri bulmak için bir joker karakter kullanın:</description>
    </item>
    
  </channel>
</rss>
