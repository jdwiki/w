<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grails Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/grails/</link>
    <description>Recent content in Grails Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/grails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Grails&#39;e başlarken</title>
      <link>https://www.wikiod.com/tr/grails/grailse-baslarken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/grails/grailse-baslarken/</guid>
      <description>Uygulama oluşturma # Grails uygulaması oluşturmak için &amp;lsquo;grails create-app&amp;rsquo; komutunu kullanın. Aşağıdaki komut, geçerli dizinde &amp;ldquo;myapp&amp;rdquo; adlı bir Grails uygulaması oluşturur:
grails create-app fancy-app Çalıştırmak, yeni oluşturulan uygulama dizinini ziyaret etmek kadar basittir:
cd fancy-app ve daha sonra
grails run-app // in order to run the app on a different port, e.g. 8888, use this instead grails run-app -port 8888 // in order to run the app with a secure communication grails run-app -https Grails Kurulumu # Not: GRAILS, Grails&amp;rsquo;i kurmadan önce sisteminizde yüklü bir Java JDK (JRE çalışma zamanı ortamı yeterli değildir) gerektirir.</description>
    </item>
    
    <item>
      <title>REST kaynakları olarak etki alanı sınıfları</title>
      <link>https://www.wikiod.com/tr/grails/rest-kaynaklar-olarak-etki-alan-snflar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/grails/rest-kaynaklar-olarak-etki-alan-snflar/</guid>
      <description>Grails&amp;rsquo;de RESTful API oluşturmanın en kolay yolu, bir etki alanı sınıfını REST kaynağı olarak ortaya çıkarmaktır. Bu, herhangi bir etki alanı sınıfına grails.rest.Resource dönüşümü eklenerek yapılabilir.
Grails ile basit REST API # import grails.rest.* @Resource(uri=&#39;/books&#39;) class Book { String title static constraints = { title blank:false } } Basitçe Kaynak dönüşümünü ekleyerek ve bir URI belirterek, etki alanı sınıfınız otomatik olarak XML veya JSON biçimlerinde bir REST kaynağı olarak kullanılabilir olacaktır.</description>
    </item>
    
    <item>
      <title>dağıtım</title>
      <link>https://www.wikiod.com/tr/grails/dagtm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/grails/dagtm/</guid>
      <description>Yürütülebilir Jar # Grails 3.x&amp;rsquo;i dağıtmanın en kolay yollarından biri, uygulamayla birlikte bir sunucu uygulaması kapsayıcısını (Tomcat, Undertow, vb.) gömen yürütülebilir bir jar dosyası oluşturmaktır.
&amp;lsquo;build.gradle&amp;rsquo;ı değiştirin:
// Remove or comment out the war plugin: // apply plugin:&amp;quot;war&amp;quot; // Enable the executable jar: springBoot { executable = true } // Optional: Customize the jar properties: // https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Jar.html jar { archiveName(&#39;myapp.jar&#39;) } ./gradlew assemble kullanarak oluşturun
Ortaya çıkan kavanoz artık başlatabileceğiniz tamamen yürütülebilir bir uygulamadır:</description>
    </item>
    
    <item>
      <title>GSP</title>
      <link>https://www.wikiod.com/tr/grails/gsp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/grails/gsp/</guid>
      <description>Parametreler # Değişkenler ve kapsamlar Ayrıntılar uygulama ServletContext örnek uygulamaİçerik Bahar ApplicationContext örneği flaş flaş nesnesi grailsUygulama GrailsApplication örneği dışarı çıktı akışına yazmak için yanıt yazıcısı paramlar params istek parametrelerini almak için nesne talep HttpServletRequest örneği yanıt HttpServletResponse örneği oturum HttpSession örnek webTalebi GrailsWebRequest örnek İfade # GSP&amp;rsquo;de, GSP ifadeleri desteği nedeniyle &amp;lt;%= %&amp;gt; sözdizimi nadiren kullanılır.
Bir GSP ifadesi, bir JSP EL ifadesine veya bir Groovy GString ifadesine benzer ve &amp;ldquo;${ifade}&amp;rdquo; biçimini alır:</description>
    </item>
    
  </channel>
</rss>
