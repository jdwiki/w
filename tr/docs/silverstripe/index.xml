<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gümüş şerit Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/silverstripe/</link>
    <description>Recent content in gümüş şerit Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/silverstripe/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Silverstripe&#39;ı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/silverstripe/silverstripe-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/silverstripe-kullanmaya-baslama/</guid>
      <description>Kurulum # SilverStripe, oluşturucu aracılığıyla veya indirilen zip dosyasının çıkarılması yoluyla kurulabilir.
Besteci aracılığıyla yüklemek için aşağıdaki komutu çalıştırıyoruz
composer create-project silverstripe/installer /path/to/project 3.4.0 SilverStripe web sitesinin indirme sayfasında bir indirme zip dosyası bulunabilir. İndirildikten sonra, bu dosyanın istenen projenin kök dizinine çıkarılması gerekir.
Web sitesini ilk kez ziyaret ettiğinizde, SilverStripe kurulumunu yapılandırmak ve kurmak için bir kurulum sihirbazı sunulacaktır.
CMS / Beyaz Etiketlemeyi Özelleştirme # SilverStripe CMS, CMS logosunu, bağlantısını ve uygulama adını değiştirmek için özelleştirilebilir.</description>
    </item>
    
    <item>
      <title>Formlar</title>
      <link>https://www.wikiod.com/tr/silverstripe/formlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/formlar/</guid>
      <description>Sözdizimi # Form::create($this, __FUNCTION__, $fields, $actions, $validator) // standart form oluşturma Form::create(&amp;hellip;)-&amp;gt;addExtraClass(&amp;lsquo;my-css-class other-class&amp;rsquo;) // Formunuza CSS sınıfları ekleyin Form::create(&amp;hellip;)-&amp;gt;loadDataFrom(Üye::get()-&amp;gt;byID(1)); // bir formu bir nesnenin ayrıntılarıyla doldurun Form Oluşturma # Burada, bir zorunlu metin alanı ve özel bir işleve gönderen bir gönder düğmesi içeren temel bir örnek form verilmiştir:
class Page_Controller extends ContentController { private static $allowed_actions = array( &#39;ExampleForm&#39; ); public function ExampleForm() { $fields = FieldList::create( TextField::create(&#39;Name&#39;, &#39;Your Name&#39;) ); $actions = FieldList::create( FormAction::create(&#39;doExampleFormAction&#39;, &#39;Go&#39;) ); $requiredFields = RequiredFields::create(&#39;Name&#39;); $form = Form::create( $this, &#39;ExampleForm&#39;, $fields, $actions, $requiredFields ); return $form; } public function doExampleFormAction($data, Form $form) { $form-&amp;gt;sessionMessage(&#39;Hello &#39;.</description>
    </item>
    
    <item>
      <title>otomatik yükleyici</title>
      <link>https://www.wikiod.com/tr/silverstripe/otomatik-yukleyici/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/otomatik-yukleyici/</guid>
      <description>Sınıflarda herhangi bir değişiklik yaptığınızda, bildirimi yeniden oluşturmak için bir dev/build?flush=1 çalıştırmanız gerekir.
Sınıfım.php # &amp;lt;?php class MyClass { ... } class OtherClass { ... } ?&amp;gt; Dosya adıyla aynı ada sahip herhangi bir sınıf, Silverstripe tarafından otomatik olarak yüklenecektir.
Okunmakta olan bir dosyada olduğu için OtherClass da yüklenecektir.
Sayfam.php
&amp;lt;?php class MyPage_Controller extends BookingPage_Controller { ... } ?&amp;gt; Kontrolör işlevleri için dosya adında &amp;ldquo;_Controller&amp;rdquo; kısmını atlayabilirsiniz.
Bir dizin yoksayılacaksa, &amp;ldquo;_manifest_exclude&amp;rdquo; adlı bir dosya ekleyin</description>
    </item>
    
    <item>
      <title>ModelYönetici</title>
      <link>https://www.wikiod.com/tr/silverstripe/modelyonetici/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/modelyonetici/</guid>
      <description>Arayüzde görüntülenen DataObject adını kontrol edin # class MyDataObject extends DataObject { private static $singular_name = &#39;My Object&#39;; private static $plural_name = &#39;My Objects&#39;; ... } Veri Nesneleri varsayılan olarak sıralanabilir # class SortDataObject extends DataObject { private static $db = array( &#39;Name&#39; =&amp;gt; &#39;Varchar&#39;, &#39;SortOrder&#39; =&amp;gt; &#39;Int&#39; ); private static $default_sort = &#39;SortOrder DESC&#39;; } DataObject için görüntülenen kontrol sütunları # class MyDataObject extends DataObject { private static $db = array( &#39;Name&#39; =&amp;gt; &#39;Varchar&#39; ); private static $has_one = array( &#39;OtherDataObject&#39; =&amp;gt; &#39;OtherDataObject&#39; ); private static $summary_fields = array( &#39;Name&#39;, &#39;OtherDataObject.</description>
    </item>
    
    <item>
      <title>Yapılandırma Sistemi</title>
      <link>https://www.wikiod.com/tr/silverstripe/yaplandrma-sistemi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/yaplandrma-sistemi/</guid>
      <description>Yapılandırma sistemi nedir # SilverStripe, sınıflar ve uygulama için ayarları depolamak için global bir yapılandırma sistemi kullanır. Bu yapılandırma değişkenleri, Modellerin yapısını, Denetleyicilerdeki güvenlik ayarlarını veya üçüncü taraf hizmetler için API anahtarlarını tanımlamak için kullanılabilir.
Nasıl çalışır # &amp;ldquo;Config&amp;rdquo; değerleri, &amp;ldquo;dev/build&amp;rdquo; ve önbellek temizleme (herhangi bir URL&amp;rsquo;ye &amp;ldquo;?flush&amp;rdquo; ekleyerek) sırasında veya uygulama kodunun ilk kez çalıştırılması sırasında &amp;ldquo;SS_ConfigStaticManifest&amp;rdquo; tarafından doldurulur.
&amp;lsquo;SS_ConfigStaticManifest&amp;rsquo;, herhangi bir yapılandırma değeri için tüm PHP sınıflarını ve YAML yapılandırma dosyalarını tarayacak ve bu değerlerin bir önbelleğini oluşturacaktır.</description>
    </item>
    
    <item>
      <title>ORM&#39;yi kullanma</title>
      <link>https://www.wikiod.com/tr/silverstripe/ormyi-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/ormyi-kullanma/</guid>
      <description>DataObjects okuma ve yazma # SilverStripe&amp;rsquo;deki DataObjects, bir veritabanı tablosu satırını temsil eder. Modeldeki alanlar, özellik adları aracılığıyla veri almayı ve ayarlamayı işleyen sihirli yöntemlere sahiptir.
Örnek olarak basit bir DataObject&amp;rsquo;imiz olduğu göz önüne alındığında:
class Fruit extends DataObject { private static $db = [&#39;Name&#39; =&amp;gt; &#39;Varchar&#39;]; } Aşağıdaki gibi bir &amp;ldquo;Meyve&amp;rdquo; oluşturabilir, veri ayarlayabilir ve yazabilirsiniz:
$apple = Fruit::create(); $apple-&amp;gt;Name = &#39;Apple&#39;; $apple-&amp;gt;write(); Benzer şekilde &amp;ldquo;Meyve&amp;rdquo; nesnesini aşağıdaki gibi alabilirsiniz:</description>
    </item>
    
    <item>
      <title>SolveAna</title>
      <link>https://www.wikiod.com/tr/silverstripe/solveana/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/solveana/</guid>
      <description>&amp;ldquo;LeftAndMain&amp;rdquo; daha çok alt düzey bir API&amp;rsquo;dir ve &amp;ldquo;ModelAdmin&amp;quot;in varlığından dolayı genellikle gerekli değildir. Ancak, modülünüzün yönetim panelindeki &amp;lsquo;ModelAdmin&amp;rsquo; işlevselliğini zorunlu olarak gerektirmeyen özel bir kullanıcı arabirimi oluşturmak istiyorsanız, başlamak istediğiniz yer &amp;lsquo;LeftAndMain&amp;rsquo; olacaktır.
1. Başlarken # Bu kılavuz, &amp;lsquo;LeftAndMain&amp;rsquo; sınıfını alt sınıflara ayırarak kendi Kullanıcı Arayüzünüzü oluşturmaya başlamanız için hazırlanmıştır.
Bu kılavuzun sonunda, Yönetim Panelinde ilk &amp;lsquo;Merhaba Dünya&amp;rsquo; arayüzünüzü oluşturmuş olacaksınız.
Gereksinimler # Bu kılavuz, çerçeve VE CMS&amp;rsquo;nin en az &amp;ldquo;3.</description>
    </item>
    
    <item>
      <title>Veri Uzantıları</title>
      <link>https://www.wikiod.com/tr/silverstripe/veri-uzantlar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/veri-uzantlar/</guid>
      <description>Bir DataObject&amp;rsquo;e alan ekleme # Mevcut bir DataObject&amp;rsquo;e fazladan veritabanı alanları eklemek için &amp;ldquo;DataExtension&amp;rdquo; mekanizmasını kullanabilirsiniz:
class MyMemberExtension extends DataExtension { private static $db = [ &#39;HairColour&#39; =&amp;gt; &#39;Varchar&#39; ]; } Ve uzantıyı uygulayın:
# File: mysite/_config/app.yml Member: extensions: - MyMemberExtension Bu, &amp;ldquo;Üye&amp;rdquo; nesnelerine bir alan olarak &amp;ldquo;HairColour&amp;rdquo; ekleyecektir.
Bir DataObject&amp;rsquo;e yöntemler ekleme # Uzantı mekanizmasını kullanarak bir DataObject&amp;rsquo;e genel yöntemler ekleyebilirsiniz, örneğin:
class MyMemberExtension extends DataExtension { public function getHashId() { return sha1($this-&amp;gt;owner-&amp;gt;ID); } } &amp;ldquo;Üye&amp;rdquo; sınıfına uygulandığında, yukarıdaki örnek, &amp;ldquo;$this-&amp;gt;sahip&amp;rdquo; korumalı özelliği aracılığıyla &amp;ldquo;Üye&amp;quot;ye erişerek &amp;ldquo;Üye&amp;rdquo; kimliğinin &amp;ldquo;sha1&amp;rdquo; karmasını döndürür.</description>
    </item>
    
    <item>
      <title>Eklentiler ve Modüller</title>
      <link>https://www.wikiod.com/tr/silverstripe/eklentiler-ve-moduller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/silverstripe/eklentiler-ve-moduller/</guid>
      <description>Eklentilerin ve modüllerin Packagist&amp;rsquo;e kaydedilmesi teşvik edilir, bu da onların bulunduğu ve SilverStripe eklenti deposu ile kaydedildiği anlamına gelir.
Modüllerin kurulumu [Composer kullanımı2 aracılığıyla önerilir]
SilverStripe Izgara Alan Uzantıları Modülü # SilverStripe Grid Field Extensions Module, temel &amp;lsquo;GridField&amp;rsquo;i geliştirmek için bazı çok güzel özelliklere sahiptir&amp;hellip;
GridFieldAddExistingSearchButton - öğe eklemek için daha gelişmiş bir arama formu &amp;ldquo;GridFieldAddNewInlineButton&amp;rdquo; - kayıtların satır içi oluşturulmasına izin vermek için &amp;ldquo;GridFieldEditableColumns&amp;rdquo; üzerine kuruludur. GridFieldAddNewMultiClass - kullanıcının yeni bir kayıt oluşturmak için bir sınıf listesinden seçim yapmasına izin verir.</description>
    </item>
    
  </channel>
</rss>
