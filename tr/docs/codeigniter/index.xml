<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>codeigniter Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/codeigniter/</link>
    <description>Recent content in codeigniter Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/codeigniter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>codeigniter&#39;ı kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/codeigniter/codeigniter-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/codeigniter-kullanmaya-baslama/</guid>
      <description>Kurulum ve Kurulum # Windows Ortamı # XAMPP veya WAMP yükleyin Paketi Codeigniter.com adresinden indirin ve açın Sunucu alanındaki tüm belgeyi çıkarın (htdocs veya www dizini) Mac Ortamı # MAMP yükleyin Paketi Codeigniter.com adresinden indirin ve açın Sunucu alanındaki tüm belgeyi çıkarın (htdocs) Linux Ortamı # Paketi Codeigniter.com adresinden indirin ve açın Çıkarılan klasörü /var/www içine yerleştirin (WAMP&amp;rsquo;ta) veya xampp/htdocs (XAMPP) GitHub # git klonu https://github.com/bcit-ci/CodeIgniter.git
Sistemi doğru takip ederseniz aşağıdaki ekran ile karşılaşacaksınız.</description>
    </item>
    
    <item>
      <title>kanca kullanımı</title>
      <link>https://www.wikiod.com/tr/codeigniter/kanca-kullanm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/kanca-kullanm/</guid>
      <description>Kanca Noktaları # &amp;ldquo;ön_sistem&amp;rdquo; # Sistem yürütme sırasında çok erken çağrılır. Bu noktada yalnızca benchmark ve hooks sınıfı yüklenmiştir. Yönlendirme veya diğer işlemler gerçekleşmedi.
&amp;ldquo;ön kontrolör&amp;rdquo; # Herhangi bir denetleyiciniz aranmadan hemen önce aranır. Tüm temel sınıflar, yönlendirme ve güvenlik kontrolleri yapılmıştır.
&amp;lsquo;post_controller_constructor&amp;rsquo; # Denetleyiciniz başlatıldıktan hemen sonra, ancak herhangi bir yöntem çağrısı gerçekleşmeden önce çağrılır.
&amp;lsquo;post_controller&amp;rsquo; # Denetleyiciniz tamamen yürütüldükten hemen sonra çağrılır.
&amp;lsquo;görüntüleme_geçersiz kıl&amp;rsquo; # Sonlandırılmış sayfayı sistem yürütmesinin sonunda web tarayıcısına göndermek için kullanılan _display() yöntemini geçersiz kılar.</description>
    </item>
    
    <item>
      <title>CodeIgniter&#39;da saat dilimi nasıl ayarlanır?</title>
      <link>https://www.wikiod.com/tr/codeigniter/codeigniterda-saat-dilimi-nasl-ayarlanr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/codeigniterda-saat-dilimi-nasl-ayarlanr/</guid>
      <description>CodeIgniter&amp;rsquo;da saat dilimi nasıl ayarlanır # Temel URL&amp;rsquo;nin üstündeki config.php üzerine date_default_timezone_set(&#39;Asia/Kolkata&#39;); yerleştirmek de işe yarar.
PHP Desteklenen Zaman Dilimlerinin Listesi
application/config.php
&amp;lt;?php defined(&#39;BASEPATH&#39;) OR exit(&#39;No direct script access allowed&#39;); date_default_timezone_set(&#39;Asia/Kolkata&#39;); Yararlı bulduğum bir başka yol da, her kullanıcı için bir saat dilimi belirlemek istiyorsanız:
Bir MY_Controller.php dosyası oluşturun.
&amp;ldquo;Kullanıcı&amp;rdquo; tablonuzda bir sütun oluşturun, ona saat dilimi veya istediğiniz herhangi bir ad verebilirsiniz. Böylece kullanıcı kendi saat dilimini seçtiğinde, giriş yaparken kendi saat dilimine ayarlanabilir.</description>
    </item>
    
    <item>
      <title>Codeigniter&#39;da temel url</title>
      <link>https://www.wikiod.com/tr/codeigniter/codeigniterda-temel-url/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/codeigniterda-temel-url/</guid>
      <description>Codeigniter&amp;rsquo;da temel url&amp;rsquo;nizi ayarlama # application/config/config.php içinde temel URL&amp;rsquo;nizi ayarlamanız gerekecektir.
Ayarlanmadıysa, CodeIgniter protokolü ve yolu tahmin etmeye çalışacaktır. kurulumunuz, ancak güvenlik endişeleri nedeniyle ana bilgisayar adı ayarlanacaktır. varsa $_SERVER[&#39;SERVER_ADDR&#39;] için, yoksa localhost. Otomatik algılama mekanizması yalnızca kullanım sırasında kolaylık sağlamak için mevcuttur. geliştirme ve üretimde KULLANILMAMALIDIR!
$config[&#39;base_url&#39;] = &#39;&#39;; gibi dosyalanmalıdır
$config[&#39;base_url&#39;] = &#39;http://localhost/projectname/&#39;; $config[&#39;base_url&#39;] = &#39;http://www.example.com/&#39;; &amp;ldquo;base_url&amp;quot;nin sonunda &amp;ldquo;/&amp;rdquo; kullanmak her zaman iyidir
Temel URL&amp;rsquo;nizi ayarlamadığınızda, CSS&amp;rsquo;nizi, resimlerinizi ve diğer varlık öğelerinizi yükleyemediğiniz bazı hatalarla karşılaşabilirsiniz.</description>
    </item>
    
    <item>
      <title>Merhaba Dünya&#39;ya başlayalım</title>
      <link>https://www.wikiod.com/tr/codeigniter/merhaba-dunyaya-baslayalm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/merhaba-dunyaya-baslayalm/</guid>
      <description>Çok basit bir Merhaba Dünya uygulaması # Codeigniter 3&amp;rsquo;ün yeni kurulumundan başlayarak, bu sağlam PHP çerçevesiyle buzları kırmak için Hello World uygulamasıyla başlamanın basit bir yolunu burada bulabilirsiniz.
Bunu yapmak için Hello World uygulamamız için gösterilmesini istediğimiz görünümü oluşturmaya başlayabilirsiniz.
Başvuru klasörünüze koyacağız, burada:
hello_world.php(/application/views/) içinde
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Hello World&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Bu sadece basit bir HTML içeriğidir.
Şimdi, bu görünümü gösterebilmek için bir kontrolöre ihtiyacımız var.</description>
    </item>
    
    <item>
      <title>Modeli codeigniter&#39;da kullanma</title>
      <link>https://www.wikiod.com/tr/codeigniter/modeli-codeigniterda-kullanma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/modeli-codeigniterda-kullanma/</guid>
      <description>Modeli Çağırma işlevi # Sözdizimi
$this-&amp;gt;load-&amp;gt;model(&#39;model_name&#39;); $this-&amp;gt;model_name-&amp;gt;method_name(); Uygulama
$this-&amp;gt;load-&amp;gt;model(&#39;home_model&#39;); $this-&amp;gt;home_model-&amp;gt;get_data(); Model Oluşturma # &amp;ldquo;Uygulama/model&amp;quot;e gidin
Dosya adı - Home_model.php dosyanın içinde
class Home_model extends CI_Model { public $variable; public function __construct() { parent::__construct(); } public function get_data() { $query = $this-&amp;gt;db-&amp;gt;get(&#39;table_name&#39;, 10); return $query-&amp;gt;result_array(); } } Ve bu modeli yüklemeniz gerektiğinde:
$this-&amp;gt;load-&amp;gt;model(&#39;home_model&#39;); $this-&amp;gt;home_model-&amp;gt;get_data(); Veya modelinizin farklı bir nesne adına atanmasını istiyorsanız, bunu şu şekilde belirtebilirsiniz:
$this-&amp;gt;load-&amp;gt;model(&#39;home_model&#39;, &#39;home&#39;); $this-&amp;gt;home-&amp;gt;get_data(); Verileri Denetleyiciye Döndür # public function get_username($uid) { $query = $this-&amp;gt;db-&amp;gt;select(&#39;id&#39;) -&amp;gt;select(&#39;name&#39;) -&amp;gt;from(&#39;user_table&#39;) -&amp;gt;where(&#39;id&#39;, $uid) -&amp;gt;get(); return $query-&amp;gt;result_array(); } bu, eşleşen kimlik ve kullanıcı adıyla sonucu denetleyiciye döndürür.</description>
    </item>
    
    <item>
      <title>CodeIgniter&#39;da ResimDosya Yükleyici</title>
      <link>https://www.wikiod.com/tr/codeigniter/codeigniterda-resimdosya-yukleyici/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/codeigniterda-resimdosya-yukleyici/</guid>
      <description>(Denetleyici, Dosya, Sınıf, Kimlik) veya her ne olursa olsun aynı adları kullanmanız gerekmez. Kullandıklarımın hepsi kodlama akışının ve varsayımlarımın anlaşılması amacına yöneliktir. Kodu alıp kodu/adını kendi isteğine göre düzenleyip ardından kodu barındırıp başarılı olmak geliştiriciye kalmıştır.
Tek Dosya/ Resim Yükleyici # Şimdi CI yolu ile önerilen formlar yardımıyla Image/Dosya Yükleme kodunun native CI yönteminde nasıl çalıştığını göreceğiz.
PHP&amp;rsquo;de dosya yüklemenin İki Senaryosu vardır. Aşağıda aşağıdaki şekilde bahsedilmiştir.
Tek Resim/Dosya yükleyici - Bu, form özelliğindeki normal değişken yardımıyla kaydedilebilir.</description>
    </item>
    
    <item>
      <title>CI kitaplıkları ve yardımcısı nasıl kullanılır?</title>
      <link>https://www.wikiod.com/tr/codeigniter/ci-kitaplklar-ve-yardmcs-nasl-kullanlr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/ci-kitaplklar-ve-yardmcs-nasl-kullanlr/</guid>
      <description>Kitaplıkları ve yardımcıları kullanma # Örnek, geçerli bir kod değil, kitaplıkları ve yardımcıları kullanma amaçlıdır. Projelerinize kopyalamayın/yapıştırmayın.
HELPER helpers/sendEmail_helper.php
if ( ! function_exists(&#39;sendEmail&#39;)) { function sendEmail($email, $subject, $message, $lang, $cc = null, $file = null) { $CI =&amp;amp; get_instance(); $mail_config[&#39;protocol&#39;] = &#39;smtp&#39;; $mail_config[&#39;smtp_host&#39;] = &#39;host&#39;; $mail_config[&#39;smtp_user&#39;] = &#39;user&#39;; $mail_config[&#39;smtp_pass&#39;] = &#39;pass&#39;; $mail_config[&#39;smtp_port&#39;] = &#39;587&#39;; $mail_config[&#39;smtp_timeout&#39;] = 5; $mail_config[&#39;charset&#39;] = &#39;utf-8&#39;; $mail_config[&#39;mailtype&#39;] = &#39;html&#39;; $mail_config[&#39;wrapchars&#39;] = 76; $mail_config[&#39;wordwrap&#39;] = TRUE; $CI-&amp;gt;email-&amp;gt;initialize($mail_config); $CI-&amp;gt;email-&amp;gt;set_newLine(&#39;\r\n&#39;); if ($lang == &amp;quot;en&amp;quot;){ $CI-&amp;gt;email-&amp;gt;from(&#39;support.</description>
    </item>
    
    <item>
      <title>Web uygulamanızın güvenliğini sağlama</title>
      <link>https://www.wikiod.com/tr/codeigniter/web-uygulamanzn-guvenligini-saglama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/web-uygulamanzn-guvenligini-saglama/</guid>
      <description>CodeIgniter&amp;rsquo;ın bir geliştirme Çerçevesi olduğunu unutmayın. Uygulamanızı güvenli hale getirmek için çaba göstermez. Size sadece bunu kendiniz yapmanız için gerekli araçları sağlar. CI&amp;rsquo;nin Güvenlik sayfasına bakarsanız, geliştiricinin Uygulama Güvenliğini anlamasını ve uygulamalarına yerleştirmesini bekledikleri oldukça açıktır.
WebApp güvenliği sizin için nispeten yeniyse, OWASP ile başlardım. Daha açık şeyler yaptığına inandığım Zend veya Cake gibi diğer çerçevelere bakmak avantajlı olabilir.
Sözdizimi # $tazeveri = $bu-&amp;gt;güvenlik-&amp;gt;xss_clean($user_input_data); Parametreler # kullanıcı girişi dizisi boş xss_filter($kullanıcı girişi dizisi) içine kullanıcı girişi dizisini ekleyin Boş SQL Enjeksiyon Önleme # SQL enjeksiyonu, veritabanı sorgusuna yapılan bir saldırıdır.</description>
    </item>
    
    <item>
      <title>Form Doğrulama</title>
      <link>https://www.wikiod.com/tr/codeigniter/form-dogrulama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/codeigniter/form-dogrulama/</guid>
      <description>Doğrulama Formu Örneği # // initialize library $this-&amp;gt;load-&amp;gt;library(&#39;form_validation&#39;); $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;username&#39;, &#39;Username&#39;, &#39;required|max_length[20]&#39;); // Add validation rules for require and max $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;password&#39;, &#39;Password&#39;, &#39;required|matches[password]&#39;); // Validation for the input match $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;passconf&#39;, &#39;Password Confirmation&#39;, &#39;required&#39;); $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;email&#39;, &#39;Email&#39;, &#39;required|valid_email|is_unique[userTable.emailColumn&#39;); // add validation for the email and check the emailColumn in userTable for unique value $this-&amp;gt;form_validation-&amp;gt;set_message(&#39;is_unique&#39;, &#39;The %s is already taken, Please use another %s&#39;); // add message for the is_unique if ($this-&amp;gt;form_validation-&amp;gt;run() === FALSE) { // fail } else { // success } Bağlantı</description>
    </item>
    
  </channel>
</rss>
