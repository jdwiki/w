<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gelişmiş özel alanlar Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/advanced-custom-fields/</link>
    <description>Recent content in gelişmiş özel alanlar Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/advanced-custom-fields/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gelişmiş özel alanlarla çalışmaya başlama</title>
      <link>https://www.wikiod.com/tr/advanced-custom-fields/gelismis-ozel-alanlarla-calsmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/advanced-custom-fields/gelismis-ozel-alanlarla-calsmaya-baslama/</guid>
      <description>Kurulum/Kurulum # Standart versiyon
Standart sürümü yüklemek için WordPress kurulumunuzun Eklenti bölümüne gidin. &amp;ldquo;Gelişmiş Özel Alanlar&amp;quot;ı arayın ve kurun/etkinleştirin. Artık WordPress yönetim alanında, ilk özel alan grubunuzu oluşturabileceğiniz &amp;ldquo;Özel Alanlar&amp;rdquo; etiketli yeni bir alana erişiminiz olacak.
Profesyonel sürüm
Profesyonel sürümü yüklemek için ACF web sitesinin Hesabım bölümünün &amp;ldquo;Lisanslar ve İndirilenler&amp;rdquo; alanından indirin. Ardından WordPress kurulumunuzun Eklenti bölümüne gidin. Dosyayı yükleyin ve ardından kurun/etkinleştirin. Artık WordPress yönetim alanında, ilk özel alan grubunuzu oluşturabileceğiniz &amp;ldquo;Özel Alanlar&amp;rdquo; etiketli yeni bir alana erişiminiz olacak.</description>
    </item>
    
    <item>
      <title>get_field()</title>
      <link>https://www.wikiod.com/tr/advanced-custom-fields/get_field/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/advanced-custom-fields/get_field/</guid>
      <description>Sözdizimi # get_field($alan_adı, $post_id, $format_value); Parametreler # parametre Ayrıntılar $alan_adı (string) Talep ettiğiniz alanın adı. Alan grubunuzu kurarken bu, &amp;ldquo;Alan Adı&amp;rdquo; ayarıdır. $post_id (integer) Bu, alan adını talep ettiğiniz gönderinin kimliğidir. Bu aynı zamanda &amp;lsquo;seçenekler&amp;rsquo; veya bir sınıflandırma referansı olabilir. Geçerli gönderi/sayfa kimliği istenirse, WordPress döngüsünün içindeyken bu boş bırakılabilir. $format_değeri Veritabanından yüklenen değeri biçimlendirmek isteyip istemediğinizi belirleyin. Varsayılan olarak true olur. Gerekli değil. get_field() ile the_field() karşılaştırması
the_field(), sayfanızdaki alan değerini otomatik olarak görüntüler, burada get_field() göstermez.</description>
    </item>
    
    <item>
      <title>alan()</title>
      <link>https://www.wikiod.com/tr/advanced-custom-fields/alan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/advanced-custom-fields/alan/</guid>
      <description>Sözdizimi # the_field($alan_adı, $post_id); Parametreler # parametre Ayrıntılar $alan_adı alınacak alanın adı. örneğin “page_content” (gerekli) $post_id Değerinizin girildiği belirli posta kimliği. Geçerli posta kimliğine varsayılandır (gerekli değildir). Bu aynı zamanda seçenekler/taksonomiler/kullanıcılar/vb Değişkenlere alan değerleri atarken veya kodunuzdaki döndürülen içeriği işlerken get_field() kullanın. the_field(), echo get_field($field_name); ile aynıdır
Alanın var olup olmadığını kontrol edin # &amp;lt;?php if( get_field(&#39;text_field&#39;) ): ?&amp;gt; &amp;lt;?php the_field(&#39;text_field&#39;); ?&amp;gt; &amp;lt;?php endif; ?&amp;gt; Burada bir değerin var olup olmadığını belirlemek için get_field() ve onu yansıtmak için the_field() kullanıyoruz.</description>
    </item>
    
    <item>
      <title>Özel Seçenekler sayfası</title>
      <link>https://www.wikiod.com/tr/advanced-custom-fields/ozel-secenekler-sayfas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/advanced-custom-fields/ozel-secenekler-sayfas/</guid>
      <description>Sözdizimi # acf_add_options_page( $args ); acf_add_options_sub_page($sayfa); Parametreler # parametre Ayrıntılar $arg&amp;rsquo;lar (karışık) Sayfa başlığı için bir dize veya bir dizi ayar. Boş bırakılırsa varsayılan ayarlar kullanılacaktır. $sayfa (karışık) Sayfa başlığı için bir dize veya bir dizi ayar. Boş bırakılırsa varsayılan ayarlar kullanılacaktır. En basit Seçenekler sayfası # if( function_exists(&#39;acf_add_options_page&#39;) ) { acf_add_options_page(); } Yukarıdaki kodu functions.php dosyasına ekleyin ve Wordpress yönetici alanınızda &amp;lsquo;Seçenekler&amp;rsquo; adlı bir seçenekler sayfası görünecektir. Şimdi sayfaya bazı özel alanlar atamanız gerekiyor.</description>
    </item>
    
    <item>
      <title>Tarih Saat Seçici</title>
      <link>https://www.wikiod.com/tr/advanced-custom-fields/tarih-saat-secici/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/advanced-custom-fields/tarih-saat-secici/</guid>
      <description>Tarih Saat Seçici, kullanıcının hem tarihi (ay/tarih/yıl) hem de günün saatini (saat/dakika/saniye) seçmesine olanak tanır. Bir kullanıcı daha sonra PHP date() kabul edilebilir yöntemlere dayalı olarak tarih biçimini ve dönüş biçimini çıkarabilir. Bu, etkinlikler, tur tarihleri ​​ve hatta tek bir özel alan gibi özel gönderi türlerini sorgulamak için yararlıdır.
Çıktı tarih-saat değeri # Tarihi tek başına görüntüleyin (özel alan tur_tarihidir):
&amp;lt;p&amp;gt;Tour Date &amp;lt;?php the_field(&#39;tour_date&#39;);?&amp;gt;&amp;lt;/p&amp;gt; Bir alanı göstermek için iki tarih-saat alanı kullanın # Diyelim ki zamana dayalı bir metin alanı (&amp;lsquo;duyuru&amp;rsquo;) göstermek istiyorsunuz (örneğin planlanmış bir bildirim mesajı).</description>
    </item>
    
  </channel>
</rss>
