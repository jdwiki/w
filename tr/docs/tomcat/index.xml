<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>erkek kedi Eğitimi on </title>
    <link>https://www.wikiod.com/tr/docs/tomcat/</link>
    <description>Recent content in erkek kedi Eğitimi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/tr/docs/tomcat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tomcat&#39;i kullanmaya başlama</title>
      <link>https://www.wikiod.com/tr/tomcat/tomcati-kullanmaya-baslama/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tomcat/tomcati-kullanmaya-baslama/</guid>
      <description>Kurulum veya Kurulum # Tomcat&amp;rsquo;i kurma veya kurma hakkında ayrıntılı talimatlar.
Tomcat&amp;rsquo;i Ubuntu&amp;rsquo;ya hizmet olarak yükleme # Bu örnek, Tomcat&amp;rsquo;in hem Tomcat&amp;rsquo;in hem de Java&amp;rsquo;nın *.tar.gz sürümlerini kullanarak Ubuntu&amp;rsquo;da bir hizmet olarak nasıl kurulacağını gösterir.
1. Java Runtime Environment&amp;rsquo;ı (JRE) yükleyin # İstediğiniz jre .tar.gz sürümünü indirin /opt/ dizinine çıkartın Bu, /opt/jre1.Xxxx/ dizini oluşturacaktır. Java ana dizinine sembolik bir bağlantı oluşturun: cd /opt; sudo ln -s jre1.Xxxxx java JRE&#39;yi JAVA_HOME ortam değişkenine ekleyin: sudo vim /etc/ortam JAVA_HOME=&#34;</description>
    </item>
    
    <item>
      <title>JNDI veri kaynağını yapılandırma</title>
      <link>https://www.wikiod.com/tr/tomcat/jndi-veri-kaynagn-yaplandrma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tomcat/jndi-veri-kaynagn-yaplandrma/</guid>
      <description>Parametreler # Özellik Ayrıntılar yetki (Dize) Web Uygulaması kodunun ilgili kaynak yöneticisinde programlı olarak mı oturum açacağını yoksa Kapsayıcının uygulama adına kaynak yöneticisinde mi oturum açacağını belirtin. Bu özniteliğin değeri Uygulama veya Kapsayıcı olmalıdır. Bu öznitelik, web uygulaması web uygulaması dağıtım tanımlayıcısında bir resource-ref öğesi kullanacaksa gereklidir, ancak uygulama bunun yerine bir resource-env-ref kullanıyorsa isteğe bağlıdır. sürücüSınıfAdı (Dize) Kullanılacak JDBC sürücüsünün tam nitelikli Java sınıfı adı. Sürücüye, veritabanı bağlantı havuzu jar ile aynı sınıf yükleyiciden erişilebilir olmalıdır.</description>
    </item>
    
    <item>
      <title>Tomcat Sanal Konakları</title>
      <link>https://www.wikiod.com/tr/tomcat/tomcat-sanal-konaklar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tomcat/tomcat-sanal-konaklar/</guid>
      <description>Ana Bilgisayar Yöneticisi, Tomcat içinde Sanal Ana Bilgisayarları oluşturan/kaldıran Tomcat içinde bir web uygulamasıdır.
Bir Sanal Ana Bilgisayar, tek bir sunucuda birden çok ana bilgisayar adı tanımlamanıza olanak tanır, böylece, örneğin &amp;ldquo;ren.myserver.com&amp;rdquo; ve &amp;ldquo;stimpy.myserver.com&amp;rdquo; isteklerini işlemek için aynı sunucuyu kullanabilirsiniz.
Maalesef, Ana Bilgisayar Yöneticisinin GUI tarafındaki belgeler mevcut görünmüyor, ancak sanal ana bilgisayarları &amp;ldquo;context.xml&amp;rdquo; dosyasında manuel olarak yapılandırmaya ilişkin belgeler burada:
http://tomcat.apache.org/tomcat-7.0-doc/virtual-hosting-howto.html.
&amp;ldquo;Ana Bilgisayar&amp;rdquo; parametrelerinin tam açıklamasını burada bulabilirsiniz:
http://tomcat.apache.org/tomcat-7.0-doc/config/host.html.</description>
    </item>
    
    <item>
      <title>HTTP yapılandırması</title>
      <link>https://www.wikiod.com/tr/tomcat/http-yaplandrmas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tomcat/http-yaplandrmas/</guid>
      <description>SSL/TLS Yapılandırması # HTTPS
HTTPS (TLS üzerinden HTTP,[1][2] SSL üzerinden HTTP,[3] ve HTTP Güvenli[4][5] olarak da adlandırılır), İnternette yaygın olarak kullanılan bir bilgisayar ağı üzerinden güvenli iletişim için bir protokoldür. HTTPS, Aktarım Katmanı Güvenliği veya öncülü Güvenli Yuva Katmanı tarafından şifrelenmiş bir bağlantı içinde Köprü Metni Aktarım Protokolü (HTTP) üzerinden iletişimden oluşur. HTTPS&amp;rsquo;nin ana motivasyonu, ziyaret edilen web sitesinin kimlik doğrulaması ve değiş tokuş edilen verilerin gizliliğinin ve bütünlüğünün korunmasıdır.</description>
    </item>
    
    <item>
      <title>JDBC Veri Kaynağını Yapılandırma</title>
      <link>https://www.wikiod.com/tr/tomcat/jdbc-veri-kaynagn-yaplandrma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tomcat/jdbc-veri-kaynagn-yaplandrma/</guid>
      <description>JDBC veri kaynağını kullanmak için önce Tomcat&amp;rsquo;te bir JNDI referansı oluşturmalıyız. JNDI başvurusu yapıldıktan sonra, JDBC veri kaynakları Tomcat sunucumuzda ve paylaşılan veya bağımsız referanslar kullanan uygulamalarda kullanılabilir (&amp;lsquo;dev&amp;rsquo;/&amp;lsquo;staging&amp;rsquo;/&amp;lsquo;prod&amp;rsquo; kurulumu veya taahhüt edilen koddan bağlantı dizelerinin/kimlik bilgilerinin kaldırılması için harika).
JNDI ve JDBC&amp;rsquo;yi kullanmak, aynı zamanda, nesne ve tablo eşlemesi için &amp;ldquo;kalıcılık birimleri&amp;rdquo; tanımlamak için Hazırda Bekletme gibi ORM&amp;rsquo;leri veya JPA gibi platformları kullanmanızı sağlar.
Sunucu çapında bir JNDI referansı yapılandırma # {CATALINA_HOME}/conf/ klasörünüzün içinde bir server.</description>
    </item>
    
    <item>
      <title>Bir uygulamaya gömme</title>
      <link>https://www.wikiod.com/tr/tomcat/bir-uygulamaya-gomme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tomcat/bir-uygulamaya-gomme/</guid>
      <description>Tomcat&amp;rsquo;i maven kullanarak göm # &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.tomcat.maven&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;tomcat7-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.1&amp;lt;/version&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;id&amp;gt;tomcat-run&amp;lt;/id&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;exec-war-only&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;!--This phase is for creating jar file.You can customize configuration --&amp;gt; &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;path&amp;gt;/WebAppName&amp;lt;/path&amp;gt; &amp;lt;enableNaming&amp;gt;false&amp;lt;/enableNaming&amp;gt; &amp;lt;finalName&amp;gt;WebAppName.jar&amp;lt;/finalName&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;!--This configuration is for running application in your ide--&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;port&amp;gt;8020&amp;lt;/port&amp;gt; &amp;lt;path&amp;gt;/webappName&amp;lt;/path&amp;gt; &amp;lt;!--These properties are optional--&amp;gt; &amp;lt;systemProperties&amp;gt; &amp;lt;CATALINA_OPTS&amp;gt;-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode -XX:+CMSIncrementalPacing -XX:CMSIncrementalDutyCycleMin=0 -XX:-TraceClassUnloading &amp;lt;/CATALINA_OPTS&amp;gt; &amp;lt;/systemProperties&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt; Yukarıdaki Tomcat&amp;rsquo;i &amp;rsquo;tomcat:run&amp;rsquo; hedefini kullanarak ide&amp;rsquo;nizde çalıştırabilirsiniz.</description>
    </item>
    
    <item>
      <title>Tomcat(x) Dizin Yapıları</title>
      <link>https://www.wikiod.com/tr/tomcat/tomcatx-dizin-yaplar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tomcat/tomcatx-dizin-yaplar/</guid>
      <description>Ubuntu&amp;rsquo;da Dizin Yapısı (Linux) # Tomcat&amp;rsquo;i apt-get ile Ubuntu xx.xx&amp;rsquo;e yükledikten sonra, Tomcat şu dizinleri oluşturur ve kullanır:
$cd /etc/tomcat6/
├── Catalina │ └── localhost │ ├── ROOT.xml │ └── solr.xml -&amp;gt; ../../../solr/solr-tomcat.xml ├── catalina.properties ├── context.xml ├── logging.properties ├── policy.d │ ├── 01system.policy │ ├── 02debian.policy │ ├── 03catalina.policy │ ├── 04webapps.policy │ ├── 05solr.policy -&amp;gt; /etc/solr/tomcat.policy │ └── 50local.policy ├── server.xml ├── tomcat-users.xml └── web.xml $cd /usr/share/tomcat6
├── bin │ ├── bootstrap.</description>
    </item>
    
    <item>
      <title>Geliştirme Amaçlı Tomcat&#39;i etkinleştiren CAC</title>
      <link>https://www.wikiod.com/tr/tomcat/gelistirme-amacl-tomcati-etkinlestiren-cac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/tr/tomcat/gelistirme-amacl-tomcati-etkinlestiren-cac/</guid>
      <description>Anahtar Depolarını oluşturma ve Tomcat&amp;rsquo;i yapılandırma # Bu yazı, Tomcat&amp;rsquo;i istemciden CAC sertifikaları isteyecek şekilde yapılandırma adımlarını gözden geçirir. Bir geliştirme ortamı kurmaya odaklanmıştır, bu nedenle üretim için dikkate alınması gereken bazı özellikler burada değildir. (Örneğin, https için kendinden imzalı bir sertifika kullanıldığını gösteriyor ve iptal edilmiş sertifikaları kontrol etmeyi düşünmüyor.)
HTTPS bağlantılarını etkinleştirmek için Anahtar Deposu oluşturun
İlk adım, Tomcat&amp;rsquo;te SSL kurmaktır. Bu, Tomcat web sitesinde burada belgelenmiştir: https://tomcat.apache.org/tomcat-8.5-doc/ssl-howto.html Kendinden imzalı bir sertifika ile kurulum adımları aşağıda listelenmiştir:</description>
    </item>
    
  </channel>
</rss>
