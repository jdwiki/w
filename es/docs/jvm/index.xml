<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial jvm on </title>
    <link>https://www.wikiod.com/es/docs/jvm/</link>
    <description>Recent content in Tutorial jvm on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/jvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con jvm</title>
      <link>https://www.wikiod.com/es/jvm/primeros-pasos-con-jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jvm/primeros-pasos-con-jvm/</guid>
      <description>Instalación o configuración # Instrucciones detalladas sobre cómo configurar o instalar jvm.
Habilitación del GC en paralelo # Parallel GC es un recolector Stop-The-World (STW) que detiene todos los subprocesos de la aplicación cuando se ejecuta el recolector de elementos no utilizados.
Cuando se introdujo Parallel GC, solo se habilitó el GC paralelo en el colector de generación joven y OldGeneration Collector era un colector de parada del mundo de un solo subproceso, pero luego introdujo una opción de línea de comando separada para habilitar Old Parallel.</description>
    </item>
    
    <item>
      <title>Montón de JVM</title>
      <link>https://www.wikiod.com/es/jvm/monton-de-jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jvm/monton-de-jvm/</guid>
      <description>Establecer el tamaño máximo de almacenamiento dinámico. # La mayoría de las JVM tienen una opción para establecer el tamaño máximo de almacenamiento dinámico, p.
-Xmx64m -Xmx8g En Java 1.0 a 1.2 podrías usar
-mx64m y esto todavía está disponible en algunas JVM para compatibilidad con versiones anteriores (por ejemplo, Oracle JVM).
Hay algunos conceptos erróneos comunes sobre esta configuración.
No establece el tamaño del montón, solo el máximo. -Xms establece el tamaño de almacenamiento dinámico inicial.</description>
    </item>
    
    <item>
      <title>Volcado de almacenamiento dinámico de JVM</title>
      <link>https://www.wikiod.com/es/jvm/volcado-de-almacenamiento-dinamico-de-jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jvm/volcado-de-almacenamiento-dinamico-de-jvm/</guid>
      <description>Generando un volcado de pila en OutOfMemoryError # Nota: Este ejemplo se basa en la implementación de Oracle JVM.
Las herramientas integradas como jmap, jconsole y jvisualvm están disponibles en un JDK y se pueden usar para generar y analizar volcados de memoria en montón tomados de una aplicación JVM en ejecución. Sin embargo, una opción para generar un volcado de pila sin usar las herramientas JDK es agregar el argumento de VM -XX:+HeapDumpOnOutOfMemoryError que le dice a la JVM que genere automáticamente un volcado de pila cuando ocurre un OutOfMemoryError, y el argumento -XX:HeapDumpPath para especificar la ruta para el volcado de almacenamiento dinámico.</description>
    </item>
    
  </channel>
</rss>
