<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Excel-vba Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/excel-vba/</link>
    <description>Recent content in Excel-vba Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/excel-vba/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con excel-vba</title>
      <link>https://www.wikiod.com/es/excel-vba/primeros-pasos-con-excel-vba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/primeros-pasos-con-excel-vba/</guid>
      <description>Abriendo el Editor de Visual Basic (VBE) # Paso 1: Abra un libro de trabajo
Paso 2 Opción A: Presione Alt + F11
Este es el acceso directo estándar para abrir el VBE.
Paso 2 Opción B: Pestaña Desarrollador &amp;ndash;&amp;gt; Ver código
Primero, la pestaña Desarrollador debe agregarse a la cinta. Vaya a Archivo -&amp;gt; Opciones -&amp;gt; Personalizar cinta, luego marque la casilla para desarrollador.
Luego, vaya a la pestaña de desarrollador y haga clic en &amp;ldquo;Ver código&amp;rdquo; o &amp;ldquo;Visual Basic&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Prácticas recomendadas de VBA</title>
      <link>https://www.wikiod.com/es/excel-vba/practicas-recomendadas-de-vba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/practicas-recomendadas-de-vba/</guid>
      <description>Todos las conocemos, pero estas prácticas son mucho menos obvias para alguien que comienza a programar en VBA.
SIEMPRE use &amp;ldquo;Opción explícita&amp;rdquo; # En la ventana del Editor de VBA, en el menú Herramientas, seleccione &amp;ldquo;Opciones&amp;rdquo;:
Luego, en la pestaña &amp;ldquo;Editor&amp;rdquo;, asegúrese de que esté marcado &amp;ldquo;Requerir declaración de variable&amp;rdquo;:
Al seleccionar esta opción, se colocará automáticamente &amp;ldquo;Opción explícita&amp;rdquo; en la parte superior de cada módulo de VBA.
Pequeña nota: Esto es cierto para los módulos, módulos de clase, etc.</description>
    </item>
    
    <item>
      <title>Métodos para encontrar la última fila o columna utilizada en una hoja de cálculo</title>
      <link>https://www.wikiod.com/es/excel-vba/metodos-para-encontrar-la-ultima-fila-o-columna-utilizada-en-una-hoja-de-calculo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/metodos-para-encontrar-la-ultima-fila-o-columna-utilizada-en-una-hoja-de-calculo/</guid>
      <description>Puede encontrar una buena explicación sobre por qué se desaconsejan o son inexactos otros métodos aquí: http://stackoverflow.com/a/11169920/4628637
Encuentra la última celda no vacía en una columna # En este ejemplo, veremos un método para devolver la última fila no vacía en una columna para un conjunto de datos.
Este método funcionará independientemente de las regiones vacías dentro del conjunto de datos.
Sin embargo, se debe tener precaución si hay celdas fusionadas involucradas, ya que el método End se &amp;ldquo;detendrá&amp;rdquo; en una región fusionada, devolviendo la primera celda de la región fusionada.</description>
    </item>
    
    <item>
      <title>Consejos y trucos de Excel VBA</title>
      <link>https://www.wikiod.com/es/excel-vba/consejos-y-trucos-de-excel-vba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/consejos-y-trucos-de-excel-vba/</guid>
      <description>Este tema consta de una amplia variedad de consejos y trucos útiles descubiertos por los usuarios de SO a través de su experiencia en la codificación. A menudo, estos son ejemplos de formas de eludir las frustraciones comunes o formas de usar Excel de una manera más &amp;ldquo;inteligente&amp;rdquo;.
Usar hojas xlVeryHidden # Las hojas de trabajo en Excel tienen tres opciones para la propiedad Visible. Estas opciones están representadas por constantes en la enumeración xlSheetVisibility y son las siguientes:</description>
    </item>
    
    <item>
      <title>Errores comunes</title>
      <link>https://www.wikiod.com/es/excel-vba/errores-comunes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/errores-comunes/</guid>
      <description>Referencias calificadas # Cuando se hace referencia a una &amp;ldquo;hoja de trabajo&amp;rdquo;, un &amp;ldquo;rango&amp;rdquo; o &amp;ldquo;celdas&amp;rdquo; individuales, es importante calificar completamente la referencia.
Por ejemplo:
ThisWorkbook.Worksheets(&amp;quot;Sheet1&amp;quot;).Range(Cells(1, 2), Cells(2, 3)).Copy No está completamente calificado: las referencias de Celdas no tienen un libro de trabajo y una hoja de trabajo asociados con ellas. Sin una referencia explícita, Cells se refiere a ActiveSheet por defecto. Por lo tanto, este código fallará (producirá resultados incorrectos) si una hoja de trabajo que no sea &amp;ldquo;Hoja1&amp;rdquo; es la &amp;ldquo;Hoja activa&amp;rdquo; actual.</description>
    </item>
    
    <item>
      <title>Rangos y Celdas</title>
      <link>https://www.wikiod.com/es/excel-vba/rangos-y-celdas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/rangos-y-celdas/</guid>
      <description>Sintaxis # Establecer: el operador utilizado para establecer una referencia a un objeto, como un rango Para cada uno: el operador utilizado para recorrer todos los elementos de una colección. Tenga en cuenta que los nombres de las variables r, cell y otros se pueden nombrar como desee, pero deben nombrarse adecuadamente para que el código sea más fácil de entender para usted y los demás.
Maneras de referirse a una sola celda # La forma más sencilla de hacer referencia a una sola celda en la hoja de cálculo actual de Excel es encerrar la forma A1 de su referencia entre corchetes:</description>
    </item>
    
    <item>
      <title>Depuración y solución de problemas</title>
      <link>https://www.wikiod.com/es/excel-vba/depuracion-y-solucion-de-problemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/depuracion-y-solucion-de-problemas/</guid>
      <description>Sintaxis # Depurar. Imprimir (cadena) Para para Ventana inmediata # Si desea probar una línea de código de macro sin necesidad de ejecutar un sub completo, puede escribir comandos directamente en la ventana Inmediato y presionar &amp;lsquo;ENTER&amp;rsquo; para ejecutar la línea.
Para probar la salida de una línea, puede precederla con un signo de interrogación ? para imprimir directamente en la ventana Inmediato. Alternativamente, también puede usar el comando imprimir para imprimir la salida.</description>
    </item>
    
    <item>
      <title>arreglos</title>
      <link>https://www.wikiod.com/es/excel-vba/arreglos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/arreglos/</guid>
      <description>Llenar arreglos (agregar valores) # Hay varias formas de llenar una matriz.
Directamente # &#39;one-dimensional Dim arrayDirect1D(2) As String arrayDirect(0) = &amp;quot;A&amp;quot; arrayDirect(1) = &amp;quot;B&amp;quot; arrayDirect(2) = &amp;quot;C&amp;quot; &#39;multi-dimensional (in this case 3D) Dim arrayDirectMulti(1, 1, 2) arrayDirectMulti(0, 0, 0) = &amp;quot;A&amp;quot; arrayDirectMulti(0, 0, 1) = &amp;quot;B&amp;quot; arrayDirectMulti(0, 0, 2) = &amp;quot;C&amp;quot; arrayDirectMulti(0, 1, 0) = &amp;quot;D&amp;quot; &#39;... Usando la función Array() # &#39;one-dimensional only Dim array1D As Variant &#39;has to be type variant array1D = Array(1, 2, &amp;quot;A&amp;quot;) &#39;-&amp;gt; array1D(0) = 1, array1D(1) = 2, array1D(2) = &amp;quot;A&amp;quot; Desde el rango # Dim arrayRange As Variant &#39;has to be type variant &#39;putting ranges in an array always creates a 2D array (even if only 1 row or column) &#39;starting at 1 and not 0, first dimension is the row and the second the column arrayRange = Range(&amp;quot;A1:C10&amp;quot;).</description>
    </item>
    
    <item>
      <title>Recorra todas las hojas en el libro de trabajo activo</title>
      <link>https://www.wikiod.com/es/excel-vba/recorra-todas-las-hojas-en-el-libro-de-trabajo-activo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/recorra-todas-las-hojas-en-el-libro-de-trabajo-activo/</guid>
      <description>Recuperar todos los nombres de las hojas de trabajo en el libro de trabajo activo # Option Explicit Sub LoopAllSheets() Dim sht As Excel.Worksheet &#39; declare an array of type String without committing to maximum number of members Dim sht_Name() As String Dim i As Integer &#39; get the number of worksheets in Active Workbook , and put it as the maximum number of members in the array ReDim sht_Name(1 To ActiveWorkbook.</description>
    </item>
    
    <item>
      <title>Funciones definidas por el usuario (UDF)</title>
      <link>https://www.wikiod.com/es/excel-vba/funciones-definidas-por-el-usuario-udf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/excel-vba/funciones-definidas-por-el-usuario-udf/</guid>
      <description>Sintaxis # Función functionName(argumentVariable As dataType, argumentVariable2 As dataType, Optional argumentVariable3 As dataType) As functionReturnDataType Declaración básica de una función. Cada función necesita un nombre, pero no tiene que tomar ningún argumento. Puede tomar 0 argumentos, o puede tomar un número determinado de argumentos. También puede declarar un argumento como opcional (lo que significa que no importa si lo proporciona al llamar a la función). Es una buena práctica proporcionar el tipo de variable para cada argumento y, de la misma manera, devolver qué tipo de datos devolverá la propia función.</description>
    </item>
    
  </channel>
</rss>
