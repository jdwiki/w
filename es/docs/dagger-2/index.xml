<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>daga-2 Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/dagger-2/</link>
    <description>Recent content in daga-2 Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/dagger-2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con daga-2</title>
      <link>https://www.wikiod.com/es/dagger-2/comenzando-con-daga-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/dagger-2/comenzando-con-daga-2/</guid>
      <description>Ejemplo de Android # Una de las principales dificultades de escribir una aplicación de Android con Dagger es que el propio sistema operativo crea instancias de muchas clases del marco de trabajo de Android, como Activity y Fragment, pero Dagger funciona mejor si puede crear todos los objetos inyectados. En su lugar, debe realizar la inyección de miembros en un método de ciclo de vida. A partir de la versión 2.</description>
    </item>
    
    <item>
      <title>@Anotación con nombre en Kotlin</title>
      <link>https://www.wikiod.com/es/dagger-2/anotacion-con-nombre-en-kotlin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/dagger-2/anotacion-con-nombre-en-kotlin/</guid>
      <description>Cómo usar correctamente la anotación con nombre en Kotlin v1.1
Declarar una dependencia calificada # @Module class AppModule(val app: Application) { @Provides @Named(&amp;quot;the_answer&amp;quot;) fun providesTheAnswer(): Int { return 42 } } Inyección de dependencia basada en Setter # class MyClass{ @field:[Inject Named(&amp;quot;the_answer&amp;quot;)] lateinit var answer: Int } En el desarrollo de Android, esta es la forma en que inyecta dependencias en Actividad, Fragmento o cualquier otro objeto que el sistema operativo cree una instancia directamente.</description>
    </item>
    
  </channel>
</rss>
