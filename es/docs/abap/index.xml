<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial ABAP on </title>
    <link>https://www.wikiod.com/es/docs/abap/</link>
    <description>Recent content in Tutorial ABAP on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/abap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con ABAP</title>
      <link>https://www.wikiod.com/es/abap/primeros-pasos-con-abap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/primeros-pasos-con-abap/</guid>
      <description>Hola Mundo # PROGRAM zhello_world. START-OF-SELECTION. WRITE &#39;Hello, World!&#39;. En lugar de imprimir en la consola, ABAP escribe valores en una lista que se mostrará tan pronto como se ejecute la lógica principal.
Hola mundo en objetos ABAP # PROGRAM zhello_world. CLASS main DEFINITION FINAL CREATE PRIVATE. PUBLIC SECTION. CLASS-METHODS: start. ENDCLASS. CLASS main IMPLEMENTATION. METHOD start. cl_demo_output=&amp;gt;display( &#39;Hello World!&#39; ). ENDMETHOD. ENDCLASS. START-OF-SELECTION. main=&amp;gt;start( ). </description>
    </item>
    
    <item>
      <title>Objetos ABAP</title>
      <link>https://www.wikiod.com/es/abap/objetos-abap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/objetos-abap/</guid>
      <description>Declaración de clase # Las clases ABAP se pueden declarar Globalmente o Localmente. Una clase global puede ser utilizada por cualquier objeto dentro del repositorio ABAP. Por el contrario, una clase local solo se puede usar dentro del ámbito en el que se declara. # CLASS lcl_abap_class DEFINITION. PUBLIC SECTION. PROTECTED SECTION. PRIVATE SECTION. ENDCLASS. CLASS lcl_abap_class IMPLEMENTATION. ENDCLASS. Constructor, métodos # Implementación de clase:
CLASS lcl_abap_class DEFINITION. PUBLIC SECTION. METHODS: constructor, method1.</description>
    </item>
    
    <item>
      <title>Tablas internas</title>
      <link>https://www.wikiod.com/es/abap/tablas-internas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/tablas-internas/</guid>
      <description>Tipos de tablas internas # DATA: &amp;lt;TABLE NAME&amp;gt; TYPE &amp;lt;SORTED|STANDARD|HASHED&amp;gt; TABLE OF &amp;lt;TYPE NAME&amp;gt; WITH &amp;lt;UNIQUE|NON-UNIQUE&amp;gt; KEY &amp;lt;FIELDS FOR KEY&amp;gt;. Mesa estándar
Esta tabla tiene todas las entradas almacenadas de forma lineal y se accede a los registros de forma lineal. Para tamaños de mesa grandes, el acceso a la mesa puede ser lento.
Tabla ordenada
Requiere la adición CON CLAVE ÚNICA|NO CLAVE ÚNICA. La búsqueda es rápida debido a la realización de una búsqueda binaria.</description>
    </item>
    
    <item>
      <title>Instrumentos de cuerda</title>
      <link>https://www.wikiod.com/es/abap/instrumentos-de-cuerda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/instrumentos-de-cuerda/</guid>
      <description>Plantillas de cadenas # Las plantillas de cadenas son una forma conveniente de mezclar cadenas literales con valores de variables:
WRITE |Hello, { lv_name }, nice to meet you!|. También puede formatear cosas como fechas. Para utilizar el formato de fecha del usuario conectado:
WRITE |The order was completed on { lv_date DATE = USER } and can not be changed|. Se admiten expresiones y llamadas a métodos funcionales:
WRITE |Your token is { to_upper( lv_token ) }|.</description>
    </item>
    
    <item>
      <title>Visor de listas ABAP GRID (ALV)</title>
      <link>https://www.wikiod.com/es/abap/visor-de-listas-abap-grid-alv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/visor-de-listas-abap-grid-alv/</guid>
      <description>Creación y visualización de un ALV # Este ejemplo muestra la creación de ALV más simple utilizando la clase cl_salv_table y sin opciones de formato adicionales. Se incluirían opciones de formato adicionales después del bloque TRY ENDTRY y antes de la llamada al método alv-&amp;gt;display( ).
Todos los ejemplos posteriores que utilicen el enfoque de Objetos ABAP para la creación de ALV utilizarán este ejemplo como punto de partida.
DATA: t_spfli TYPE STANDARD TABLE OF spfli, alv TYPE REF TO cl_salv_table, error_message TYPE REF TO cx_salv_msg.</description>
    </item>
    
    <item>
      <title>Programación dinámica</title>
      <link>https://www.wikiod.com/es/abap/programacion-dinamica/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/programacion-dinamica/</guid>
      <description>Símbolos de campo # Los Field-Symbols son el equivalente de ABAP a los punteros, excepto que los Field-Symbols siempre se desreferencian (no es posible cambiar la dirección real en la memoria).
Declaración
Para declarar un Field-Symbol se debe utilizar la palabra clave FIELD-SYMBOLS. Los tipos pueden ser genéricos (ANY [... TABLE]) para manejar una amplia variedad de variables.
FIELD-SYMBOLS: &amp;lt;fs_line&amp;gt; TYPE any, &amp;quot;generic &amp;lt;fs_struct&amp;gt; TYPE kna1. &amp;quot;non-generic Asignación
Los símbolos de campo no están asignados en la declaración, lo que significa que no apuntan a nada.</description>
    </item>
    
    <item>
      <title>Bucles</title>
      <link>https://www.wikiod.com/es/abap/bucles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/bucles/</guid>
      <description>Al recorrer tablas internas, generalmente es preferible &amp;lsquo;ASIGNAR&amp;rsquo; a un símbolo de campo en lugar de &amp;lsquo;ENTRAR&amp;rsquo; en un área de trabajo. La asignación de símbolos de campo simplemente actualiza su referencia para apuntar a la siguiente línea de la tabla interna durante cada iteración, mientras que el uso de &amp;lsquo;INTO&amp;rsquo; da como resultado que la línea de la tabla se copie en el área de trabajo, lo que puede ser costoso para tablas largas/anchas.</description>
    </item>
    
    <item>
      <title>Declaración de datos</title>
      <link>https://www.wikiod.com/es/abap/declaracion-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/declaracion-de-datos/</guid>
      <description>Declaración de datos en línea # En determinadas situaciones, las declaraciones de datos se pueden realizar en línea.
LOOP AT lt_sflight INTO DATA(ls_sflight). WRITE ls_sflight-carrid. ENDLOOP. Declaración de variable única # DATA begda TYPE sy-datum. Declaración de variables múltiples # DATA: begda TYPE sy-datum, endda TYPE sy-datum. Declaración de datos en línea en la instrucción SELECT # Cuando se usa una declaración de datos en línea dentro de un bloque SELECT.</description>
    </item>
    
    <item>
      <title>Expresiones regulares</title>
      <link>https://www.wikiod.com/es/abap/expresiones-regulares/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/expresiones-regulares/</guid>
      <description>Evaluación de expresiones regulares con una función de predicado # La función de predicado coincidencias se puede usar para evaluar cadenas sobre la marcha sin usar ninguna declaración de objeto.
IF matches( val = &#39;Not a hex string&#39; regex = &#39;[0-9a-f]*&#39; ). cl_demo_output=&amp;gt;display( &#39;This will not display&#39; ). ELSEIF matches( val = &#39;6c6f7665&#39; regex = &#39;[0-9a-f]*&#39; ). cl_demo_output=&amp;gt;display( &#39;This will display&#39; ). ENDIF. Reemplazando # La declaración REEMPLAZAR puede funcionar directamente con expresiones regulares:</description>
    </item>
    
    <item>
      <title>SQL abierto</title>
      <link>https://www.wikiod.com/es/abap/sql-abierto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/abap/sql-abierto/</guid>
      <description>instrucción SELECCIONAR # SELECT es una instrucción SQL abierta para leer datos de una o varias tablas de bases de datos en objetos de datos.
Selección de todos los registros
* This returns all records into internal table lt_mara. SELECT * FROM mara INTO lt_mara. Selección de registro único
* This returns single record if table consists multiple records with same key. SELECT SINGLE * INTO TABLE lt_mara FROM mara WHERE matnr EQ &#39;400-500&#39;.</description>
    </item>
    
  </channel>
</rss>
