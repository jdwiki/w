<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de estructuras de datos on </title>
    <link>https://www.wikiod.com/es/docs/data-structures/</link>
    <description>Recent content in Tutorial de estructuras de datos on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/data-structures/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducción a las estructuras de datos</title>
      <link>https://www.wikiod.com/es/data-structures/introduccion-a-las-estructuras-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/introduccion-a-las-estructuras-de-datos/</guid>
      <description>Introducción a las estructuras de datos # Una estructura de datos es una forma de organizar y almacenar información.
Deja que un &amp;ldquo;¡Hola, mundo!&amp;rdquo; string sea la información que necesitamos organizar y almacenar en la memoria direccionable por bytes.
Cada carácter ASCII requiere 7 bits de almacenamiento. La mayoría de los sistemas reservan 8 bits (1 byte) para cada carácter, por lo que cada carácter de &amp;ldquo;Hello, World!&amp;rdquo; se almacena en una unidad de memoria individual del tamaño de un byte, uno tras otro, consecutivamente.</description>
    </item>
    
    <item>
      <title>Lista enlazada</title>
      <link>https://www.wikiod.com/es/data-structures/lista-enlazada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/lista-enlazada/</guid>
      <description>Lista enlazada XOR # Una Lista enlazada XOR también se denomina Lista enlazada eficiente en memoria. Es otra forma de una lista doblemente enlazada. Esto depende en gran medida de la puerta lógica XOR y sus propiedades.
¿Por qué se llama lista enlazada de memoria eficiente? Esto se llama así porque usa menos memoria que una lista doblemente enlazada tradicional.
¿Es esto diferente de una lista doblemente enlazada?
**Sí, lo es.</description>
    </item>
    
    <item>
      <title>Trie (Árbol de prefijosÁrbol de radix)</title>
      <link>https://www.wikiod.com/es/data-structures/trie-arbol-de-prefijosarbol-de-radix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/trie-arbol-de-prefijosarbol-de-radix/</guid>
      <description>Introducción a Trie # ¿Alguna vez te has preguntado cómo funcionan los motores de búsqueda? ¿Cómo alinea Google millones de resultados frente a usted en solo unos pocos milisegundos? ¿Cómo una enorme base de datos situada a miles de kilómetros de usted encuentra la información que está buscando y se la devuelve? La razón detrás de esto no es posible solo mediante el uso de Internet más rápido y supercomputadoras. Algunos algoritmos de búsqueda fascinantes y estructuras de datos funcionan detrás de él.</description>
    </item>
    
    <item>
      <title>Árbol de búsqueda binaria</title>
      <link>https://www.wikiod.com/es/data-structures/arbol-de-busqueda-binaria/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/arbol-de-busqueda-binaria/</guid>
      <description>Creando un Nodo en BST # El árbol de búsqueda binaria (BST) es una estructura de datos jerárquica con un solo puntero al nodo raíz.
El Nodo en el BST generalmente contiene &amp;ldquo;elementos&amp;rdquo; (como números o nombres) para una búsqueda rápida. Cada nodo tiene como máximo dos hijos (izquierdo y derecho). Cada nodo está organizado por algún campo de datos clave. Para cada nodo en BST, su clave es mayor que la clave del hijo izquierdo y menor que la clave del hijo derecho</description>
    </item>
    
    <item>
      <title>Pila</title>
      <link>https://www.wikiod.com/es/data-structures/pila/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/pila/</guid>
      <description>Introducción a la pila # La pila es una estructura de datos LIFO (último en entrar, primero en salir), es decir, el elemento más reciente (o &amp;ldquo;último en entrar&amp;rdquo;) agregado a la pila será el primer elemento eliminado (&amp;ldquo;primero en salir&amp;rdquo;).
Consideremos el ejemplo de los libros en una caja. Solo se puede agregar o quitar un libro de la caja a la vez, y solo se puede agregar y quitar de la parte superior.</description>
    </item>
    
    <item>
      <title>Árbol de segmentos</title>
      <link>https://www.wikiod.com/es/data-structures/arbol-de-segmentos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/arbol-de-segmentos/</guid>
      <description>Introducción al árbol de segmentos # Supongamos que tenemos una matriz:
+-------+-----+-----+-----+-----+-----+-----+ | Index | 0 | 1 | 2 | 3 | 4 | 5 | +-------+-----+-----+-----+-----+-----+-----+ | Value | -1 | 3 | 4 | 0 | 2 | 1 | +-------+-----+-----+-----+-----+-----+-----+ Queremos realizar alguna consulta en esta matriz. Por ejemplo:
¿Cuál es el mínimo desde index-2 hasta index-4? -&amp;gt; 0 ¿Cuál es el máximo desde index-0 hasta index-3?</description>
    </item>
    
    <item>
      <title>Cola</title>
      <link>https://www.wikiod.com/es/data-structures/cola/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/cola/</guid>
      <description>Introducción a la cola # La cola es una estructura de datos FIFO (primero en entrar, primero en salir), es decir, el primer elemento agregado a la cola será el primer elemento eliminado (&amp;ldquo;primero en salir&amp;rdquo;).
Consideremos el ejemplo de los clientes que esperan ser ayudados. Alice, Bob y Dan están todos en el supermercado. Alice está lista para pagar, así que se acerca al cajero. Alice está ahora en la cola.</description>
    </item>
    
    <item>
      <title>Recorridos de gráficos</title>
      <link>https://www.wikiod.com/es/data-structures/recorridos-de-graficos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/recorridos-de-graficos/</guid>
      <description>Todos los algoritmos relacionados con los recorridos de grafos. Sus complejidades, tanto de tiempo de ejecución como de espacio.
Primera búsqueda en profundidad # El primer recorrido en profundidad (o búsqueda) de un gráfico es similar al primer recorrido en profundidad de un árbol. El único inconveniente aquí es que, a diferencia de los árboles, los gráficos pueden contener ciclos, por lo que podemos volver al mismo nodo. Para evitar procesar un nodo más de una vez, usamos una matriz visitada booleana.</description>
    </item>
    
    <item>
      <title>Deque (cola de dos extremos)</title>
      <link>https://www.wikiod.com/es/data-structures/deque-cola-de-dos-extremos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/deque-cola-de-dos-extremos/</guid>
      <description>Inserción y eliminación tanto desde el principio como desde el final de la cola # </description>
    </item>
    
    <item>
      <title>Estructura de datos de búsqueda de unión</title>
      <link>https://www.wikiod.com/es/data-structures/estructura-de-datos-de-busqueda-de-union/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/data-structures/estructura-de-datos-de-busqueda-de-union/</guid>
      <description>Una estructura de datos de búsqueda de unión (o conjunto disjunto) es una estructura de datos simple, una partición de una serie de elementos en conjuntos disjuntos. Cada conjunto tiene un representante que puede usarse para distinguirlo de los otros conjuntos.
Se utiliza en muchos algoritmos, p. para calcular árboles de expansión mínimos a través del algoritmo de Kruskal, para calcular componentes conectados en gráficos no dirigidos y muchos más.</description>
    </item>
    
  </channel>
</rss>
