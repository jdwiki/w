<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de jQuery on </title>
    <link>https://www.wikiod.com/es/docs/jquery/</link>
    <description>Recent content in Tutorial de jQuery on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/jquery/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con jQuery</title>
      <link>https://www.wikiod.com/es/jquery/comenzando-con-jquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/comenzando-con-jquery/</guid>
      <description>Empezando # Cree un archivo hola.html con el siguiente contenido:
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Hello, World!&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div&amp;gt; &amp;lt;p id=&amp;quot;hello&amp;quot;&amp;gt;Some random text&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-2.2.4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; $(document).ready(function() { $(&#39;#hello&#39;).text(&#39;Hello, World!&#39;); }); &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; [Demostración en vivo en JSBin] (http://jsbin.com/sipuwoxono/1/edit?html, salida)
Abra este archivo en un navegador web. Como resultado, verá una página con el texto: ¡Hola, mundo!
Explicación del código # Carga la biblioteca jQuery desde jQuery CDN:</description>
    </item>
    
    <item>
      <title>Ajax</title>
      <link>https://www.wikiod.com/es/jquery/ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/ajax/</guid>
      <description>Sintaxis # var jqXHR = $.ajax (url [, configuración]) var jqXHR = $.ajax( [configuración] ) jqXHR.done(función(datos, textStatus, jqXHR) {}); jqXHR.fail(function( jqXHR, textStatus, errorThrown ) {}); jqXHR.siempre(función( jqXHR ) {}); Parámetros # Parámetro Detalles URL Especifica la URL a la que se enviará la solicitud ajustes un objeto que contiene numerosos valores que afectan el comportamiento de la solicitud tipo El método HTTP que se utilizará para la solicitud datos Datos a enviar por la solicitud éxito Una función de devolución de llamada que se llamará si la solicitud tiene éxito error Una devolución de llamada para manejar el error código de estado Un objeto de códigos HTTP numéricos y funciones que se llamarán cuando la respuesta tenga el código correspondiente dataType El tipo de datos que espera del servidor tipo de contenido Tipo de contenido de los datos a enviar al servidor.</description>
    </item>
    
    <item>
      <title>Selectores</title>
      <link>https://www.wikiod.com/es/jquery/selectores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/selectores/</guid>
      <description>Un selector de jQuery selecciona o encuentra un elemento DOM (modelo de objeto de documento) en un documento HTML. Se utiliza para seleccionar elementos HTML en función de la identificación, el nombre, los tipos, los atributos, la clase, etc. Se basa en los selectores CSS existentes.
Sintaxis # Etiqueta: Sin marcador, use la etiqueta directamente Identificación: #id Clase: .className Atributo: [nombreAtributo] Atributo con valor: [attributeName =&#39;value&#39;] El atributo comienza con el valor ^=: [attributeName ^= &#39;value&#39;] El atributo termina con el valor $=: [attributeName $=&#39;value&#39;] El atributo contiene el valor *= : [attributeName *= &#39;value&#39;] Pseudo-selector: :pseudo-selector Cualquier descendiente: Espacio entre selectores Hijos directos: &amp;gt; entre selectores Hermano contiguo al primero: + Hermano no contiguo que sigue al primero: ~ O: , ​​(coma) entre selector Al escribir selectores para clase o id o atributo que contiene algunos caracteres especiales como</description>
    </item>
    
    <item>
      <title>evento de documento listo</title>
      <link>https://www.wikiod.com/es/jquery/evento-de-documento-listo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/evento-de-documento-listo/</guid>
      <description>¿Qué es document-ready y cómo debo usarlo? # El código jQuery a menudo se envuelve en jQuery(function($) { ... }); para que solo se ejecute después de que el DOM haya terminado de cargarse.
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; jQuery(function($) { // this will set the div&#39;s text to &amp;quot;Hello&amp;quot;. $(&amp;quot;#myDiv&amp;quot;).text(&amp;quot;Hello&amp;quot;); }); &amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;myDiv&amp;quot;&amp;gt;Text&amp;lt;/div&amp;gt; Esto es importante porque jQuery (y JavaScript en general) no puede seleccionar un elemento DOM que no se haya representado en la página.</description>
    </item>
    
    <item>
      <title>Método jQuery .animate()</title>
      <link>https://www.wikiod.com/es/jquery/metodo-jquery-animate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/metodo-jquery-animate/</guid>
      <description>Sintaxis # (selector).animar({estilos},{opciones}) Parámetros # Parámetro Detalles propiedades Un objeto de propiedades y valores CSS hacia los que se moverá la animación duración (predeterminado: 400) Una cadena o número que determina cuánto tiempo se ejecutará la animación easing (predeterminado: swing) Una cadena que indica qué función de aceleración usar para la transición completa Una función para llamar una vez que se completa la animación, llamada una vez por elemento coincidente. inicio especifica una función que se ejecutará cuando comience la animación.</description>
    </item>
    
    <item>
      <title>Eventos</title>
      <link>https://www.wikiod.com/es/jquery/eventos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/eventos/</guid>
      <description>jQuery maneja eventos internamente a través de la función addEventListener. Esto significa que es perfectamente legal tener más de una función vinculada al mismo evento para el mismo elemento DOM.
Eventos delegados # Comencemos con el ejemplo. Aquí hay un HTML de ejemplo muy simple.
Ejemplo HTML &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;some_url/&amp;quot;&amp;gt;Link 1&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;some_url/&amp;quot;&amp;gt;Link 2&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;some_url/&amp;quot;&amp;gt;Link 3&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; El problema Ahora, en este ejemplo, queremos agregar un detector de eventos a todos los elementos &amp;lt;a&amp;gt;.</description>
    </item>
    
    <item>
      <title>Manipulación de DOM</title>
      <link>https://www.wikiod.com/es/jquery/manipulacion-de-dom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/manipulacion-de-dom/</guid>
      <description>Creando elementos DOM # La función jQuery (generalmente con el alias $) se puede usar tanto para seleccionar elementos como para crear nuevos elementos.
var myLink = $(&#39;&amp;lt;a href=&amp;quot;http://stackexchange.com&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&#39;); Opcionalmente, puede pasar un segundo argumento con atributos de elementos:
var myLink = $(&#39;&amp;lt;a&amp;gt;&#39;, { &#39;href&#39;: &#39;http://stackexchange.com&#39; }); &#39;&amp;lt;a&amp;gt;&#39; &amp;ndash;&amp;gt; El primer argumento especifica el tipo de elemento DOM que desea crear. En este ejemplo es un ancla pero podría ser cualquier cosa en esta lista.</description>
    </item>
    
    <item>
      <title>Manipulación de CSS</title>
      <link>https://www.wikiod.com/es/jquery/manipulacion-de-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/manipulacion-de-css/</guid>
      <description>Sintaxis # .css( cssProperty ) // Obtener el valor de la propiedad CSS representada .css( [cssProperty , &amp;hellip;] ) // Obtener valores de Array of cssProperties .css( cssProperty, value ) // Establecer valor .css( {cssProperty:value, &amp;hellip;} ) // Establecer propiedades y valores .css( cssProperty, function ) // Exponer cssProperty a una función de devolución de llamada Valores renderizados
Si se usa una unidad receptiva (como &amp;quot;auto&amp;quot;, &amp;quot;%&amp;quot;, &amp;quot;vw&amp;quot;, etc.), .css() devolverá el valor renderizado real en px</description>
    </item>
    
    <item>
      <title>Atravesando DOM</title>
      <link>https://www.wikiod.com/es/jquery/atravesando-dom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/atravesando-dom/</guid>
      <description>Seleccionar hijos del elemento # Para seleccionar los elementos secundarios de un elemento, puede usar el método children().
&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt; &amp;lt;h2&amp;gt;A headline&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;Lorem ipsum dolor sit amet...&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Praesent quis dolor turpis...&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; Cambia el color de todos los hijos del elemento .parent:
$(&#39;.parent&#39;).children().css(&amp;quot;color&amp;quot;, &amp;quot;green&amp;quot;); El método acepta un argumento selector opcional que se puede usar para filtrar los elementos que se devuelven.
// Only get &amp;quot;p&amp;quot; children $(&#39;.parent&#39;).children(&amp;quot;p&amp;quot;).css(&amp;quot;color&amp;quot;, &amp;quot;green&amp;quot;); Iterando sobre la lista de elementos jQuery # Cuando necesite iterar sobre la lista de elementos jQuery.</description>
    </item>
    
    <item>
      <title>Complementos</title>
      <link>https://www.wikiod.com/es/jquery/complementos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jquery/complementos/</guid>
      <description>Complementos - Primeros pasos # La API de jQuery se puede ampliar agregándola a su prototipo. Por ejemplo, la API existente ya tiene muchas funciones disponibles, como .hide(), .fadeIn(), .hasClass(), etc.
El prototipo de jQuery se expone a través de $.fn, el código fuente contiene la línea
jQuery.fn = jQuery.prototype Agregar funciones a este prototipo permitirá que esas funciones estén disponibles para ser llamadas desde cualquier objeto jQuery construido (lo cual se hace implícitamente con cada llamada a jQuery, o cada llamada a $ si lo prefiere).</description>
    </item>
    
  </channel>
</rss>
