<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>apache-poi Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/apache-poi/</link>
    <description>Recent content in apache-poi Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/apache-poi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con apache-poi</title>
      <link>https://www.wikiod.com/es/apache-poi/primeros-pasos-con-apache-poi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-poi/primeros-pasos-con-apache-poi/</guid>
      <description>Instalación o configuración # Instrucciones detalladas sobre cómo configurar o instalar apache-poi.</description>
    </item>
    
    <item>
      <title>Creación simple de Excel (XLSX)</title>
      <link>https://www.wikiod.com/es/apache-poi/creacion-simple-de-excel-xlsx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-poi/creacion-simple-de-excel-xlsx/</guid>
      <description>excel basico # String fileName = &amp;quot;Fruit.xlsx&amp;quot;; String sheetName = &amp;quot;Apples&amp;quot;; XSSFWorkbook wb = new XSSFWorkbook(); XSSFSheet sheet = wb.createSheet(sheetName) ; for (int r=0;r &amp;lt; 3; r++ ) { XSSFRow row = sheet.createRow(r); //iterating c number of columns for (int c=0;c &amp;lt; 3; c++ ) { XSSFCell cell = row.createCell(c); cell.setCellValue(&amp;quot;Nice apple, in row: &amp;quot;+r+&amp;quot; and col: &amp;quot;+c); } } try(FileOutputStream fos = new FileOutputStream(fileName)) { wb.write(fos); } </description>
    </item>
    
    <item>
      <title>Primeros pasos con NPOI</title>
      <link>https://www.wikiod.com/es/apache-poi/primeros-pasos-con-npoi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-poi/primeros-pasos-con-npoi/</guid>
      <description>Es la versión .NET del proyecto POI Java. permite leer/escribir archivos xls, doc, ppt sin tener Microsoft Office instalado. Los detalles sobre la documentación están disponibles aquí: https://github.com/tonyqus/npoi
Instalación de NPOI # La mejor manera de incluir toda la biblioteca relacionada con NPOI es NUGet Package Manager. Busque NPOI en la ventana del administrador de paquetes NUGet.
Una vez que se haya instalado correctamente, toda la biblioteca necesaria aparecerá en la sección de referencia de su proyecto actual Luego incluya el NPOI en su archivo de esta manera</description>
    </item>
    
    <item>
      <title>Enfoque de restricción de validación de datos NPOI para fecha, hora, elemento de lista, correo electrónico, etc. para archivos de Excel XSSF (.xslx) usando c #</title>
      <link>https://www.wikiod.com/es/apache-poi/enfoque-de-restriccion-de-validacion-de-datos-npoi-para-fecha-hora-elemento-de-lista-correo-electronico-etc-para-archivos-de-excel-xssf-xslx-usando-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-poi/enfoque-de-restriccion-de-validacion-de-datos-npoi-para-fecha-hora-elemento-de-lista-correo-electronico-etc-para-archivos-de-excel-xssf-xslx-usando-c/</guid>
      <description>Crear la restricción de validación de datos puede ser complicado y llevar mucho tiempo en NPOI. He compartido parte de mi enfoque viable. Este enfoque le dará una buena idea para personalizar sus propios tipos de restricciones.
Establecer las restricciones de fecha para los valores de campo de fecha entre el 01/01/1900 y el 31/12/2119 con el formato de fecha mm/dd//aaaa; # int DVRowLimit = (Int16.MaxValue); CellRangeAddressList cellRangeFieldsType1 = new CellRangeAddressList(1, DVRowLimit, targetFirstCol, targetLastCol); XSSFDataValidationConstraint dvConstraint = (XSSFDataValidationConstraint)validationHelper.</description>
    </item>
    
    <item>
      <title>Enfoque de validación de datos NPOI para archivos de Excel XSSF (.xslx) usando C#</title>
      <link>https://www.wikiod.com/es/apache-poi/enfoque-de-validacion-de-datos-npoi-para-archivos-de-excel-xssf-xslx-usando-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-poi/enfoque-de-validacion-de-datos-npoi-para-archivos-de-excel-xssf-xslx-usando-c/</guid>
      <description>La validación de datos permite al usuario crear una lista desplegable y restringir los valores de la celda a estas entradas. Debido a una limitación, Excel no puede vincular más de 256 caracteres mediante programación. Para vincular más de 256 caracteres, se puede seguir el método explicado.
Cuando la suma del número total de caracteres de todos los elementos de la lista es inferior a 256 # Puede leer todos los elementos de cualquier archivo de configuración o escribirlos en línea.</description>
    </item>
    
  </channel>
</rss>
