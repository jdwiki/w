<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de vbscript on </title>
    <link>https://www.wikiod.com/es/docs/vbscript/</link>
    <description>Recent content in Tutorial de vbscript on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/vbscript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con vbscript</title>
      <link>https://www.wikiod.com/es/vbscript/comenzando-con-vbscript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/comenzando-con-vbscript/</guid>
      <description>Mensaje Hello World usando cscript y wscript # WScript.Echo &amp;quot;Hello world!&amp;quot; Esto muestra un mensaje en la consola si se ejecuta con cscript.exe (el host de la consola) o en un cuadro de mensaje si se ejecuta con wscript.exe (el host de la GUI).
Si está utilizando VBScript como lenguaje de secuencias de comandos del lado del servidor para una página web (para ASP clásico, por ejemplo),
Response.Write &amp;quot;Hello world!&amp;quot; pone el mensaje en el HTML enviado al cliente (navegador).</description>
    </item>
    
    <item>
      <title>Cuadro de entrada</title>
      <link>https://www.wikiod.com/es/vbscript/cuadro-de-entrada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/cuadro-de-entrada/</guid>
      <description>Sintaxis # InputBox(prompt[, title][, default][, xpos][, ypos][, helpfile, context]) Parámetros # Argumento Detalle prompt Texto que se muestra sobre el campo de entrada (generalmente una instrucción sobre lo que se requiere del usuario). title Título que se muestra en la barra de título del cuadro de entrada. default Un marcador de posición para el campo de texto, utilizado como valor devuelto si el usuario no sobrescribe. xpos Distancia horizontal en twips para mostrar el cuadro de entrada desde el borde izquierdo de la pantalla.</description>
    </item>
    
    <item>
      <title>Objetos de diccionario</title>
      <link>https://www.wikiod.com/es/vbscript/objetos-de-diccionario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/objetos-de-diccionario/</guid>
      <description>Iterar todos los elementos del diccionario # set oDic = CreateObject(&amp;quot;Scripting.Dictionary&amp;quot;) oDic.add &amp;quot;USA&amp;quot;, &amp;quot;United States of America&amp;quot; oDic.add &amp;quot;UK&amp;quot;, &amp;quot;United Kingdom&amp;quot; oDic.add &amp;quot;CAN&amp;quot;, &amp;quot;Canada&amp;quot; For Each obj in oDic.Items Msgbox obj Next Set oDic = Nothing *Producción:
Estados Unidos de America
Reino Unido
Canada
Crear diccionario y agregar elementos al diccionario # Dim oDic Set oDic = CreateObject(&amp;quot;Scripting.Dictionary&amp;quot;) oDic.Add &amp;quot;US&amp;quot;, &amp;quot;United States of America&amp;quot; oDic.Add &amp;quot;UK&amp;quot;, &amp;quot;United Kingdom&amp;quot; Comprobar si la clave existe en el diccionario # If oDic.</description>
    </item>
    
    <item>
      <title>Uso de clases</title>
      <link>https://www.wikiod.com/es/vbscript/uso-de-clases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/uso-de-clases/</guid>
      <description>Crear una clase # Class Car Private wheels_ Private distances_ &#39; Property getter Public Property Get Wheels() Wheels = wheels_ End Property &#39; Property setter Public Property Let Wheels(v) wheels_ = v End Property &#39; Parameterless Constructor Public Sub Class_Initialize() distances_ = Array(0) End Sub &#39; Method Public Function GetTotalDistance() dim d &#39;GetTotalDistance = 0 For Each d in distances_ GetTotalDistance = GetTotalDistance + d Next End Function &#39; Void Method Public Sub Drive(distance) distances_(ubound(distances_)) = distance Redim Preserve distances_(ubound(distances_)+1) End Sub End Class Uso de una instancia de clase # &#39; Initialize the object Dim myCar Set myCar = new Car &#39; Setting a property myCar.</description>
    </item>
    
    <item>
      <title>Creando tu primer guión</title>
      <link>https://www.wikiod.com/es/vbscript/creando-tu-primer-guion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/creando-tu-primer-guion/</guid>
      <description>Para comenzar, en Windows, cree un documento de texto en su escritorio (haga clic derecho&amp;gt;Nuevo&amp;gt;Documento de texto). Cambie la extensión de &amp;ldquo;.txt&amp;rdquo; a &amp;ldquo;.vbs&amp;rdquo;. En este punto, es ejecutable haciendo doble clic en él (no pasará nada si lo intenta, todavía no hay nada). Para editar, haga clic con el botón derecho en el documento y haga clic en editar. Agregue el código de ejemplo para su primer programa.
Parámetros # Columna Columna Celda Celda Hola Mundo # Solo un simple hola mundo para comenzar.</description>
    </item>
    
    <item>
      <title>Matrices y bucles</title>
      <link>https://www.wikiod.com/es/vbscript/matrices-y-bucles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/matrices-y-bucles/</guid>
      <description>1. Arreglos - Estáticos # Dim cars(2) cars(0) = &amp;quot;Ford&amp;quot; cars(1) = &amp;quot;Audi&amp;quot; cars(2) = &amp;quot;Prius&amp;quot; 2. Matrices - Dinámicas # Dim cars() Redim cars(0) &#39;Give it 1 entry Dim tmp tmp = &amp;quot;Ford&amp;quot; &#39;ubound(arrayvariable) is the count of array size. &#39;in this case, it would be 1, since there is 1 entry. cars(ubound(cars)) = tmp &#39;cars(0) Redim preserve cars(ubound(cars)+1) 5. Crear una matriz a partir de un archivo de texto.</description>
    </item>
    
    <item>
      <title>Incluir archivos</title>
      <link>https://www.wikiod.com/es/vbscript/incluir-archivos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/incluir-archivos/</guid>
      <description>Cuando ejecuta VbScript en el shell de Windows, no hay una función integrada para incluir un archivo, por lo tanto, para organizar su código en diferentes archivos, deberá crear un método para hacerlo.
Algunas cosas a tener en cuenta al usar el método IncludeFile(p_Path):
No hay limitación del tipo de archivo que se puede incluir, pero el contenido de los archivos incluidos debe ser VbScript. Si hay un error de sintaxis en el archivo incluido, no obtendrá la línea/columna del error.</description>
    </item>
    
    <item>
      <title>Instrumentos de cuerda</title>
      <link>https://www.wikiod.com/es/vbscript/instrumentos-de-cuerda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/instrumentos-de-cuerda/</guid>
      <description>Funciones numéricas, de cadena y de fecha/hora de MSDN
https://msdn.microsoft.com/en-us/library/3ca8tfek(v=vs.84).aspx
1. Cuerda estándar # En vbscript, un objeto no necesariamente necesita un tipo designado. Similar a la variable var de C#.
Dim ExampleString1 As String Dim ExampleString2 2. Conceptos básicos de manipulación de cadenas # &#39;Base string Dim exStr : exStr = &amp;quot; &amp;lt;Head&amp;gt;data&amp;lt;/Head&amp;gt; &amp;quot; &#39;Left Dim res: res = Left(exStr,6) &#39;res now equals &amp;quot; &amp;lt;Head&amp;quot; &#39;Right Dim res: res = Right(exStr,6) &#39;res now equals &amp;quot;Head&amp;gt; &amp;quot; &#39;Mid Dim res: res = Mid(exStr,8,4) &#39;res now equals &amp;quot;data&amp;quot; &#39;Replace Dim res: res = Replace(&amp;quot;variable&amp;quot;, &amp;quot;var&amp;quot;, &amp;quot;&amp;quot;) &#39;res now equals &amp;quot;riable&amp;quot; &#39;LCase Dim res: res = Lcase(exStr) &#39;res now equals &amp;quot; &amp;lt;head&amp;gt;data&amp;lt;/head&amp;gt; &amp;quot; &#39;UCase Dim res: res = UCase(exStr) &#39;res now equals &amp;quot; &amp;lt;HEAD&amp;gt;DATA&amp;lt;/HEAD&amp;gt; &amp;quot; &#39;LTrim Dim res: res = LTrim(exStr) &#39;res now equals &amp;quot;&amp;lt;Head&amp;gt;data&amp;lt;/Head&amp;gt; &amp;quot; notice no space on left side &#39;RTrim Dim res: res = RTrim(exStr) &#39;res now equals &amp;quot;&amp;lt;Head&amp;gt;data&amp;lt;/Head&amp;gt; &amp;quot; notice no space on right side &#39;Trim Dim res: res = Trim(exStr) &#39;res now equals &amp;quot;&amp;lt;Head&amp;gt;data&amp;lt;/Head&amp;gt;&amp;quot; &#39;StrReverse Dim res: res = StrReverse(exStr) &#39;res now equals &amp;quot; &amp;gt;daeH/&amp;lt;atad&amp;gt;daeH&amp;lt; &amp;quot; &#39;String Dim res: res = String(4,&amp;quot;c&amp;quot;) &#39;res now equals &amp;quot;cccc&amp;quot; &#39;StrComp - String Compare, by default, compares the binary of 2 strings.</description>
    </item>
    
    <item>
      <title>Consultas WMI</title>
      <link>https://www.wikiod.com/es/vbscript/consultas-wmi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/consultas-wmi/</guid>
      <description>VBScript puede consultar el Instrumental de administración de Windows (WMI) para obtener información vital relacionada con la PC local y remota. Podemos usar consultas WMI para realizar varias tareas, como extraer el nombre de la PC, obtener la resolución de la pantalla, obtener información sobre el usuario y el nombre de usuario, extraer información vital sobre cualquier proceso, modificar la configuración central del sistema, etc.
A continuación se muestran algunos ejemplos que utilizan consultas WMI para realizar tareas específicas.</description>
    </item>
    
    <item>
      <title>Objetos del sistema de archivos</title>
      <link>https://www.wikiod.com/es/vbscript/objetos-del-sistema-de-archivos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/vbscript/objetos-del-sistema-de-archivos/</guid>
      <description>Mover un archivo/carpeta # Métodos utilizados:
.MoveFile(Source, Dest) .MoveFolder(Source, Dest) El siguiente código ilustra el uso del método MoveFile para mover un archivo a una nueva ubicación. Se puede lograr lo mismo para las carpetas usando el método MoveFolder.
Código:
Dim objFso, strSourcePath, strDestPath strSourcePath = &amp;quot;C:\Users\GS\Desktop\Source.txt&amp;quot; strDestPath = &amp;quot;C:\Users\GS\Desktop\Folder\Dest.txt&amp;quot; Set objFso = CreateObject(&amp;quot;Scripting.FileSystemObject&amp;quot;) If objFso.FileExists(strSourcePath) then objFso.MoveFile strSourcePath, strDestPath End If Set objFso = Nothing NOTA: No tenemos ningún método de un objeto de sistema de archivos que nos permita cambiar el nombre de un archivo.</description>
    </item>
    
  </channel>
</rss>
