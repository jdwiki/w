<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>phoenix-framework Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/phoenix-framework/</link>
    <description>Recent content in phoenix-framework Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/phoenix-framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con phoenix-framework</title>
      <link>https://www.wikiod.com/es/phoenix-framework/primeros-pasos-con-phoenix-framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/phoenix-framework/primeros-pasos-con-phoenix-framework/</guid>
      <description>Instalación del esqueleto # A veces, desea una instalación sin nada más que la configuración mínima de phoenix. El siguiente comando te dará eso.
mix phoenix.new web --no-brunch --no-ecto Nota: Debe tener instalado Elixir, Erlang, Hex, Mix y el archivo Phoenix para la instalación del esqueleto
Creando el proyecto Phoenix # Para crear su primer proyecto en el marco de Phoenix en este punto debe tener, Elixir, Erlang, Hex y el archivo Phoenix instalado.</description>
    </item>
    
    <item>
      <title>Generar documentación del proyecto.</title>
      <link>https://www.wikiod.com/es/phoenix-framework/generar-documentacion-del-proyecto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/phoenix-framework/generar-documentacion-del-proyecto/</guid>
      <description>Justificación # La invocación correcta de módulos auxiliares y funciones puede ser intimidante porque
estos se generan dinámicamente (por ejemplo, al crear un nuevo proyecto o agregar un nuevo &amp;ldquo;recurso&amp;rdquo;) no están documentados explícitamente (por ejemplo, MyApp.ErrorHelpers.error_tag) la documentación no cubre todos los ejemplos (p. ej., MyApp.Router.Helpers.*_path en Phoenix.Router). Aunque los ayudantes creados están dispersos por todo su proyecto, su ubicación sigue una lógica sólida. Puede acostumbrarse a ellos bastante rápido y, afortunadamente, cuando genera un proyecto con Phoenix, el código se envía con documentación a través de los atributos de módulo @doc y @moduledoc de Elixir.</description>
    </item>
    
    <item>
      <title>Uso de modelos ecto en phoenix</title>
      <link>https://www.wikiod.com/es/phoenix-framework/uso-de-modelos-ecto-en-phoenix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/phoenix-framework/uso-de-modelos-ecto-en-phoenix/</guid>
      <description>Cómo generar, editar y usar modelos ecto en los marcos de Phoenix.
Generar modelo de usuario desde la línea de comando # Para generar el modelo de usuario json con username, password_hash, email_id, created_at, updated_at, escriba
mix phoenix.gen.json Usuario usuarios nombre de usuario:cadena email_id:cadena contraseña_hash:cadena timestamps()
Migraciones del modelo ecto # Cuando ejecuta mix phoenix.gen.html o mix phoenix.gen.json desde la línea de comandos, las migraciones se crean en priv -&amp;gt; repo -&amp;gt;migrations en la carpeta de su proyecto.</description>
    </item>
    
  </channel>
</rss>
