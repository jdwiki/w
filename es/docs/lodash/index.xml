<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/lodash/</link>
    <description>Recent content in Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/lodash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con lodash</title>
      <link>https://www.wikiod.com/es/lodash/primeros-pasos-con-lodash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/lodash/primeros-pasos-con-lodash/</guid>
      <description>Configuración # Lodash funciona igual de bien tanto en servidores (como node.js) como en navegadores.
node.js con npm # Descargar con npm desde la CLI:
npm install lodash Luego, en sus scripts de nodo:
var _ = require(&amp;quot;lodash&amp;quot;); // use lodash in your program... Descargue su propia copia para el lado del cliente en el sitio web (es decir, en el navegador) # Descargue lodash o use un administrador de paquetes como npm, jspm o bower.</description>
    </item>
    
    <item>
      <title>Encadenamiento</title>
      <link>https://www.wikiod.com/es/lodash/encadenamiento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/lodash/encadenamiento/</guid>
      <description>El encadenamiento implícito con _(arr1) y el encadenamiento explícito con _.chain(arr1) funcionan de manera similar. Los ejemplos a continuación muestran cómo difieren ligeramente.
Encadenamiento explícito con _.chain(...) # var arr1 = [10, 15, 20, 25, 30, 15, 25, 35]; var sumOfUniqueValues = _.chain(arr1) .uniq() .sum() // sum returns a single value .value(); // which must be unwrapped manually with explicit chaining // sumOfUniqueValues is now 135 Encadenamiento implícito con _(...) # var arr1 = [10, 15, 20, 25, 30, 15, 25, 35]; var sumOfUniqueValues = _(arr1) .</description>
    </item>
    
    <item>
      <title>Trabajar con listas y matrices</title>
      <link>https://www.wikiod.com/es/lodash/trabajar-con-listas-y-matrices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/lodash/trabajar-con-listas-y-matrices/</guid>
      <description>Sintaxis # _.map(colección, Función) =&amp;gt; nuevaColección _.filter(colección, Predicado) =&amp;gt; nuevaColección _.some(colección, Predicado) =&amp;gt; verdadero o falso _.reduce(colección, BiFunción, semilla) =&amp;gt; valor acumulado Parámetros # Parámetro Significado Colección Un grupo iterable de elementos. Esto puede ser una matriz o un objeto. Función Una función que toma 1 entrada y devuelve una salida. bifunción Una función que toma 2 entradas y devuelve una salida. predicado Una función que toma 1 entrada y devuelve un valor booleano.</description>
    </item>
    
    <item>
      <title>Trabajar con objetos</title>
      <link>https://www.wikiod.com/es/lodash/trabajar-con-objetos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/lodash/trabajar-con-objetos/</guid>
      <description>.posee # Determinar si un objeto tiene (o contiene) una clave. Si la clave a buscar se expresa como una ruta (con notación de puntos), atravesará estructuras de objetos anidados para determinar si la clave existe.
var obj = { a: 2, b: 3, c: { dd:40, ee:{ fff:500 } } }; var res1 = _.has(obj, &amp;quot;a&amp;quot;); // true var res2 = _.has(obj, &amp;quot;a.b&amp;quot;); // false var res3 = _.has(obj, &amp;quot;c&amp;quot;); // true var res4 = _.</description>
    </item>
    
    <item>
      <title>Utiles</title>
      <link>https://www.wikiod.com/es/lodash/utiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/lodash/utiles/</guid>
      <description>_.identidad # Este método solo devuelve el primer argumento.
var res1 = _.identity(10, 20); // res1 now is 10 var res2 = _.identity(&amp;quot;hello&amp;quot;, &amp;quot;world&amp;quot;); // res2 now is &amp;quot;hello&amp;quot; ¿Qué significa _.identity en la documentación de lodash? # Este método se usa en toda la documentación de lodash en lugar de function(x){return x;} (o el equivalente de ES6 x =&amp;gt; x).
Por lo general, significa &amp;ldquo;sin transformación&amp;rdquo; o cuando se usa como predicado: la veracidad del valor.</description>
    </item>
    
  </channel>
</rss>
