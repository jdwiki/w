<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial de cakephp on </title>
    <link>https://www.wikiod.com/es/docs/cakephp/</link>
    <description>Recent content in tutorial de cakephp on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/cakephp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con cakephp</title>
      <link>https://www.wikiod.com/es/cakephp/comenzando-con-cakephp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/cakephp/comenzando-con-cakephp/</guid>
      <description>Primer proyecto vacío básico # Creación inicial y descarga (CakePHP 3.x) # La forma más fácil de crear un nuevo proyecto CakePHP es a través de Composer (si no conoce Composer, busque aquí para obtener más información)
Instalar compositor # Si necesita instalarlo y está en una máquina con Windows, siga [esta guía] (https://getcomposer.org/doc/00-intro.md#installation-windows)
Si está en Linux/Unix/OSX, siga esta guía
Crear el primer proyecto CakePHP # Abra una ventana de consola y navegue hasta su instalación de php (en Windows con la instalación predeterminada de xampp, esta es C:\xampp\php)</description>
    </item>
    
    <item>
      <title>Consejos de codificación CakePHP3</title>
      <link>https://www.wikiod.com/es/cakephp/consejos-de-codificacion-cakephp3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/cakephp/consejos-de-codificacion-cakephp3/</guid>
      <description>Creando un nuevo controlador # namespace App\Controller; class PostsController extends AppController { public function initialize(){ parent::initialize(); // code that you want to run before every action } public function view($id) { //Your code here } } Recuperando datos de publicación equivalentes a $_POST # Puede recuperar datos de publicación como Array.
$post_data= $this-&amp;gt;request-&amp;gt;data; Puede recuperar datos de publicación para una clave en particular.
$this-&amp;gt;request-&amp;gt;data[&#39;field&#39;]; Recuperar valor clave específico
$this-&amp;gt;request-&amp;gt;data(&#39;key_name&#39;); Recuperar el valor clave específico de la matriz anidada</description>
    </item>
    
    <item>
      <title>Creación de instancias de modelos de otra fuente de datos</title>
      <link>https://www.wikiod.com/es/cakephp/creacion-de-instancias-de-modelos-de-otra-fuente-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/cakephp/creacion-de-instancias-de-modelos-de-otra-fuente-de-datos/</guid>
      <description>Llegará un momento en el que su aplicación CakePHP necesitará consultar más de una base de datos. El método para solicitar modelos de bases de datos no predeterminadas no está presente en la documentación oficial.
Cambios en la base de datos sobre la marcha para modal # Para múltiples bases de datos, tiene el archivo database.php donde puede configurar tantas bases de datos como necesite.
Si desea &amp;ldquo;cambiar&amp;rdquo; una base de datos para un modelo específico sobre la marcha, utilice el método setDataSource().</description>
    </item>
    
    <item>
      <title>Manejo de solicitudes Ajax</title>
      <link>https://www.wikiod.com/es/cakephp/manejo-de-solicitudes-ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/cakephp/manejo-de-solicitudes-ajax/</guid>
      <description>Ejemplo básico de CakePHP 2.x # Controlador: En el controlador, debe agregar el componente RequestHandler. Esto permite que CakePHP detecte automáticamente las solicitudes de Ajax (consulte: http://book.cakephp.org/2.0/en/core-libraries/components/request-handling.html para obtener más información):
class YourController extends AppController { public $components = array(&#39;RequestHandler&#39;); //... public function ajaxCall() { if($this-&amp;gt;request-&amp;gt;is(&#39;ajax&#39;){ // some code that should be executed // ... // variables you want to return $this-&amp;gt;set(compact(&#39;firstVariable&#39;, &#39;secondVariable&#39;)); $this-&amp;gt;set(&#39;_serialize&#39;, array(&#39;firstVariable&#39;, secondVariable)) } } Ver código (usando jQuery):</description>
    </item>
    
  </channel>
</rss>
