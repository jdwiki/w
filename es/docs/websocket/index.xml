<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de WebSockets on </title>
    <link>https://www.wikiod.com/es/docs/websocket/</link>
    <description>Recent content in Tutorial de WebSockets on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/websocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con WebSockets</title>
      <link>https://www.wikiod.com/es/websocket/primeros-pasos-con-websockets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/websocket/primeros-pasos-con-websockets/</guid>
      <description>Ejemplo de cliente de socket web # Este es un ejemplo de un cliente de socket web en javascript. Eso:
Se conecta a un servidor de demostración en vivo. Envía un mensaje. Recibe mensajes. Se desconecta después de un intervalo. var mySocket = null; var serverUrl = &#39;wss://echo.websocket.org&#39;; // wss: is ws: but using SSL. var oWebSocket = window.WebSocket || window.MozWebSocket; if (oWebSocket) { mySocket = new oWebSocket (serverUrl); if (mySocket) { console.</description>
    </item>
    
    <item>
      <title>Diferencias entre WebSockets y AJAX</title>
      <link>https://www.wikiod.com/es/websocket/diferencias-entre-websockets-y-ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/websocket/diferencias-entre-websockets-y-ajax/</guid>
      <description>Ajax utiliza el protocolo HTTP y puede enviar solicitudes mediante métodos POST/GET del cliente al servidor.
WebSocket es en sí mismo un protocolo para comunicarse entre el Cliente y el Servidor, distinto de HTTP.
En Ajax, cuando envía una solicitud, el servidor envía una respuesta para esa solicitud y finaliza la conexión.
Al usar WebSockets cuando establece una conexión con el servidor, puede comunicarse entre el cliente y el servidor tanto como desee y mantiene viva la conexión.</description>
    </item>
    
  </channel>
</rss>
