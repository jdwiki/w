<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de Xamarin.Forms on </title>
    <link>https://www.wikiod.com/es/docs/xamarin-forms/</link>
    <description>Recent content in Tutorial de Xamarin.Forms on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/xamarin-forms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con Xamarin.Forms</title>
      <link>https://www.wikiod.com/es/xamarin-forms/primeros-pasos-con-xamarinforms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/primeros-pasos-con-xamarinforms/</guid>
      <description>Instalación (Visual Studio) # Xamarin.Forms es una abstracción de kit de herramientas de interfaz de usuario con respaldo nativo multiplataforma que permite a los desarrolladores crear fácilmente interfaces de usuario que se pueden compartir entre Android, iOS, Windows y Windows Phone. Las interfaces de usuario se representan mediante los controles nativos de la plataforma de destino, lo que permite que las aplicaciones de Xamarin.Forms conserven el aspecto adecuado para cada plataforma.</description>
    </item>
    
    <item>
      <title>Alerta de pantalla</title>
      <link>https://www.wikiod.com/es/xamarin-forms/alerta-de-pantalla/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/alerta-de-pantalla/</guid>
      <description>Alerta de visualización # Se puede abrir un cuadro de alerta en una Página de Xamarin.Forms mediante el método DisplayAlert. Podemos proporcionar un Título, Cuerpo (Texto para ser alertado) y uno o dos Botones de Acción. Page ofrece dos anulaciones del método DisplayAlert.
&amp;rsquo;tarea pública DisplayAlert (título de cadena, mensaje de cadena, cancelación de cadena)&#39; Esta anulación presenta un cuadro de diálogo de alerta al usuario de la aplicación con un solo botón de cancelación.</description>
    </item>
    
    <item>
      <title>Ajustes visuales específicos de la plataforma</title>
      <link>https://www.wikiod.com/es/xamarin-forms/ajustes-visuales-especificos-de-la-plataforma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/ajustes-visuales-especificos-de-la-plataforma/</guid>
      <description>Ajustes idiomáticos # Se pueden realizar ajustes específicos de idioma desde el código C#, por ejemplo, para cambiar la orientación del diseño, ya sea que se muestre la vista o un teléfono o una tableta.
if (Device.Idiom == TargetIdiom.Phone) { this.panel.Orientation = StackOrientation.Vertical; } else { this.panel.Orientation = StackOrientation.Horizontal; } Esas funcionalidades también están disponibles directamente desde el código XAML:
&amp;lt;StackLayout x:Name=&amp;quot;panel&amp;quot;&amp;gt; &amp;lt;StackLayout.Orientation&amp;gt; &amp;lt;OnIdiom x:TypeArguments=&amp;quot;StackOrientation&amp;quot;&amp;gt; &amp;lt;OnIdiom.Phone&amp;gt;Vertical&amp;lt;/OnIdiom.Phone&amp;gt; &amp;lt;OnIdiom.Tablet&amp;gt;Horizontal&amp;lt;/OnIdiom.Tablet&amp;gt; &amp;lt;/OnIdiom&amp;gt; &amp;lt;/StackLayout.Orientation&amp;gt; &amp;lt;/StackLayout&amp;gt; Ajustes de plataforma # Se pueden realizar ajustes para plataformas específicas desde el código C#, por ejemplo, para cambiar el relleno para todas las plataformas de destino.</description>
    </item>
    
    <item>
      <title>Renderizadores personalizados</title>
      <link>https://www.wikiod.com/es/xamarin-forms/renderizadores-personalizados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/renderizadores-personalizados/</guid>
      <description>Accediendo al renderizador desde un proyecto nativo # var renderer = Platform.GetRenderer(visualElement); if (renderer == null) { renderer = Platform.CreateRenderer(visualElement); Platform.SetRenderer(visualElement, renderer); } DoSomeThingWithRender(render); // now you can do whatever you want with render Procesador personalizado para ListView # Los renderizadores personalizados permiten a los desarrolladores personalizar la apariencia y el comportamiento de los controles de Xamarin.Forms en cada plataforma. Los desarrolladores podrían usar funciones de controles nativos.
Por ejemplo, necesitamos deshabilitar el desplazamiento en ListView.</description>
    </item>
    
    <item>
      <title>Diseños de formularios de Xamarin</title>
      <link>https://www.wikiod.com/es/xamarin-forms/disenos-de-formularios-de-xamarin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/disenos-de-formularios-de-xamarin/</guid>
      <description>Diseño Absoluto # AbsoluteLayout posiciona y dimensiona los elementos secundarios proporcionalmente a su propio tamaño y posición o por valores absolutos. Las vistas secundarias se pueden colocar y dimensionar utilizando valores proporcionales o valores estáticos, y se pueden mezclar valores proporcionales y estáticos.
Una definición de AbsoluteLayout en XAML se ve así:
&amp;lt;AbsoluteLayout&amp;gt; &amp;lt;Label Text=&amp;quot;I&#39;m centered on iPhone 4 but no other device&amp;quot; AbsoluteLayout.LayoutBounds=&amp;quot;115,150,100,100&amp;quot; LineBreakMode=&amp;quot;WordWrap&amp;quot; /&amp;gt; &amp;lt;Label Text=&amp;quot;I&#39;m bottom center on every device.</description>
    </item>
    
    <item>
      <title>Fuentes personalizadas en estilos</title>
      <link>https://www.wikiod.com/es/xamarin-forms/fuentes-personalizadas-en-estilos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/fuentes-personalizadas-en-estilos/</guid>
      <description>Recursos para mirar:
Estilos de Xamarin [Uso de fuentes personalizadas en iOS y Android con Xamarin.Forms](https://blog.verslu.is/xamarin/xamarin-forms-xamarin/using-custom-fonts-on-ios-and-android-with-xamarin -formas/) Procesadores personalizados Diccionarios de recursos Propiedades adjuntas Acceso a fuentes personalizadas en Syles # Xamarin.Forms proporciona un excelente mecanismo para diseñar su aplicación multiplataforma con estilos globales.
En el mundo móvil, su aplicación debe ser bonita y destacarse de las demás aplicaciones. Uno de estos caracteres son las fuentes personalizadas utilizadas en la aplicación.</description>
    </item>
    
    <item>
      <title>Complemento Xamarin</title>
      <link>https://www.wikiod.com/es/xamarin-forms/complemento-xamarin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/complemento-xamarin/</guid>
      <description>Complemento multimedia # Tome o elija fotos y videos de una API multiplataforma.
Nuget disponible: https://www.nuget.org/packages/Xam.Plugin.Media/
XAML
&amp;lt;StackLayout Spacing=&amp;quot;10&amp;quot; Padding=&amp;quot;10&amp;quot;&amp;gt; &amp;lt;Button x:Name=&amp;quot;takePhoto&amp;quot; Text=&amp;quot;Take Photo&amp;quot;/&amp;gt; &amp;lt;Button x:Name=&amp;quot;pickPhoto&amp;quot; Text=&amp;quot;Pick Photo&amp;quot;/&amp;gt; &amp;lt;Button x:Name=&amp;quot;takeVideo&amp;quot; Text=&amp;quot;Take Video&amp;quot;/&amp;gt; &amp;lt;Button x:Name=&amp;quot;pickVideo&amp;quot; Text=&amp;quot;Pick Video&amp;quot;/&amp;gt; &amp;lt;Label Text=&amp;quot;Save to Gallery&amp;quot;/&amp;gt; &amp;lt;Switch x:Name=&amp;quot;saveToGallery&amp;quot; IsToggled=&amp;quot;false&amp;quot; HorizontalOptions=&amp;quot;Center&amp;quot;/&amp;gt; &amp;lt;Label Text=&amp;quot;Image will show here&amp;quot;/&amp;gt; &amp;lt;Image x:Name=&amp;quot;image&amp;quot;/&amp;gt; &amp;lt;Label Text=&amp;quot;&amp;quot;/&amp;gt; &amp;lt;/StackLayout&amp;gt; Código
namespace PluginDemo { public partial class MediaPage : ContentPage { public MediaPage() { InitializeComponent(); takePhoto.Clicked += async (sender, args) =&amp;gt; { if (!</description>
    </item>
    
    <item>
      <title>Acceso a funciones nativas con DependencyService</title>
      <link>https://www.wikiod.com/es/xamarin-forms/acceso-a-funciones-nativas-con-dependencyservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/acceso-a-funciones-nativas-con-dependencyservice/</guid>
      <description>Si no desea que su código se rompa cuando no se encuentra ninguna implementación, verifique primero el DependencyService si tiene una implementación disponible.
Puede hacer esto con una simple verificación si no es null.
var speaker = DependencyService.Get&amp;lt;ITextToSpeech&amp;gt;(); if (speaker != null) { speaker.Speak(&amp;quot;Ready for action!&amp;quot;); } o, si su IDE es compatible con C# 6, con un operador condicional nulo:
var speaker = DependencyService.Get&amp;lt;ITextToSpeech&amp;gt;(); speaker?.Speak(&amp;quot;Ready for action!&amp;quot;); Si no hace esto y no se encuentra ninguna implementación en tiempo de ejecución, su código generará una excepción.</description>
    </item>
    
    <item>
      <title>Trabajar con mapas</title>
      <link>https://www.wikiod.com/es/xamarin-forms/trabajar-con-mapas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/trabajar-con-mapas/</guid>
      <description>Si va a ejecutar su proyecto en otra computadora, deberá generar una nueva clave API para él, ya que las huellas dactilares SHA-1 no coincidirán con las diferentes máquinas de compilación.
Puede explorar el proyecto, descrito en el ejemplo Agregar un mapa en Xamarin.Forms aquí
Agregar un mapa en Xamarin.Forms (Xamarin Studio) # Simplemente puede usar las API de mapas nativos en cada plataforma con Xamarin Forms. Todo lo que necesita es descargar el paquete Xamarin.</description>
    </item>
    
    <item>
      <title>Selector de contactos - Formularios Xamarin (Android e iOS)</title>
      <link>https://www.wikiod.com/es/xamarin-forms/selector-de-contactos---formularios-xamarin-android-e-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-forms/selector-de-contactos---formularios-xamarin-android-e-ios/</guid>
      <description>Contact Picker XF (Android e iOS)
contact_picker.cs # using System; using Xamarin.Forms; namespace contact_picker { public class App : Application { public App () { // The root page of your application MainPage = new MyPage(); } protected override void OnStart () { // Handle when your app starts } protected override void OnSleep () { // Handle when your app sleeps } protected override void OnResume () { // Handle when your app resumes } } } MiPágina.</description>
    </item>
    
  </channel>
</rss>
