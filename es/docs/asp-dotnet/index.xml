<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de ASP.NET on </title>
    <link>https://www.wikiod.com/es/docs/asp-dotnet/</link>
    <description>Recent content in Tutorial de ASP.NET on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/asp-dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con ASP.NET</title>
      <link>https://www.wikiod.com/es/asp-dotnet/primeros-pasos-con-aspnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/primeros-pasos-con-aspnet/</guid>
      <description>Instalación o Configuración # De forma predeterminada, todas las bibliotecas necesarias para compilar aplicaciones ASP.NET se incluyen durante la instalación de Visual Studio. Si se lanza una versión más reciente de ASP.NET que no se incluyó con Visual Studio, puede descargar la biblioteca SDK adecuada de Microsoft, que incluirá todas las bibliotecas necesarias para esa versión.
De manera similar, el sistema operativo Windows viene preinstalado con una versión más reciente de ASP.</description>
    </item>
    
    <item>
      <title>Manejo de eventos</title>
      <link>https://www.wikiod.com/es/asp-dotnet/manejo-de-eventos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/manejo-de-eventos/</guid>
      <description>Sintaxis # privado void EventName (remitente del objeto, EventArgs e); Parámetros # Parámetro Detalles emisor de objetos sender se refiere al objeto que invocó el evento que activó el controlador de eventos. Esto es útil si tiene muchos objetos que utilizan el mismo controlador de eventos. EventArgs y EventArgs es algo así como una clase base ficticia. En sí mismo es más o menos inútil, pero si se deriva de él, puede agregar cualquier dato que necesite pasar a sus controladores de eventos.</description>
    </item>
    
    <item>
      <title>Vista en cuadrícula</title>
      <link>https://www.wikiod.com/es/asp-dotnet/vista-en-cuadricula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/vista-en-cuadricula/</guid>
      <description>GridView fuertemente tipado # A partir de Asp.net 4.5, los controles web pueden aprovechar el enlace fuertemente tipado para obtener compatibilidad con IntelliSense y errores de tiempo de compilación.
Cree una clase, que contenga su modelo:
public class Album { public int Id { get; set; } public string Name { get; set; } public string Artist { get; set; } } Defina el control GridView en su página:
&amp;lt;asp:GridView ID=&amp;quot;Grid&amp;quot; runat=&amp;quot;server&amp;quot; AutoGenerateColumns=&amp;quot;false&amp;quot; ItemType=&amp;quot;YourNamespace.</description>
    </item>
    
    <item>
      <title>ASP.NET - Controles de usuario</title>
      <link>https://www.wikiod.com/es/asp-dotnet/aspnet---controles-de-usuario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/aspnet---controles-de-usuario/</guid>
      <description>Los controles de usuario son contenedores que se pueden completar con marcado HTML y controles de servidor con código subyacente de la misma manera que la página ASPX. Se tratan como unidades más pequeñas reutilizables de una página, por lo que no pueden ejecutarse como páginas independientes y no deben tener elementos HTML html, cuerpo o formulario en ellas.
Introducción de controles de usuario # Los controles de usuario están hechos para la reutilización en páginas ASP.</description>
    </item>
    
    <item>
      <title>formularios web</title>
      <link>https://www.wikiod.com/es/asp-dotnet/formularios-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/formularios-web/</guid>
      <description>Sintaxis # &amp;lt;asp:TextBox runat=&amp;ldquo;servidor&amp;rdquo; ID=&amp;quot;&amp;quot; TextMode=&amp;quot;&amp;quot; Text=&amp;quot;&amp;quot; /&amp;gt; &amp;lt;asp:Repetidor runat=&amp;ldquo;servidor&amp;rdquo; ID=&amp;quot;&amp;quot; OnItemDataBound=&amp;quot;&amp;quot;&amp;gt; &amp;lt;Plantilla de encabezado&amp;gt;&amp;lt;/Plantilla de encabezado&amp;gt; &amp;lt;Plantilla de elemento&amp;gt;&amp;lt;/Plantilla de elemento&amp;gt; &amp;lt;Plantilla de pie de página&amp;gt;&amp;lt;/Plantilla de pie de página&amp;gt; &amp;lt;/asp:Repetidor&amp;gt; Todos los controles ASP.Net WebForm requieren runat=&amp;quot;server&amp;quot; para comunicarse con CodeBehind.
Usar un repetidor para crear una tabla HTML # Agrupación en ListView # Ejemplo # &amp;lt;script language=&amp;quot;VB&amp;quot; runat=&amp;quot;server&amp;quot;&amp;gt; Sub SubmitBtn_Click(sender As Object, e As EventArgs) Label1.Text = &amp;quot;Text1.</description>
    </item>
    
    <item>
      <title>Métodos de página</title>
      <link>https://www.wikiod.com/es/asp-dotnet/metodos-de-pagina/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/metodos-de-pagina/</guid>
      <description>Parámetros # Parámetro Detalle límite El parámetro del método C#. Usted proporciona el argumento a través del método de página. sobre el éxito La función de JavaScript que se ejecuta cuando la llamada del método de página se realiza correctamente. onError La función de JavaScript que se ejecuta cuando hay un error en la llamada del método de página. Más de un parámetro # En el ejemplo, la función C# solo solicita un parámetro, si necesita pasar más de uno, puede hacerlo, simplemente póngalos en orden en su llamada JS y estará listo para comenzar.</description>
    </item>
    
    <item>
      <title>Ciclo de vida de la página</title>
      <link>https://www.wikiod.com/es/asp-dotnet/ciclo-de-vida-de-la-pagina/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/ciclo-de-vida-de-la-pagina/</guid>
      <description>Eventos del ciclo de vida # Los siguientes son los eventos del ciclo de vida de la página:
PreInit - PreInit es el primer evento en el ciclo de vida de la página. Comprueba la propiedad IsPostBack y determina si la página es una devolución de datos. Establece los temas y las páginas maestras, crea controles dinámicos y obtiene y establece valores de propiedad de perfil. Este evento se puede controlar anulando el método OnPreInit o creando un controlador Page_PreInit.</description>
    </item>
    
    <item>
      <title>El enlace de datos</title>
      <link>https://www.wikiod.com/es/asp-dotnet/el-enlace-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/el-enlace-de-datos/</guid>
      <description>Fuente de datos SQL # Los controles que se pueden enlazar con datos pueden hacer uso de los controles SqlDataSource. El control SqlDataSource no solo le permite recuperar datos de una base de datos, sino también editar y ordenar los datos.
Recuperando datos # Procedimiento almacenado:
&amp;lt;asp:SqlDataSource ID=&amp;quot;SqlDataSourceEmployees&amp;quot; runat=&amp;quot;server&amp;quot; ConnectionString=&amp;quot;&amp;lt;%$ ConnectionStrings:MyConnectionString %&amp;gt;&amp;quot; SelectCommand=&amp;quot;sp_GetEmployees&amp;quot; SelectCommandType=&amp;quot;StoredProcedure&amp;quot;&amp;gt; &amp;lt;/asp:SqlDataSource&amp;gt; Consulta SQL:
&amp;lt;asp:SqlDataSource ID=&amp;quot;SqlDataSourceEmployees&amp;quot; runat=&amp;quot;server&amp;quot; ConnectionString=&amp;quot;&amp;lt;%$ ConnectionStrings:MyConnectionString %&amp;gt;&amp;quot; SelectCommand=&amp;quot;SELECT EmployeeID, EmployeeFirstName, EmployeeLastName FROM dbo.Employees&amp;quot;&amp;gt; &amp;lt;/asp:SqlDataSource&amp;gt; Parámetros:</description>
    </item>
    
    <item>
      <title>Directivas</title>
      <link>https://www.wikiod.com/es/asp-dotnet/directivas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/directivas/</guid>
      <description>La Directiva de Aplicación # La directiva de aplicación define atributos específicos de la aplicación. Se proporciona en la parte superior del archivo global.aspx. La sintaxis básica de la directiva de aplicación es:
&amp;lt;%@ Application Language=&amp;quot;C#&amp;quot; %&amp;gt; Los atributos de la directiva de aplicación son:
Atributos Descripción Hereda El nombre de la clase de la que heredar. Descripción La descripción de texto de la aplicación. Los analizadores y compiladores ignoran esto.</description>
    </item>
    
    <item>
      <title>Estado de sesión</title>
      <link>https://www.wikiod.com/es/asp-dotnet/estado-de-sesion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet/estado-de-sesion/</guid>
      <description>Sintaxis # Sesión[&amp;ldquo;Session_Key&amp;rdquo;] = Obj_Value; HTTP no tiene estado. El estado de sesión de ASP.NET es un marco que facilita el mantenimiento del estado entre solicitudes de página HTTP.
La sesión se diferencia de las variables de nivel de clase en su capacidad para permanecer disponible en las devoluciones posteriores y en las diferentes páginas. Por ejemplo, una variable de sesión creada en Page1.aspx estará disponible si el usuario es redirigido a Page2.</description>
    </item>
    
  </channel>
</rss>
