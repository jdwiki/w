<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de php-7 on </title>
    <link>https://www.wikiod.com/es/docs/php-7/</link>
    <description>Recent content in Tutorial de php-7 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/php-7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con php-7</title>
      <link>https://www.wikiod.com/es/php-7/comenzando-con-php-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/php-7/comenzando-con-php-7/</guid>
      <description>PHP-7, mejor y nuevo. # Después de PHP 5.4. 5.5 y 5.6 llegó esta nueva actualización mayor. La actualización viene con muchas nuevas funciones de programación, técnicas y formas de escribir código. La instalación de PHP 7 se puede hacer de varias maneras.
Para instalarlo para un desarrollo de host local como WAMP o XAMPP, busque actualizaciones de software desde su extremo y vea si vienen con el nuevo PHP 7.</description>
    </item>
    
    <item>
      <title>Operador de nave espacial</title>
      <link>https://www.wikiod.com/es/php-7/operador-de-nave-espacial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/php-7/operador-de-nave-espacial/</guid>
      <description>El operador de nave espacial se utiliza para comparar dos expresiones. Por ejemplo, $a &amp;lt;=&amp;gt; $b devuelve -1, 0 o 1 cuando $a es respectivamente menor, igual o mayor que $b. Las comparaciones se realizan de acuerdo con las reglas habituales de comparación de tipos de PHP.
Ordenar una lista de números # $array = [1, 0, 5, 9, 3, 7, 6, 8, 4, 2]; usort($array, function (int $a, int $b): int { return $a &amp;lt;=&amp;gt; $b; }); print_r($array); Array ( [0] =&amp;gt; 0 [1] =&amp;gt; 1 [2] =&amp;gt; 2 [3] =&amp;gt; 3 [4] =&amp;gt; 4 [5] =&amp;gt; 5 [6] =&amp;gt; 6 [7] =&amp;gt; 7 [8] =&amp;gt; 8 [9] =&amp;gt; 9 ) Ejemplo sencillo # $a = 5; $b = 10; $a &amp;lt;=&amp;gt; $a; // 0, because $a == $a $a &amp;lt;=&amp;gt; $b; // -1, because $a &amp;lt; $b $b &amp;lt;=&amp;gt; $a; // 1, because $b &amp;gt; $a Ejemplo numérico genérico # Ejemplo genérico en forma de matriz $a &amp;lt;=&amp;gt; $b.</description>
    </item>
    
    <item>
      <title>Clase anónima</title>
      <link>https://www.wikiod.com/es/php-7/clase-anonima/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/php-7/clase-anonima/</guid>
      <description>Las clases anónimas son ​​útiles cuando es necesario crear objetos simples y únicos. Se pueden utilizar en lugar de una definición de clase completa.
Pueden hacer todo lo que puede hacer una clase normal: pasar argumentos a través de sus constructores, extender otras clases, implementar interfaces, usar rasgos.
El motor asigna un nombre a las clases anónimas. Este nombre debe considerarse un detalle de implementación, en el que no se debe confiar.</description>
    </item>
    
    <item>
      <title>Operador de fusión nula</title>
      <link>https://www.wikiod.com/es/php-7/operador-de-fusion-nula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/php-7/operador-de-fusion-nula/</guid>
      <description>El operador coalescente nulo (??) se ha agregado como azúcar sintáctico para el caso común de necesitar usar un ternario junto con isset().
Devuelve su primer operando si existe y no es NULL; de lo contrario, devuelve su segundo operando.
Uso general # // Fetches the value of $_GET[&#39;id&#39;] and returns 0 if it does not exist. $id = $_GET[&#39;id&#39;] ?? 0; // This is equivalent to: $id = isset($_GET[&#39;id&#39;]) ?</description>
    </item>
    
  </channel>
</rss>
