<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial del kit de sprites on </title>
    <link>https://www.wikiod.com/es/docs/sprite-kit/</link>
    <description>Recent content in Tutorial del kit de sprites on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/sprite-kit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con el kit de sprites</title>
      <link>https://www.wikiod.com/es/sprite-kit/comenzando-con-el-kit-de-sprites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/comenzando-con-el-kit-de-sprites/</guid>
      <description>Tu primer juego de SpriteKit (Hello World) # Abra Xcode y seleccione Crear un nuevo proyecto Xcode.
Ahora seleccione iOS &amp;gt; Aplicación a la izquierda y Juego en el área de selección principal.
Presiona Siguiente.
Escribe en Product Name el nombre de tu primer gran juego. En Nombre de la organización el nombre de su empresa (o simplemente su propio nombre). El Identificador de la organización debe contener su nombre de dominio invertido (www.</description>
    </item>
    
    <item>
      <title>Colisión de SKNode</title>
      <link>https://www.wikiod.com/es/sprite-kit/colision-de-sknode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/colision-de-sknode/</guid>
      <description>Los determinantes del procesamiento de eventos de contacto y colisión de Sprite Kit son las configuraciones de relación, creadas por usted, de categoryBitMask, collisionBitMask y contactTestBitMask para cada uno de sus tipos de objetos interactivos. Al establecerlos racionalmente al servicio de los resultados deseados de los contactos y las colisiones, determina qué tipos pueden colisionar e informar de los contactos con otros, y evitar la sobrecarga no deseada de colisiones, contactos y procesamiento físico.</description>
    </item>
    
    <item>
      <title>Elementos UIKit con SpriteKit</title>
      <link>https://www.wikiod.com/es/sprite-kit/elementos-uikit-con-spritekit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/elementos-uikit-con-spritekit/</guid>
      <description>UITableView en SKScene # import SpriteKit import UIKit class GameRoomTableView: UITableView,UITableViewDelegate,UITableViewDataSource { var items: [String] = [&amp;quot;Player1&amp;quot;, &amp;quot;Player2&amp;quot;, &amp;quot;Player3&amp;quot;] override init(frame: CGRect, style: UITableViewStyle) { super.init(frame: frame, style: style) self.delegate = self self.dataSource = self } required init?(coder aDecoder: NSCoder) { fatalError(&amp;quot;init(coder:) has not been implemented&amp;quot;) } // MARK: - Table view data source func numberOfSections(in tableView: UITableView) -&amp;gt; Int { return 1 } func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&amp;gt; Int { return items.</description>
    </item>
    
    <item>
      <title>Escena SKS</title>
      <link>https://www.wikiod.com/es/sprite-kit/escena-sks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/escena-sks/</guid>
      <description>SKScene representa una sola escena en una aplicación SpriteKit. Un SKScene se &amp;lsquo;presenta&amp;rsquo; en un SKView. SKSpriteNodes se agregan a la escena para implementar los sprites reales.
Las aplicaciones simples pueden tener un solo SKScene que contiene todo el contenido de SpriteKit. Las aplicaciones más complejas pueden tener varias SKScenes que se presentan en diferentes momentos (por ejemplo, una escena de apertura para presentar las opciones del juego, una segunda escena para implementar el juego en sí y una tercera escena para presentar los resultados de &amp;lsquo;Game Over&amp;rsquo;).</description>
    </item>
    
    <item>
      <title>SKSpriteNode (Sprites)</title>
      <link>https://www.wikiod.com/es/sprite-kit/skspritenode-sprites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/skspritenode-sprites/</guid>
      <description>Sintaxis # conveniencia init(imageNamed name: String) // Crear un SKSpriteNode a partir de una imagen con nombre en el catálogo de activos
posición de var: CGPoint // Propiedad SKNode, heredada por SKSpriteNode. La posición del nodo en el sistema de coordenadas principal.
func addChild(_ node: SKNode) // Método SKNode, heredado por SKScene. Se usa para agregar un SKSpriteNode a la escena (también se usa para agregar SKNodes a otros SKNodes).</description>
    </item>
    
    <item>
      <title>Detección de entrada táctil en dispositivos iOS</title>
      <link>https://www.wikiod.com/es/sprite-kit/deteccion-de-entrada-tactil-en-dispositivos-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/deteccion-de-entrada-tactil-en-dispositivos-ios/</guid>
      <description>Detección del tacto # Puede anular 4 métodos de SKScene para detectar el toque del usuario
class GameScene: SKScene { override func touchesBegan(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) { } override func touchesMoved(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) { } override func touchesEnded(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) { } override func touchesCancelled(touches: Set&amp;lt;UITouch&amp;gt;?, withEvent event: UIEvent?) { } } Tenga en cuenta que cada método recibe un parámetro &amp;ldquo;toques&amp;rdquo; que (bajo circunstancias particulares) puede contener más de un solo evento táctil.</description>
    </item>
    
    <item>
      <title>SKVer</title>
      <link>https://www.wikiod.com/es/sprite-kit/skver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/skver/</guid>
      <description>Parámetros # Parámetro Detalles muestraFPS Muestra un recuento de la velocidad de fotogramas actual en fotogramas por segundo en la vista. muestraCuentaNodos Muestra un recuento del número actual de SKNodes que se muestran en la vista. espectáculosFísica Muestre una representación visual de SKPhysicsBodys en la vista. muestraCampos Muestre una imagen que represente los efectos de los campos físicos en la vista. muestraDrawCount Muestra un recuento del número de pasadas de dibujo necesarias para renderizar la vista.</description>
    </item>
    
    <item>
      <title>SKAcción</title>
      <link>https://www.wikiod.com/es/sprite-kit/skaccion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/skaccion/</guid>
      <description>Crear y ejecutar una acción SKA simple # Un ejemplo muy simple sería desvanecer un SKSpriteNode.
En Swift:
let node = SKSpriteNode(imageNamed: &amp;quot;image&amp;quot;) let action = SKAction.fadeOutWithDuration(1.0) node.runAction(action) Creación de una secuencia repetitiva de acciones # A veces es necesario realizar una acción repetidamente o en una secuencia. Este ejemplo hará que el nodo aparezca y desaparezca un total de 3 veces.
En Swift:
let node = SKSpriteNode(imageNamed: &amp;quot;image&amp;quot;) let actionFadeOut = SKAction.</description>
    </item>
    
    <item>
      <title>Funciones temporizadas en SpriteKit SKActions vs NSTimers</title>
      <link>https://www.wikiod.com/es/sprite-kit/funciones-temporizadas-en-spritekit-skactions-vs-nstimers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/funciones-temporizadas-en-spritekit-skactions-vs-nstimers/</guid>
      <description>¿Cuándo debería usar SKActions para realizar funciones de temporizador? Casi siempre. La razón de esto es que Sprite Kit opera en un intervalo de actualización, y la velocidad de este intervalo se puede cambiar a lo largo de la vida útil del proceso usando la propiedad speed. Las escenas también se pueden pausar. Dado que &amp;lsquo;SKAction&amp;rsquo; funciona dentro de la escena, cuando modifica estas propiedades, no hay necesidad de modificar sus funciones de tiempo.</description>
    </item>
    
    <item>
      <title>Física</title>
      <link>https://www.wikiod.com/es/sprite-kit/fisica/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/sprite-kit/fisica/</guid>
      <description>Cómo eliminar correctamente el nodo en el método didBeginContact (múltiples contactos) # // PHYSICS CONSTANTS struct PhysicsCategory { static let None : UInt32 = 0 static let All : UInt32 = UInt32.max static let player : UInt32 = 0b1 // 1 static let bullet : UInt32 = 0b10 // 2 } var nodesToRemove = [SKNode]() // #-#-#-#-#-#-#-#-#-#-#-#-#-#-# //MARK: - Physic Contact Delegate methods // #-#-#-#-#-#-#-#-#-#-#-#-#-#-# func didBegin(_ contact: SKPhysicsContact) { var one: SKPhysicsBody var two: SKPhysicsBody if contact.</description>
    </item>
    
  </channel>
</rss>
