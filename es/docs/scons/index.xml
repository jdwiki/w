<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de desventajas on </title>
    <link>https://www.wikiod.com/es/docs/scons/</link>
    <description>Recent content in Tutorial de desventajas on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/scons/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con SCons</title>
      <link>https://www.wikiod.com/es/scons/primeros-pasos-con-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/scons/primeros-pasos-con-scons/</guid>
      <description>Empezando # Una vez que tenga [SCons ejecutándose] (https://www.wikiod.com/es/scons/ejecutando-scons), cree un archivo llamado SConstruct:
print(&#39;..Building World&#39;) Ahora ejecuta scons:
$ scons scons: Reading SConscript files ... ..Building World scons: done reading SConscript files. scons: Building targets ... scons: `.&#39; is up to date. scons: done building targets. SConstruct es un script de Python con funciones SCons adicionales.
Zip(&#39;archive&#39;, [&#39;SConstruct&#39;]) El script anterior se empaqueta en archive.zip usando la función Zip() proporcionada por SCons.</description>
    </item>
    
    <item>
      <title>Ejecutando SCons</title>
      <link>https://www.wikiod.com/es/scons/ejecutando-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/scons/ejecutando-scons/</guid>
      <description>SCons está escrito en Python 2 y no necesita ninguna dependencia para funcionar. Simplemente puede copiar sus scripts en el árbol de fuentes de su proyecto y ejecutarlos desde aquí. O es posible que desee utilizar la versión empaquetada para su sistema operativo.
Instalación en Linux # En Debian o Ubuntu, puede instalar SCons usando
$ sudo apt-get install scons En sistemas basados ​​en [YUM] (https://en.wikipedia.org/wiki/Yellowdog_Updater,_Modified), utilice
$ sudo yum install scons Puede instalar usando un [RPM] (https://en.</description>
    </item>
    
    <item>
      <title>Fases de ejecución de SCons</title>
      <link>https://www.wikiod.com/es/scons/fases-de-ejecucion-de-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/scons/fases-de-ejecucion-de-scons/</guid>
      <description>SCons es un sistema de compilación de varios pasos. Primero lee todo SConstruct y SConscript para ejecutar el código de Python y crear construir gráfico con objetivos. Luego escanea el sistema de archivos para detectar qué objetivos del gráfico de compilación deben actualizarse, y luego ejecuta el comando para construir objetivos obsoletos.
Inspección de las fases de SCons # scons describe las fases de ejecución en sí. Ejecutarlo sobre un SConstruct vacío produce esto:</description>
    </item>
    
    <item>
      <title>C&#43;&#43;</title>
      <link>https://www.wikiod.com/es/scons/c-/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/scons/c-/</guid>
      <description>Una construcción simple # Es muy fácil construir un proyecto C++ simple. Aquí hay un ejemplo de un archivo SConstruct que lo hace:
env=Environment() env.Program(&#39;hello&#39;, Glob(&#39;src/*.cpp&#39;)) Esto crea el ejecutable hello compuesto por todas las fuentes en src con extensión cpp.
Especificación de varias opciones de compilación # Este ejemplo muestra configuraciones de compilación más detalladas:
env=Environment( CPPPATH=&#39;/usr/include/boost/&#39;, CPPDEFINES=[&#39;foo&#39;], LIBS=[&#39;bar&#39;], SCONS_CXX_STANDARD=&#39;c++11&#39;) env.Program(&#39;hello&#39;, Glob(&#39;src/*.cpp&#39;)) Esto crea el ejecutable hello a partir de todos los archivos cpp en src, con la siguiente configuración:</description>
    </item>
    
  </channel>
</rss>
