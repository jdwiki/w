<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de la ventana acoplable on </title>
    <link>https://www.wikiod.com/es/docs/docker/</link>
    <description>Recent content in Tutorial de la ventana acoplable on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con Docker</title>
      <link>https://www.wikiod.com/es/docker/primeros-pasos-con-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/primeros-pasos-con-docker/</guid>
      <description>Instalación de Docker en Windows # Requisitos: versión de 64 bits de Windows 7 o superior en una máquina que admita la tecnología de virtualización de hardware y esté habilitada.
Si bien el binario docker puede ejecutarse de forma nativa en Windows, para compilar y alojar contenedores debe ejecutar una máquina virtual Linux en la caja.
Desde la versión 1.12, no necesita tener una VM separada para instalar, ya que Docker puede usar la funcionalidad nativa de Hyper-V de Windows para iniciar una pequeña máquina Linux para que actúe como back-end.</description>
    </item>
    
    <item>
      <title>API del motor acoplable</title>
      <link>https://www.wikiod.com/es/docker/api-del-motor-acoplable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/api-del-motor-acoplable/</guid>
      <description>Una API que le permite controlar todos los aspectos de Docker desde sus propias aplicaciones, crear herramientas para administrar y monitorear aplicaciones que se ejecutan en Docker e incluso usarlas para crear aplicaciones en Docker mismo.
Habilite el acceso remoto a la API de Docker en Linux ejecutando systemd # Linux ejecutando systemd, como Ubuntu 16.04, agregar -H tcp://0.0.0.0:2375 a /etc/default/docker no tiene el efecto que solía tener.
En su lugar, cree un archivo llamado /etc/systemd/system/docker-tcp.</description>
    </item>
    
    <item>
      <title>Ejecución de contenedores</title>
      <link>https://www.wikiod.com/es/docker/ejecucion-de-contenedores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/ejecucion-de-contenedores/</guid>
      <description>Sintaxis # docker ejecuta [OPCIONES] IMAGEN [COMANDO] [ARG&amp;hellip;] Eliminar automáticamente un contenedor después de ejecutarlo # Normalmente, un contenedor de Docker persiste después de haber salido. Esto le permite volver a ejecutar el contenedor, inspeccionar su sistema de archivos, etc. Sin embargo, a veces desea ejecutar un contenedor y eliminarlo inmediatamente después de que salga. Por ejemplo, para ejecutar un comando o mostrar un archivo del sistema de archivos. Docker proporciona la opción de línea de comando --rm para este propósito:</description>
    </item>
    
    <item>
      <title>Depuración de un contenedor</title>
      <link>https://www.wikiod.com/es/docker/depuracion-de-un-contenedor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/depuracion-de-un-contenedor/</guid>
      <description>Sintaxis # estadísticas docker [OPCIONES] [CONTENEDOR&amp;hellip;] registros docker [OPCIONES] CONTENEDOR docker top [OPCIONES] CONTENEDOR [opciones ps] Imprimiendo los registros # Seguir los registros es la forma menos intrusiva de depurar una aplicación en ejecución. Este ejemplo reproduce el comportamiento del tail -f some-application.log tradicional en el contenedor 7786807d8084.
docker logs --follow --tail 10 7786807d8084 Este comando básicamente muestra la salida estándar del proceso contenedor (el proceso con pid 1).
Si sus registros no incluyen marcas de tiempo de forma nativa, puede agregar el indicador --timestamps.</description>
    </item>
    
    <item>
      <title>Modo de enjambre Docker</title>
      <link>https://www.wikiod.com/es/docker/modo-de-enjambre-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/modo-de-enjambre-docker/</guid>
      <description>Un enjambre es una serie de Docker Engines (o nodos) que implementan servicios de forma colectiva. Swarm se utiliza para distribuir el procesamiento entre muchas máquinas físicas, virtuales o en la nube.
Sintaxis # [Inicializar un enjambre] (https://docs.docker.com/engine/reference/commandline/swarm_init/): docker swarm init [OPCIONES]
[Únase a un enjambre como nodo y/o administrador] (https://docs.docker.com/engine/reference/commandline/swarm_join/): unión de enjambre docker [OPCIONES] HOST: PUERTO
Crear un nuevo servicio: docker service create [OPCIONES] IMAGEN [COMANDO] [ARG&amp;hellip;]
[Mostrar información detallada sobre uno o más servicios] (https://docs.</description>
    </item>
    
    <item>
      <title>Dockerfiles</title>
      <link>https://www.wikiod.com/es/docker/dockerfiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/dockerfiles/</guid>
      <description>Los Dockerfiles son archivos que se utilizan para crear imágenes de Docker mediante programación. Le permiten crear una imagen de Docker de manera rápida y reproducible, por lo que son útiles para colaborar. Los archivos Docker contienen instrucciones para construir una imagen Docker. Cada instrucción se escribe en una fila y se da en la forma &amp;lt;INSTRUCCIÓN&amp;gt;&amp;lt;argumento(s)&amp;gt;. Los Dockerfiles se utilizan para crear imágenes de Docker mediante el comando docker build.</description>
    </item>
    
    <item>
      <title>Gestión de contenedores</title>
      <link>https://www.wikiod.com/es/docker/gestion-de-contenedores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/gestion-de-contenedores/</guid>
      <description>Sintaxis # docker rm [OPCIONES] CONTENEDOR [CONTENEDOR&amp;hellip;] Docker adjuntar [OPCIONES] CONTENEDOR docker exec [OPCIONES] COMANDO CONTENEDOR [ARG&amp;hellip;] ventana acoplable ps [OPCIONES] registros docker [OPCIONES] CONTENEDOR ventana acoplable inspeccionar [OPCIONES] CONTENEDOR|IMAGEN [CONTENEDOR|IMAGEN&amp;hellip;] En los ejemplos anteriores, cada vez que contenedor es un parámetro del comando docker, se menciona como &amp;lt;contenedor&amp;gt; o container id o &amp;lt;CONTAINER_NAME&amp;gt;. En todos estos lugares, puede pasar un nombre de contenedor o una identificación de contenedor para especificar un contenedor.</description>
    </item>
    
    <item>
      <title>Contenedores de punto de control y restauración</title>
      <link>https://www.wikiod.com/es/docker/contenedores-de-punto-de-control-y-restauracion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/contenedores-de-punto-de-control-y-restauracion/</guid>
      <description>Compile la ventana acoplable con punto de control y restauración habilitados (ubuntu) # Para compilar docker, se recomienda tener al menos 2 GB de RAM. Incluso con eso falla a veces, así que es mejor optar por 4GB en su lugar.
asegúrese de que git y make estén instalados
sudo apt-get install make git-core -y instalar un nuevo kernel (al menos 4.2)
sudo apt-get install linux-generic-lts-xenial reiniciar la máquina para tener activo el nuevo kernel</description>
    </item>
    
    <item>
      <title>Volúmenes de datos y contenedores de datos</title>
      <link>https://www.wikiod.com/es/docker/volumenes-de-datos-y-contenedores-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/volumenes-de-datos-y-contenedores-de-datos/</guid>
      <description>Contenedores de solo datos # Los contenedores de solo datos están obsoletos y ahora se consideran antipatrones.
En los días de antaño, antes del subcomando volume de Docker, y antes de que fuera posible crear volúmenes con nombre, Docker eliminaba los volúmenes cuando no había más referencias a ellos en ningún contenedor. Los contenedores de solo datos están obsoletos porque Docker ahora brinda la capacidad de crear volúmenes con nombre, así como mucha más utilidad a través de los diversos subcomandos docker volume.</description>
    </item>
    
    <item>
      <title>Construyendo imágenes</title>
      <link>https://www.wikiod.com/es/docker/construyendo-imagenes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/docker/construyendo-imagenes/</guid>
      <description>Parámetros # | Parámetro | Detalles | |&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-| | &amp;ndash;tirar | Garantiza que la imagen base (FROM) esté actualizada antes de compilar el resto del Dockerfile.|
Construyendo una imagen desde un Dockerfile # Una vez que tenga un Dockerfile, puede crear una imagen a partir de él usando docker build. La forma básica de este comando es:
docker build -t nombre-imagen ruta Si su Dockerfile no se llama Dockerfile, puede usar el indicador -f para dar el nombre del Dockerfile para compilar.</description>
    </item>
    
  </channel>
</rss>
