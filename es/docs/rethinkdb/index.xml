<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de repensar db on </title>
    <link>https://www.wikiod.com/es/docs/rethinkdb/</link>
    <description>Recent content in Tutorial de repensar db on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/rethinkdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con rethinkdb</title>
      <link>https://www.wikiod.com/es/rethinkdb/primeros-pasos-con-rethinkdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/rethinkdb/primeros-pasos-con-rethinkdb/</guid>
      <description>Instalación en Windows # Descargando # Requisitos previos: Proporcionamos binarios nativos de 64 bits para Windows 7 y superior. Se requiere una versión de Windows de 64 bits.
Descargue el archivo ZIP y descomprímalo en un directorio de su elección.
El puerto de Windows de RethinkDB es una adición reciente y aún no ha recibido tantos ajustes como las versiones de Linux y OS X. Informe cualquier problema de rendimiento en [GitHub][gh-issues].</description>
    </item>
    
    <item>
      <title>Usando RethinkDB con Docker</title>
      <link>https://www.wikiod.com/es/rethinkdb/usando-rethinkdb-con-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/rethinkdb/usando-rethinkdb-con-docker/</guid>
      <description>Uso básico # De forma predeterminada, RethinkDB vincula todos los servicios a 127.0.0.1. Por lo tanto, el siguiente ejemplo conservará los datos en host_data_path en la máquina host del contenedor y estará disponible para 127.0.0.1 en los puertos estándar.
Servicio Bandera Puerto predeterminado Conductor --puerto-controlador 28015 Clúster --cluster-port 29015 WebUI HTTP --puerto-http 8080 docker run -d -v host_data_path:/data rethinkdb Para abrir el controlador y el puerto del clúster al tráfico externo, debe especificar la dirección de las interfaces locales o proporcionar &amp;ldquo;todas&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>usando thinky.io con RethinkDB</title>
      <link>https://www.wikiod.com/es/rethinkdb/usando-thinkyio-con-rethinkdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/rethinkdb/usando-thinkyio-con-rethinkdb/</guid>
      <description>Iniciando thinky en node.js # thinky es un ORM ligero de node.js para RethinkDB.
Primero necesita tener RethinkDB ejecutándose en su servidor.
Luego instale el paquete thinky.io npm en su proyecto.
npm install --save thinky Ahora importe thinky en su archivo de modelo.
const thinky = require(&#39;thinky)(); const type = thinky.type A continuación, cree un modelo.
const User = thinky.createModel(&#39;User&#39; { email:type.string(), password: type.string() }); Ahora puede crear y guardar un usuario.</description>
    </item>
    
    <item>
      <title>Primeros pasos con el nodo</title>
      <link>https://www.wikiod.com/es/rethinkdb/primeros-pasos-con-el-nodo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/rethinkdb/primeros-pasos-con-el-nodo/</guid>
      <description>Instalación del paquete RethinkDB desde NPM # npm install -g rethinkdb Haciendo una conexión a RethinkDB # const r = require(&amp;ldquo;repensardb&amp;rdquo;);
r.connect({host: &#39;localhost&#39;, port: 28015}, (conn) =&amp;gt; console.log(conn)) // Or as a promise let rdb_conn; r.connect({host: &#39;localhost&#39;, port: 28015}).then((conn) =&amp;gt; { rdb_conn = conn; }).then(() =&amp;gt; { // Continue to use rdb_conn }); Listado de todas las bases de datos # r.connect({host: &#39;localhost&#39;, port: 28015}) .then((conn) =&amp;gt; { return r.dbList().run(conn); }).</description>
    </item>
    
  </channel>
</rss>
