<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial de jade on </title>
    <link>https://www.wikiod.com/es/docs/jade/</link>
    <description>Recent content in tutorial de jade on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/jade/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Empezando con el jade</title>
      <link>https://www.wikiod.com/es/jade/empezando-con-el-jade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jade/empezando-con-el-jade/</guid>
      <description>Sintaxis # Pug (el nombre anterior es Jade) es una sintaxis limpia y sensible a los espacios en blanco para escribir HTML. Aquí hay un ejemplo simple:
doctype html html(lang=&amp;quot;en&amp;quot;) head title= pageTitle script(type=&#39;text/javascript&#39;). if (foo) bar(1 + 5) body h1 Pug - node template engine #container.col if youAreUsingPug p You are amazing else p Get on it! p. Pug is a terse and simple templating language with a strong focus on performance and powerful features.</description>
    </item>
    
    <item>
      <title>Atributos</title>
      <link>https://www.wikiod.com/es/jade/atributos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jade/atributos/</guid>
      <description>&amp;amp;atributos # Pronunciado &amp;ldquo;y atributos&amp;rdquo;, la sintaxis &amp;amp;attributes se puede utilizar para explotar un objeto en los atributos de un elemento.
Código: # div#foo(data-bar=&amp;quot;foo&amp;quot;)&amp;amp;attributes({&#39;data-foo&#39;: &#39;bar&#39;})
Resultado: # &amp;lt;div id=&amp;quot;foo&amp;quot; data-bar=&amp;quot;foo&amp;quot; data-foo=&amp;quot;bar&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
El objeto no tiene que ser un objeto literal. También puede ser simplemente una variable que tiene un objeto como su valor (ver también Mixin Attributes)
Código: # - var attributes = {&#39;data-foo&#39;: &#39;bar&#39;}; div#foo(data-bar=&amp;quot;foo&amp;quot;)&amp;amp;attributes(attributes) Resultado: # &amp;lt;div id=&amp;quot;foo&amp;quot; data-bar=&amp;quot;foo&amp;quot; data-foo=&amp;quot;bar&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;</description>
    </item>
    
    <item>
      <title>Caso</title>
      <link>https://www.wikiod.com/es/jade/caso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jade/caso/</guid>
      <description>Caso # - var friends = 10 case friends when 0 p you have no friends when 1 p you have a friend default p you have #{friends} friends El resultado es:
&amp;lt;p&amp;gt;tienes 10 amigos&amp;lt;/p&amp;gt;</description>
    </item>
    
    <item>
      <title>arpa js</title>
      <link>https://www.wikiod.com/es/jade/arpa-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jade/arpa-js/</guid>
      <description>Harp es un servidor web estático con preprocesamiento incorporado. Harp puede compilar su proyecto en activos estáticos, HTML, CSS y JavaScript, sin necesidad de configuración. También puede usar Harp como una biblioteca de nodos para compilar o ejecutar como servidor.
Harp incluye los preprocesadores comunes y útiles de forma predeterminada. Sirve a Jade (Pug), Markdown, EJS, CoffeeScript, LESS, Sass y Stylus.
Cómo configurar el arpa # Harp no requiere ninguna configuración para comenzar.</description>
    </item>
    
  </channel>
</rss>
