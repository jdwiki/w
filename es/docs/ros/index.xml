<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rosTutorial on </title>
    <link>https://www.wikiod.com/es/docs/ros/</link>
    <description>Recent content in rosTutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/ros/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Empezando con ros</title>
      <link>https://www.wikiod.com/es/ros/empezando-con-ros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ros/empezando-con-ros/</guid>
      <description>Instalación # Dependiendo de su máquina de destino, debe elegir una versión de ROS compatible (o viceversa). Aunque la instalación de ROS está bien documentada en la wiki de ROS, puede ser confuso encontrarlos. Entonces, aquí hay una tabla de la versión de ROS, las plataformas y la arquitectura de destino y los enlaces para las guías de instalación apropiadas:
Versión ROS Plataforma Arco Estado Guía de instalación Enlace Cinética Ubuntu 16.</description>
    </item>
    
    <item>
      <title>lanzamiento de ros</title>
      <link>https://www.wikiod.com/es/ros/lanzamiento-de-ros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ros/lanzamiento-de-ros/</guid>
      <description>&amp;rsquo;nodo del paquete&amp;rsquo; debe ser &amp;rsquo;nodo del paquete&#39;
inicialmente dice &amp;ldquo;iniciar&amp;rdquo; y &amp;ldquo;detener&amp;rdquo;, pero no explica cómo hacer un apagado controlado.
lanzar nodos ros y cargar parámetros desde el archivo Yaml # roslaunch es una herramienta importante que gestiona el inicio y la parada de los nodos ROS. Toma uno o más archivos &amp;ldquo;*.launch&amp;rdquo; como argumentos.
Para este ejemplo, me referiré a lo siguiente (como se pregunta en esta pregunta), entonces, ¿cómo podemos ejecutar esos comandos de forma consecutiva y automática?</description>
    </item>
    
    <item>
      <title>creando un espacio de trabajo</title>
      <link>https://www.wikiod.com/es/ros/creando-un-espacio-de-trabajo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ros/creando-un-espacio-de-trabajo/</guid>
      <description>Este tutorial muestra cómo crear un espacio de trabajo. Un espacio de trabajo es un conjunto de directorios en los que vive un conjunto relacionado de código ROS. Uno puede tener múltiples espacios de trabajo de ROS, pero es posible trabajar solo en uno a la vez.
Creación de un espacio de trabajo # Para crear un espacio de trabajo, se debe ejecutar lo siguiente en la terminal:
$ mkdir -p ~/workspace_name/src $ cd ~/workspace_name/src $ catkin_init_workspace $ cd ~/workspace_name/ $ catkin_make Los comandos anteriores crean un espacio de trabajo llamado workspace_name.</description>
    </item>
    
    <item>
      <title>Creando un paquete</title>
      <link>https://www.wikiod.com/es/ros/creando-un-paquete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ros/creando-un-paquete/</guid>
      <description>Este tutorial muestra cómo crear un paquete en ROS. Los paquetes se encuentran dentro de los espacios de trabajo, en el directorio src. Cada directorio de paquetes debe tener archivos CMakeLists.txt y package.xml.
Creando un paquete usando rospy # Suponiendo que se haya creado previamente un espacio de trabajo llamado workspace_name en el directorio de inicio, se puede crear un paquete llamado package_name ejecutando las siguientes líneas de comando.
$ cd ~/workspace_name/src/ $ catkin_create_pkg package_name rospy </description>
    </item>
    
  </channel>
</rss>
