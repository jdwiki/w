<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android-asynctask Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/android-asynctask/</link>
    <description>Recent content in Android-asynctask Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/android-asynctask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con android-asynctask</title>
      <link>https://www.wikiod.com/es/android-asynctask/primeros-pasos-con-android-asynctask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-asynctask/primeros-pasos-con-android-asynctask/</guid>
      <description>AsyncTask desde el concepto hasta la implementación # Concepto AsyncTask es una clase que permite ejecutar operaciones en segundo plano y los resultados se publican en el subproceso de la interfaz de usuario. El objetivo principal es eliminar todo el código repetitivo para iniciar/ejecutar un subproceso mediante la eliminación de los controladores y todo lo que se necesita para manipular los subprocesos. Además, el propósito de AsyncTask es tener operaciones de corta duración en un subproceso en segundo plano (unos segundos como máximo), no operaciones de larga duración.</description>
    </item>
    
    <item>
      <title>Cancelación de una tarea asíncrona</title>
      <link>https://www.wikiod.com/es/android-asynctask/cancelacion-de-una-tarea-asincrona/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-asynctask/cancelacion-de-una-tarea-asincrona/</guid>
      <description>Cancelación de una tarea asíncrona
Cancelar una tarea asíncrona # En el siguiente ejemplo, si alguien presiona el botón de inicio mientras se ejecuta la tarea, la tarea se cancela. En esta cancelación en particular, debería interrumpirse si se está ejecutando.
public class MainActivity extends AppCompatActivity { private static AtomicBoolean inWork; private CustomAsyncTask asyncTask; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); inWork = new AtomicBoolean(false); FloatingActionButton fab = (FloatingActionButton) findViewById(R.</description>
    </item>
    
  </channel>
</rss>
