<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de ActionScript 3 on </title>
    <link>https://www.wikiod.com/es/docs/actionscript-3/</link>
    <description>Recent content in Tutorial de ActionScript 3 on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/actionscript-3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con ActionScript 3</title>
      <link>https://www.wikiod.com/es/actionscript-3/primeros-pasos-con-actionscript-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/primeros-pasos-con-actionscript-3/</guid>
      <description>Descripción general de la instalación # ActionScript 3 se puede utilizar instalando Adobe AIR SDK o Apache Flex SDK o como parte del producto Animate CC de Adobe (anteriormente conocido como Flash Professional).
Adobe Animate CC es una solución de software profesional que se puede usar para crear proyectos AS3 usando herramientas visuales; una vez instalado, no se necesitan más pasos para comenzar a crear proyectos AS3.
AIR SDK y Flex SDK se pueden utilizar con herramientas de línea de comandos o con varios IDE de terceros.</description>
    </item>
    
    <item>
      <title>Generación de valor aleatorio</title>
      <link>https://www.wikiod.com/es/actionscript-3/generacion-de-valor-aleatorio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/generacion-de-valor-aleatorio/</guid>
      <description>Número aleatorio entre los valores mínimo y máximo # function randomMinMax(min:Number, max:Number):Number { return (min + (Math.random() * Math.abs(max - min))); } Esta función se llama pasando un rango de valores mínimos y máximos.
Ejemplo:
randomMinMax(1, 10); Salidas de ejemplo:
1.661770915146917 2.5521070677787066 9.436270965728909 Crea un color aleatorio # Para obtener cualquier color aleatorio:
function randomColor():uint { return Math.random() * 0xFFFFFF; } Si necesita más control sobre los canales rojo, verde y azul:</description>
    </item>
    
    <item>
      <title>Envío y recepción de datos de servidores</title>
      <link>https://www.wikiod.com/es/actionscript-3/envio-y-recepcion-de-datos-de-servidores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/envio-y-recepcion-de-datos-de-servidores/</guid>
      <description>Realizar una solicitud desde Flash # URLRequest y [URLLoader](http://help.adobe. com/en_US/FlashPlatform/reference/actionscript/3/flash/net/URLLoader.html) las clases funcionan juntas para realizar solicitudes desde Flash a recursos externos. La URLRequest define información sobre la solicitud, p. el cuerpo de la solicitud y el tipo de método de solicitud, y URLLoader hace referencia a esto para realizar la solicitud real y proporcionar un medio para recibir una notificación cuando se recibe una respuesta del recurso.
Ejemplo:
var request:URLRequest = new URLRequest(&#39;http://stackoverflow.</description>
    </item>
    
    <item>
      <title>Patrón único</title>
      <link>https://www.wikiod.com/es/actionscript-3/patron-unico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/patron-unico/</guid>
      <description>El patrón singleton tiene el objetivo de permitir que solo exista una instancia de una clase en un momento dado.
La prevención de la instanciación directa a través del constructor generalmente se evita haciéndola privada. Sin embargo, esto no es posible en As3 y, por lo tanto, se deben usar otras formas de controlar el número de instancias.
Ejecutor de Singleton a través de una instancia privada # En este enfoque, se accede al single a través del método estático:</description>
    </item>
    
    <item>
      <title>Comprender el error 1009 No se puede acceder a una propiedad o método de una referencia de objeto nulo</title>
      <link>https://www.wikiod.com/es/actionscript-3/comprender-el-error-1009-no-se-puede-acceder-a-una-propiedad-o-metodo-de-una-referencia-de-objeto-nulo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/comprender-el-error-1009-no-se-puede-acceder-a-una-propiedad-o-metodo-de-una-referencia-de-objeto-nulo/</guid>
      <description>Un error 1009 es un error general que surge cuando intenta recibir un valor de una variable o propiedad que tiene un valor de null. Los ejemplos proporcionados exponen varios casos en los que surge este error, junto con algunas recomendaciones sobre cómo mitigar el error.
El temido y frecuente &amp;ldquo;Error 1009: No se puede acceder a una propiedad o método de una referencia de objeto nulo&amp;rdquo; es una señal de que algunos de los datos parecen nulos, pero se intenta utilizar como un objeto poblado.</description>
    </item>
    
    <item>
      <title>Manipulación y filtrado de mapas de bits</title>
      <link>https://www.wikiod.com/es/actionscript-3/manipulacion-y-filtrado-de-mapas-de-bits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/manipulacion-y-filtrado-de-mapas-de-bits/</guid>
      <description>En este tema, puede aprender un poco sobre la manipulación de datos de mapas de bits y el procesamiento visual, el trabajo con píxeles y los primeros pasos con los filtros de efectos.
Efecto de umbral (monocromo) # requerido: # comprender los mapas de bits y los datos de mapas de bits ** qué es el umbral **
Este ajuste toma todos los píxeles de una imagen y&amp;hellip; los empuja a blanco puro o negro puro</description>
    </item>
    
    <item>
      <title>Optimización del rendimiento</title>
      <link>https://www.wikiod.com/es/actionscript-3/optimizacion-del-rendimiento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/optimizacion-del-rendimiento/</guid>
      <description>Vectores en lugar de matrices # Flash Player 10 introdujo el tipo de lista genérica Vector.&amp;lt;*&amp;gt; que era más rápido que Array. Sin embargo, esto no es del todo cierto. Solo los siguientes tipos de Vector son más rápidos que sus homólogos de Array, debido a la forma en que se implementan en Flash Player.
Vector.&amp;lt;int&amp;gt; - Vector de enteros de 32 bits Vector.&amp;lt;uint&amp;gt; - Vector de enteros sin signo de 32 bits Vector.</description>
    </item>
    
    <item>
      <title>Programación orientada a objetos</title>
      <link>https://www.wikiod.com/es/actionscript-3/programacion-orientada-a-objetos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/programacion-orientada-a-objetos/</guid>
      <description>Anulación del método # Cuando &amp;rsquo;extiendes&amp;rsquo; una clase, puedes &amp;lsquo;anular&amp;rsquo; los métodos que define la clase heredada usando la palabra clave &amp;lsquo;anular&amp;rsquo;:
public class Example { public function test():void { trace(&#39;It works!&#39;); } } public class AnotherExample extends Example { public override function test():void { trace(&#39;It still works!&#39;); } } Ejemplo:
var example:Example = new Example(); var another:AnotherExample = new AnotherExample(); example.test(); // Output: It works! another.test(); // Output: It still works!</description>
    </item>
    
    <item>
      <title>Trabajar con sonido</title>
      <link>https://www.wikiod.com/es/actionscript-3/trabajar-con-sonido/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/trabajar-con-sonido/</guid>
      <description>Sintaxis # Sound.play(startTime:Number = 0, loops:int = 0, sndTransform:flash.media:SoundTransform = null):SoundChannel // Reproduce un sonido cargado, devuelve un SoundChannel Deja de reproducir un sonido # import flash.net.URLRequest; import flash.media.Sound; import flash.media.SoundChannel; import flash.events.Event; var snd:Sound; = new Sound(); var sndChannel:SoundChannel var sndTimer:Timer; snd.addEventListener(Event.COMPLETE, soundLoaded); snd.load(new URLRequest(&amp;quot;soundFile.mp3&amp;quot;)); //load after adding the complete event function soundLoaded(e:Event):void { sndChannel = snd.play(); //Create a timer to wait 1 second sndTimer = new Timer(1000, 1); sndTimer.</description>
    </item>
    
    <item>
      <title>Dibujar mapas de bits</title>
      <link>https://www.wikiod.com/es/actionscript-3/dibujar-mapas-de-bits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/actionscript-3/dibujar-mapas-de-bits/</guid>
      <description>Dibuja un objeto de visualización en datos de mapa de bits # Una función auxiliar para crear una copia de mapa de bits de un objeto. Esto se puede usar para convertir objetos vectoriales, texto o Sprite anidados complejos en un mapa de bits aplanado.
function makeBitmapCopy(displayObj:IBitmapDrawable, transparent:Boolean = false, bgColor:uint = 0x00000000, smooth:Boolean = true):Bitmap { //create an empty bitmap data that matches the width and height of the object you wish to draw var bmd:BitmapData = new BitmapData(displayObj.</description>
    </item>
    
  </channel>
</rss>
