<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de Appium on </title>
    <link>https://www.wikiod.com/es/docs/appium/</link>
    <description>Recent content in Tutorial de Appium on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/appium/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con appium</title>
      <link>https://www.wikiod.com/es/appium/primeros-pasos-con-appium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/appium/primeros-pasos-con-appium/</guid>
      <description>Instalación o configuración # Pre requisitos # Verifique los requisitos para cada tipo de dispositivo que desee automatizar y asegúrese de que estén instalados antes de intentar usar Appium.
Requisitos de iOS
Mac OS X 10.10 o superior, se recomienda 10.11.1 XCode &amp;gt;= 6.0, 7.1.1 recomendado Herramientas de desarrollo de Apple (SDK de simulador de iPhone, herramientas de línea de comandos) ¡Asegúrese de leer la documentación sobre cómo configurarse para las pruebas de iOS!</description>
    </item>
    
    <item>
      <title>cliente Java</title>
      <link>https://www.wikiod.com/es/appium/cliente-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/appium/cliente-java/</guid>
      <description>API de cliente Java
Código fuente del cliente Java
Automatización de Android Play Store (dispositivo real) # Estructura del archivo:
pom.xml -src/prueba/java/PlayStoreAutomation.java Comando de lanzamiento:
prueba mvn -Dtest=PlayStoreAutomation
PlayStoreAutomatización.java # import org.junit.AfterClass; import org.junit.BeforeClass; import org.junit.Test; import io.appium.java_client.android.AndroidDriver; import io.appium.java_client.android.AndroidKeyCode; import io.appium.java_client.MobileElement; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.By; import java.util.concurrent.TimeUnit; import java.net.URL; public class PlayStoreAutomation { public static AndroidDriver&amp;lt;MobileElement&amp;gt; driver; @BeforeClass public static void setUp() throws Exception { DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.</description>
    </item>
    
    <item>
      <title>Pruebas paralelas en Appium</title>
      <link>https://www.wikiod.com/es/appium/pruebas-paralelas-en-appium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/appium/pruebas-paralelas-en-appium/</guid>
      <description>Ejecución en paralelo en appium utilizando el concepto GRID de selenio. Encuentre el proceso paso a paso.
Proceso paso a paso # Pruebas paralelas con Appium usando GRID: Describiré la forma en que funcionó para mí. Crear Selenium Grid con Appium
Configurar la red de selenio Descargue el archivo jar del servidor independiente de Selenium en el sistema de archivos local Abra su terminal y navegue hasta el directorio donde colocó el archivo jar y ejecute el siguiente comando:</description>
    </item>
    
  </channel>
</rss>
