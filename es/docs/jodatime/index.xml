<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/jodatime/</link>
    <description>Recent content in Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/jodatime/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con jodatime</title>
      <link>https://www.wikiod.com/es/jodatime/primeros-pasos-con-jodatime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jodatime/primeros-pasos-con-jodatime/</guid>
      <description>Introducción # Joda-Time es una alternativa robusta a las clases de fecha y hora de Java.
Antes de Java SE 8, las clases estándar de fecha y hora de Java, como java.util.Calendar, eran difíciles de usar y propensas a errores. Joda-Time surgió como la biblioteca estándar de facto para la manipulación de fecha y hora en muchos proyectos de código abierto.
Sin embargo, a partir de Java SE 8, el paquete java.</description>
    </item>
    
    <item>
      <title>LocalDate (tratando con fechas)</title>
      <link>https://www.wikiod.com/es/jodatime/localdate-tratando-con-fechas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jodatime/localdate-tratando-con-fechas/</guid>
      <description>Introducción y caso de uso # Una LocalDate es una fecha sin zona horaria. Considere usarlos cuando solo le interese el año, el mes y el día del mes y no le interese la hora exacta. Por ejemplo, cuando escribimos nuestra fecha de nacimiento (como 1960-01-01) no nos importa la zona horaria en la que sucedió.
Fechas locales básicas # Un año-mes-día dado:
LocalDate oneJanuaryNineteenSixty = new LocalDate(1960,1,1); Fecha:
LocalDate today = LocalDate.</description>
    </item>
    
  </channel>
</rss>
