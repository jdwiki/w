<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de Xamarin.Android on </title>
    <link>https://www.wikiod.com/es/docs/xamarin-android/</link>
    <description>Recent content in Tutorial de Xamarin.Android on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/xamarin-android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con Xamarin.Android</title>
      <link>https://www.wikiod.com/es/xamarin-android/primeros-pasos-con-xamarinandroid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/primeros-pasos-con-xamarinandroid/</guid>
      <description>Comenzar en Visual Studio # Vaya a Archivo &amp;gt; Nuevo &amp;gt; Proyecto para que aparezca el cuadro de diálogo Nuevo proyecto. Vaya a Visual C# &amp;gt; Android y seleccione Aplicación en blanco: Dale a tu aplicación un Nombre y presiona OK para crear tu proyecto. Configure su dispositivo para implementación, o configure un emulador Para ejecutar su aplicación, seleccione la configuración de Depuración y presione el botón Iniciar: Comenzar en Xamarin Studio # Vaya a Archivo &amp;gt; Nuevo &amp;gt; Solución para que aparezca el cuadro de diálogo del nuevo proyecto.</description>
    </item>
    
    <item>
      <title>Xamarin.Android - Cómo crear una barra de herramientas</title>
      <link>https://www.wikiod.com/es/xamarin-android/xamarinandroid---como-crear-una-barra-de-herramientas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/xamarinandroid---como-crear-una-barra-de-herramientas/</guid>
      <description>Estimado equipo,
Creo que es bueno mencionar la documentación oficial de Android donde se explica en detalle el control de la barra de herramientas:
https://developer.android.com/reference/android/support/v7/widget/Toolbar.html
También hay contenido de interés sobre la biblioteca Android.Support.v7 utilizada en la muestra:
https://developer.android.com/training/appbar/index.html
Agregar barra de herramientas a la aplicación Xamarin.Android # En primer lugar, debe agregar la biblioteca Xamarin.Android.Support.V7.AppCompat para NuGet: https://www.nuget.org/packages/Xamarin.Android.Support.v7.AppCompat/
En la carpeta &amp;ldquo;valores&amp;rdquo; en &amp;ldquo;Recursos&amp;rdquo;, agregue un nuevo archivo xml llamado &amp;ldquo;estilos.</description>
    </item>
    
    <item>
      <title>RecyclerView</title>
      <link>https://www.wikiod.com/es/xamarin-android/recyclerview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/recyclerview/</guid>
      <description>Conceptos básicos de RecyclerView # Este es un ejemplo del uso de Android Support Library V7 RecyclerView. Las bibliotecas de soporte generalmente se recomiendan porque brindan versiones compatibles con versiones anteriores de nuevas características, brindan elementos útiles de la interfaz de usuario que no están incluidos en el marco y brindan una variedad de utilidades en las que pueden basarse las aplicaciones.
Para obtener RecyclerView, instalaremos los paquetes Nuget necesarios. Primero, buscaremos v7 recyclerview.</description>
    </item>
    
    <item>
      <title>Ciclo de vida de la aplicación - Xamarin.Andorid</title>
      <link>https://www.wikiod.com/es/xamarin-android/ciclo-de-vida-de-la-aplicacion---xamarinandorid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/ciclo-de-vida-de-la-aplicacion---xamarinandorid/</guid>
      <description>El ciclo de vida de la aplicación Xamarin.Android es el mismo que el de la aplicación normal de Android. Cuando hablamos de ciclo de vida, debemos hablar de: ciclo de vida de la aplicación, ciclo de vida de la actividad y ciclo de vida del fragmento.
A continuación, intentaré proporcionar una buena descripción y una forma de usarlos. Obtuve esta documentación de la documentación oficial de Android y Xamarin y muchos recursos web útiles proporcionados en la sección de comentarios a continuación.</description>
    </item>
    
    <item>
      <title>Encuadernaciones</title>
      <link>https://www.wikiod.com/es/xamarin-android/encuadernaciones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/encuadernaciones/</guid>
      <description>Eliminación de tipos # Es posible indicar al generador de enlaces de Xamarin. Android que ignore un tipo de Java y no lo enlace. Esto se hace agregando un elemento XML remove-node al archivo metadata.xml:
&amp;lt;remove-node path=&amp;quot;/api/package[@name=&#39;{package_name}&#39;]/class[@name=&#39;{name}&#39;]&amp;quot; /&amp;gt; Implementando interfaces Java # Si una biblioteca de Java contiene interfaces que el usuario debería implementar (por ejemplo, detectores de clics como View.IOnClickListener o devoluciones de llamada), la clase de implementación tiene que heredar, directa o indirectamente, de Java.</description>
    </item>
    
    <item>
      <title>Publicación de su Xamarin.Android APK</title>
      <link>https://www.wikiod.com/es/xamarin-android/publicacion-de-su-xamarinandroid-apk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/publicacion-de-su-xamarinandroid-apk/</guid>
      <description>Este tema muestra información sobre cómo preparar su aplicación Xamarin.Android para el modo de lanzamiento y cómo optimizarla.
Preparando tu APK en Visual Studio # Terminaste tu aplicación, la probaste en modo de depuración y funciona perfectamente. Ahora, quieres prepararlo para publicarlo en Google Play Store.
La documentación de Xamarin proporciona buena información aquí:
https://developer.xamarin.com/guides/android/deployment,_testing,_and_metrics/publishing_an_application/
Manifiesto de Android
Primero, en Visual Studio, haga clic con el botón derecho en su proyecto Xamarin.</description>
    </item>
    
    <item>
      <title>Diálogos</title>
      <link>https://www.wikiod.com/es/xamarin-android/dialogos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/dialogos/</guid>
      <description>Parámetros # Método público de uso común Uso SetTitle(String) Establece el título para el cuadro de diálogo EstablecerIcono(Dibujable) Establecer icono para el cuadro de diálogo de alerta EstablecerMensaje(cadena) Configure el mensaje para que se muestre. SetNegativeButton(String, EventHandler) Establece un oyente para que se invoque cuando se presiona el botón negativo del cuadro de diálogo. SetPositiveButton(String, EventHandler) Establece un oyente para que se invoque cuando se presiona el botón positivo del cuadro de diálogo.</description>
    </item>
    
    <item>
      <title>tostadas</title>
      <link>https://www.wikiod.com/es/xamarin-android/tostadas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/tostadas/</guid>
      <description>Mensaje de brindis básico # Primero, crea una instancia de un objeto Toast con uno de los métodos MakeText(). Este método toma tres parámetros: la aplicación Context, el mensaje de texto y la duración del brindis. Devuelve un objeto Toast correctamente inicializado. Puede mostrar la notificación del brindis con Show(), como se muestra en el siguiente ejemplo:
Context context = Application.Context; string text = &amp;quot;Hello toast!&amp;quot;; ToastLength duration = ToastLength.Short; var toast = Toast.</description>
    </item>
    
    <item>
      <title>Xamarin.Android - Comunicación Bluetooth</title>
      <link>https://www.wikiod.com/es/xamarin-android/xamarinandroid---comunicacion-bluetooth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/xamarinandroid---comunicacion-bluetooth/</guid>
      <description>En Xamarin.Android, las propiedades BluetoothSocket.InputStream y BluetoothSocket.OutputStream se convierten automáticamente, por diseño, en System.IO.Stream. En el caso del llamado protocolo de comunicación interactivo, cuando el servidor responde solo cuando el cliente le habla, System.IO.Stream no es bueno porque no tiene ningún método o propiedad para obtener la cantidad de bytes de respuesta disponibles antes de leer la respuesta.
Parámetros # Parámetro Detalles zócalo Una instancia del objeto BluetoothSocket. El socket debe abrirse antes de llamar a este método.</description>
    </item>
    
    <item>
      <title>Vista de lista personalizada</title>
      <link>https://www.wikiod.com/es/xamarin-android/vista-de-lista-personalizada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xamarin-android/vista-de-lista-personalizada/</guid>
      <description>Custom Listview se compone de filas que están diseñadas según las necesidades de los usuarios. # Para el diseño sobre su archivo customrow.axml es como se muestra a continuación
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; &amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; android:layout_width=&amp;quot;fill_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:padding=&amp;quot;8dp&amp;quot;&amp;gt; &amp;lt;ImageView android:id=&amp;quot;@+id/Image&amp;quot; android:layout_width=&amp;quot;80dp&amp;quot; android:layout_height=&amp;quot;80dp&amp;quot; android:layout_alignParentLeft=&amp;quot;true&amp;quot; android:layout_marginRight=&amp;quot;8dp&amp;quot; android:src=&amp;quot;@drawable/icon&amp;quot; /&amp;gt; &amp;lt;TextView android:id=&amp;quot;@+id/Text1&amp;quot; android:layout_width=&amp;quot;wrap_content&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:layout_alignTop=&amp;quot;@id/Image&amp;quot; android:layout_toRightOf=&amp;quot;@id/Image&amp;quot; android:layout_marginTop=&amp;quot;5dip&amp;quot; android:text=&amp;quot;This is Line1&amp;quot; android:textSize=&amp;quot;20dip&amp;quot; android:textStyle=&amp;quot;bold&amp;quot; /&amp;gt; &amp;lt;TextView android:id=&amp;quot;@+id/Text2&amp;quot; android:layout_width=&amp;quot;fill_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:layout_below=&amp;quot;@id/Text1&amp;quot; android:layout_marginTop=&amp;quot;1dip&amp;quot; android:text=&amp;quot;This is line2&amp;quot; android:textSize=&amp;quot;15dip&amp;quot; android:layout_toRightOf=&amp;quot;@id/Image&amp;quot; /&amp;gt; &amp;lt;/RelativeLayout&amp;gt; Luego puede diseñar su main.</description>
    </item>
    
  </channel>
</rss>
