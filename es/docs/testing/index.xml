<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial de prueba on </title>
    <link>https://www.wikiod.com/es/docs/testing/</link>
    <description>Recent content in tutorial de prueba on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con las pruebas</title>
      <link>https://www.wikiod.com/es/testing/comenzando-con-las-pruebas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/testing/comenzando-con-las-pruebas/</guid>
      <description>Caso de prueba # CASO DE PRUEBA -
Un caso de prueba es un conjunto de condiciones y pasos que, cuando se siguen/aplican, un probador puede determinar si una función, una aplicación o un sistema de software funciona como se diseñó originalmente.
Un caso de prueba generalmente contiene referencias a la tarea original, condiciones previas (si no se cumplen las condiciones previas, la prueba no puede continuar), pasos (los pasos describen lo que debe hacer un probador para obtener un resultado), resultado esperado (lo que debería suceder después de seguir todos los pasos descritos) pero también puede contener Estimación, Prioridad, Entorno en el que realizar la prueba.</description>
    </item>
    
    <item>
      <title>Pruebas de interfaz de usuario</title>
      <link>https://www.wikiod.com/es/testing/pruebas-de-interfaz-de-usuario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/testing/pruebas-de-interfaz-de-usuario/</guid>
      <description>El enfoque de este tema es básicamente cubrir los aspectos más importantes de las pruebas de interfaz de usuario. Esta publicación sería principalmente beneficiosa para los estudiantes de primer año, ya que obtienen tareas en las que trabajar y muchas veces sucede que se pierden algunos de los puntos importantes. Ayudemos a los de primer año contribuyendo a este tema :)
[Pruebas de interfaz de usuario] ¿Cómo probar un sitio web?</description>
    </item>
    
    <item>
      <title>Técnicas de prueba de software partición de equivalencia</title>
      <link>https://www.wikiod.com/es/testing/tecnicas-de-prueba-de-software-particion-de-equivalencia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/testing/tecnicas-de-prueba-de-software-particion-de-equivalencia/</guid>
      <description>Esta técnica divide los datos de entrada en clases de datos para reducir la cantidad de casos de prueba para validar una regla. La idea es que dado un conjunto de posibles valores equivalentes, usar solo uno de esos valores será suficiente para diseñar un caso de prueba.
Una ventaja de este enfoque es la reducción del tiempo necesario para probar un software debido a la menor cantidad de casos de prueba.</description>
    </item>
    
    <item>
      <title>Técnicas de Pruebas de Software - Transición de Estado</title>
      <link>https://www.wikiod.com/es/testing/tecnicas-de-pruebas-de-software---transicion-de-estado/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/testing/tecnicas-de-pruebas-de-software---transicion-de-estado/</guid>
      <description>Esta técnica se debe usar cuando tiene un flujo de trabajo implementado y debe considerar casos de prueba positivos (transiciones que pueden ocurrir), así como casos de prueba negativos (transiciones que no están permitidas).
Cualquier regla que pueda ser descrita, pensada, borrada como un diagrama de transición de estado, flujo de trabajo, ciclo de vida puede tener sus casos de prueba diseñados usando esta técnica.
Esta técnica también puede funcionar para encontrar problemas de integridad dentro de los flujos de trabajo y diagramas durante el análisis de la documentación.</description>
    </item>
    
    <item>
      <title>Técnicas de prueba de software análisis de valor límite</title>
      <link>https://www.wikiod.com/es/testing/tecnicas-de-prueba-de-software-analisis-de-valor-limite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/testing/tecnicas-de-prueba-de-software-analisis-de-valor-limite/</guid>
      <description>Esta técnica debe usarse siempre que tenga límites definidos en una especificación. Es una gran idea aplicarlo a cualquier regla basada en tiempo, valores, cualquier tipo de conteo o escala para ser disparada.
También asegura y ayuda a encontrar n + 1 errores. Y sí, es una expansión de los conceptos de partición de equivalencia. Su decisión de aplicar esto o lo otro deben ser los límites existentes y estar claramente definidos.</description>
    </item>
    
  </channel>
</rss>
