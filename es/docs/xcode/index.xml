<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Xcode on </title>
    <link>https://www.wikiod.com/es/docs/xcode/</link>
    <description>Recent content in Tutorial Xcode on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/xcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con Xcode</title>
      <link>https://www.wikiod.com/es/xcode/primeros-pasos-con-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/primeros-pasos-con-xcode/</guid>
      <description>Usa múltiples versiones de Xcode # Puede tener varias versiones de Xcode instaladas al mismo tiempo (incluidas las versiones beta). Simplemente cambie el nombre de la aplicación en Finder para evitar conflictos.
Nota: La instalación de Xcode desde App Store tenderá a sobrescribir una versión existente en su máquina. También puede instalar Xcode desde una descarga directa para tener más control sobre las versiones que tiene.
Cada copia de Xcode incluye herramientas de línea de comandos (clang, xcodebuild, etc.</description>
    </item>
    
    <item>
      <title>Herramientas de línea de comandos</title>
      <link>https://www.wikiod.com/es/xcode/herramientas-de-linea-de-comandos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/herramientas-de-linea-de-comandos/</guid>
      <description>Lista de objetivos, esquemas y configuraciones de compilación disponibles # Para enumerar todos los esquemas disponibles para el proyecto en su directorio actual
xcodebuild -list Opcionalmente, puede pasar una ruta a un archivo de proyecto o espacio de trabajo
xcodebuild -list -workspace ./MyApp.xcworkspace xcodebuild -list -project ./MyApp.xcodeproj Ejemplo de salida
Information about project &amp;quot;Themoji&amp;quot;: Targets: Themoji ThemojiUITests Unit Build Configurations: Debug Release If no build configuration is specified and -scheme is not passed then &amp;quot;Release&amp;quot; is used.</description>
    </item>
    
    <item>
      <title>Proyectos y espacios de trabajo</title>
      <link>https://www.wikiod.com/es/xcode/proyectos-y-espacios-de-trabajo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/proyectos-y-espacios-de-trabajo/</guid>
      <description>Cree, ejecute, perfile, pruebe y analice su proyecto # Haga clic en el botón Ejecutar en la barra de herramientas (o presione ⌘R) para compilar y ejecutar su proyecto. Haga clic en Detener (o presione ⌘.) para detener la ejecución.
Haga clic y mantenga presionado para ver las otras acciones, Prueba (⌘U), Perfil (⌘I) y Analizar (⇧⌘B). Mantenga presionadas las teclas modificadoras ⌥ opción, ⇧ shift y ⌃ control para ver más variantes.</description>
    </item>
    
    <item>
      <title>Creación de controles personalizados en Interface Builder con @IBDesignable</title>
      <link>https://www.wikiod.com/es/xcode/creacion-de-controles-personalizados-en-interface-builder-con-ibdesignable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/creacion-de-controles-personalizados-en-interface-builder-con-ibdesignable/</guid>
      <description>Se volvió mucho más fácil crear controles personalizados en Interface Builder con la introducción de las directivas @IBDesignable y @IBInspectable en Swift. Los desarrolladores ahora pueden crear controles enriquecidos, complejos y totalmente animados con solo unas pocas líneas de código adicionales. Me sorprende la cantidad de desarrolladores que aún no han adoptado por completo esta función, y con frecuencia encuentro que agregar solo unas pocas líneas de código a las clases existentes puede hacer que sea mucho más fácil trabajar con ellas.</description>
    </item>
    
    <item>
      <title>Consejos Xcode</title>
      <link>https://www.wikiod.com/es/xcode/consejos-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/consejos-xcode/</guid>
      <description>Reutilizar fragmentos de código en Xcode # Puede guardar sus fragmentos de código para usarlos más tarde simplemente arrastrando y soltando. Por ejemplo: si tiene una declaración NSLog que se usó para tantos lugares en otro lugar del proyecto, puede guardar las declaraciones NSLog en la biblioteca de fragmentos de código.
Arrastre la instrucción NSLog a la biblioteca de fragmentos de código.
Ahora puede simplemente reutilizar el fragmento de código en cualquier otro lugar del proyecto.</description>
    </item>
    
    <item>
      <title>Certificados, perfiles de aprovisionamiento y firma de código</title>
      <link>https://www.wikiod.com/es/xcode/certificados-perfiles-de-aprovisionamiento-y-firma-de-codigo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/certificados-perfiles-de-aprovisionamiento-y-firma-de-codigo/</guid>
      <description>Elija el enfoque de firma de código correcto # Si recién está comenzando un nuevo proyecto, es importante pensar en cómo desea manejar la firma de código.
Si es nuevo en la firma de código, consulte la sesión WWDC que describe los fundamentos de la firma de código en Xcode.
Para firmar correctamente el código de su aplicación, debe tener los siguientes recursos en su máquina local:
La clave privada (archivo .</description>
    </item>
    
    <item>
      <title>Desarrollo multiplataforma</title>
      <link>https://www.wikiod.com/es/xcode/desarrollo-multiplataforma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/desarrollo-multiplataforma/</guid>
      <description>Condiciones de destino # El encabezado del sistema TargetConditionals.h define varias macros que puede usar desde C y Objective-C para determinar qué plataforma está usando.
#import &amp;lt;TargetConditionals.h&amp;gt; // imported automatically with Foundation - (void)doSomethingPlatformSpecific { #if TARGET_OS_IOS // code that is compiled for iPhone / iPhone Simulator #elif TARGET_OS_MAC &amp;amp;&amp;amp; !TARGET_OS_IPHONE // code that is compiled for OS X only #else // code that is compiled for other platforms #endif } Los valores de las macros son:</description>
    </item>
    
    <item>
      <title>Personalización del IDE de Xcode</title>
      <link>https://www.wikiod.com/es/xcode/personalizacion-del-ide-de-xcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/personalizacion-del-ide-de-xcode/</guid>
      <description>Esta es una colección de diferentes consejos y trucos para personalizar y mejorar su Xcode IDE
Abra la terminal en la carpeta actual del proyecto Xcode # Xcode tiene la capacidad de ejecutar cualquier script con teclas de acceso rápido.
Aquí hay un ejemplo de cómo asignar la tecla de acceso directo ⌘+⌥+⌃+⇧+T para abrir la aplicación Terminal en la carpeta del proyecto actual.
Cree un script bash y guárdelo en alguna carpeta</description>
    </item>
    
    <item>
      <title>Características de Xcode 8</title>
      <link>https://www.wikiod.com/es/xcode/caracteristicas-de-xcode-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/caracteristicas-de-xcode-8/</guid>
      <description>Esto solo funciona con proyectos que usan Swift 3+
Literales de color e imagen # Xcode 8 reconocerá automáticamente cualquier imagen que tenga en un Catálogo de activos y las ofrecerá como una sugerencia dentro de un inicializador de UIImage.
Básicamente, podría declarar una nueva variable y luego agregar un nombre de activo que haya agregado a su catálogo de activos. Por ejemplo let img = perro. img ahora contiene la imagen de perro que está en el catálogo de activos.</description>
    </item>
    
    <item>
      <title>parques infantiles</title>
      <link>https://www.wikiod.com/es/xcode/parques-infantiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/xcode/parques-infantiles/</guid>
      <description>Primeros pasos con Playground # Cree un nuevo archivo de zona de juegos:
First option: From Xcode welcome screen, select the first option (Get started with a playground). Second option: From menu select File → New → Playground (⌥⇧⌘N). Asigne un nombre a su área de juegos y seleccione la plataforma (iOS/macOS/tvOS), luego haga clic en Siguiente.
En la siguiente pantalla, elija dónde desea guardar su área de juegos y luego haga clic en Crear.</description>
    </item>
    
  </channel>
</rss>
