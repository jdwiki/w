<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial delgado on </title>
    <link>https://www.wikiod.com/es/docs/slim/</link>
    <description>Recent content in Tutorial delgado on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/slim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con delgado</title>
      <link>https://www.wikiod.com/es/slim/comenzando-con-delgado/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/slim/comenzando-con-delgado/</guid>
      <description>Instalación o Configuración # La forma recomendada de instalar Slim framework es mediante el uso de composer.
Crea un directorio vacío Este directorio contendrá todos los archivos necesarios para que se ejecute nuestra aplicación Slim. Llamamos a este directorio directorio raíz para que podamos abordar todos los demás archivos y directorios de la aplicación en relación con el directorio raíz.
mkdir slim-app Instalar Slim Framework y sus requisitos usando Composer</description>
    </item>
    
    <item>
      <title>Devolver una respuesta JSON con Slim</title>
      <link>https://www.wikiod.com/es/slim/devolver-una-respuesta-json-con-slim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/slim/devolver-una-respuesta-json-con-slim/</guid>
      <description>Devuelve una respuesta JSON con Slim # Slim puede usar withJson() que puede devolver respuestas JSON con la ruta y el método deseados
$app = new \Slim\App(); $app-&amp;gt;get(&#39;/api/person&#39;, function ($request, $response, $args) { $payload=[]; array_push($payload, array(&amp;quot;name&amp;quot;=&amp;gt;&amp;quot;Bob&amp;quot; ,&amp;quot;birth-year&amp;quot;=&amp;gt;1993)); array_push($payload, array(&amp;quot;name&amp;quot;=&amp;gt;&amp;quot;Alice&amp;quot;,&amp;quot;birth-year&amp;quot;=&amp;gt;1995)); return $response-&amp;gt;withJson($payload,200); }); $app-&amp;gt;run(); Pruébalo con curl
`curl -X GET http://127.0.0.1/api/person` puede devolver una matriz en json
[{&amp;quot;nombre&amp;quot;:&amp;quot;Bob&amp;quot;,&amp;quot;año-de-nacimiento&amp;quot;:1993},{&amp;quot;nombre&amp;quot;:&amp;quot;Alicia&amp;quot;,&amp;quot;año-de-nacimiento&amp;quot;:1995}]
Solicitud POST con Slim 3 (API REST) # use \Psr\Http\Message\ServerRequestInterface as Request; use \Psr\Http\Message\ResponseInterface as Response; $app = new \Slim\App; $app-&amp;gt;post(&#39;/post/data&#39;, function (Request $request, Response $response, $arg){ $_input = $request-&amp;gt;getParsedBody(); $_data_1 = $_input[&#39;name&#39;]; $_data_2 = $_input[&#39;email&#39;]; $rsp = array(); if(!</description>
    </item>
    
  </channel>
</rss>
