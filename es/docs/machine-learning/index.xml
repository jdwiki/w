<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de aprendizaje automático on </title>
    <link>https://www.wikiod.com/es/docs/machine-learning/</link>
    <description>Recent content in Tutorial de aprendizaje automático on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con el aprendizaje automático</title>
      <link>https://www.wikiod.com/es/machine-learning/primeros-pasos-con-el-aprendizaje-automatico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/primeros-pasos-con-el-aprendizaje-automatico/</guid>
      <description>Instalación o configuración usando Python # 1) aprender ciencia
scikit-learn es un módulo de Python para aprendizaje automático construido sobre SciPy y distribuido bajo la licencia BSD de 3 cláusulas. Cuenta con varios algoritmos de clasificación, regresión y agrupamiento, que incluyen máquinas de vectores de soporte, bosques aleatorios, aumento de gradiente, k-means y DBSCAN, y está diseñado para interactuar con las bibliotecas numéricas y científicas de Python NumPy y SciPy.</description>
    </item>
    
    <item>
      <title>perceptrón</title>
      <link>https://www.wikiod.com/es/machine-learning/perceptron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/perceptron/</guid>
      <description>Implementando un modelo Perceptron en C++ # En este ejemplo, repasaré la implementación del modelo de perceptrón en C++ para que pueda tener una mejor idea de cómo funciona.
Lo primero es lo primero, es una buena práctica escribir un algoritmo simple de lo que queremos hacer.
Algoritmo:
Haga un vector para los pesos e inicialícelo a 0 (no olvide agregar el término de sesgo) Continúe ajustando los pesos hasta que obtengamos 0 errores o un recuento bajo de errores.</description>
    </item>
    
    <item>
      <title>Aprendizaje supervisado</title>
      <link>https://www.wikiod.com/es/machine-learning/aprendizaje-supervisado/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/aprendizaje-supervisado/</guid>
      <description>Regresión lineal # Dado que Aprendizaje supervisado consiste en una variable objetivo o de resultado (o variable dependiente) que se va a predecir a partir de un conjunto dado de predictores (variables independientes). Usando este conjunto de variables, generamos una función que asigna las entradas a las salidas deseadas. El proceso de entrenamiento continúa hasta que el modelo alcanza el nivel deseado de precisión en los datos de entrenamiento.
Por lo tanto, hay muchos ejemplos de algoritmos de aprendizaje supervisado, por lo que en este caso en el que me gustaría centrarme en Regresión lineal</description>
    </item>
    
    <item>
      <title>Redes neuronales</title>
      <link>https://www.wikiod.com/es/machine-learning/redes-neuronales/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/redes-neuronales/</guid>
      <description>Funciones de activación # Las funciones de activación, también conocidas como funciones de transferencia, se utilizan para asignar nodos de entrada a nodos de salida de cierta manera.
Se utilizan para impartir no linealidad a la salida de una capa de red neuronal.
Algunas funciones de uso común y sus curvas se dan a continuación: Función sigmoidea # El sigmoide es una función aplastante cuya salida está en el rango [0, 1].</description>
    </item>
    
    <item>
      <title>Métricas de evaluación</title>
      <link>https://www.wikiod.com/es/machine-learning/metricas-de-evaluacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/metricas-de-evaluacion/</guid>
      <description>Área bajo la curva de la característica operativa del receptor (AUROC) # El AUROC es una de las métricas más utilizadas para evaluar el desempeño de un clasificador. En esta sección se explica cómo calcularlo.
AUC (Área bajo la curva) se usa la mayor parte del tiempo para significar AUROC, lo cual es una mala práctica ya que AUC es ambiguo (podría ser cualquier curva) mientras que AUROC no lo es.</description>
    </item>
    
    <item>
      <title>Aprendizaje automático con Java</title>
      <link>https://www.wikiod.com/es/machine-learning/aprendizaje-automatico-con-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/aprendizaje-automatico-con-java/</guid>
      <description>lista de herramientas # Cortical.io - Retina: an API performing complex NLP operations (disambiguation, classification, streaming text filtering, etc...) as quickly and intuitively as the brain. CoreNLP - Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words Stanford Parser - A natural language parser is a program that works out the grammatical structure of sentences Stanford POS Tagger - A Part-Of-Speech Tagger (POS Tagger Stanford Name Entity Recognizer - Stanford NER is a Java implementation of a Named Entity Recognizer.</description>
    </item>
    
    <item>
      <title>Aprendizaje profundo</title>
      <link>https://www.wikiod.com/es/machine-learning/aprendizaje-profundo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/aprendizaje-profundo/</guid>
      <description>El aprendizaje profundo es un subcampo del aprendizaje automático en el que se utilizan redes neuronales artificiales multicapa con fines de aprendizaje. Deep Learning ha encontrado muchas implementaciones excelentes, p. Reconocimiento de voz, Subtítulos en Youtube, recomendación de Amazon, etc. Para obtener información adicional, hay un tema dedicado al [aprendizaje profundo] (https://www.wikiod.com/es/deep-learning).
Resumen breve de aprendizaje profundo # Para entrenar una red neuronal, primero necesitamos diseñar una idea buena y eficiente.</description>
    </item>
    
    <item>
      <title>Aprender</title>
      <link>https://www.wikiod.com/es/machine-learning/aprender/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/aprender/</guid>
      <description>Un problema básico de clasificación simple (XOR) usando el algoritmo del vecino más cercano k # Considere que desea predecir la respuesta correcta para el popular problema XOR. Sabías qué es XOR (por ejemplo, [x0 x1] =&amp;gt; y). por ejemplo [0 0] =&amp;gt; 0, [0 1] =&amp;gt; 1 y&amp;hellip;
#Load Sickit learn data from sklearn.neighbors import KNeighborsClassifier #X is feature vectors, and y is correct label(To train model) X = [[0, 0],[0 ,1],[1, 0],[1, 1]] y = [0,1,1,0] #Initialize a Kneighbors Classifier with K parameter set to 2 KNC = KNeighborsClassifier(n_neighbors= 2) #Fit the model(the KNC learn y Given X) KNC.</description>
    </item>
    
    <item>
      <title>MVS</title>
      <link>https://www.wikiod.com/es/machine-learning/mvs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/mvs/</guid>
      <description>Diferencia entre regresión logística y SVM # Límite de decisión cuando clasificamos usando regresión logística- Límite de decisión cuando clasificamos usando SVM-
Como se puede observar, SVM trata de mantener una &amp;lsquo;brecha&amp;rsquo; a ambos lados del límite de decisión. Esto resulta útil cuando encontramos nuevos datos.
Con nuevos datos-
La regresión logística tiene un rendimiento pobre (el nuevo círculo rojo se clasifica como azul) -
Mientras que SVM puede clasificarlo correctamente (el nuevo círculo rojo se clasifica correctamente en el lado rojo)-</description>
    </item>
    
    <item>
      <title>Aprendizaje automático y su clasificación.</title>
      <link>https://www.wikiod.com/es/machine-learning/aprendizaje-automatico-y-su-clasificacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/machine-learning/aprendizaje-automatico-y-su-clasificacion/</guid>
      <description>¿Qué es el aprendizaje automático? # Se ofrecen dos definiciones de Machine Learning. Arthur Samuel lo describió como:
el campo de estudio que da a las computadoras la capacidad de aprender sin siendo explícitamente programado.
Esta es una definición más antigua e informal.
Tom Mitchell proporciona una definición más moderna:
Se dice que un programa de computadora aprende de la experiencia E con respecto a alguna clase de tareas T y medida de desempeño P, si su desempeño en las tareas en T, medidas por P, mejoran con la experiencia E.</description>
    </item>
    
  </channel>
</rss>
