<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de WinForms on </title>
    <link>https://www.wikiod.com/es/docs/winforms/</link>
    <description>Recent content in Tutorial de WinForms on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/winforms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con WinForms</title>
      <link>https://www.wikiod.com/es/winforms/primeros-pasos-con-winforms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/winforms/primeros-pasos-con-winforms/</guid>
      <description>Creación de una aplicación WinForms simple con Visual Studio # Este ejemplo le mostrará cómo crear un proyecto de aplicación de Windows Forms en Visual Studio.
Crear proyecto de formularios de Windows # Inicie Visual Studio.
En el menú Archivo, apunte a Nuevo y luego seleccione Proyecto. Aparece el cuadro de diálogo Nuevo proyecto.
En el panel Plantillas instaladas, seleccione &amp;ldquo;Visual C#&amp;rdquo; o &amp;ldquo;Visual Basic&amp;rdquo;.
Encima del panel central, puede seleccionar el marco de destino de la lista desplegable.</description>
    </item>
    
    <item>
      <title>Ayuda Integración</title>
      <link>https://www.wikiod.com/es/winforms/ayuda-integracion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/winforms/ayuda-integracion/</guid>
      <description>Puede proporcionar ayuda para formularios y controles en aplicaciones de Windows Forms de diferentes maneras. Puede mostrar una ayuda emergente, abrir un archivo CHM o una URL. Puede mostrar ayuda sensible al contexto para formularios, controles y cuadros de diálogo.
Componente de proveedor de ayuda # Puede configurar un componente HelpProvider para proporcionar ayuda sensible al contexto para el componente. De esta forma, cuando el usuario presiona la tecla F1 o el botón Ayuda del formulario, automáticamente puede:</description>
    </item>
    
    <item>
      <title>Caja de texto</title>
      <link>https://www.wikiod.com/es/winforms/caja-de-texto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/winforms/caja-de-texto/</guid>
      <description>Finalización automática de una colección de cadenas # var source = new AutoCompleteStringCollection(); // Add your collection of strings. source.AddRange(new[] { &amp;quot;Guybrush Threepwood&amp;quot;, &amp;quot;LeChuck&amp;quot; }); var textBox = new TextBox { AutoCompleteCustomSource = source, AutoCompleteMode = AutoCompleteMode.SuggestAppend, AutoCompleteSource = AutoCompleteSource.CustomSource }; form.Controls.Add(textBox); Esto autocompletará cuando el usuario intente escribir G o L.
AutoCompleteMode.SuggestAppend mostrará una lista de valores sugeridos y escribirá automáticamente la primera coincidencia, Append only y Suggest only están disponibles también.</description>
    </item>
    
    <item>
      <title>El enlace de datos</title>
      <link>https://www.wikiod.com/es/winforms/el-enlace-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/winforms/el-enlace-de-datos/</guid>
      <description>Parámetros # Argumento Descripción nombrepropiedad El nombre de la propiedad de control para enlazar. fuente de datos Objeto que representa el origen de datos. miembro de datos La propiedad o lista a la que enlazar. formato Habilitado Determina si se deben formatear los datos mostrados. modo de actualización El origen de datos se actualiza cuando se valida la propiedad de control (predeterminado) o inmediatamente cuando la propiedad ha cambiado valor nulo Cuando el origen de datos tiene este valor, la propiedad enlazada se establece en DBNull.</description>
    </item>
    
    <item>
      <title>mostrando un formulario</title>
      <link>https://www.wikiod.com/es/winforms/mostrando-un-formulario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/winforms/mostrando-un-formulario/</guid>
      <description>Este tema explica cómo funciona el motor de WinForms para mostrar formularios y cómo controla su duración.
Cerrar un formulario modal # Cuando se muestra un formulario utilizando el método ShowDialog, es necesario configurar la propiedad DialogResult del formulario para cerrar el formulario. Esta propiedad se puede establecer mediante la enumeración que también se llama DialogResult.
Para cerrar un formulario, solo necesita establecer la propiedad DialogResult del formulario (en cualquier valor de DialogResult.</description>
    </item>
    
    <item>
      <title>Controles básicos</title>
      <link>https://www.wikiod.com/es/winforms/controles-basicos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/winforms/controles-basicos/</guid>
      <description>Botón # Los botones son uno de los controles más simples y se utilizan principalmente para ejecutar algún código cuando el usuario lo desea.
Aquí tenemos un caso realmente simple, mostrar un cuadro de mensaje cuando se hace clic en un botón. Agregamos un botón a un formulario, lo llamamos cmdShowMessage como se usa en el código para identificar el objeto y establecemos el texto de los botones en Mostrar mensaje.</description>
    </item>
    
    <item>
      <title>Herencia de controles</title>
      <link>https://www.wikiod.com/es/winforms/herencia-de-controles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/winforms/herencia-de-controles/</guid>
      <description>Los controles se derivan exactamente de la misma manera que otras clases. Lo único que debe tener cuidado es anular eventos: por lo general, es recomendable asegurarse de llamar al controlador de eventos base después del suyo. Mi propia regla general: si tiene dudas, llame al evento base.
Configuración de toda la aplicación # Una lectura rápida de la mayoría de los sitios de desarrolladores revelará que WinForms se considera inferior a WPF.</description>
    </item>
    
  </channel>
</rss>
