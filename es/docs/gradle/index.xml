<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial gradle on </title>
    <link>https://www.wikiod.com/es/docs/gradle/</link>
    <description>Recent content in tutorial gradle on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/gradle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con gradle</title>
      <link>https://www.wikiod.com/es/gradle/comenzando-con-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/comenzando-con-gradle/</guid>
      <description>Instalación de Gradle # Requisitos: Java JDK o JRE instalado (versión 7 o superior para la versión Gradle 3.x)
Pasos de instalación:
Descargue la distribución de Gradle desde el sitio web oficial Descomprima el ZIP Agregue la variable de entorno GRADLE_HOME. Esta variable debe apuntar a los archivos descomprimidos del paso anterior. Agregue GRADLE_HOME/bin a su variable de entorno PATH, para que pueda ejecutar Gradle desde la interfaz de línea de comandos (CLI) Pruebe su instalación de Gradle escribiendo gradle -v en la CLI.</description>
    </item>
    
    <item>
      <title>Dependencias de tareas</title>
      <link>https://www.wikiod.com/es/gradle/dependencias-de-tareas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/dependencias-de-tareas/</guid>
      <description>hacerúltimo
Tenga en cuenta que en una definición de tareas de forma más idiomática de Gradle 3.x: usar la notación explícita doLast{closure} en lugar del operador &amp;ldquo;leftShift&amp;rdquo;(&amp;laquo;) es preferible. (leftShift ha quedado en desuso en un gradle 3.2 está programado para ser eliminado en gradle 5.0.)
task oldStyle &amp;lt;&amp;lt; { println &#39;Deprecated style task&#39; } es equivalente a:
task newStyle { doLast { println &#39;Deprecated style task&#39; } } Agregar dependencias usando nombres de tareas # Podemos cambiar el orden de ejecución de las tareas con el método dependsOn.</description>
    </item>
    
    <item>
      <title>dependencias</title>
      <link>https://www.wikiod.com/es/gradle/dependencias/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/dependencias/</guid>
      <description>Agregue una dependencia de archivo JAR local # JAR individual # A veces, tiene un archivo JAR local que necesita agregar como una dependencia a su compilación de Gradle. Así es como puedes hacer esto:
dependencies { compile files(&#39;path/local_dependency.jar&#39;) } Donde ruta es una ruta de directorio en su sistema de archivos y local_dependency.jar es el nombre de su archivo JAR local. La ruta puede ser relativa al archivo de compilación.</description>
    </item>
    
    <item>
      <title>Complementos de Gradle</title>
      <link>https://www.wikiod.com/es/gradle/complementos-de-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/complementos-de-gradle/</guid>
      <description>Cómo escribir un complemento independiente # Para crear un complemento de Gradle independiente personalizado usando Java (también puede usar Groovy), debe crear una estructura como esta:
plugin |-- build.gradle |-- settings.gradle |-- src |-- main | |-- java | |-- resources | |-- META-INF | |-- gradle-plugins |-- test Configurar la configuración de gradle # En el archivo build.gradle defines tu proyecto.
apply plugin: &#39;java&#39; apply plugin: &#39;maven&#39; dependencies { compile gradleApi() } El complemento java se usará para escribir código java.</description>
    </item>
    
    <item>
      <title>Envoltura Gradle</title>
      <link>https://www.wikiod.com/es/gradle/envoltura-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/envoltura-gradle/</guid>
      <description>Introducción a Gradle Wrapper # Gradle tiene la capacidad de agregar un contenedor a los proyectos. Este contenedor alivia la necesidad de que todos los usuarios o sistemas de integración continua tengan instalado Gradle. También evita problemas de versión en los que existe alguna incompatibilidad entre la versión que utiliza el proyecto y la que han instalado los usuarios. Lo hace instalando una versión de gradle localmente en el proyecto.</description>
    </item>
    
    <item>
      <title>Rendimiento Gradle</title>
      <link>https://www.wikiod.com/es/gradle/rendimiento-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/rendimiento-gradle/</guid>
      <description>Perfilando una compilación # Antes de comenzar a ajustar el rendimiento de su compilación de Gradle, debe establecer una línea de base y determinar qué partes de la compilación están tomando la mayor parte del tiempo. Para hacer esto, puede perfilar su compilación agregando el argumento --profile a su comando Gradle:
gradle --profile ./gradlew --profile Una vez completada la compilación, verá un informe de perfil HTML para la compilación en .</description>
    </item>
    
    <item>
      <title>Scripts de inicio de Gradle</title>
      <link>https://www.wikiod.com/es/gradle/scripts-de-inicio-de-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/scripts-de-inicio-de-gradle/</guid>
      <description>Agregar repositorio predeterminado para todos los proyectos # Agregue un init.gradle a su carpeta de gradle de usuario. El init.gradle se reconoce en cada proyecto.
Unix: ~/.gradle/init.gradle Estas también son ubicaciones alternativas donde se puede colocar el script de inicio y cargado automáticamente:-
Cualquier archivo *.gradle en USER_HOME/.gradle/init.d Cualquier archivo *.gradle en el directorio init.d de la instalación de Gradle init.gradle con mavenLocal como repositorio en todos los proyectos.
allprojects { repositories { mavenLocal() } } Con eso, tiene su caché maven local disponible en todos los repositorios.</description>
    </item>
    
    <item>
      <title>Personalización de tareas de IntelliJ IDEA</title>
      <link>https://www.wikiod.com/es/gradle/personalizacion-de-tareas-de-intellij-idea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/personalizacion-de-tareas-de-intellij-idea/</guid>
      <description>Sintaxis # groovy.util.Node = node.find { childNode -&amp;gt; return true || falso } node.append(nodeYouWantAsAChild) groovy.util.Node parsedNode = (nuevo XmlParser()).parseText(someRawXMLString) &amp;rsquo;&amp;rsquo;&amp;rsquo; cadena de varias líneas (no interpolada) &amp;rsquo;&#39;&#39; Se puede acceder a los tres archivos básicos de un proyecto de IntelliJ (los archivos ipr, iws e iml) como en gradle en la tarea idea a través de
project.ipr module.iml workspace.iws el uso de .withXml le permite acceder al xml. El uso de .</description>
    </item>
    
    <item>
      <title>Inicializando Gradle</title>
      <link>https://www.wikiod.com/es/gradle/inicializando-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/inicializando-gradle/</guid>
      <description>Terminología # Tarea: un trabajo atómico que realiza una compilación. Las tareas tienen &amp;ldquo;entradas&amp;rdquo;, &amp;ldquo;salidas&amp;rdquo; y dependencias de tareas. dependencies {} - Declara las dependencias binarias o File necesarias para ejecutar tareas. Por ejemplo, org.slf4j:slf4j-api:1.7.21 es una abreviatura coordenadas de una dependencia de Maven. repositorios {}: cómo Gradle encuentra archivos para dependencias externas. Realmente, solo una colección de archivos organizados por grupo, nombre y versión. Por ejemplo: jcenter() es un método práctico para maven { url &#39;http://jcenter.</description>
    </item>
    
    <item>
      <title>ordenar tareas</title>
      <link>https://www.wikiod.com/es/gradle/ordenar-tareas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/gradle/ordenar-tareas/</guid>
      <description>Tenga en cuenta que mustRunAfter y shouldRunAfter están marcados como &amp;ldquo;incubating&amp;rdquo; (a partir de Gradle 3.0), lo que significa que estas son características experimentales y su comportamiento se puede cambiar en versiones futuras.
Hay dos reglas de pedido disponibles:
debe correr después deberíaEjecutarDespués Cuando utiliza la regla de orden mustRunAfter, especifica que la tarea B siempre debe ejecutarse después de la tarea A, siempre que se ejecuten tanto la tarea A como la tarea B.</description>
    </item>
    
  </channel>
</rss>
