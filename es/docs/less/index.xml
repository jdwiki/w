<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Menos Tutoría on </title>
    <link>https://www.wikiod.com/es/docs/less/</link>
    <description>Recent content in Menos Tutoría on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/less/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Empezar con menos</title>
      <link>https://www.wikiod.com/es/less/empezar-con-menos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/less/empezar-con-menos/</guid>
      <description>Instalación o configuración # Less ha sido uno de los preprocesadores de CSS más populares y también se ha implementado ampliamente en numerosos marcos front-end como Bootstrap, Foundation, etc. Less Compiler es un compilador basado en JavaScript, que se puede obtener de una red de entrega de contenido. :
&amp;lt;script src=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/less.js/2.5.1/less.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; Debe agregar su documento Less antes de que se cargue el compilador de JavaScript, usando la etiqueta &amp;lt;link /&amp;gt;. La hoja de estilo Less junto con el compilador se ve así:</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://www.wikiod.com/es/less/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/less/variables/</guid>
      <description>Introducción # En Less, a diferencia de Sass o Shell, las variables se declaran con nombres que comienzan con un símbolo @. Por ejemplo:
@sky-blue: #87ceeb; body { background-color: @sky-blue; } El ejemplo anterior te da:
body { background-color: #87ceeb; } Aquí explica cómo declarar una variable y hacer uso de ellas.
Operaciones en color # Considere el siguiente ejemplo:
@sky-blue: #87ceeb; @dark-sky-blue: @sky-blue + #333; body { background-color: @dark-sky-blue; } El ejemplo anterior te da:</description>
    </item>
    
    <item>
      <title>Funciones de operación de color</title>
      <link>https://www.wikiod.com/es/less/funciones-de-operacion-de-color/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/less/funciones-de-operacion-de-color/</guid>
      <description>Sintaxis # contraste(&amp;lt;color-de-referencia&amp;gt;, &amp;lt;salida-para-refcolor-claro&amp;gt;, &amp;lt;salida-para-refcolor-oscuro&amp;gt;, &amp;lt;umbral&amp;gt;) aclarar(&amp;lt;color-referencia&amp;gt;, &amp;lt;cantidad&amp;gt;, &amp;lt;método&amp;gt;) oscurecer(&amp;lt;color-referencia&amp;gt;, &amp;lt;cantidad&amp;gt;, &amp;lt;método&amp;gt;) Parámetros # Parámetro Detalles color de referencia El color basado en el cual se debe realizar la operación de color. salida-para-luz-ref-color El valor de color que debe generarse cuando el color de referencia es un color oscuro. Esto es opcional y el valor predeterminado es blanco. salida-para-oscuro-ref-color El valor de color que debe salir cuando el color de referencia es un color claro.</description>
    </item>
    
    <item>
      <title>mezclas</title>
      <link>https://www.wikiod.com/es/less/mezclas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/less/mezclas/</guid>
      <description>Introducción # Los mixins son similares a funciones de definición y llamada. Digamos, si necesitamos crear un estilo repetitivo, los mixins son útiles. Los mixins pueden o no tomar parámetros. Por ejemplo:
.default-round-borders { border-radius: 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px; } .round-borders (@radius) { border-radius: @radius; -moz-border-radius: @radius; -webkit-border-radius: @radius; } Tenemos dos tipos de declaraciones arriba. Uno toma un parámetro y el otro no. Veamos cómo se usa esto en alguna parte:</description>
    </item>
    
    <item>
      <title>Selectores principales</title>
      <link>https://www.wikiod.com/es/less/selectores-principales/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/less/selectores-principales/</guid>
      <description>En el momento de escribir este artículo (agosto de 2016), el selector principal (&amp;amp;) siempre se refiere a la cadena de selector principal completa hasta el nivel más alto. No se puede usar para seleccionar solo el padre inmediato o la raíz más antepasada sola.
Es decir, en el siguiente código &amp;amp;#type1 se resolvería como #demo-container .content#type1 y no solo .content o solo #demo-container.
#demo-container { padding: 4px; border: 1px solid gray; #heading { padding: 4px; font-size: 20px; } .</description>
    </item>
    
    <item>
      <title>Bucles</title>
      <link>https://www.wikiod.com/es/less/bucles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/less/bucles/</guid>
      <description>Escribiendo un ciclo for-each # Un bucle for-each en Less tiene los mismos componentes clave que un bucle for excepto por las siguientes diferencias:
Una variable que contiene la lista de elementos que deben iterarse. Una función extract() para extraer cada elemento de la variable según el índice del bucle. Una función longitud() para calcular la longitud de la matriz (es decir, el número de elementos en la lista) y usarla en la llamada de combinación principal (para [inicialización]).</description>
    </item>
    
    <item>
      <title>Guardias (para escribir mixins condicionales)</title>
      <link>https://www.wikiod.com/es/less/guardias-para-escribir-mixins-condicionales/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/less/guardias-para-escribir-mixins-condicionales/</guid>
      <description>Sintaxis # Mezclado con Guardias .mixin-name(&amp;lt;argumentos&amp;gt;) cuando &amp;lt;es-negación&amp;gt; (&amp;lt;ref-variable&amp;gt; &amp;lt;operador&amp;gt; &amp;lt;valor&amp;gt;) Guardias CSS &amp;lt;selector&amp;gt; cuando &amp;lt;es-negación&amp;gt; (&amp;lt;ref-variable&amp;gt; &amp;lt;operador&amp;gt; &amp;lt;valor&amp;gt;) Parámetros # Parámetro Detalles argumentos Las variables que se pasan al mixin paramétrico. Los argumentos son opcionales. es-negación Esto indica si la condición de guardia es una condición &amp;ldquo;no&amp;rdquo; o no. Por ejemplo, when not (@type = error) significa que el mixin se usará siempre que el valor de @type no sea error.</description>
    </item>
    
    <item>
      <title>Extender</title>
      <link>https://www.wikiod.com/es/less/extender/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/less/extender/</guid>
      <description>Esto está relacionado con la funcionalidad extend de less, [que se introdujo en v1.4.0](https://github.com/less/less. js/blob/master/CHANGELOG.md).
&amp;ldquo;Extend es una pseudoclase de Less que fusiona el selector en el que se coloca con los que coinciden con lo que hace referencia&amp;rdquo;. [ref]
Sintaxis # selector1:extend([css selector](https://www.wikiod.com/es/css/selectores#Selectores básicos)){ //otros estilos van aquí} selector1{ &amp;amp;:extend([selector css](https://www.wikiod.com/es/css/selectores#Selectores básicos))); //otros estilos van aqui } Parámetros # Parámetro Detalles [selector css](https://www.wikiod.com/es/css/selectores#Selectores básicos) Este es cualquier selector de CSS genérico y puede incluir .</description>
    </item>
    
  </channel>
</rss>
