<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stripe-pagos Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/stripe-payments/</link>
    <description>Recent content in Stripe-pagos Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/stripe-payments/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con los pagos en bandas</title>
      <link>https://www.wikiod.com/es/stripe-payments/primeros-pasos-con-los-pagos-en-bandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/stripe-payments/primeros-pasos-con-los-pagos-en-bandas/</guid>
      <description>Introducción a la API de Stripe # Un flujo de pago típico con Stripe se puede dividir en dos pasos:
Del lado del cliente, en su código frontend (HTML + Javascript), usted recopila la información de pago del cliente utilizando el formulario Pago prediseñado de Stripe o los campos de formulario Elementos. Esto devolverá un token que luego enviará a su servidor.
Del lado del servidor, en su código backend (en PHP, Python, Ruby o cualquier lenguaje de programación del lado del servidor que prefiera), usa el token en una solicitud de creación de cargo para cargar realmente la tarjeta.</description>
    </item>
    
    <item>
      <title>Documentación de PHP-Stripe Connect para Symfony2</title>
      <link>https://www.wikiod.com/es/stripe-payments/documentacion-de-php-stripe-connect-para-symfony2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/stripe-payments/documentacion-de-php-stripe-connect-para-symfony2/</guid>
      <description>Parámetros # Parámetro Detalles cantidad requerido: un número entero positivo en la unidad monetaria más pequeña (por ejemplo, 100 centavos para cargar $ 1.00 o 100 para cargar ¥ 100, una moneda 0-decimal) que representa cuánto cargar la tarjeta. El monto mínimo es de $0.50 USD o su equivalente en la moneda de cargo. moneda requerido - código ISO de 3 letras para moneda. descripción opcional, el valor predeterminado es nulo: una cadena arbitraria que puede adjuntar a un objeto de cargo.</description>
    </item>
    
    <item>
      <title>Introducción a Stripe.Net</title>
      <link>https://www.wikiod.com/es/stripe-payments/introduccion-a-stripenet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/stripe-payments/introduccion-a-stripenet/</guid>
      <description>Sintaxis # var stripeSubscriptionOptions = nuevo StripeSubscriptionCreateOptions(); //crear una variable para contener el objeto de opciones
stripeSubscriptionOptions.Quantity = model.update; //opción de ejemplo de cantidad de asientos para una suscripción
var subscriptionService = new StripeSubscriptionService(); //crear un servicio para hacer la llamada a la API
var stripeSubscription = subscriptionService.Create(user.CustomerIdentifier, planId, stripeSubscriptionOptions);
// service.create( cadena ClienteID, cadena PlanID, Objeto Opciones de suscripción)
//El ID del cliente debe guardarse en su base de datos, puede recuperarlo planID de la banda usando un PlanService y cree el objeto de opciones como arriba Si utiliza NuGet, Stripe.</description>
    </item>
    
    <item>
      <title>Stripe Agregar varias tarjetas al mismo usuario</title>
      <link>https://www.wikiod.com/es/stripe-payments/stripe-agregar-varias-tarjetas-al-mismo-usuario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/stripe-payments/stripe-agregar-varias-tarjetas-al-mismo-usuario/</guid>
      <description>Crear cliente en franja # public function createCustomer($data , $token)//pass form data and token id { $customer=Customer::create(array( &amp;quot;email&amp;quot;=&amp;gt;$data[&#39;email&#39;], &amp;quot;description&amp;quot; =&amp;gt; $data[&#39;name&#39;], &amp;quot;source&amp;quot; =&amp;gt; $token // obtained with Stripe.js )); return $customer[&#39;id&#39;]; } Para obtener más información, siga este [Enlace] 1
Cómo recuperar clientes y agregar tarjetas en Stripe # public function addCard($cust_id, $token) { $retriveResult=Customer::retrieve($cust_id); $tokendata = Token::retrieve($token); $newcard = $tokendata[&#39;card&#39;]; $flag = 1; foreach ($retriveResult[&#39;sources&#39;][&#39;data&#39;] as $card) { if($card[&#39;fingerprint&#39;] === $newcard[&#39;fingerprint&#39;]) { $cardid = $card[&#39;id&#39;]; $flag = 0; break; } } if($flag) { $savecard = $retriveResult-&amp;gt;sources-&amp;gt;create(array(&amp;quot;source&amp;quot; =&amp;gt;$token)); $cardid = $savecard[&#39;id&#39;]; } return $cardid; } </description>
    </item>
    
  </channel>
</rss>
