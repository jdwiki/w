<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial raqueta on </title>
    <link>https://www.wikiod.com/es/docs/racket/</link>
    <description>Recent content in Tutorial raqueta on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/racket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Empezando con la raqueta</title>
      <link>https://www.wikiod.com/es/racket/empezando-con-la-raqueta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/empezando-con-la-raqueta/</guid>
      <description>Raqueta # Racket es un lenguaje de programación de espectro completo. Va más allá de Lisp y Scheme con dialectos que admiten objetos, tipos, pereza y más. Racket permite a los programadores vincular componentes escritos en diferentes dialectos y permite a los programadores crear nuevos dialectos específicos del proyecto. Las bibliotecas de Racket admiten aplicaciones desde servidores web y bases de datos hasta GUI y gráficos.
La documentación oficial, completa y muy bien escrita se puede encontrar en http://docs.</description>
    </item>
    
    <item>
      <title>Cierres</title>
      <link>https://www.wikiod.com/es/racket/cierres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/cierres/</guid>
      <description>De la etiqueta StackOverflow [cierre] (http://stackoverflow.com/tags/closures/info):
Un cierre es una función de primera clase que hace referencia a (cierra) variables del ámbito en el que se definió. Si el cierre aún existe después de que finalice su ámbito de definición, las variables sobre las que cierra seguirán existiendo también.
A veces es útil considerar cierres y objetos como similares.
El venerable maestro Qc Na caminaba con su alumno, Anton. Con la esperanza de incitar al maestro a una discusión, Anton dijo: &amp;ldquo;Maestro, he oído que los objetos son algo muy bueno, ¿es eso cierto?</description>
    </item>
    
    <item>
      <title>Funciones de orden superior</title>
      <link>https://www.wikiod.com/es/racket/funciones-de-orden-superior/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/funciones-de-orden-superior/</guid>
      <description>Mapa # Map aplica una función a cada elemento de una lista:
map: (a -&amp;gt; b) (listof a) -&amp;gt; (listof b) &amp;gt; (map (lambda (x) (* x 2)) (list 1 2 3 4 5) (list 2 4 6 8 10) &amp;gt; (map sqrt (list 1 4 9)) (list 1 2 3) &amp;gt; (map (lambda (x) (if (even? x) &amp;quot;even&amp;quot; &amp;quot;odd&amp;quot;)) (list 1 2 3)) (list &amp;quot;odd&amp;quot; &amp;quot;even&amp;quot; &amp;quot;odd&amp;quot;) Doblar # Doblar a la derecha aplica sucesivamente una función de dos argumentos a cada elemento de una lista de izquierda a derecha comenzando con un valor base:</description>
    </item>
    
    <item>
      <title>Comentarios</title>
      <link>https://www.wikiod.com/es/racket/comentarios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/comentarios/</guid>
      <description>Los tipos de comentarios más comunes son comentarios de línea y expresión S (usando ; y #; respectivamente).
Es común utilizar de 1 a 3 puntos y comas dependiendo del tipo de comentario realizado. Referirse a ???
Comentarios de una sola línea # ; We make single line comments by writing out text after a semicolon Bloquear comentarios # #| We make block comments like this |# Comentarios de expresión S # #;(define (commented-out-function x) (print (string-append &amp;quot;This entire &amp;quot; &amp;quot;s-expression is commented out!</description>
    </item>
    
    <item>
      <title>Funciones</title>
      <link>https://www.wikiod.com/es/racket/funciones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/funciones/</guid>
      <description>Sintaxis # (definir (denominar argumentos&amp;hellip;) cuerpo)
(argumentos de función &amp;hellip;)
Llamadas a funciones simples # Puede llamar a una función en Racket envolviéndola entre paréntesis con los argumentos que le siguen. Esto parece (argumento de función ...).
&amp;gt; (define (f x) x) &amp;gt; (f 1) 1 &amp;gt; (f &amp;quot;salmon&amp;quot;) &amp;quot;salmon&amp;quot; &amp;gt; (define (g x y) (string-append x y)) &amp;gt; (g &amp;quot;large&amp;quot; &amp;quot;salmon&amp;quot;) &amp;quot;largesalmon&amp;quot; &amp;gt; (g &amp;quot;large &amp;quot; &amp;quot;salmon&amp;quot;) &amp;quot;large salmon&amp;quot; Operaciones como + y * también son funciones, y usan la misma sintaxis que llamar a f o g.</description>
    </item>
    
    <item>
      <title>Pasos de instalación (Linux)</title>
      <link>https://www.wikiod.com/es/racket/pasos-de-instalacion-linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/pasos-de-instalacion-linux/</guid>
      <description>Instalación o configuración # Visite https://download.racket-lang.org y elija entre las dos distribuciones disponibles:
Racket es la distribución principal, viene con varios paquetes adicionales como math/number-theory así como DrRacket IDE. Minimal Racket es mucho más pequeño y viene solo con los paquetes necesarios. Pasos de instalación para Linux: # La instalación es muy sencilla. Si estás acostumbrado a este tipo de cosas, solo sigue estos cuatro pasos. Si lo prefiere, se detalla más adelante un recorrido paso a paso más detallado.</description>
    </item>
    
    <item>
      <title>recursividad</title>
      <link>https://www.wikiod.com/es/racket/recursividad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/recursividad/</guid>
      <description>Usando definir # #lang racket (define (sum-of-list l) (if (null? l) 0 (+ (car l) (sum-of-list (cdr l))))) (sum-of-list &#39;(1 2 3 4 5)) ;; =&amp;gt; 15 Usando let-rec # #lang racket (letrec ([sum-of-list (λ (l) (if (null? l) 0 (+ (car l) (sum-of-list (cdr l)))))]) (sum-of-list &#39;(1 2 3 4 5))) ;; =&amp;gt; 15 Es posible escribir funciones mutuamente recursivas con letrec:
#lang racket (letrec ([even? (λ (n) (if (= n 0) #t (odd?</description>
    </item>
    
    <item>
      <title>Escribiendo</title>
      <link>https://www.wikiod.com/es/racket/escribiendo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/escribiendo/</guid>
      <description>Scribble es la herramienta utilizada para crear [la documentación de Racket] (https://docs.racket-lang.org/), ¡y también puede documentar sus propios paquetes con ella! Cuando se publique, su documentación aparecerá en https://docs.racket-lang.org/, junto con la documentación principal de Racket.
Scribble se implementa como lenguaje para la plataforma Racket. Por lo tanto, los documentos de Scribble generalmente comenzarán con #lang scribble/manual
Párrafos y secciones # #lang scribble/manual @section{Introduction} First paragraph. Some text, some text, some text, some text, some text, some text.</description>
    </item>
    
    <item>
      <title>Pasos de instalación (Windows)</title>
      <link>https://www.wikiod.com/es/racket/pasos-de-instalacion-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/pasos-de-instalacion-windows/</guid>
      <description>Instalación o configuración # Visite https://download.racket-lang.org y elija entre las dos distribuciones disponibles:
Racket es la distribución principal, viene con varios paquetes adicionales como math/number-theory así como DrRacket IDE. Minimal Racket es mucho más pequeño y viene solo con los paquetes necesarios. Para ejecutar un programa, abra DrRacket, ingrese el programa que comienza con #lang racket y haga clic en el botón Ejecutar cerca de la esquina superior derecha.
Pasos de instalación para Windows: # La instalación es muy sencilla.</description>
    </item>
    
    <item>
      <title>Pasos de instalación (macOS)</title>
      <link>https://www.wikiod.com/es/racket/pasos-de-instalacion-macos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/racket/pasos-de-instalacion-macos/</guid>
      <description>Instalación o configuración # Visite https://download.racket-lang.org y elija entre las dos distribuciones disponibles:
Racket es la distribución principal, viene con varios paquetes adicionales como math/number-theory así como DrRacket IDE. Minimal Racket es mucho más pequeño y viene solo con los paquetes necesarios. Pasos de instalación para macOS: # La instalación es muy sencilla. Si está acostumbrado a este tipo de cosas, simplemente vaya a https://download.racket-lang.org, luego descargue e instale el archivo .</description>
    </item>
    
  </channel>
</rss>
