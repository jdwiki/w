<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de Git on </title>
    <link>https://www.wikiod.com/es/docs/git/</link>
    <description>Recent content in Tutorial de Git on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con Git</title>
      <link>https://www.wikiod.com/es/git/comenzando-con-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/comenzando-con-git/</guid>
      <description>Cree su primer repositorio, luego agregue y confirme archivos # En la línea de comando, primero verifique que tenga Git instalado:
En todos los sistemas operativos:
git --version En sistemas operativos tipo UNIX:
which git Si no se devuelve nada o no se reconoce el comando, es posible que deba instalar Git en su sistema descargando y ejecutando el instalador. Consulte la página de inicio de Git para obtener instrucciones de instalación excepcionalmente claras y sencillas.</description>
    </item>
    
    <item>
      <title>Ignorar archivos y carpetas</title>
      <link>https://www.wikiod.com/es/git/ignorar-archivos-y-carpetas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/ignorar-archivos-y-carpetas/</guid>
      <description>Este tema ilustra cómo evitar agregar archivos no deseados (o cambios de archivos) en un repositorio de Git. Hay varias formas (.gitignore global o local, .git/exclude, git update-index --assume-unchanged y git update-index --skip-tree), pero tenga en cuenta Git está administrando contenido, lo que significa: ignorar en realidad ignora una carpeta contenido (es decir, archivos). Una carpeta vacía se ignoraría de forma predeterminada, ya que no se puede agregar de todos modos.</description>
    </item>
    
    <item>
      <title>Cosecha de la cereza</title>
      <link>https://www.wikiod.com/es/git/cosecha-de-la-cereza/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/cosecha-de-la-cereza/</guid>
      <description>Una selección selectiva toma el parche que se introdujo en una confirmación e intenta volver a aplicarlo en la rama en la que se encuentra actualmente.
Fuente: Git SCM Book
Sintaxis # git cherry-pick [&amp;ndash;edit] [-n] [-m parent-number] [-s] [-x] [&amp;ndash;ff] [-S[key-id]] commit&amp;hellip; git cherry-pick &amp;ndash;continuar git cherry-pick &amp;ndash;quit git cherry-pick &amp;ndash;abort Parámetros # Parámetros Detalles -e, &amp;ndash;edit Con esta opción, git cherry-pick te permitirá editar el mensaje de confirmación antes de confirmar.</description>
    </item>
    
    <item>
      <title>rebase</title>
      <link>https://www.wikiod.com/es/git/rebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/rebase/</guid>
      <description>Sintaxis # git rebase [-i | --interactive] [opciones] [--exec &amp;lt;cmd&amp;gt;] [--onto &amp;lt;nueva base&amp;gt;] [&amp;lt;upstream&amp;gt;] [&amp;lt;branch&amp;gt;] git rebase [-i | --interactive] [opciones] [--exec &amp;lt;cmd&amp;gt;] [--onto &amp;lt;nueva base&amp;gt;] --root [&amp;lt;rama&amp;gt;] git rebase --continue | --skip | --abort | --edit-todo Parámetros # Parámetro Detalles &amp;ndash;continuar Reinicie el proceso de reorganización después de haber resuelto un conflicto de combinación. &amp;ndash;abortar Cancele la operación de rebase y restablezca HEAD a la rama original. Si se proporcionó la rama cuando se inició la operación de reorganización, HEAD se restablecerá a la rama.</description>
    </item>
    
    <item>
      <title>Derivación</title>
      <link>https://www.wikiod.com/es/git/derivacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/derivacion/</guid>
      <description>Sintaxis # rama git [--set-upstream | --pista | --no-track] [-l] [-f] &amp;lt;nombre de la sucursal&amp;gt; [&amp;lt;punto de inicio&amp;gt;] git branch (--set-upstream-to=&amp;lt;upstream&amp;gt; | -u &amp;lt;upstream&amp;gt;) [&amp;lt;branchname&amp;gt;] git branch --unset-upstream [&amp;lt;nombre de la sucursal&amp;gt;] rama git (-m | -M) [&amp;lt;rama antigua&amp;gt;] &amp;lt;rama nueva&amp;gt; git rama (-d | -D) [-r] &amp;lt;nombre de la rama&amp;gt;…​ git branch --edit-description [&amp;lt;nombre de la rama&amp;gt;] git branch [--color[=&amp;lt;cuando&amp;gt;] | --sin-color] [-r | -a] [--lista] [-v [--abbrev=&amp;lt;longitud&amp;gt; | --no-abbrev]] [--column[=&amp;lt;opciones&amp;gt;] | --no-column] [(--merged | --no-merged | --contains) [&amp;lt;commit&amp;gt;]] [--sort=&amp;lt;key&amp;gt;] [--points-at &amp;lt;object&amp;gt;] [&amp;lt;pattern &amp;gt;…​] Parámetros # Parámetro Detalles -d, &amp;ndash;eliminar Eliminar una sucursal.</description>
    </item>
    
    <item>
      <title>esconder</title>
      <link>https://www.wikiod.com/es/git/esconder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/esconder/</guid>
      <description>Sintaxis # lista de alijo de git [&amp;lt;opciones&amp;gt;] mostrar alijo de git [&amp;lt;alijo&amp;gt;] caída de alijo de git [-q|--quiet] [&amp;lt;alijo&amp;gt;] git stash ( pop | apply ) [--index] [-q|--quiet] [&amp;lt;stash&amp;gt;] git stash branch &amp;lt;branchname&amp;gt; [&amp;lt;stash&amp;gt;] git stash [guardar [-p|--patch] [-k|--[no-]keep-index] [-q|--quiet] [-u|--include-untracked] [-a| --all] [&amp;lt;mensaje&amp;gt;]] git alijo claro git stash create [&amp;lt;mensaje&amp;gt;] git stash store [-m|--message &amp;lt;mensaje&amp;gt;] [-q|--quiet] &amp;lt;commit&amp;gt; Parámetros # Parámetro Detalles espectáculo Muestra los cambios registrados en el alijo como una diferencia entre el estado alterno y su padre original.</description>
    </item>
    
    <item>
      <title>Diferencia de Git</title>
      <link>https://www.wikiod.com/es/git/diferencia-de-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/diferencia-de-git/</guid>
      <description>Sintaxis # git diff [opciones] [&amp;lt;commit&amp;gt;] [--] [&amp;lt;ruta&amp;gt;…​] git diff [opciones] --cached [&amp;lt;commit&amp;gt;] [--] [&amp;lt;ruta&amp;gt;…​] git diff [opciones] &amp;lt;commit&amp;gt; &amp;lt;commit&amp;gt; [--] [&amp;lt;ruta&amp;gt;…​] git diff [opciones] &amp;lt;blob&amp;gt; &amp;lt;blob&amp;gt; git diff [opciones] [--sin índice] [--] &amp;lt;ruta&amp;gt; &amp;lt;ruta&amp;gt; Parámetros # Parámetro Detalles -p, -u, &amp;ndash;parche Generar parche -s, &amp;ndash;sin parche Suprime la salida diferencial. Útil para comandos como git show que muestran el parche por defecto, o para cancelar el efecto de --patch &amp;ndash;crudo Generar la diferencia en formato raw &amp;ndash;diff-algorithm= Elija un algoritmo diferencial.</description>
    </item>
    
    <item>
      <title>cometer</title>
      <link>https://www.wikiod.com/es/git/cometer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/cometer/</guid>
      <description>Los compromisos con Git brindan responsabilidad al atribuir a los autores los cambios en el código. Git ofrece múltiples características para la especificidad y seguridad de las confirmaciones. Este tema explica y demuestra las prácticas y los procedimientos adecuados para confirmar con Git.
Sintaxis # git commit [banderas] Parámetros # Parámetro Detalles &amp;ndash;mensaje, -m Mensaje para incluir en la confirmación. Especificar este parámetro omite el comportamiento normal de Git de abrir un editor.</description>
    </item>
    
    <item>
      <title>aplastamiento</title>
      <link>https://www.wikiod.com/es/git/aplastamiento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/aplastamiento/</guid>
      <description>¿Qué es aplastar? # Squashing es el proceso de tomar varias confirmaciones y combinarlas en una única confirmación que encapsula todos los cambios de las confirmaciones iniciales.
Aplastamiento y sucursales remotas # Preste especial atención cuando aplaste confirmaciones en una rama que está rastreando una rama remota; si aplasta una confirmación que ya se envió a una rama remota, las dos ramas se separarán y tendrá que usar git push -f para forzar esos cambios en la rama remota.</description>
    </item>
    
    <item>
      <title>Puesta en escena</title>
      <link>https://www.wikiod.com/es/git/puesta-en-escena/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/git/puesta-en-escena/</guid>
      <description>Vale la pena señalar que la puesta en escena tiene poco que ver con los &amp;lsquo;archivos&amp;rsquo; en sí mismos y todo que ver con los cambios dentro de cada archivo dado. Preparamos archivos que contienen cambios y git realiza un seguimiento de los cambios como confirmaciones (incluso cuando los cambios en una confirmación se realizan en varios archivos).
La distinción entre archivos y confirmaciones puede parecer menor, pero comprender esta diferencia es fundamental para comprender funciones esenciales como la selección selectiva y la diferenciación.</description>
    </item>
    
  </channel>
</rss>
