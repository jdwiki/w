<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-data-jpa Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/spring-data-jpa/</link>
    <description>Recent content in spring-data-jpa Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/spring-data-jpa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con spring-data-jpa</title>
      <link>https://www.wikiod.com/es/spring-data-jpa/primeros-pasos-con-spring-data-jpa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/spring-data-jpa/primeros-pasos-con-spring-data-jpa/</guid>
      <description>Instalación o configuración # Para empezar a usar Spring data JPA, debes incluir la dependencia en tu proyecto con la de Spring core, todo junto. Si está utilizando Maven como sistema de administración de dependencias (reemplace version-number por la versión que desea usar):
&amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.data&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-data-jpa&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;version-number&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; Y si estás usando Gradle:
dependencies { compile &#39;org.springframework.data:spring-data-jpa:version-number&#39; } También puede configurarlo cuando usa Spring Boot, solo incluya la dependencia de inicio y elimine el número de versión:</description>
    </item>
    
    <item>
      <title>Repositorios</title>
      <link>https://www.wikiod.com/es/spring-data-jpa/repositorios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/spring-data-jpa/repositorios/</guid>
      <description>El proyecto Spring Data permite a los programadores de aplicaciones trabajar con almacenes de datos usando una interfaz consistente que hace uso de una abstracción llamada &amp;ldquo;Repositorio&amp;rdquo;. Un &amp;lsquo;repositorio&amp;rsquo; de datos de Spring se basa en el [patrón de repositorio] (http://martinfowler.com/eaaCatalog/repository.html) popularizado por [diseño basado en dominios] (https://en.wikipedia.org/wiki /Domain-driven_design). Spring Data proporciona una interfaz Java central llamada &amp;ldquo;Repositorio&amp;rdquo; que los subproyectos pueden ampliar para proporcionar funciones específicas para los almacenes de datos.</description>
    </item>
    
  </channel>
</rss>
