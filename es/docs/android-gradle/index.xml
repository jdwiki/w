<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial gradle android on </title>
    <link>https://www.wikiod.com/es/docs/android-gradle/</link>
    <description>Recent content in tutorial gradle android on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/android-gradle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con Android Gradle</title>
      <link>https://www.wikiod.com/es/android-gradle/primeros-pasos-con-android-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/primeros-pasos-con-android-gradle/</guid>
      <description>Complemento de Android para Gradle # Como se describe en la sección de comentarios, el sistema de compilación de Android usa el complemento de Android para Gradle para admitir la creación de aplicaciones de Android con Gradle.
Puede especificar el complemento de Android para la versión de Gradle en el archivo build.gradle de nivel superior. La versión del complemento se aplica a todos los módulos integrados en ese proyecto de Android Studio.</description>
    </item>
    
    <item>
      <title>Configurar sabores de productos</title>
      <link>https://www.wikiod.com/es/android-gradle/configurar-sabores-de-productos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/configurar-sabores-de-productos/</guid>
      <description>Los sabores del producto admiten las mismas propiedades que defaultConfig, esto se debe a que defaultConfig en realidad pertenece a la clase ProductFlavor. Esto significa que puede proporcionar la configuración base para todos los tipos en el bloque defaultConfig {}, y cada tipo puede anular cualquiera de estos valores predeterminados, como applicationId.
Constantes de sabor y recursos en build.gradle # Puede usar gradle para tener constantes BuildConfig y valores res según el tipo.</description>
    </item>
    
    <item>
      <title>Configura tu compilación con Gradle</title>
      <link>https://www.wikiod.com/es/android-gradle/configura-tu-compilacion-con-gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/configura-tu-compilacion-con-gradle/</guid>
      <description>El sistema de compilación de Android compila los recursos de la aplicación y el código fuente, y los empaqueta en APK que puede probar, implementar, firmar y distribuir. Android Studio usa Gradle, un conjunto de herramientas de compilación avanzado, para automatizar y administrar el proceso de compilación, al tiempo que le permite definir configuraciones de compilación personalizadas y flexibles.
Documentación Oficial # https://developer.android.com/studio/build/index.html
¿Por qué hay dos archivos build.gradle en un proyecto de Android Studio?</description>
    </item>
    
    <item>
      <title>Configurar ajustes de firma</title>
      <link>https://www.wikiod.com/es/android-gradle/configurar-ajustes-de-firma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/configurar-ajustes-de-firma/</guid>
      <description>Definir la configuración de firma en un archivo externo # Puede definir la configuración de firma en un archivo externo como signing.properties en el directorio raíz de su proyecto.
Por ejemplo, puede definir estas teclas (puede usar sus nombres favoritos):
STORE_FILE=myStoreFileLocation STORE_PASSWORD=myStorePassword KEY_ALIAS=myKeyAlias KEY_PASSWORD=mykeyPassword Luego, en su archivo build.gradle:
android { signingConfigs { release } buildTypes { release { signingConfig signingConfigs.release } } } Luego, puede introducir algunas comprobaciones para evitar problemas de Gradle en el proceso de compilación.</description>
    </item>
    
    <item>
      <title>Reducir código y recursos</title>
      <link>https://www.wikiod.com/es/android-gradle/reducir-codigo-y-recursos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/reducir-codigo-y-recursos/</guid>
      <description>Para hacer que su archivo APK sea lo más pequeño posible, debe habilitar la reducción para eliminar el código y los recursos no utilizados en su compilación de lanzamiento.
Reducir el código con ProGuard # Para habilitar la reducción de código con ProGuard, agregue minifyEnabled true al tipo de compilación apropiado en su archivo build.gradle.
android { buildTypes { release { minifyEnabled true proguardFiles getDefaultProguardFile(‘proguard-android.txt&#39;), &#39;proguard-rules.pro&#39; } } } dónde:</description>
    </item>
    
    <item>
      <title>Declarar dependencias</title>
      <link>https://www.wikiod.com/es/android-gradle/declarar-dependencias/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/declarar-dependencias/</guid>
      <description>Declarar dependencias para sabores # Se pueden agregar dependencias para tipos de productos específicos de manera similar a construir configuraciones.
android { ... productFlavors { flavor1 { //... } flavor2 { //... } } } dependencies { flavor1Compile &#39;com.android.support:appcompat-v7:24.1.1&#39; flavor1Compile &#39;com.google.firebase:firebase-crash:9.4.0&#39; flavor2Compile &#39;com.android.support:appcompat-v7:24.1.1&#39; } 1: https://www.wikiod.com/es/android-gradle/declarar-dependencias#Declarar dependencias para configuraciones
Cómo agregar dependencias # El siguiente ejemplo describe cómo declarar tres tipos diferentes de dependencias directas en el archivo build.gradle de la aplicación/módulo:</description>
    </item>
    
    <item>
      <title>Configurar tipos de compilación</title>
      <link>https://www.wikiod.com/es/android-gradle/configurar-tipos-de-compilacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/configurar-tipos-de-compilacion/</guid>
      <description>Parámetros # Parámetro Detalle applicationIdSuffix Sufijo de ID de aplicación aplicado a esta configuración base consumerProguardFiles Archivos de reglas de ProGuard que se incluirán en el AAR publicado depurable Si este tipo de compilación debe generar un apk depurable embedMicroApp Si una aplicación Android Wear vinculada debe integrarse en una variante usando este tipo de compilación jniDebuggable Si este tipo de compilación está configurado para generar un APK con código nativo depurable manifestPlaceholders Los marcadores de posición del manifiesto minifyEnabled Si Minify está habilitado para este tipo de compilación multiDexEnabled Si Multi-Dex está habilitado para esta variante nombre Nombre de este tipo de compilación proguardFiles Devuelve los archivos de configuración de ProGuard que se utilizarán pseudoLocalesEnabled Si generar pseudolocale en el APK renderscriptDebuggable Si el tipo de compilación está configurado para generar un apk con código RenderScript depurable renderscriptOptimLevel Nivel de optimización a utilizar por el compilador renderscript shrinkResources Si está habilitada la reducción de recursos no utilizados.</description>
    </item>
    
    <item>
      <title>Cómo incluir archivos aar en un proyecto en Android</title>
      <link>https://www.wikiod.com/es/android-gradle/como-incluir-archivos-aar-en-un-proyecto-en-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/como-incluir-archivos-aar-en-un-proyecto-en-android/</guid>
      <description>¿Cómo agregar la dependencia .aar en un módulo? # En un módulo (biblioteca o aplicación) donde necesite el archivo aar, debe agregar en su build.gradle el repositorio:
repositories { flatDir { dirs &#39;libs&#39; } } y agrega la dependencia:
dependencies { compile(name:&#39;nameOfYourAARFileWithoutExtension&#39;, ext:&#39;aar&#39;) } Preste atención a la ruta relativa de la carpeta libs que está utilizando en el módulo.
El archivo aar no incluye las dependencias transitivas # El archivo aar no contiene las dependencias transitivas y no tiene un archivo pom que describa las dependencias utilizadas por la biblioteca.</description>
    </item>
    
    <item>
      <title>Gradle - Información de Etiquetas</title>
      <link>https://www.wikiod.com/es/android-gradle/gradle---informacion-de-etiquetas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/android-gradle/gradle---informacion-de-etiquetas/</guid>
      <description>Gradle - Información de Etiquetas # Gradle: Se usa para crear compilaciones para cualquier software, es un lenguaje específico de dominio que se usa para configurar y cumplir con todos los complementos, bibliotecas descargadas de los repositorios.
Usar complementos:
Apply plugin: ‘com.android.application’ El complemento es una propiedad en forma de valor clave. En la declaración anterior, el complemento denota la clave y la cadena del lado derecho en capas individuales se convierte en su valor.</description>
    </item>
    
  </channel>
</rss>
