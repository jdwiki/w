<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>asp.net-core-mvc Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/asp-dotnet-core-mvc/</link>
    <description>Recent content in asp.net-core-mvc Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/asp-dotnet-core-mvc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con asp.net-core-mvc</title>
      <link>https://www.wikiod.com/es/asp-dotnet-core-mvc/primeros-pasos-con-aspnet-core-mvc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet-core-mvc/primeros-pasos-con-aspnet-core-mvc/</guid>
      <description>Agregar software intermedio MVC # Si creó un proyecto vacío o aún no tiene mvc configurado en su aplicación, puede agregar la dependencia:
&amp;quot;Microsoft.AspNetCore.Mvc&amp;quot;: &amp;quot;1.0.1&amp;quot;
A su archivo project.json en &amp;quot;dependencies&amp;quot;.
Y registre el middleware MVC en su clase de inicio:
public void ConfigureServices(IServiceCollection services) { ... services.AddMvc(); } Tenga en cuenta que tenemos services.AddMvc() y services.AddMvcCore(). Si está comenzando con asp.net core, o lo quiere tal como está, debe continuar con services.</description>
    </item>
    
    <item>
      <title>Configure e instale .Net Core MVC con el código de Visual Studio e inicie rápidamente .net core mvc hello world.</title>
      <link>https://www.wikiod.com/es/asp-dotnet-core-mvc/configure-e-instale-net-core-mvc-con-el-codigo-de-visual-studio-e-inicie-rapidamente-net-core-mvc-hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet-core-mvc/configure-e-instale-net-core-mvc-con-el-codigo-de-visual-studio-e-inicie-rapidamente-net-core-mvc-hello-world/</guid>
      <description>Este artículo da ideas sobre la configuración e instalación del núcleo de Asp.Net con el código de Visual Studio. También cree una plantilla MVC básica y depuración.
Pasos involucrados a continuación&amp;hellip;
Paso 1: instalación del código de Visual Studio.
Paso 2: configuración de .Net core y C#.
Paso 3: cree una plantilla MVC básica.
Paso 4: ejecutar y depurar la aplicación.
Este artículo trata sobre la configuración desde cero con el código abierto de Visual Studio y la creación y depuración de aplicaciones básicas de .</description>
    </item>
    
    <item>
      <title>Cambiar la ubicación de la vista predeterminada</title>
      <link>https://www.wikiod.com/es/asp-dotnet-core-mvc/cambiar-la-ubicacion-de-la-vista-predeterminada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet-core-mvc/cambiar-la-ubicacion-de-la-vista-predeterminada/</guid>
      <description>En ASP.NET MVC, las vistas se colocan de forma predeterminada en la carpeta &amp;ldquo;Vistas&amp;rdquo;. A veces desea cambiar estas ubicaciones y almacenar las vistas en otro lugar.
Crear un expansor de ubicación de vista # Para poder cambiar la ubicación de la vista, debe implementar IViewLocationExpander. El método ExpandViewLocations devuelve un IEnumerable&amp;lt;string&amp;gt; que contiene las diferentes ubicaciones donde buscar, con
public class MyViewLocationExpander : IViewLocationExpander { public IEnumerable&amp;lt;string&amp;gt; ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable&amp;lt;string&amp;gt; viewLocations) { yield return &amp;quot;/CustomViewFolder/{1}/{0}.</description>
    </item>
    
  </channel>
</rss>
