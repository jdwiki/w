<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de liferay on </title>
    <link>https://www.wikiod.com/es/docs/liferay/</link>
    <description>Recent content in Tutorial de liferay on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/liferay/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con liferay</title>
      <link>https://www.wikiod.com/es/liferay/primeros-pasos-con-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/primeros-pasos-con-liferay/</guid>
      <description>Una instalación básica para desarrollo y pruebas # Ejecutar la última versión de Liferay CE es sencillo:
Vaya a https://www.liferay.com/downloads. Elija un paquete entre los enumerados. Para principiantes, el paquete Tomcat es una buena opción. Haga clic en &amp;ldquo;Descargar&amp;rdquo;. Descomprima el paquete de descarga cuando lo considere oportuno. El directorio descomprimido será el directorio LIFERAY_HOME. Para iniciar Liferay, simplemente ejecute el script LIFERAY_HOME/tomcat-x.xx.xx/bin/startup.sh; solo en entornos Windows ejecute el script LIFERAY_HOME\tomcat-x.</description>
    </item>
    
    <item>
      <title>Ganchos en Liferay</title>
      <link>https://www.wikiod.com/es/liferay/ganchos-en-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/ganchos-en-liferay/</guid>
      <description>Esto funciona con Liferay Portal hasta la versión 6.2.
Gancho JSP # Los ganchos JSP son un complemento especial de Liferay que permite modificar el portlet central jsp-s, digamos que desea modificar el portlet de inicio de sesión para mostrar &amp;ldquo;¡Bienvenido a mi inicio de sesión personalizado!&amp;rdquo;.
La estructura mínima para un Hook Plugin es la siguiente:
[project-name]-hook/ └── docroot/ ├── WEB-INF/ │ ├── src/ │ ├── lib/ │ ├── liferay-hook.</description>
    </item>
    
    <item>
      <title>Crear un programador de cuarzo en liferay</title>
      <link>https://www.wikiod.com/es/liferay/crear-un-programador-de-cuarzo-en-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/crear-un-programador-de-cuarzo-en-liferay/</guid>
      <description>Un programador sirve para realizar tareas en segundo plano en ciertos intervalos definidos.
Según DTD del portlet de Liferay
&amp;lt;!- El elemento de entrada del programador contiene los datos declarativos de un programador. -&amp;gt;
!ELEMENT entrada-programador (¿descripción-programador?, programador-evento-escucha-clase, disparador)
&amp;lt;!- El valor de la descripción del programador describe un programador. -&amp;gt;
!ELEMENTO descripción del programador (#PCDATA)
&amp;lt;!- El valor de la clase de escucha de eventos del planificador debe ser una clase que implemente com.</description>
    </item>
    
    <item>
      <title>Configurar el administrador de etiquetas de Google (GTM) en liferay</title>
      <link>https://www.wikiod.com/es/liferay/configurar-el-administrador-de-etiquetas-de-google-gtm-en-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/configurar-el-administrador-de-etiquetas-de-google-gtm-en-liferay/</guid>
      <description>Esta documentación no es específica de liferay pero se puede utilizar con referencia a cualquier aplicación web.
Liferay proporciona Google Analytics (referido como GA adelante) de forma predeterminada, después de configurar el ID de Analytics GA-##### en la configuración del sitio. expandirlo aún más, podemos incrustar el script GA directamente en el tema del sitio para activar los eventos requeridos o usar GTM.
Uso de GTM para configurar eventos de GA # GTM simplifica todo el proceso de gestión de etiquetas.</description>
    </item>
    
    <item>
      <title>Implementación de un complemento</title>
      <link>https://www.wikiod.com/es/liferay/implementacion-de-un-complemento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/implementacion-de-un-complemento/</guid>
      <description>Implementación en Glassfish # Entonces, primero crea un archivo .war, digamos un portlet con el nombre &amp;lt;SU PLUGIN&amp;gt;.war. Desea que se ejecute en un dominio glassfish en el portal Liferay.
Pasos para el éxito:
Vaya a Panel de control -&amp;gt; Instalación de complementos en Liferay Presiona Instalar nuevos portlets Presiona Configuración Complete en el directorio de implementación un nuevo lugar para la implementación, digamos &amp;lt;SU DOMINIO&amp;gt;/autodeploy2 Verifique que en la siguiente línea el objetivo sea &amp;lt;SU DOMINIO&amp;gt;/autodeploy (es el directorio de implementación predeterminado de Glassfish) Presiona Guardar Ahora la implementación se realizará copiando y pegando archivos en ese nuevo directorio &amp;lt;SU DOMINIO&amp;gt;/autodeploy2.</description>
    </item>
    
    <item>
      <title>Configuración de SSL</title>
      <link>https://www.wikiod.com/es/liferay/configuracion-de-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/configuracion-de-ssl/</guid>
      <description>Asegúrese de tener un certificado SSL válido proporcionado por un tercero. También puede usar un certificado autofirmado, pero solo para desarrolladores. Letsencrypt proporciona certificados gratuitos que se pueden usar en producción&amp;hellip;.
Use keytool para importar el certificado a la cadena de almacenamiento de claves de java.
Cómo habilitar SSL en Tomcat y Liferay # Asegúrese de que su archivo de configuración de Tomcat, server.xml, tenga esta línea:
&amp;lt;Connector port=&amp;quot;8443&amp;quot; protocol=&amp;quot;org.apache.coyote.http11.Http11Protocol&amp;quot; maxHttpHeaderSize=&amp;quot;8192&amp;quot; SSLEnabled=&amp;quot;true&amp;quot; maxThreads=&amp;quot;150&amp;quot; minSpareThreads=&amp;quot;25&amp;quot; maxSpareThreads=&amp;quot;75&amp;quot; enableLookups=&amp;quot;false&amp;quot; disableUploadTimeout=&amp;quot;true&amp;quot; acceptCount=&amp;quot;100&amp;quot; scheme=&amp;quot;https&amp;quot; secure=&amp;quot;true&amp;quot; clientAuth=&amp;quot;false&amp;quot; useBodyEncodingForURI=&amp;quot;true&amp;quot; sslEnabledProtocols=&amp;quot;TLSv1.</description>
    </item>
    
    <item>
      <title>Depuración del servidor Liferay remoto a través de Eclipse</title>
      <link>https://www.wikiod.com/es/liferay/depuracion-del-servidor-liferay-remoto-a-traves-de-eclipse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/depuracion-del-servidor-liferay-remoto-a-traves-de-eclipse/</guid>
      <description>Depurar el servidor remoto de Liferay a través de Eclipse (sin el complemento Eclipse del conector IDE remoto de Liferay) # Para depurar una instancia de servidor, comience en modo de depuración. Para hacerlo, configure estos parámetros para que se pasen al servidor:
-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n a setenv.bat (Windows) o setenv.sh (Unix)
Estos inicializan el servidor en modo de depuración y escuchan las solicitudes de depuración en el puerto dado. Inicie el servidor y publique la configuración.</description>
    </item>
    
    <item>
      <title>Usando el servicio web Restful en Liferay</title>
      <link>https://www.wikiod.com/es/liferay/usando-el-servicio-web-restful-en-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/usando-el-servicio-web-restful-en-liferay/</guid>
      <description>Consumir el servicio Liferay JSON para solicitudes GET # Liferay expone muchos servicios predeterminados y personalizados disponibles para otros sistemas a través de JSON. Para explorar servicios en una instancia de liferay en particular, use una URL determinada: una instancia local en este caso:
http://localhost:8080/api/jsonws/ Seleccione el servicio requerido, consuma el servicio con la sintaxis y los parámetros dados:
/user/get-user-by-email-address Use companyId y emailAddress para recuperar al usuario con los tipos de datos esperados, así como las posibles excepciones que debe manejar el consumidor.</description>
    </item>
    
    <item>
      <title>Comunicación entre portlets</title>
      <link>https://www.wikiod.com/es/liferay/comunicacion-entre-portlets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/comunicacion-entre-portlets/</guid>
      <description>Este manual contiene las diversas formas en que los portlets pueden coordinarse o comunicarse entre sí y los diversos escenarios para los que se utiliza un enfoque particular.
Referencias:
parámetro de representación pública [Especificaciones JSR 286][2] [Sesión de portlet][3] [2]: https://www.google.co.in/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwiMjJudz4nRAhUE7hoKHVN1C9oQFggcMAA&amp;amp;url=https%3A%2F%2Fwiki.jasig.org% 2Fdownload%2Fattachments%2F25002428%2Fportlet-2-spec.pdf&amp;amp;usg=AFQjCNEDhqnvuPOfFdRgn8KV1fq_RRyjvQ [3]: http://proliferay.com/liferay-portlet-session-attribute/
Uso del parámetro de representación pública # Este enfoque se introdujo en JSR 286.
En JSR 168, los parámetros de representación establecidos en processAction de un portlet solo estaban disponibles en ese portlet.</description>
    </item>
    
    <item>
      <title>Uso de consultas SQL dinámicas y personalizadas en Liferay</title>
      <link>https://www.wikiod.com/es/liferay/uso-de-consultas-sql-dinamicas-y-personalizadas-en-liferay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/liferay/uso-de-consultas-sql-dinamicas-y-personalizadas-en-liferay/</guid>
      <description>Hay escenarios cuando se trata de la capa de servicio en liferay, cuando necesitamos consultar la base de datos con demasiadas cláusulas o tratar con varias tablas. En tales casos, usamos cualquiera de los siguientes:
Consulta dinámica (contenedor en la API de criterios de Hibernate)
Consultas SQL personalizadas
Referencias:
SQL personalizado Consulta dinámica Uso de consultas dinámicas en Liferay # Para la mayoría de los escenarios que involucran entidades de la capa de servicio, podemos arreglárnoslas con las llamadas de servicio predeterminadas, también con la ayuda de los buscadores.</description>
    </item>
    
  </channel>
</rss>
