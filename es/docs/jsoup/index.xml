<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Jsoup on </title>
    <link>https://www.wikiod.com/es/docs/jsoup/</link>
    <description>Recent content in Tutorial Jsoup on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/jsoup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con Jsoup</title>
      <link>https://www.wikiod.com/es/jsoup/comenzando-con-jsoup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsoup/comenzando-con-jsoup/</guid>
      <description>Extrae las URL y los títulos de los enlaces # Jsoup se puede usar para extraer fácilmente todos los enlaces de una página web. En este caso, podemos usar Jsoup para extraer solo los enlaces específicos que queremos, aquí, los que están en un encabezado h3 en una página. También podemos obtener el texto de los enlaces.
Document doc = Jsoup.connect(&amp;quot;http://stackoverflow.com&amp;quot;).userAgent(&amp;quot;Mozilla&amp;quot;).get(); for (Element e: doc.select(&amp;quot;a.question-hyperlink&amp;quot;)) { System.out.println(e.attr(&amp;quot;abs:href&amp;quot;)); System.out.println(e.text()); System.out.println(); } Esto da el siguiente resultado:</description>
    </item>
    
    <item>
      <title>Selectores</title>
      <link>https://www.wikiod.com/es/jsoup/selectores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsoup/selectores/</guid>
      <description>Un selector es una cadena de selectores simples, separados por combinadores. Los selectores no distinguen entre mayúsculas y minúsculas (incluso contra elementos, atributos y valores de atributo).
El selector universal (*) está implícito cuando no se proporciona ningún selector de elementos (es decir, *.header y .header son equivalentes).
Patrón Partidos Ejemplo * cualquier elemento * etiqueta elementos con el nombre de etiqueta dado div ns|E elementos de tipo E en el espacio de nombres ns fb|name encuentra fb:name elementos #id elementos con atributo ID de &amp;ldquo;id&amp;rdquo; div#envoltura, #logotipo .</description>
    </item>
    
    <item>
      <title>Iniciar sesión en sitios web con Jsoup</title>
      <link>https://www.wikiod.com/es/jsoup/iniciar-sesion-en-sitios-web-con-jsoup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsoup/iniciar-sesion-en-sitios-web-con-jsoup/</guid>
      <description>Una solicitud POST de autenticación más completa con Jsoup # La mayoría de los sitios web requieren un proceso mucho más complicado que el que se muestra arriba.
Los pasos comunes para iniciar sesión en un sitio web son:
Obtenga la cookie única del formulario de inicio de sesión inicial. Inspeccione el formulario de inicio de sesión para ver cuál es la URL de destino para la solicitud de autenticación Analice el formulario de inicio de sesión para verificar si hay algún &amp;ldquo;token de seguridad&amp;rdquo; que deba enviarse junto con el nombre de usuario y la contraseña.</description>
    </item>
    
    <item>
      <title>Rastreo web con Jsoup</title>
      <link>https://www.wikiod.com/es/jsoup/rastreo-web-con-jsoup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsoup/rastreo-web-con-jsoup/</guid>
      <description>Extracción de direcciones de correo electrónico y enlaces a otras páginas # Jsoup se puede usar para extraer enlaces y direcciones de correo electrónico de una página web, por lo tanto, &amp;ldquo;bot recolector de direcciones de correo electrónico web&amp;rdquo;. la página.
public class JSoupTest { public static void main(String[] args) throws IOException { Document doc = Jsoup.connect(&amp;quot;http://stackoverflow.com/questions/15893655/&amp;quot;).userAgent(&amp;quot;Mozilla&amp;quot;).get(); Pattern p = Pattern.compile(&amp;quot;[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+&amp;quot;); Matcher matcher = p.matcher(doc.text()); Set&amp;lt;String&amp;gt; emails = new HashSet&amp;lt;String&amp;gt;(); while (matcher.</description>
    </item>
    
    <item>
      <title>Formato de salida HTML</title>
      <link>https://www.wikiod.com/es/jsoup/formato-de-salida-html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsoup/formato-de-salida-html/</guid>
      <description>Parámetros # Parámetro Detalle esquema booleano() Obtener si el modo de esquema está habilitado. El valor predeterminado es falso. Si está habilitado, los métodos de salida HTML considerarán todas las etiquetas como un bloque. Document.OutputSettings esquema (booleano) Habilite o deshabilite el modo de esquema HTML. API Jsoup 1.9.2
Mostrar todos los elementos como bloque # De forma predeterminada, Jsoup mostrará solo elementos a nivel de bloque con un salto de línea al final.</description>
    </item>
    
    <item>
      <title>Análisis de páginas generadas con Javascript</title>
      <link>https://www.wikiod.com/es/jsoup/analisis-de-paginas-generadas-con-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsoup/analisis-de-paginas-generadas-con-javascript/</guid>
      <description>Análisis de una página generada en JavaScript con Jsoup y HtmUnit # pagina.html - código fuente
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;loadData.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body onLoad=&amp;quot;loadData()&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;table id=&amp;quot;data&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;col1&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;col2&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; cargarDatos.js
// append rows and cols to table.data in page.html function loadData() { data = document.getElementById(&amp;quot;data&amp;quot;); for (var row = 0; row &amp;lt; 2; row++) { var tr = document.createElement(&amp;quot;tr&amp;quot;); for (var col = 0; col &amp;lt; 2; col++) { td = document.</description>
    </item>
    
  </channel>
</rss>
