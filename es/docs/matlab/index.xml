<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial del lenguaje MATLAB on </title>
    <link>https://www.wikiod.com/es/docs/matlab/</link>
    <description>Recent content in Tutorial del lenguaje MATLAB on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/matlab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con el lenguaje MATLAB</title>
      <link>https://www.wikiod.com/es/matlab/primeros-pasos-con-el-lenguaje-matlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/primeros-pasos-con-el-lenguaje-matlab/</guid>
      <description>Indexaci칩n de matrices y arreglos # MATLAB permite varios m칠todos para indexar (acceder) elementos de matrices y arreglos:
Indizaci칩n de sub칤ndices - donde especifica la posici칩n de los elementos que desea en cada dimensi칩n de la matriz por separado. Indizaci칩n lineal - donde la matriz se trata como un vector, sin importar sus dimensiones. Eso significa que especifica cada posici칩n en la matriz con un solo n칰mero. Indizaci칩n l칩gica - donde utiliza una matriz l칩gica (y una matriz de valores verdadero y falso) con las mismas dimensiones de la matriz que intenta indexar como una m치scara para especificar qu칠 valor devolver.</description>
    </item>
    
    <item>
      <title>Errores y errores comunes</title>
      <link>https://www.wikiod.com/es/matlab/errores-y-errores-comunes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/errores-y-errores-comunes/</guid>
      <description>Los operadores transpuestos # .&#39; es la forma correcta de transponer un vector o matriz en MATLAB. &#39; es la forma correcta de tomar la transpuesta conjugada compleja (tambi칠n conocida como conjugado hermitiano) de un vector o matriz en MATLAB. Tenga en cuenta que para la transposici칩n .&#39;, hay un punto delante del ap칩strofe. Esto est치 en consonancia con la sintaxis de las otras operaciones con elementos en MATLAB: * multiplica matrices, .</description>
    </item>
    
    <item>
      <title>Vectorizaci칩n</title>
      <link>https://www.wikiod.com/es/matlab/vectorizacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/vectorizacion/</guid>
      <description>Uso de bsxfun # Muy a menudo, la raz칩n por la que el c칩digo se ha escrito en un bucle for es para calcular valores a partir de los &amp;lsquo;cercanos&amp;rsquo;. La funci칩n bsxfun a menudo se puede usar para hacer esto de una manera m치s sucinta.
Por ejemplo, suponga que desea realizar una operaci칩n por columnas en la matriz &amp;ldquo;B&amp;rdquo;, rest치ndole la media de cada columna:
B = round(randn(5)*10); % Generate random data A = zeros(size(B)); % Preallocate array for col = 1:size(B,2); % Loop over columns A(:,col) = B(:,col) - mean(B(:,col)); % Subtract means end Este m칠todo es ineficiente si B es grande, a menudo debido a que MATLAB tiene que mover el contenido de las variables en la memoria.</description>
    </item>
    
    <item>
      <title>Pr치cticas recomendadas de MATLAB</title>
      <link>https://www.wikiod.com/es/matlab/practicas-recomendadas-de-matlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/practicas-recomendadas-de-matlab/</guid>
      <description>Este tema muestra las mejores pr치cticas que la comunidad ha aprendido a lo largo del tiempo.
Aplicar sangr칤a al c칩digo correctamente # La sangr칤a adecuada no solo brinda un aspecto est칠tico, sino que tambi칠n aumenta la legibilidad del c칩digo.
Por ejemplo, considere el siguiente c칩digo:
%no need to understand the code, just give it a look n = 2; bf = false; while n&amp;gt;1 for ii = 1:n for jj = 1:n if ii+jj&amp;gt;30 bf = true; break end end if bf break end end if bf break end n = n + 1; end Como puede ver, debe observar detenidamente para ver qu칠 bucle y las declaraciones if terminan d칩nde.</description>
    </item>
    
    <item>
      <title>Gr치ficos Gr치ficos de l칤neas 2D</title>
      <link>https://www.wikiod.com/es/matlab/graficos-graficos-de-lineas-2d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/graficos-graficos-de-lineas-2d/</guid>
      <description>Sintaxis # trama (Y)
plot(Y,LineSpec)
parcela(X,Y)
plot(X,Y,LineSpec)
parcela(X1,Y1, X2,Y2, &amp;hellip;, Xn,Yn)
plot(X1,Y1,LineSpec1, X2,Y2,LineSpec2, &amp;hellip;, Xn,Yn,LineSpecn)
plot(___, Nombre,Valor)
h = parcela(___)
Par치metros # Par치metro Detalles X valores x Y valores y Especificaci칩n de l칤nea Estilo de l칤nea, s칤mbolo de marcador y color, especificados como una cadena Nombre,Valor Pares opcionales de argumentos de nombre y valor para personalizar las propiedades de l칤nea h manejar a objeto de gr치ficos de l칤nea http://www.mathworks.com/help/matlab/ref/plot.html
M칰ltiples l칤neas en un solo gr치fico # En este ejemplo, vamos a trazar varias l칤neas en un solo eje.</description>
    </item>
    
    <item>
      <title>Uso de puertos serie</title>
      <link>https://www.wikiod.com/es/matlab/uso-de-puertos-serie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/uso-de-puertos-serie/</guid>
      <description>Los puertos serie son una interfaz com칰n para comunicarse con sensores externos o sistemas integrados como Arduinos. Las comunicaciones seriales modernas a menudo se implementan a trav칠s de conexiones USB utilizando adaptadores seriales USB. MATLAB proporciona funciones integradas para comunicaciones en serie, incluidos los protocolos RS-232 y RS-485. Estas funciones se pueden utilizar para puertos serie de hardware o conexiones serie USB &amp;ldquo;virtuales&amp;rdquo;. Los ejemplos aqu칤 ilustran las comunicaciones seriales en MATLAB.</description>
    </item>
    
    <item>
      <title>Caracter칤sticas no documentadas</title>
      <link>https://www.wikiod.com/es/matlab/caracteristicas-no-documentadas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/caracteristicas-no-documentadas/</guid>
      <description>El uso de funciones no documentadas se considera una pr치ctica riesgosa1, ya que estas funciones pueden cambiar sin previo aviso. o simplemente trabaje de manera diferente en diferentes versiones de MATLAB. Por este motivo, se recomienda emplear t칠cnicas de programaci칩n defensiva como encerrar fragmentos de c칩digo no documentados dentro de bloques try/catch con respaldos documentados. Gr치ficos de l칤neas 2D codificados por colores con datos de color en tercera dimensi칩n # En las versiones de MATLAB anteriores a R2014b, con el antiguo motor de gr치ficos HG1, no era obvio c칩mo crear gr치ficos de l칤neas 2D codificados por colores.</description>
    </item>
    
    <item>
      <title>Funciones de documentaci칩n</title>
      <link>https://www.wikiod.com/es/matlab/funciones-de-documentacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/funciones-de-documentacion/</guid>
      <description>El texto de ayuda se puede ubicar antes o despu칠s de la l칤nea funci칩n, siempre que no haya c칩digo entre la l칤nea de funci칩n y el inicio del texto de ayuda. El uso de may칰sculas en el nombre de la funci칩n solo pone el nombre en negrita y no es obligatorio. Si se antepone Ver tambi칠n a una l칤nea, cualquier nombre en la l칤nea que coincida con el nombre de una clase o funci칩n en la ruta de b칰squeda se vincular치 autom치ticamente a la documentaci칩n de esa clase/funci칩n.</description>
    </item>
    
    <item>
      <title>Introducci칩n a la API de MEX</title>
      <link>https://www.wikiod.com/es/matlab/introduccion-a-la-api-de-mex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/introduccion-a-la-api-de-mex/</guid>
      <description>Comprobar el n칰mero de entradas/salidas en un archivo MEX de C++ # En este ejemplo escribiremos un programa b치sico que verifica el n칰mero de entradas y salidas pasadas a una funci칩n MEX.
Como punto de partida, necesitamos crear un archivo C++ que implemente la &amp;ldquo;puerta de enlace MEX&amp;rdquo;. Esta es la funci칩n que se ejecuta cuando se llama al archivo desde MATLAB.
entradas de prueba.cpp # // MathWorks provided header file #include &amp;quot;mex.</description>
    </item>
    
    <item>
      <title>Procesamiento de im치genes</title>
      <link>https://www.wikiod.com/es/matlab/procesamiento-de-imagenes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/matlab/procesamiento-de-imagenes/</guid>
      <description>E/S de imagen b치sica # &amp;gt;&amp;gt; img = imread(&#39;football.jpg&#39;); Utilice imread para leer archivos de imagen en una matriz en MATLAB. Una vez que &amp;lsquo;imlee&amp;rsquo; una imagen, se almacena como una matriz ND en la memoria:
&amp;gt;&amp;gt; size(img) ans = 256 320 3 La imagen &#39;football.jpg&#39; tiene 256 filas y 320 columnas y tiene 3 canales de color: Rojo, Verde y Azul.
Ahora puedes reflejarlo:
&amp;gt;&amp;gt; mirrored = img(:, end游녩1, :); %// like mirroring any ND-array in Matlab Y finalmente, escr칤belo como una imagen usando imwrite:</description>
    </item>
    
  </channel>
</rss>
