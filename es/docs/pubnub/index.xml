<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de PubNub on </title>
    <link>https://www.wikiod.com/es/docs/pubnub/</link>
    <description>Recent content in Tutorial de PubNub on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/pubnub/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con PubNub</title>
      <link>https://www.wikiod.com/es/pubnub/primeros-pasos-con-pubnub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/primeros-pasos-con-pubnub/</guid>
      <description>Publicar en Subscribe Success (conectar) # Este ejemplo muestra cómo suscribirse y, una vez que lo haya hecho, publicar un mensaje en ese canal. También demuestra el conjunto completo de parámetros que se pueden incluir en la función de devolución de llamada subscribe``s message`.
pubnub = PUBNUB({ publish_key : &#39;your_pub_key&#39;, subscribe_key : &#39;your_sub_key&#39; }); pubnub.subscribe({ channel : &amp;quot;channel-1&amp;quot;, message : function (message, envelope, channelOrGroup, time, channel) { console.log( &amp;quot;Message Received.&amp;quot; + &amp;quot;\n&amp;quot; + &amp;quot;Channel or Group: &amp;quot; + JSON.</description>
    </item>
    
    <item>
      <title>Presencia</title>
      <link>https://www.wikiod.com/es/pubnub/presencia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/presencia/</guid>
      <description>Presencia en JavaScript # Presence funciona mediante el envío de mensajes cuando un usuario se une, sale o expira en un canal en particular. Puede escuchar estos mensajes para rastrear quién está en un canal y cuánto tiempo hace que no hicieron nada.
Primero, asegúrese de que cada usuario tenga un UUID. Configure esto cuando inicialice PubNub:
var pubnub = PUBNUB({ publish_key: &#39;my_pub_key&#39;, subscribe_key: &#39;my_sub_key&#39;, uuid: &#39;1234_some_uuid&#39; }); Ahora, cuando se conecte a un canal, agregue un oyente adicional para los eventos join.</description>
    </item>
    
    <item>
      <title>Hola Mundo</title>
      <link>https://www.wikiod.com/es/pubnub/hola-mundo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/hola-mundo/</guid>
      <description>&amp;lt;init&amp;gt; (es decir, require (&amp;quot;pubnub&amp;quot;))
Inicialice una instancia de PubNub para invocar operaciones.
Parámetro Detalles publicar_clave Cadena: su clave de publicación de su cuenta del panel de administración de PubNub clave_de_suscripción Cadena: su clave de publicación de su cuenta del panel de administración de PubNub suscribirse
Suscríbase a un canal o canales y proporcione un medio para recibir mensajes publicados en los canales.
Parámetro Detalles canal Cadena: nombre del canal o lista delimitada por comas de nombres de canales mensaje función: la función de devolución de llamada que recibirá los mensajes publicados en los canales de suscripción conectar función: la función de devolución de llamada que se llamará cuando la suscripción a los canales sea exitosa publicar</description>
    </item>
    
    <item>
      <title>UUID</title>
      <link>https://www.wikiod.com/es/pubnub/uuid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/uuid/</guid>
      <description>JavaScript/SDK web # Para JavaScript, este es el código que recomendamos para generar, conservar y recuperar un UUID. Esto podría envolverse en una función que se puede llamar directamente desde la función PUBNUB.init en lugar de la solución en línea de dos pasos a continuación.
// get/create/store UUID var UUID = PUBNUB.db.get(&#39;session&#39;) || (function(){ var uuid = PUBNUB.uuid(); PUBNUB.db.set(&#39;session&#39;, uuid); return uuid; })(); // init PUBNUB object with UUID value var pubnub = PUBNUB.</description>
    </item>
    
    <item>
      <title>Administrador de acceso</title>
      <link>https://www.wikiod.com/es/pubnub/administrador-de-acceso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/administrador-de-acceso/</guid>
      <description>administrador de acceso pubnub en el lado del servidor # PubNub Access Manager (PAM) amplía el marco de seguridad existente de PubNub al permitir que los desarrolladores creen y hagan cumplir el acceso seguro a los canales en toda la Red en tiempo real de PubNub.
Access Manager le permite administrar permisos granulares para sus aplicaciones y flujos de datos en tiempo real, crear múltiples niveles de permisos, otorgar y revocar acceso y auditar el acceso de los usuarios.</description>
    </item>
    
    <item>
      <title>Filtrado de mensajes</title>
      <link>https://www.wikiod.com/es/pubnub/filtrado-de-mensajes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/filtrado-de-mensajes/</guid>
      <description>Stream Filter proporciona la capacidad de filtrar mensajes en el servidor antes de que se envíen a un suscriptor es una solicitud popular. Con la introducción de nuestros SDK v4.x, ahora tiene la posibilidad de hacerlo mediante metadatos de mensajes.
Evite recibir sus propios mensajes usando Objective-C # La configuración de un filtro se aplica a todos los canales a los que se suscribirá de ese cliente en particular. Este filtro de cliente excluye los mensajes que tienen el UUID de este suscriptor establecido en el UUID del remitente:</description>
    </item>
    
    <item>
      <title>Devoluciones de llamada específicas del canal para SDK v4</title>
      <link>https://www.wikiod.com/es/pubnub/devoluciones-de-llamada-especificas-del-canal-para-sdk-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/devoluciones-de-llamada-especificas-del-canal-para-sdk-v4/</guid>
      <description>Devoluciones de llamada específicas del canal JavaScript v4 SDK # En PubNub JavaScript v3, podría implementar una devolución de llamada única para cada canal al que se suscribió siempre que llamara a la función de suscripción para cada canal e implementara la devolución de llamada en esa suscripción de esta manera:
var pubnub = new PubNub({ publishKey: &amp;quot;your-pub-key&amp;quot;, subscribeKey: &amp;quot;your-sub-key&amp;quot; }); pubnub.subscribe({ channel: &#39;ch1&#39;, message: function (m) { console.log(m + &amp;quot; ch1 callback&amp;quot;); } }); pubnub.</description>
    </item>
    
    <item>
      <title>Grupos de canales de controlador de flujo</title>
      <link>https://www.wikiod.com/es/pubnub/grupos-de-canales-de-controlador-de-flujo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/grupos-de-canales-de-controlador-de-flujo/</guid>
      <description>Cuando utilice grupos de canales, no debe agregar ni eliminar canales en las aplicaciones del lado del cliente. Este ejemplo muestra cómo agregar canales a un grupo de canales y suscribirse a ese grupo de canales por motivos de simplicidad. Pero en un escenario del mundo real, debe hacer que su servidor haga todo el agregado/eliminación de canales hacia/desde grupos de canales. Cuando habilite Access Manager, necesitará el permiso de &amp;ldquo;administración&amp;rdquo; para agregar/eliminar canales a/desde grupos de canales y nunca debe otorgar el permiso de &amp;ldquo;administración&amp;rdquo; a los clientes por razones de seguridad.</description>
    </item>
    
    <item>
      <title>webhook</title>
      <link>https://www.wikiod.com/es/pubnub/webhook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/webhook/</guid>
      <description>webhook pubnub # Webhook Overview Un WebHook es una devolución de llamada HTTP: una POST HTTP que ocurre cuando sucede algo; una simple notificación de eventos a través de HTTP POST. Una aplicación web que implementa WebHooks enviará un mensaje a una URL cuando sucedan ciertas cosas.
PubNub Presence Presencia de Pubnub: todo sobre la presencia del usuario en la plataforma pubnub. proporciona la presencia del usuario cuando se está uniendo, abandonando un canal o cuando hay cambios de estado del usuario.</description>
    </item>
    
    <item>
      <title>Almacenamiento y reproducción</title>
      <link>https://www.wikiod.com/es/pubnub/almacenamiento-y-reproduccion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pubnub/almacenamiento-y-reproduccion/</guid>
      <description>Parámetros # Parámetro Tipo/Requerido/Predeterminado Descripción canal String / Yes Especifica el canal desde el que se devolverán los mensajes del historial. reverso Boolean / No / false Si se establece en verdadero, se recorrerá la línea de tiempo en sentido inverso, comenzando con el mensaje más antiguo primero. El valor predeterminado es falso. Si se proporcionan argumentos tanto de inicio como de fin, se ignora el reverso y los mensajes se devuelven comenzando con el mensaje más reciente.</description>
    </item>
    
  </channel>
</rss>
