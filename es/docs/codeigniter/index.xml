<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de codeigniter on </title>
    <link>https://www.wikiod.com/es/docs/codeigniter/</link>
    <description>Recent content in Tutorial de codeigniter on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/codeigniter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con codeigniter</title>
      <link>https://www.wikiod.com/es/codeigniter/primeros-pasos-con-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/primeros-pasos-con-codeigniter/</guid>
      <description>Instalación y configuración # Entorno de Windows # Instale XAMPP o WAMP Descargue y descomprima el paquete desde Codeigniter.com Extraiga todo el documento en el espacio del servidor (directorio htdocs o www) Entorno Mac # Instalar MAMP Descargue y descomprima el paquete desde Codeigniter.com Extraiga todo el documento en el espacio del servidor (htdocs) Entorno Linux # Descargue y descomprima el paquete desde Codeigniter.com Coloque la carpeta extraída en /var/www (en WAMP) o xampp/htdocs (XAMPP) GitHub # clonar git https://github.</description>
    </item>
    
    <item>
      <title>uso de anzuelos</title>
      <link>https://www.wikiod.com/es/codeigniter/uso-de-anzuelos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/uso-de-anzuelos/</guid>
      <description>Puntos de gancho # pre_sistema # Llamado muy temprano durante la ejecución del sistema. En este punto, solo se han cargado la clase de puntos de referencia y ganchos. No se ha producido ningún enrutamiento u otros procesos.
pre_controlador # Llamado inmediatamente antes de que se llame a cualquiera de sus controladores. Se han realizado todas las clases base, enrutamiento y comprobaciones de seguridad.
post_controlador_constructor # Llamado inmediatamente después de que se crea una instancia de su controlador, pero antes de que ocurra cualquier llamada de método.</description>
    </item>
    
    <item>
      <title>Cómo configurar la zona horaria en CodeIgniter</title>
      <link>https://www.wikiod.com/es/codeigniter/como-configurar-la-zona-horaria-en-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/como-configurar-la-zona-horaria-en-codeigniter/</guid>
      <description>Cómo configurar la zona horaria en CodeIgniter # Colocar date_default_timezone_set(&#39;Asia/Kolkata&#39;); en config.php encima de la URL base también funciona.
PHP Lista de zonas horarias admitidas
aplicación/config.php
&amp;lt;?php defined(&#39;BASEPATH&#39;) OR exit(&#39;No direct script access allowed&#39;); date_default_timezone_set(&#39;Asia/Kolkata&#39;); Otra forma que he encontrado útil es si desea establecer una zona horaria para cada usuario:
Crea un archivo MY_Controller.php.
Cree una columna en su tabla de &amp;lsquo;usuario&amp;rsquo;, puede nombrarla zona horaria o cualquier cosa que desee.</description>
    </item>
    
    <item>
      <title>URL base en Codeigniter</title>
      <link>https://www.wikiod.com/es/codeigniter/url-base-en-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/url-base-en-codeigniter/</guid>
      <description>Configuración de su URL base en Codeigniter # Deberá configurar su URL base en application/config/config.php
Si no está configurado, CodeIgniter intentará adivinar el protocolo y la ruta para su instalación, pero debido a problemas de seguridad, el nombre de host se establecerá a $_SERVER[&#39;SERVER_ADDR&#39;] si está disponible, o localhost en caso contrario. El mecanismo de autodetección existe solo por conveniencia durante desarrollo y NO DEBE usarse en producción!
$config[&#39;base_url&#39;] = &#39;&#39;; Debe ser archivado como</description>
    </item>
    
    <item>
      <title>Empecemos Hola Mundo</title>
      <link>https://www.wikiod.com/es/codeigniter/empecemos-hola-mundo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/empecemos-hola-mundo/</guid>
      <description>Una aplicación Hello World muy simple # Comenzando con una instalación nueva de Codeigniter 3, aquí hay una manera simple de comenzar con una aplicación Hello World, para romper el hielo con este sólido marco PHP.
Para ello puedes empezar creando la vista que queremos que se muestre para nuestra app Hello World.
Lo vamos a poner en la carpeta de tu aplicación, aquí:
En hola_mundo.php(/aplicación/vistas/)
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Hello World&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Hello World!</description>
    </item>
    
    <item>
      <title>Usando modelo en codeigniter</title>
      <link>https://www.wikiod.com/es/codeigniter/usando-modelo-en-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/usando-modelo-en-codeigniter/</guid>
      <description>Llamando a la función del modelo # Sintaxis
$this-&amp;gt;load-&amp;gt;model(&#39;model_name&#39;); $this-&amp;gt;model_name-&amp;gt;method_name(); Práctica
$this-&amp;gt;load-&amp;gt;model(&#39;home_model&#39;); $this-&amp;gt;home_model-&amp;gt;get_data(); Creando modelo # Ir a aplicación/modelo
Nombre del archivo: Home_model.php Dentro del archivo
class Home_model extends CI_Model { public $variable; public function __construct() { parent::__construct(); } public function get_data() { $query = $this-&amp;gt;db-&amp;gt;get(&#39;table_name&#39;, 10); return $query-&amp;gt;result_array(); } } Y cuando necesites cargar este modelo:
$this-&amp;gt;load-&amp;gt;model(&#39;home_model&#39;); $this-&amp;gt;home_model-&amp;gt;get_data(); O si desea que su modelo se asigne a un nombre de objeto diferente, puede especificarlo así:</description>
    </item>
    
    <item>
      <title>Cargador de imágenesarchivos en CodeIgniter</title>
      <link>https://www.wikiod.com/es/codeigniter/cargador-de-imagenesarchivos-en-codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/cargador-de-imagenesarchivos-en-codeigniter/</guid>
      <description>No es necesario que tenga que usar los mismos nombres para (Controlador, Archivo, Clase, ID) o lo que sea. Todo lo que he usado es para comprender el flujo de codificación y mis suposiciones. Depende del desarrollador tomar el código y editar el código/nombre según su deseo y luego alojar el código y tener éxito.
Cargador de imágenes/archivo único # Ahora veremos cómo funciona el código de carga de imágenes/archivos en el método de CI nativo con la ayuda de los formularios propuestos por CI.</description>
    </item>
    
    <item>
      <title>Asegurando su aplicación web</title>
      <link>https://www.wikiod.com/es/codeigniter/asegurando-su-aplicacion-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/asegurando-su-aplicacion-web/</guid>
      <description>Recuerda que CodeIgniter es un Framework de desarrollo. No se esfuerza por hacer que su aplicación sea segura. Simplemente le da las herramientas para hacerlo usted mismo. Si observa la página de seguridad de CI, está bastante claro que esperan que el desarrollador comprenda la seguridad de la aplicación y la incorpore a su aplicación.
Si la seguridad de WebApp es relativamente nueva para usted, comenzaría con OWASP. Podría ser ventajoso mirar otros marcos como Zend o Cake, que creo que hacen cosas más directas.</description>
    </item>
    
    <item>
      <title>Cómo usar las bibliotecas y el ayudante de CI</title>
      <link>https://www.wikiod.com/es/codeigniter/como-usar-las-bibliotecas-y-el-ayudante-de-ci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/como-usar-las-bibliotecas-y-el-ayudante-de-ci/</guid>
      <description>Uso de bibliotecas y ayudantes # El ejemplo tiene el propósito de ilustrar el uso de bibliotecas y ayudantes y no un código válido. No lo copie/pegue en sus proyectos.
AYUDANTE ayudantes/sendEmail_helper.php
if ( ! function_exists(&#39;sendEmail&#39;)) { function sendEmail($email, $subject, $message, $lang, $cc = null, $file = null) { $CI =&amp;amp; get_instance(); $mail_config[&#39;protocol&#39;] = &#39;smtp&#39;; $mail_config[&#39;smtp_host&#39;] = &#39;host&#39;; $mail_config[&#39;smtp_user&#39;] = &#39;user&#39;; $mail_config[&#39;smtp_pass&#39;] = &#39;pass&#39;; $mail_config[&#39;smtp_port&#39;] = &#39;587&#39;; $mail_config[&#39;smtp_timeout&#39;] = 5; $mail_config[&#39;charset&#39;] = &#39;utf-8&#39;; $mail_config[&#39;mailtype&#39;] = &#39;html&#39;; $mail_config[&#39;wrapchars&#39;] = 76; $mail_config[&#39;wordwrap&#39;] = TRUE; $CI-&amp;gt;email-&amp;gt;initialize($mail_config); $CI-&amp;gt;email-&amp;gt;set_newLine(&#39;\r\n&#39;); if ($lang == &amp;quot;en&amp;quot;){ $CI-&amp;gt;email-&amp;gt;from(&#39;support.</description>
    </item>
    
    <item>
      <title>Validación de formulario</title>
      <link>https://www.wikiod.com/es/codeigniter/validacion-de-formulario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/codeigniter/validacion-de-formulario/</guid>
      <description>Ejemplo de formulario de validación # // initialize library $this-&amp;gt;load-&amp;gt;library(&#39;form_validation&#39;); $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;username&#39;, &#39;Username&#39;, &#39;required|max_length[20]&#39;); // Add validation rules for require and max $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;password&#39;, &#39;Password&#39;, &#39;required|matches[password]&#39;); // Validation for the input match $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;passconf&#39;, &#39;Password Confirmation&#39;, &#39;required&#39;); $this-&amp;gt;form_validation-&amp;gt;set_rules(&#39;email&#39;, &#39;Email&#39;, &#39;required|valid_email|is_unique[userTable.emailColumn&#39;); // add validation for the email and check the emailColumn in userTable for unique value $this-&amp;gt;form_validation-&amp;gt;set_message(&#39;is_unique&#39;, &#39;The %s is already taken, Please use another %s&#39;); // add message for the is_unique if ($this-&amp;gt;form_validation-&amp;gt;run() === FALSE) { // fail } else { // success } Enlace</description>
    </item>
    
  </channel>
</rss>
