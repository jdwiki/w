<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial mfc on </title>
    <link>https://www.wikiod.com/es/docs/mfc/</link>
    <description>Recent content in Tutorial mfc on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/mfc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con mfc</title>
      <link>https://www.wikiod.com/es/mfc/primeros-pasos-con-mfc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/mfc/primeros-pasos-con-mfc/</guid>
      <description>Un programa MFC básico # // Include the MFC header: // (you do not need to and should not include the standard Windows headers, e.g. // Windows.h) #include &amp;lt;AfxWin.h&amp;gt; // MFC core and standard components // The following header defines resource constants, such as dialog and control IDs: #include &amp;quot;resource.h&amp;quot; // The basic element of an MFC application is a class that inherits from CWinApp. class CMyApp : public CWinApp { // This gets called as the application gets initialized.</description>
    </item>
    
    <item>
      <title>Barras de control acoplables (paneles)</title>
      <link>https://www.wikiod.com/es/mfc/barras-de-control-acoplables-paneles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/mfc/barras-de-control-acoplables-paneles/</guid>
      <description>Casi todas las aplicaciones MFC tienen una barra de herramientas y una barra de estado: tipos especiales de barra de control que se acoplan a la parte superior e inferior del marco principal de la aplicación. Pero a menudo, la lógica de la aplicación requiere más barras de información acopladas a algún lado del marco, por ejemplo, puede ser la barra de propiedades o la barra de clases, la barra de vista previa, la barra de salida y muchos otros.</description>
    </item>
    
    <item>
      <title>Migración del proyecto DLL VS2005 de la extensión ISAPI MFC (C&#43;&#43;) a VS2015.</title>
      <link>https://www.wikiod.com/es/mfc/migracion-del-proyecto-dll-vs2005-de-la-extension-isapi-mfc-c-a-vs2015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/mfc/migracion-del-proyecto-dll-vs2005-de-la-extension-isapi-mfc-c-a-vs2015/</guid>
      <description>Es posible que haya visto varios sitios web que mostrarán cómo crear un proyecto de extensión ISAPI, pero ninguno de ellos demostrará cómo migrar el proyecto de extensión ISAPI heredado existente (VS2005) a VS2015. Me había enfrentado a un problema similar mientras trabajaba en uno de esos requisitos. Este artículo demuestra la forma experimental que tomé para resolver mi problema.
Estaba trabajando en una tarea de migración donde me encontré con un proyecto.</description>
    </item>
    
    <item>
      <title>subprocesos múltiples</title>
      <link>https://www.wikiod.com/es/mfc/subprocesos-multiples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/mfc/subprocesos-multiples/</guid>
      <description>MFC admite subprocesos de trabajo y subprocesos de interfaz gráfica de usuario (subprocesos con bucles de mensajes). Consulte https://msdn.microsoft.com/en-us/library/975t8ks0.aspx para obtener más documentación.
Ejemplo simple de subproceso de trabajo AfxBeginThread # Este ejemplo muestra una llamada de AfxBeginThread que inicia el subproceso de trabajo y un procedimiento de subproceso de trabajo de ejemplo para ese subproceso.
// example simple thread procedure. UINT __cdecl threadProc(LPVOID rawInput) { // convert it to the correct data type.</description>
    </item>
    
  </channel>
</rss>
