<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>osgi Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/osgi/</link>
    <description>Recent content in osgi Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/osgi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con osgi</title>
      <link>https://www.wikiod.com/es/osgi/primeros-pasos-con-osgi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/osgi/primeros-pasos-con-osgi/</guid>
      <description>Descarga y uso de Equinox # Descargue y extraiga el kit de inicio OSGi para su plataforma desde [página de descarga de Equinox para la versión Neon] (http://download.eclipse.org/equinox/drops/R-Neon-201606061100/index.php).
Inicie el marco desde la carpeta rt/plugins con el siguiente comando (o el ejecutable rt de su plataforma desde la carpeta rt):
rt/plugins$ java -jar org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar -console osgi&amp;gt; En el indicador de la consola OSGi, puede administrar los paquetes, por ejemplo:
osgi&amp;gt;ss &amp;quot;Framework is launched.</description>
    </item>
    
    <item>
      <title>Uso de Pax Exam para pruebas de integración de aplicaciones OSGi</title>
      <link>https://www.wikiod.com/es/osgi/uso-de-pax-exam-para-pruebas-de-integracion-de-aplicaciones-osgi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/osgi/uso-de-pax-exam-para-pruebas-de-integracion-de-aplicaciones-osgi/</guid>
      <description>Pax Exam permite probar paquetes dentro de un contenedor OSGi (por ejemplo, AEM, Apache Karaf). Pax Exam generalmente se usa junto con JUnit.
Empezando # Aquí hay un ejemplo de una prueba usando Pax Exam.
package com.example.project.test; import static org.junit.Assert.*; import static org.ops4j.pax.exam.CoreOptions.*; import javax.inject.Inject; import org.junit.Test; import org.junit.runner.RunWith; import org.ops4j.pax.exam.Configuration; import org.ops4j.pax.exam.Option; import org.ops4j.pax.exam.junit.PaxExam; import org.ops4j.pax.exam.regression.pde.HelloService; import org.ops4j.pax.exam.spi.reactors.*; @RunWith(PaxExam.class) @ExamReactorStrategy(PerMethod.class) public class SampleTest { @Inject private HelloService helloService; @Configuration public Option[] config() { return options( mavenBundle(&amp;quot;com.</description>
    </item>
    
  </channel>
</rss>
