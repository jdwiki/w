<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de fabricjs on </title>
    <link>https://www.wikiod.com/es/docs/fabricjs/</link>
    <description>Recent content in Tutorial de fabricjs on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/fabricjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con fabricjs</title>
      <link>https://www.wikiod.com/es/fabricjs/comenzando-con-fabricjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/fabricjs/comenzando-con-fabricjs/</guid>
      <description>Instalación o Configuración # Fabric.js es como cualquier otra biblioteca JS solo específica para canvas. Fácil de configurar y comenzar. Todo lo que necesita hacer es descargar fabric.js desde AQUÍ e incluirlo en su proyecto como cualquier otra biblioteca JS, por ejemplo, de la misma manera que lo hace para jQuery. Luego cree el archivo html suponga index.html como:
&amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;fabric.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;canvas id=&amp;quot;canvas&amp;quot; width=&amp;quot;400&amp;quot; height=&amp;quot;400&amp;quot; style=&amp;quot;border:2px solid #000000&amp;lt;/canvas&amp;gt; &amp;lt;script&amp;gt; var canvas = new fabric.</description>
    </item>
    
    <item>
      <title>Eventos de lienzo de Fabricjs</title>
      <link>https://www.wikiod.com/es/fabricjs/eventos-de-lienzo-de-fabricjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/fabricjs/eventos-de-lienzo-de-fabricjs/</guid>
      <description>Sintaxis # on(eventName, handler): adjunta un detector de eventos con una devolución de llamada al objeto.
off(eventName, handler): elimina el detector de eventos del objeto. Llamar a esta función sin ningún argumento eliminará todos los detectores de eventos del objeto.
trigger(eventName, optionsopt): activa el evento y el objeto de opciones opcionales.
Parámetros # Parámetro Descripción nombreEvento El nombre del evento al que desea suscribirse, como &amp;lsquo;objeto: en movimiento&amp;rsquo; controlador de eventos La función que desea ejecutar cuando se activa ese evento en particular opcionesoptar Objeto de opciones Fabric admite una serie de eventos para permitir la interactividad y la extensibilidad.</description>
    </item>
    
    <item>
      <title>Serialización de lienzo FabricJS</title>
      <link>https://www.wikiod.com/es/fabricjs/serializacion-de-lienzo-fabricjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/fabricjs/serializacion-de-lienzo-fabricjs/</guid>
      <description>Una vez que haya comenzado a crear una aplicación con FabricJS, no tardará en darse cuenta de que deberá guardar los resultados del lienzo/su contenido en el servidor. O puede exportarlos como archivos al cliente. Para este mismo propósito, necesitará serialización de lienzo. Ahora, algunos de ustedes podrían preguntarse por qué la serialización podemos guardarla como una imagen. Entonces, la respuesta sería Guardar la imagen en un servidor necesita ancho de banda y el texto resulta mucho mejor en este caso.</description>
    </item>
    
  </channel>
</rss>
