<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de contracción on </title>
    <link>https://www.wikiod.com/es/docs/twitch/</link>
    <description>Recent content in Tutorial de contracción on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/twitch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con twitch</title>
      <link>https://www.wikiod.com/es/twitch/primeros-pasos-con-twitch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/twitch/primeros-pasos-con-twitch/</guid>
      <description>Obtenga el token de OAuth del fragmento de URL # Si el usuario autoriza su aplicación, será redirigido a la siguiente URL:
https://[your registered redirect URI]/#access_token=[an access token] &amp;amp;scope=[authorized scopes] Tenga en cuenta que el token de acceso está en el fragmento de URL y no en la cadena de consulta. Esto significa que el valor no aparecerá en las solicitudes HTTP a su servidor. Se puede acceder a los fragmentos de URL desde JavaScript con document.</description>
    </item>
    
    <item>
      <title>Listas de streamers por juego</title>
      <link>https://www.wikiod.com/es/twitch/listas-de-streamers-por-juego/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/twitch/listas-de-streamers-por-juego/</guid>
      <description>Obtener la primera página en Ruby # Este ejemplo de Ruby usa [Mechanize][mechanize], una biblioteca para automatizar las interacciones web.
client_id es un client_id de OAuth.
game es el directorio del juego para listar.
require &#39;mechanize&#39; master_agent = Mechanize.new client_id = &amp;quot;123&amp;quot; game = &amp;quot;Minecraft&amp;quot; url = &amp;quot;https://api.twitch.tv/kraken/streams?game=#{game}&amp;amp;client_id=#{client_id}&amp;quot; final_list = [] master_agent.get(url) do |page| master_list = JSON.parse(page.body) master_list[&amp;quot;streams&amp;quot;].each do |stream| final_list &amp;lt;&amp;lt; stream[&amp;quot;channel&amp;quot;][&amp;quot;name&amp;quot;] end end </description>
    </item>
    
    <item>
      <title>Reproductor de video integrado interactivo</title>
      <link>https://www.wikiod.com/es/twitch/reproductor-de-video-integrado-interactivo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/twitch/reproductor-de-video-integrado-interactivo/</guid>
      <description>Reproductor de video en vivo # Implementación básica:
&amp;lt;script src= &amp;quot;http://player.twitch.tv/js/embed/v1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;PLAYER_DIV_ID&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var options = { width: 854, height: 480, channel: &amp;quot;monstercat&amp;quot;, }; var player = new Twitch.Player(&amp;quot;PLAYER_DIV_ID&amp;quot;, options); player.setVolume(0.5); &amp;lt;/script&amp;gt; Con controles ocultos:
&amp;lt;script src= &amp;quot;http://player.twitch.tv/js/embed/v1.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;PLAYER_DIV_ID&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var options = { width: 854, height: 480, channel: &amp;quot;monstercat&amp;quot;, controls: false, }; var player = new Twitch.Player(&amp;quot;PLAYER_DIV_ID&amp;quot;, options); player.setVolume(0.5); &amp;lt;/script&amp;gt; Reproductor de video grabado (no en vivo) # &amp;lt;script src= &amp;quot;http://player.</description>
    </item>
    
    <item>
      <title>Llamar a las API de Twitch</title>
      <link>https://www.wikiod.com/es/twitch/llamar-a-las-api-de-twitch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/twitch/llamar-a-las-api-de-twitch/</guid>
      <description>Este tema pretende mostrar una forma general de llamar a la API de Twitch sin OAuth. Puedes llamar a cualquier API que se encuentre en la documentación de la API REST de Twitch usando este patrón. Simplemente cambiaría la URL al punto final correcto.
Se requiere un ID de cliente para todas las llamadas a la API de Twitch. En estos ejemplos, el ID de cliente se agrega como encabezado de cada llamada.</description>
    </item>
    
    <item>
      <title>Bot de chat de Twitch (IRC)</title>
      <link>https://www.wikiod.com/es/twitch/bot-de-chat-de-twitch-irc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/twitch/bot-de-chat-de-twitch-irc/</guid>
      <description>Twitch Chat es un simple chat IRC. Para cualquier desarrollo serio, hay varios documentos para ello, incluido el recurso más completo y general: http://ircdocs.horse/
Conexión, Apretón de manos # IRC es un protocolo TCP básico basado en texto sin formato. La conexión a Twitch funciona como cualquier servicio de IRC regular con una diferencia en la autenticación:
Inicio de conexión &amp;gt; Apretón de manos &amp;gt; Uso
El apretón de manos suele ser la parte más difícil de hacer bien:</description>
    </item>
    
    <item>
      <title>Obtención de un token de OAuth mediante el flujo de código de autorización</title>
      <link>https://www.wikiod.com/es/twitch/obtencion-de-un-token-de-oauth-mediante-el-flujo-de-codigo-de-autorizacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/twitch/obtencion-de-un-token-de-oauth-mediante-el-flujo-de-codigo-de-autorizacion/</guid>
      <description>Envíe al usuario al punto final de autorización para obtener el código de autorización # Primero enviará al usuario al punto final de autorización de Twitch. Esta URL se compone de una URL de autorización base (https://api.twitch.tv/kraken/oauth2/authorize) y parámetros de cadena de consulta que definen lo que está solicitando. Los parámetros requeridos son response_type, client_id, redirect_uri y scope.
Para el flujo de código de autorización, el parámetro response_type siempre se establece en code.</description>
    </item>
    
  </channel>
</rss>
