<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostgreSQL Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/postgresql/</link>
    <description>Recent content in PostgreSQL Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con postgresql</title>
      <link>https://www.wikiod.com/es/postgresql/comenzando-con-postgresql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/comenzando-con-postgresql/</guid>
      <description>Instalación de PostgreSQL en Windows # Si bien es una buena práctica usar un sistema operativo basado en Unix (p. ej., Linux o BSD) como servidor de producción, puede instalar fácilmente PostgreSQL en Windows (con suerte, solo como servidor de desarrollo).
Descargue los archivos binarios de instalación de Windows de EnterpriseDB: http://www.enterprisedb.com/products-services-training/pgdownload Esta es una empresa de terceros iniciada por colaboradores principales del proyecto PostgreSQL que han optimizado los archivos binarios para Windows.</description>
    </item>
    
    <item>
      <title>EXTENSIÓN dblink y postgres_fdw</title>
      <link>https://www.wikiod.com/es/postgresql/extension-dblink-y-postgres_fdw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/extension-dblink-y-postgres_fdw/</guid>
      <description>Sintaxis # dblink (&amp;lsquo;dbname = nombre_db_distancia puerto = PortOfDB host = HostOfDB usuario = nombreusuarioDB contraseña = contraseñaDB&amp;rsquo;, &amp;lsquo;MI CONSULTA&amp;rsquo;)
dbname = nombre de la base de datos
port = Puerto de la base de datos
host = Host de la base de datos
usuario = nombre de usuario de la base de datos
contraseña = contraseña de la base de datos&amp;rsquo;,
MI CONSULTA = esta puede ser cualquier operación que quiera hacer SELECCIONAR, INSERTAR, &amp;hellip;</description>
    </item>
    
    <item>
      <title>Soporte JSON</title>
      <link>https://www.wikiod.com/es/postgresql/soporte-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/soporte-json/</guid>
      <description>JSON: notación de objetos de Java Script, Postgresql admite el tipo de datos JSON desde la versión 9.2. Hay algunas funciones y operadores predefinidos para acceder a los datos JSON.
El operador -&amp;gt; devuelve la clave de la columna JSON. El operador -&amp;gt;&amp;gt; devuelve el valor de la columna JSON.
Uso de operadores JSONb # Crear una base de datos y una tabla # DROP DATABASE IF EXISTS books_db; CREATE DATABASE books_db WITH ENCODING=&#39;UTF8&#39; TEMPLATE template0; DROP TABLE IF EXISTS books; CREATE TABLE books ( id SERIAL PRIMARY KEY, client TEXT NOT NULL, data JSONb NOT NULL ); Poblando la base de datos # INSERT INTO books(client, data) values ( &#39;Joe&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;Siddhartha&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Herman&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Hesse&amp;quot; } }&#39; ),( &#39;Jenny&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;Dharma Bums&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Jack&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Kerouac&amp;quot; } }&#39; ),( &#39;Jenny&#39;, &#39;{ &amp;quot;title&amp;quot;: &amp;quot;100 años de soledad&amp;quot;, &amp;quot;author&amp;quot;: { &amp;quot;first_name&amp;quot;: &amp;quot;Gabo&amp;quot;, &amp;quot;last_name&amp;quot;: &amp;quot;Marquéz&amp;quot; } }&#39; ); Veamos todo lo que hay dentro de los libros de mesa:</description>
    </item>
    
    <item>
      <title>Conectarse a PostgreSQL desde Java</title>
      <link>https://www.wikiod.com/es/postgresql/conectarse-a-postgresql-desde-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/conectarse-a-postgresql-desde-java/</guid>
      <description>La API para utilizar una base de datos relacional desde Java es JDBC.
Esta API está implementada por un controlador JDBC.
Para usarlo, coloque el archivo JAR con el controlador en la ruta de clase JAVA.
Esta documentación muestra ejemplos de cómo usar el controlador JDBC para conectarse a una base de datos.
URL de JDBC
La URL de JDBC puede tomar una de estas formas:
&amp;lt;código&amp;gt;jdbc:postgresql://host[:puerto]/[base de datos][parámetros]&amp;lt;/código&amp;gt; host por defecto es localhost, port es 5432.</description>
    </item>
    
    <item>
      <title>Copia de seguridad y restaurar</title>
      <link>https://www.wikiod.com/es/postgresql/copia-de-seguridad-y-restaurar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/copia-de-seguridad-y-restaurar/</guid>
      <description>Hacer una copia de seguridad del sistema de archivos en lugar de usar pg_dumpall y pg_dump # Es muy importante que si usa esto, llame a la función pg_start_backup() antes y pg_stop_backup() después. De lo contrario, hacer copias de seguridad del sistema de archivos no es seguro; incluso una instantánea de ZFS o FreeBSD del sistema de archivos respaldada sin esas llamadas de función pondrá la base de datos en modo de recuperación y puede perder transacciones.</description>
    </item>
    
    <item>
      <title>Gestión de roles</title>
      <link>https://www.wikiod.com/es/postgresql/gestion-de-roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/gestion-de-roles/</guid>
      <description>Sintaxis # CREATE ROLE nombre [ [ CON ] opción [ ... ] ]
CREATE USUARIO nombre [ [ CON ] opción [ ... ] ]
donde la opción puede ser: SUPERUSER | NOSUPERUSER | CREATEDB | NOCREATEDB | CREATEROLE | NOCREATEROLE | CREATEUSER | NOCREATEUSER | INHERIT | NOINHERIT | LOGIN | NOLOGIN | CONNECTION LIMIT connlimit | [ ENCRYPTED | UNENCRYPTED ] PASSWORD &#39;password&#39; | VALID UNTIL &#39;timestamp&#39; | IN ROLE role_name [, .</description>
    </item>
    
    <item>
      <title>Alta disponibilidad de PostgreSQL</title>
      <link>https://www.wikiod.com/es/postgresql/alta-disponibilidad-de-postgresql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/alta-disponibilidad-de-postgresql/</guid>
      <description>Replicación en PostgreSQL # Configuración del servidor primario
Requirements:
Replication User for replication activities Directory to store the WAL archives Create Replication user
createuser -U postgres replication -P -c 5 --replication
+ option -P will prompt you for new password + option -c is for maximum connections. 5 connections are enough for replication + -replication will grant replication privileges to the user Create a archive directory in data directory
mkdir $PGDATA/archive</description>
    </item>
    
    <item>
      <title>Consejos y trucos de Postgres</title>
      <link>https://www.wikiod.com/es/postgresql/consejos-y-trucos-de-postgres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/consejos-y-trucos-de-postgres/</guid>
      <description>DATEADD alternativa en Postgres # SELECCIONE FECHA_ACTUAL + &#39;1 día&#39;::INTERVALO SELECCIONE &#39;1999-12-11&#39;::TIMESTAMP + &#39;19 días&#39;::INTERVALO SELECCIONA &#39;1 mes&#39;::INTERVALO + &#39;1 mes 3 días&#39;::INTERVALO Valores separados por comas de una columna # SELECT string_agg(&amp;lt;TABLE_NAME&amp;gt;.&amp;lt;COLUMN_NAME&amp;gt;, &#39;,&#39;) FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt; T Eliminar registros duplicados de la tabla de postgres # DELETE FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;Table_NAME&amp;gt; WHERE ctid NOT IN ( SELECT MAX(ctid) FROM &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt; GROUP BY &amp;lt;SCHEMA_NAME&amp;gt;.&amp;lt;TABLE_NAME&amp;gt;.* ) ; Actualice la consulta con la combinación entre dos tablas como alternativa, ya que Postresql no admite la combinación en la consulta de actualización.</description>
    </item>
    
    <item>
      <title>Programación con PLpgSQL</title>
      <link>https://www.wikiod.com/es/postgresql/programacion-con-plpgsql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/programacion-con-plpgsql/</guid>
      <description>PL/pgSQL es el lenguaje de programación integrado de PostgreSQL para escribir funciones que se ejecutan dentro de la propia base de datos, conocidas como procedimientos almacenados en otras bases de datos. Extiende SQL con bucles, condicionales y tipos de devolución. Aunque su sintaxis puede ser extraña para muchos desarrolladores, es mucho más rápido que cualquier cosa que se ejecute en el servidor de aplicaciones porque se elimina la sobrecarga de conectarse a la base de datos, lo que es particularmente útil cuando necesitaría ejecutar una consulta, esperar el resultado, y enviar otra consulta.</description>
    </item>
    
    <item>
      <title>Acceso a datos mediante programación</title>
      <link>https://www.wikiod.com/es/postgresql/acceso-a-datos-mediante-programacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/postgresql/acceso-a-datos-mediante-programacion/</guid>
      <description>Accediendo a PostgreSQL con la C-API # La C-API es la forma más poderosa de acceder a PostgreSQL y es sorprendentemente cómoda.
Compilación y enlace # Durante la compilación, debe agregar el directorio de inclusión de PostgreSQL, que se puede encontrar con pg_config --includedir, a la ruta de inclusión. Debe enlazar con la biblioteca compartida del cliente PostgreSQL (libpq.so en UNIX, libpq.dll en Windows). Esta biblioteca está en el directorio de bibliotecas de PostgreSQL, que se puede encontrar con pg_config --libdir.</description>
    </item>
    
  </channel>
</rss>
