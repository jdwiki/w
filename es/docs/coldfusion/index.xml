<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de fusión en frío on </title>
    <link>https://www.wikiod.com/es/docs/coldfusion/</link>
    <description>Recent content in Tutorial de fusión en frío on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/coldfusion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con la fusión fría</title>
      <link>https://www.wikiod.com/es/coldfusion/comenzando-con-la-fusion-fria/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/comenzando-con-la-fusion-fria/</guid>
      <description>Hola Mundo # Archivo: prueba.cfm
Implementación de etiquetas
&amp;lt;cfoutput&gt;¡Hola mundo!&amp;lt;/cfoutput&gt; Implementación de CFScript
&amp;lt;cfscript&gt; writeOutput(&#34;¡Hola mundo!&#34;); &amp;lt;/cfscript&gt; Instalación o Configuración # Instalación de Linux (Ubuntu) # Lucee (código abierto) # Intérprete ColdFusion / CFML # Descargue el archivo apropiado de su sitio (http://lucee.org/downloads.html) y ejecute su instalador
wget http://cdn.lucee.org/downloader.cfm/id/155/file/lucee-5.0.0.252-pl0-linux-x64-installer.run sudo chmod +x lucee-5.0.0.252-pl0-linux-x64-installer.run sudo ./lucee-5.0.0.252-pl0-linux-x64-installer.run Paso a través del instalador.
###Nginx
Instala Nginx en tu servidor
sudo apt-get install nginx Edite su /etc/nginx/sites-disponible/default</description>
    </item>
    
    <item>
      <title>Cómo hacer CFLOOP</title>
      <link>https://www.wikiod.com/es/coldfusion/como-hacer-cfloop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/como-hacer-cfloop/</guid>
      <description>Muchas gracias a
Pete Freitag por su Hoja de trucos de CFScript Adam Cameron por CF 11: CFLOOP en CFScript está muy roto (y todavía lo está en CF 2016). Matriz # La capacidad de usar directamente un objeto arreglo con cfloop se agregó en ColdFusion 8.
Considere esta matriz;
&amp;lt;cfset aFoo = [ &amp;quot;one&amp;quot; , &amp;quot;two&amp;quot; , &amp;quot;three&amp;quot; , &amp;quot;four&amp;quot; ] /&amp;gt; Sintaxis de etiquetas ColdFusion 8 hasta actual Usando el atributo index por sí mismo.</description>
    </item>
    
    <item>
      <title>Matrices ColdFusion</title>
      <link>https://www.wikiod.com/es/coldfusion/matrices-coldfusion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/matrices-coldfusion/</guid>
      <description>Sintaxis # ArrayNew(dimensión, isSynchronized) Parámetros # Nombre Descripción Dimensión Número de dimensiones en la nueva matriz: 1, 2 o 3 está sincronizado Cuando es falso, crea una matriz no sincronizada. Cuando es verdadero, la función devuelve una matriz sincronizada. En una matriz sincronizada, más de dos subprocesos no pueden acceder a la matriz simultáneamente. Otros subprocesos tienen que esperar hasta que el subproceso activo complete su trabajo, lo que resulta en un rendimiento significativo.</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://www.wikiod.com/es/coldfusion/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/variables/</guid>
      <description>Parámetros # Atributo Descripción nombre (Obligatorio) Nombre del parámetro/variable. predeterminado (Opcional) Valor para establecer el parámetro si no existe. max (Opcional) El valor máximo válido; usado solo para validación de rango. min (Opcional) El valor mínimo válido; usado solo para validación de rango. patrón (Opcional) Una expresión regular de JavaScript con la que debe coincidir el parámetro; solo se utiliza para la validación de expresiones regulares o expresiones regulares. tipo (Opcional) El formato válido para los datos.</description>
    </item>
    
    <item>
      <title>Consultas de base de datos</title>
      <link>https://www.wikiod.com/es/coldfusion/consultas-de-base-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/consultas-de-base-de-datos/</guid>
      <description>Trabajar con bases de datos # Uno de los puntos fuertes de ColdFusion es lo fácil que es trabajar con bases de datos. Y, por supuesto, las entradas de consulta pueden y deben parametrizarse.
Implementación de etiquetas
&amp;lt;cfquery name=&amp;quot;myQuery&amp;quot; datasource=&amp;quot;myDatasource&amp;quot; result=&amp;quot;myResult&amp;quot;&amp;gt; select firstName, lastName from users where lastName = &amp;lt;cfqueryparam value=&amp;quot;Allaire&amp;quot; cfsqltype=&amp;quot;cf_sql_varchar&amp;quot;&amp;gt; &amp;lt;/cfquery&amp;gt; Implementación de CFScript
// ColdFusion 9+ var queryService = new query(name=&amp;quot;myQuery&amp;quot;, datasource=&amp;quot;myDatasource&amp;quot;); queryService.addParam(name=&amp;quot;lName&amp;quot;, value=&amp;quot;Allaire&amp;quot;, cfsqltype=&amp;quot;cf_sql_varchar&amp;quot;); var result = queryService.</description>
    </item>
    
    <item>
      <title>Cómo invocar un método privado dinámicamente</title>
      <link>https://www.wikiod.com/es/coldfusion/como-invocar-un-metodo-privado-dinamicamente/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/como-invocar-un-metodo-privado-dinamicamente/</guid>
      <description>El uso de &amp;lt;cfinvoke&amp;gt; o invoke() debería ser más rápido que evaluate()
CFML # &amp;lt;cfinvoke method=&amp;quot;#somePrivateMethodName#&amp;quot;&amp;gt; &amp;lt;cfinvokeargument name=&amp;quot;argument1&amp;quot; value=&amp;quot;one&amp;quot;&amp;gt; &amp;lt;/cfinvoke&amp;gt; CFSCRIPT (CF10+) # invoke(&amp;quot;&amp;quot;, somePrivateMethodName, {argument1=&#39;one&#39;}); </description>
    </item>
    
    <item>
      <title>Ámbitos en Coldfusion</title>
      <link>https://www.wikiod.com/es/coldfusion/ambitos-en-coldfusion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/ambitos-en-coldfusion/</guid>
      <description>Un ámbito es &amp;ldquo;el rango en el que se puede hacer referencia a una variable&amp;rdquo;. ColdFusion conoce, al igual que la mayoría de los otros lenguajes de programación y secuencias de comandos, varios ámbitos. El siguiente texto trata de estos tipos y trata de aportar claridad sobre ellos, sus diferencias y sus características.
Visión general # Componentes y funciones
variables this local arguments Etiquetas personalizadas
attributes thisTag caller Ámbitos globales</description>
    </item>
    
    <item>
      <title>consulta</title>
      <link>https://www.wikiod.com/es/coldfusion/consulta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/consulta/</guid>
      <description>Parámetros # Parámetro Detalles nombre Valor: cadena, Predeterminado: sí tipobd Valor: consulta/hql, Predeterminado: no, Observaciones: cuando se deja en blanco, es una consulta normal fuente de datos Predeterminado: no, Observaciones: base de datos parámetros Valor: estructura, Predeterminado: no, Observaciones: ¡solo sintaxis de cfscript! En cfml se escriben dentro de la declaración SLQ usando &amp;lt;cfqueryparam /&amp;gt; Consulta de consulta # Llamadas de función # &amp;lt;!--- Load the user object based on the component path.</description>
    </item>
    
    <item>
      <title>Creación de API REST en ColdFusion</title>
      <link>https://www.wikiod.com/es/coldfusion/creacion-de-api-rest-en-coldfusion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/creacion-de-api-rest-en-coldfusion/</guid>
      <description>Las API REST son interesantes cuando se debe acceder a los datos desde cualquier lugar, incluidos diferentes idiomas (del lado del servidor y del cliente). Eso requiere la separación de los datos y el procesamiento.
Creando back-end # &amp;lt;cfcomponent displayname=&amp;quot;myAPI&amp;quot; output=&amp;quot;false&amp;quot;&amp;gt; &amp;lt;cffunction name=&amp;quot;init&amp;quot; access=&amp;quot;public&amp;quot; output=&amp;quot;no&amp;quot;&amp;gt; &amp;lt;!--- do some basic stuff ---&amp;gt; &amp;lt;cfreturn this&amp;gt; &amp;lt;/cffunction&amp;gt; &amp;lt;cffunction name=&amp;quot;welcome&amp;quot;&amp;gt; &amp;lt;cfreturn &amp;quot;Hello World!&amp;quot;&amp;gt; &amp;lt;/cffunction&amp;gt; &amp;lt;/cfcomponent&amp;gt; La interfaz # &amp;lt;cfscript&amp;gt; api_request = GetHttpRequestData(); api = createObject(&amp;quot;component&amp;quot;,&amp;quot;myAPI&amp;quot;).</description>
    </item>
    
    <item>
      <title>Trabajar con devoluciones de llamada RegExp Replace</title>
      <link>https://www.wikiod.com/es/coldfusion/trabajar-con-devoluciones-de-llamada-regexp-replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/coldfusion/trabajar-con-devoluciones-de-llamada-regexp-replace/</guid>
      <description>Si desea algo más que un simple reemplazo de cadena con expresiones regulares comunes, seguramente tendrá problemas y chocará contra la pared al descubrir los límites de las funciones de expresión regular que tiene Coldfusion. No hay una función incorporada como preg_replace_callback de php.
Parámetros # Parámetro Detalles re La expresión regular str La cadena que debe aplicarse a la expresión regular devolución de llamada La función donde se pasarán los agrupados capturados si se encuentra una coincidencia.</description>
    </item>
    
  </channel>
</rss>
