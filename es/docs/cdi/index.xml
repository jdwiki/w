<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial cdi on </title>
    <link>https://www.wikiod.com/es/docs/cdi/</link>
    <description>Recent content in Tutorial cdi on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/cdi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con cdi</title>
      <link>https://www.wikiod.com/es/cdi/comenzando-con-cdi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/cdi/comenzando-con-cdi/</guid>
      <description>Configuración rápida en un entorno Java SE # Si está trabajando con un servidor de aplicaciones Java EE 6+, CDI es parte del contenedor y no necesita hacer nada para comenzar a usarlo. Pero CDI no se limita a los servidores de aplicaciones Java EE. Se puede usar en aplicaciones Java SE o contenedores de servlets simples con la misma facilidad. Echemos un vistazo al uso de CDI en una aplicación de línea de comandos simple.</description>
    </item>
    
    <item>
      <title>Ámbitos</title>
      <link>https://www.wikiod.com/es/cdi/ambitos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/cdi/ambitos/</guid>
      <description>** ¿Por qué necesito estos constructores sin argumentos? **
¿Qué sucede si un bean con ámbito de sesión se inyecta en un bean con ámbito de aplicación? ¿Cómo obtiene el bean con ámbito de aplicación la instancia de bean con ámbito de sesión correcta para cada solicitud? ¿No se filtraría el bean con ámbito de sesión en otras solicitudes? ¿Cómo funciona? Para facilitar la determinación del alcance, CDI utiliza lo que se conoce como proxy.</description>
    </item>
    
    <item>
      <title>Inyección de dependencia</title>
      <link>https://www.wikiod.com/es/cdi/inyeccion-de-dependencia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/cdi/inyeccion-de-dependencia/</guid>
      <description>La característica principal de CDI es una API declarativa para inyección de dependencia. Las clases pueden tener dependencias marcadas con la anotación @Inject, que le indicará al administrador de CDI que debe proporcionar esas dependencias al construir una instancia de la clase.
Inyección de constructor # El caso común para inyectar dependencias en una clase es con la inyección de constructor. Esto implica anotar un constructor en la clase con @Inject.</description>
    </item>
    
  </channel>
</rss>
