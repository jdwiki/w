<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de Node.js on </title>
    <link>https://www.wikiod.com/es/docs/node-js/</link>
    <description>Recent content in Tutorial de Node.js on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/node-js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con Node.js</title>
      <link>https://www.wikiod.com/es/node-js/primeros-pasos-con-nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/primeros-pasos-con-nodejs/</guid>
      <description>Servidor HTTP Hola Mundo # Primero, instale Node.js para su plataforma.
En este ejemplo, crearemos un servidor HTTP escuchando en el puerto 1337, que envía &amp;ldquo;¡Hola, mundo!&amp;rdquo; al navegador. Tenga en cuenta que, en lugar de usar el puerto 1337, puede usar cualquier número de puerto de su elección que actualmente no esté en uso por ningún otro servicio.
El módulo http es un Node.js [core module](https://www.wikiod.com/es/node-js/primeros-pasos-con-nodejs#Módulos centrales ) (un módulo incluido en el código fuente de Node.</description>
    </item>
    
    <item>
      <title>Instalación de Node.js</title>
      <link>https://www.wikiod.com/es/node-js/instalacion-de-nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/instalacion-de-nodejs/</guid>
      <description>Uso del Administrador de versiones de nodos (nvm) # Administrador de versiones de nodo, también conocido como nvm, es un script bash que simplifica la administración de múltiples versiones de Node.js.
Para instalar nvm, utilice el script de instalación proporcionado:
$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.3/install.sh | bash Para Windows hay un paquete nvm-windows con un instalador. Esta página GithHub tiene los detalles para instalar y usar el paquete nvm-windows.
Después de instalar nvm, ejecute &amp;ldquo;nvm on&amp;rdquo; desde la línea de comandos.</description>
    </item>
    
    <item>
      <title>Aplicaciones web con Express</title>
      <link>https://www.wikiod.com/es/node-js/aplicaciones-web-con-express/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/aplicaciones-web-con-express/</guid>
      <description>Express es un marco de aplicación web de Node.js mínimo y flexible, que proporciona un conjunto sólido de funciones para crear aplicaciones web.
El sitio web oficial de Express es expressjs.com. La fuente se puede encontrar en GitHub.
Sintaxis # app.get(ruta [, middleware], devolución de llamada[, devolución de llamada&amp;hellip;]) app.put(ruta [, middleware], devolución de llamada[, devolución de llamada&amp;hellip;]) app.post(ruta [, middleware], devolución de llamada[, devolución de llamada&amp;hellip;]) aplicación[&amp;rsquo;eliminar&amp;rsquo;](ruta [, middleware], devolución de llamada[, devolución de llamada&amp;hellip;]) app.</description>
    </item>
    
    <item>
      <title>npm</title>
      <link>https://www.wikiod.com/es/node-js/npm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/npm/</guid>
      <description>Node Package Manager (npm) proporciona las siguientes dos funcionalidades principales: Repositorios en línea para paquetes/módulos de node.js que se pueden buscar en search.nodejs.org. Utilidad de línea de comandos para instalar paquetes Node.js, administrar versiones y administrar dependencias de paquetes Node.js.
Sintaxis # npm &amp;lt;comando&amp;gt; donde &amp;lt;comando&amp;gt; es uno de: añadir-usuario usuario ayuda api autor papelera insectos C [caché] finalización [configuración] [ddp][duplicado] [duplicado] desaprobar documentos editar explorar Preguntas más frecuentes encontrar encontrar-incautos [obtener][configurar] [ayuda] [ayuda-buscar] hogar [yo][17] [instalar][17] información [calor][calor] es todo problemas la [enlace][11] [lista] ll en acceso ls obsoleto [dueño] paquete prefijo [ciruela pasa] publicar -r [rb][reconstruir] [reconstruir] retirar [repo] [reiniciar] [rm] raíz [ejecutar-script][ejecutar script] [s][buscar] [se][buscar] [búsqueda] [establecer][configurar] mostrar Envoltura retráctil [estrella][9] [estrellas][16] [inicio][15] [parar][14] [submódulo][13] [etiqueta][4] [prueba][3] [tst][3] [y][12] [desinstalar][12] [desvincular][11] [despublicar][10] [quitar estrella][9] [arriba][8] [actualizar][8] [v][7] [versión][7] [ver][6] [quien][5] 2: https://www.</description>
    </item>
    
    <item>
      <title>integración mysql</title>
      <link>https://www.wikiod.com/es/node-js/integracion-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/integracion-mysql/</guid>
      <description>En este tema, aprenderá cómo integrarse con Node.js utilizando la herramienta de administración de bases de datos MYSQL. Aprenderá varias formas de conectarse e interactuar con los datos que residen en mysql utilizando un programa y un script de nodejs.
Conectarse a MySQL # Una de las formas más fáciles de conectarse a MySQL es usando el módulo mysql. Este módulo maneja la conexión entre la aplicación Node.js y el servidor MySQL.</description>
    </item>
    
    <item>
      <title>Protección de aplicaciones Node.js</title>
      <link>https://www.wikiod.com/es/node-js/proteccion-de-aplicaciones-nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/proteccion-de-aplicaciones-nodejs/</guid>
      <description>SSL/TLS en Node.js # Si elige manejar SSL/TLS en su aplicación Node.js, considere que también es responsable de mantener la prevención de ataques SSL/TLS en este punto. En muchas arquitecturas de servidor-cliente, SSL/TLS termina en un proxy inverso, tanto para reducir la complejidad de la aplicación como para reducir el alcance de la configuración de seguridad.
Si su aplicación Node.js debe manejar SSL/TLS, puede asegurarse cargando los archivos de clave y certificado.</description>
    </item>
    
    <item>
      <title>paquete.json</title>
      <link>https://www.wikiod.com/es/node-js/paquetejson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/paquetejson/</guid>
      <description>Puedes crear package.json con
npm init que le preguntará sobre datos básicos de sus proyectos, incluido identificador de licencia.
Guiones # Puede definir scripts que se pueden ejecutar o desencadenar antes o después de otro script.
{ &amp;quot;scripts&amp;quot;: { &amp;quot;pretest&amp;quot;: &amp;quot;scripts/pretest.js&amp;quot;, &amp;quot;test&amp;quot;: &amp;quot;scripts/test.js&amp;quot;, &amp;quot;posttest&amp;quot;: &amp;quot;scripts/posttest.js&amp;quot; } } En este caso, puede ejecutar el script ejecutando cualquiera de estos comandos:
$ npm run-script test $ npm run test $ npm test $ npm t Guiones predefinidos # Nombre del guión Descripción prepublicar Ejecutar antes de que se publique el paquete.</description>
    </item>
    
    <item>
      <title>ES del sistema de archivos</title>
      <link>https://www.wikiod.com/es/node-js/es-del-sistema-de-archivos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/es-del-sistema-de-archivos/</guid>
      <description>En Node.js, las operaciones intensivas en recursos, como la E/S, se realizan asincrónicamente, pero tienen una contraparte sincrónica (por ejemplo, existe un fs.readFile y su contraparte es fs.readFileSync). Dado que Node es de subproceso único, debe tener cuidado al usar operaciones sincrónicas, ya que bloquearán todo el proceso.
Si un proceso está bloqueado por una operación síncrona, se detiene todo el ciclo de ejecución (incluido el bucle de eventos). Eso significa que otro código asíncrono, incluidos los eventos y los controladores de eventos, no se ejecutará y su programa continuará esperando hasta que se complete la operación de bloqueo único.</description>
    </item>
    
    <item>
      <title>Implementación de aplicaciones Node.js en producción</title>
      <link>https://www.wikiod.com/es/node-js/implementacion-de-aplicaciones-nodejs-en-produccion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/implementacion-de-aplicaciones-nodejs-en-produccion/</guid>
      <description>Configuración de NODE_ENV=&amp;ldquo;producción&amp;rdquo; # Las implementaciones de producción variarán de muchas maneras, pero una convención estándar cuando se implementa en producción es definir una variable de entorno llamada NODE_ENV y establecer su valor en &amp;ldquo;producción&amp;rdquo;.
Indicadores de tiempo de ejecución # Cualquier código que se ejecute en su aplicación (incluidos los módulos externos) puede verificar el valor de NODE_ENV:
if(process.env.NODE_ENV === &#39;production&#39;) { // We are running in production mode } else { // We are running in development mode } Dependencias # Cuando la variable de entorno NODE_ENV se establece en &amp;lsquo;producción&amp;rsquo;, todas las devDependencies en su archivo package.</description>
    </item>
    
    <item>
      <title>Emisores de eventos</title>
      <link>https://www.wikiod.com/es/node-js/emisores-de-eventos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/node-js/emisores-de-eventos/</guid>
      <description>Cuando un evento se &amp;ldquo;dispara&amp;rdquo; (lo que significa lo mismo que &amp;ldquo;publicar un evento&amp;rdquo; o &amp;ldquo;emitir un evento&amp;rdquo;), se llamará a cada oyente de forma síncrona (fuente), junto con cualquier dato adjunto que se haya pasado a emit(), no importa cuántos argumentos pases:
myDog.on(&#39;bark&#39;, (howLoud, howLong, howIntense) =&amp;gt; { // handle the event }) myDog.emit(&#39;bark&#39;, &#39;loudly&#39;, &#39;5 seconds long&#39;, &#39;fiercely&#39;) Los oyentes serán llamados en el orden en que fueron registrados:</description>
    </item>
    
  </channel>
</rss>
