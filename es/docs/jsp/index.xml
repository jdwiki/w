<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial jsp on </title>
    <link>https://www.wikiod.com/es/docs/jsp/</link>
    <description>Recent content in Tutorial jsp on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/jsp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con jsp</title>
      <link>https://www.wikiod.com/es/jsp/comenzando-con-jsp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsp/comenzando-con-jsp/</guid>
      <description>Hola Mundo # El contenido se ha movido de nuevo a buen &amp;lsquo;ol [página wiki de JSP] 1
Instalando JSP # El contenido se ha movido de nuevo a buen &amp;lsquo;ol [página wiki de JSP] 1
JavaScript # El contenido se ha movido de nuevo a buen &amp;lsquo;ol [página wiki de JSP] 1</description>
    </item>
    
    <item>
      <title>Crear bibliotecas de etiquetas personalizadas usando JSP 2.0 (sin clases Java)</title>
      <link>https://www.wikiod.com/es/jsp/crear-bibliotecas-de-etiquetas-personalizadas-usando-jsp-20-sin-clases-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsp/crear-bibliotecas-de-etiquetas-personalizadas-usando-jsp-20-sin-clases-java/</guid>
      <description>Para usar etiquetas personalizadas en JSP, solíamos tener archivos TLD, junto con una clase Java para definir las etiquetas personalizadas, pero publicamos las especificaciones JSP 2.0, se puede lograr lo mismo, sin necesidad de ningún archivo de código fuente, lo que facilita para mantener y también puede ser creado por alguien con conocimientos básicos de etiquetas JSP sin necesidad de código Java.
Por lo general, para agregar contenido estático a una página HTML, usamos</description>
    </item>
    
    <item>
      <title>Directivas</title>
      <link>https://www.wikiod.com/es/jsp/directivas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsp/directivas/</guid>
      <description>Sintaxis # &amp;lt;%@ nombreDirectiva nombreAtributo=&amp;ldquo;valor&amp;rdquo;%&amp;gt; Ejemplo sencillo # Las directivas, como sugiere el nombre, son direcciones o instrucciones que debe seguir el contenedor al traducir un JSP a un servlet. Hay 3 directivas, a saber, page, include y taglib que puede usar en su JSP.
A continuación se muestra un ejemplo simple del uso de la directiva page:
&amp;lt;%@ page isErrorPage=&amp;quot;true&amp;quot; %&amp;gt; Esto indicaría al contenedor que el archivo JSP que contiene esta línea es una página de error.</description>
    </item>
    
    <item>
      <title>Comentarios en JSP</title>
      <link>https://www.wikiod.com/es/jsp/comentarios-en-jsp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsp/comentarios-en-jsp/</guid>
      <description>Hay varias formas de agregar comentarios en la página JSP, ya que es la tecnología de vista de Java que se enfoca principalmente en ver parte de la aplicación web que incluye principalmente html y, al ser tecnología de Java, también puede contener código de Java. Entonces, uno debe comprender cómo usar los comentarios adecuados en jsp.
Hay 3 tipos de comentarios que podemos usar en la página JSP:
comentario JSP</description>
    </item>
    
    <item>
      <title>Objetos implícitos</title>
      <link>https://www.wikiod.com/es/jsp/objetos-implicitos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jsp/objetos-implicitos/</guid>
      <description>Objetos Java que son creados por el contenedor web. Hay 9 objetos implícitos
objeto Tipo fuera JspWriter solicitud HttpServletSolicitud respuesta HttpServletResponse configuración ServletConfig solicitud ServletContext sesión Sesión Http contexto de página Contexto de página página Objeto excepción arrojable JSP out objeto implícito: simplemente muestra la fecha y la hora. # &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;% out.print(&amp;quot;Today is:&amp;quot;+java.util.Calendar.getInstance().getTime()); %&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; objeto de solicitud en JSP # se utiliza para obtener información de la solicitud, como parámetros, información de encabezado, dirección remota, nombre del servidor, puerto del servidor, tipo de contenido, codificación de caracteres.</description>
    </item>
    
  </channel>
</rss>
