<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de Kubernetes on </title>
    <link>https://www.wikiod.com/es/docs/kubernetes/</link>
    <description>Recent content in Tutorial de Kubernetes on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con Kubernetes</title>
      <link>https://www.wikiod.com/es/kubernetes/primeros-pasos-con-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/kubernetes/primeros-pasos-con-kubernetes/</guid>
      <description>Instalar en la nube de Google # Kubernetes fue desarrollado originalmente por Google para potenciar su Container Engine. Como tal, los clústeres de Kubernetes son ciudadanos de primera clase en Google.
La creación de un clúster de Kubernetes en el motor del contenedor requiere el comando &amp;ldquo;gcloud&amp;rdquo; del SDK de Google Cloud. Para instalar este comando localmente, use una de las siguientes opciones:
use el instalador interactivo (la forma más fácil para los recién llegados): curl https://sdk.</description>
    </item>
    
    <item>
      <title>Llamar a la API de Kubernetes</title>
      <link>https://www.wikiod.com/es/kubernetes/llamar-a-la-api-de-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/kubernetes/llamar-a-la-api-de-kubernetes/</guid>
      <description>Uso del cliente Kubernetes Go: fuera del clúster # package main import ( &amp;quot;fmt&amp;quot; &amp;quot;k8s.io/client-go/1.5/kubernetes&amp;quot; &amp;quot;k8s.io/client-go/1.5/pkg/api/v1&amp;quot; &amp;quot;k8s.io/client-go/1.5/tools/clientcmd&amp;quot; ) func main() { config, err := clientcmd.BuildConfigFromFlags(&amp;quot;&amp;quot;, &amp;lt;kube-config-path&amp;gt;) if err != nil { return nil, err } c, err := kubernetes.NewForConfig(config) if err != nil { return nil, err } // Get Pod by name pod, err := c.Pods(v1.NamespaceDefault).Get(&amp;quot;my-pod&amp;quot;) if err != nil { fmt.Println(err) return } // Print its creation time fmt.</description>
    </item>
    
    <item>
      <title>Kubernetes en producción</title>
      <link>https://www.wikiod.com/es/kubernetes/kubernetes-en-produccion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/kubernetes/kubernetes-en-produccion/</guid>
      <description>Presentar cómo usar kubernetes en el entorno de producción
Implemente el clúster de zookeeper en producción usando kubernetes y ceph # Dockerize zookeeper-3.4.6 # Crear un Dockerfile:
####################################################### # Image: img.reg.3g:15000/zookeeper:3.4.6 ####################################################### FROM img.reg.3g:15000/jdk:1.7.0_67 MAINTAINER lth9739@gmail.com USER root ENV ZOOKEEPER_VERSION 3.4.6 ADD Dockerfile / ADD zookeeper/ /opt/ COPY zoo.cfg /opt/zookeeper/conf/zoo.cfg RUN mkdir -p /opt/zookeeper/{data,log} WORKDIR /opt/zookeeper VOLUME [&amp;quot;/opt/zookeeper/conf&amp;quot;, &amp;quot;/opt/zookeeper/data&amp;quot;, &amp;quot;/opt/zookeeper/log&amp;quot;] COPY config-and-run.sh /opt/zookeeper/bin/ EXPOSE 2181 2888 3888 CMD [&amp;quot;/opt/zookeeper/bin/config-and-run.sh&amp;quot;] Ver más detalles</description>
    </item>
    
  </channel>
</rss>
