<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial base de fuego on </title>
    <link>https://www.wikiod.com/es/docs/firebase/</link>
    <description>Recent content in tutorial base de fuego on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/firebase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con base de fuego</title>
      <link>https://www.wikiod.com/es/firebase/primeros-pasos-con-base-de-fuego/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/primeros-pasos-con-base-de-fuego/</guid>
      <description>Agregue Firebase a su proyecto de Android # Aquí los pasos necesarios para crear un proyecto de Firebase y conectarse con una aplicación de Android.
Agregue Firebase a su aplicación # Cree un proyecto de Firebase en Firebase console y haga clic en Crear nuevo proyecto.
Haga clic en Agregar Firebase a su aplicación de Android y siga los pasos de configuración.
Cuando se le solicite, ingrese el nombre del paquete de su aplicación.</description>
    </item>
    
    <item>
      <title>Reglas de la base de datos</title>
      <link>https://www.wikiod.com/es/firebase/reglas-de-la-base-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/reglas-de-la-base-de-datos/</guid>
      <description>Con Firebase Realtime Database, las reglas de su base de datos son la seguridad del lado del servidor. Debe tener mucho cuidado y saber quién tiene acceso a su base de datos. Es importante que nadie acceda a sus datos si no debería hacerlo.
De forma predeterminada, las reglas de la base de datos en tiempo real de Firebase permiten que cualquier usuario autenticado lea y escriba todos los datos; probablemente esto no sea lo que desea que haga su aplicación.</description>
    </item>
    
    <item>
      <title>Usar Firebase con Node</title>
      <link>https://www.wikiod.com/es/firebase/usar-firebase-con-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/usar-firebase-con-node/</guid>
      <description>Hello World Base de datos en tiempo real de Firebase en Node # Requisitos del sistema:
Nodo JS Empezando
Primero vaya a Firebase Console y cree un nuevo proyecto.
Después de crear el proyecto, en el proyecto, haga clic en el ícono de configuración junto al Nombre del proyecto en la barra lateral izquierda y seleccione Permisos.
En la página de permisos, haga clic en Cuentas de servicio en la barra lateral izquierda y luego haga clic en Crear cuenta de servicio</description>
    </item>
    
    <item>
      <title>¿Cómo usar FirebaseRecyclerAdapter en lugar de RecyclerAdapter?</title>
      <link>https://www.wikiod.com/es/firebase/como-usar-firebaserecycleradapter-en-lugar-de-recycleradapter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/como-usar-firebaserecycleradapter-en-lugar-de-recycleradapter/</guid>
      <description>Aquí está el ejemplo para usar el componente FirebaseUi FirebaseRecyclerAdapter # Hola amigos, antes de iniciar el código, tenemos que declarar la dependencia para acceder al componente Firebase ui, así que aquí está la dependencia que puede poner en su gradel; de lo contrario, también puede agregar la dependencia como jar.
compile &#39;com.firebaseui:firebase-ui-database:0.4.0&#39; Luego, después de que estamos consultando en la base de datos de Firebase para obtener datos de la siguiente manera</description>
    </item>
    
    <item>
      <title>Cómo usar Firebase Database para mantener una lista de usuarios de Firebase Authentication</title>
      <link>https://www.wikiod.com/es/firebase/como-usar-firebase-database-para-mantener-una-lista-de-usuarios-de-firebase-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/como-usar-firebase-database-para-mantener-una-lista-de-usuarios-de-firebase-authentication/</guid>
      <description>Cómo guardar los datos del perfil de usuario # Cada usuario autenticado tiene un &amp;ldquo;uid&amp;rdquo; de Firebase que es único en todos los proveedores y se devuelve como resultado de cada método de autenticación.
Una buena manera de almacenar los datos de sus usuarios es crear un nodo para guardar todos los datos de los usuarios y protegerlos usando sus reglas de seguridad.
- Base de datos
{ &amp;quot;users&amp;quot;: { &amp;quot;uid1&amp;quot; : { &amp;quot;name&amp;quot;: &amp;quot;Steve&amp;quot;, &amp;quot;surname&amp;quot;: &amp;quot;Jobs&amp;quot; }, &amp;quot;uid2&amp;quot; : { &amp;quot;name&amp;quot;: &amp;quot;Bill&amp;quot;, &amp;quot;surname&amp;quot;: &amp;quot;Gates&amp;quot; } } } - Seguridad</description>
    </item>
    
    <item>
      <title>Informes de bloqueo</title>
      <link>https://www.wikiod.com/es/firebase/informes-de-bloqueo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/informes-de-bloqueo/</guid>
      <description>Informe de fallas crea informes detallados de los errores en su aplicación. Los errores se agrupan en grupos de seguimientos de pila similares y se clasifican según la gravedad del impacto en sus usuarios. Además de los informes automáticos, puede registrar eventos personalizados para ayudar a capturar los pasos que conducen a un bloqueo.
Crash Reporting se encuentra actualmente en versión beta mientras resolvemos algunos problemas conocidos en Android e iOS.</description>
    </item>
    
    <item>
      <title>¿Cómo escucho errores al acceder a la base de datos?</title>
      <link>https://www.wikiod.com/es/firebase/como-escucho-errores-al-acceder-a-la-base-de-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/como-escucho-errores-al-acceder-a-la-base-de-datos/</guid>
      <description>Hay muchas razones por las que una operación de lectura o escritura puede fallar. Una frecuente es porque sus reglas de seguridad rechazan la operación, por ejemplo porque no está autenticado (de manera predeterminada, solo un usuario autenticado puede acceder a una base de datos) o porque está escribiendo/escuchando en una ubicación donde no tener permiso.
Detectar errores al escribir un valor en Android # Hay muchas razones por las que una operación de escritura puede fallar.</description>
    </item>
    
    <item>
      <title>Almacenamiento</title>
      <link>https://www.wikiod.com/es/firebase/almacenamiento/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/almacenamiento/</guid>
      <description>Firebase Storage proporciona cargas y descargas seguras de archivos para sus aplicaciones de Firebase, independientemente de la calidad de la red. Puede usarlo para almacenar imágenes, audio, video u otro contenido generado por el usuario. Firebase Storage está respaldado por Google Cloud Storage, un servicio de almacenamiento de objetos potente, simple y rentable.
Firebase Storage almacena sus archivos en un depósito de Google Cloud Storage compartido con la aplicación Google App Engine predeterminada, lo que los hace accesibles a través de las API de Firebase y Google Cloud.</description>
    </item>
    
    <item>
      <title>FirebaseUI (Android)</title>
      <link>https://www.wikiod.com/es/firebase/firebaseui-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/firebaseui-android/</guid>
      <description>Agregando las dependencias # FirebaseUI es solo una biblioteca de código abierto de Google que proporciona enlaces de interfaz de usuario sencillos para Firebase Auth y Firebase Database.
Para comenzar a agregar FirebaseUI a su aplicación, agregue estas dependencias en el archivo build.gradle de su aplicación:
android { // ... } dependencies { // Required for FirebaseUI Database compile &#39;com.google.firebase:firebase-database:9.4.0&#39; compile &#39;com.firebaseui:firebase-ui-database:0.5.1&#39; // FirebaseUI Auth only compile &#39;com.google.firebase:firebase-auth:9.4.0&#39; compile &#39;com.firebaseui:firebase-ui-auth:0.5.1&#39; // Single dependency if you&#39;re using both compile &#39;com.</description>
    </item>
    
    <item>
      <title>Capacidades fuera de línea de Firebase</title>
      <link>https://www.wikiod.com/es/firebase/capacidades-fuera-de-linea-de-firebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/firebase/capacidades-fuera-de-linea-de-firebase/</guid>
      <description>En esta publicación, encontrará las diferentes formas de implementar capacidades sin conexión al usar Firebase, información sobre cuándo y por qué podría ser una buena idea habilitar capacidades sin conexión y ejemplos de ello con la plataforma Android.
¿Qué debo usar? ¿Persistencia de disco o llamadas keepSynced?
Desde mi experiencia, puedo decir que siempre depende de cómo esté funcionando su aplicación y cómo administre las transacciones y la base de datos de su aplicación.</description>
    </item>
    
  </channel>
</rss>
