<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>django-admin Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/django-admin/</link>
    <description>Recent content in django-admin Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/django-admin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con django-admin</title>
      <link>https://www.wikiod.com/es/django-admin/primeros-pasos-con-django-admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/django-admin/primeros-pasos-con-django-admin/</guid>
      <description>Eliminar un modelo de las páginas de administración # Django Admin viene con algunos modelos registrados por defecto. Hay algunas ocasiones en las que es posible que desee eliminar un modelo de las páginas de administración.
Esto se hace en el submódulo admin. Si su aplicación se creó usando manage.py startapp, el archivo admin.py ya debería estar en el módulo de su aplicación. De lo contrario créalo.
#myapp/admin.py from django.contrib import admin from django.</description>
    </item>
    
    <item>
      <title>Acciones de administrador</title>
      <link>https://www.wikiod.com/es/django-admin/acciones-de-administrador/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/django-admin/acciones-de-administrador/</guid>
      <description>No creo que necesite get_price(self) especialmente cuando no está realizando ningún cambio en la variable de precio. Eliminaría el método get_price ya que puede obtener el mismo valor del precio en el modelo del producto. Podría estar equivocado. Simplemente no vea el valor del método get_price aquí.
Acción de descuento del producto # Un día tuve una conversación con un amigo mío que usa Laravel framework PHP en su trabajo. Cuando le dije que Django tiene su propio sistema HTML CRUD todo incluido, para interactuar con la base de datos, llamado Django admin, ¡se le saltaron los ojos!</description>
    </item>
    
  </channel>
</rss>
