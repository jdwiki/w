<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de neo4j on </title>
    <link>https://www.wikiod.com/es/docs/neo4j/</link>
    <description>Recent content in Tutorial de neo4j on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/neo4j/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con neo4j</title>
      <link>https://www.wikiod.com/es/neo4j/primeros-pasos-con-neo4j/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/neo4j/primeros-pasos-con-neo4j/</guid>
      <description>Lenguaje de consulta cifrado # Este es el Cypher, el lenguaje de consulta de Neo4j. En muchos sentidos, Cypher es similar a SQL si está familiarizado con él, excepto que SQL se refiere a los elementos almacenados en una tabla, mientras que Cypher se refiere a los elementos almacenados en un gráfico.
Primero, debemos comenzar aprendiendo cómo crear un gráfico y agregar relaciones, ya que eso es esencialmente de lo que se trata Neo4j.</description>
    </item>
    
    <item>
      <title>Cifrar</title>
      <link>https://www.wikiod.com/es/neo4j/cifrar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/neo4j/cifrar/</guid>
      <description>Cypher es el lenguaje de consulta utilizado por Neo4j. Utiliza Cypher para realizar tareas y coincidencias con un gráfico Neo4j.
Cypher está &amp;ldquo;inspirado en SQL&amp;rdquo; y está diseñado para ser intuitivo en la forma en que describe las relaciones, es decir, típicamente el dibujo del patrón. se verá similar a la representación Cypher del patrón.
Eliminación # Eliminar todos los nodos # MATCH (n) DETACH DELETE n DETACH no funciona en versiones anteriores (menos de 2.</description>
    </item>
    
    <item>
      <title>Pitón</title>
      <link>https://www.wikiod.com/es/neo4j/piton/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/neo4j/piton/</guid>
      <description>Instalar neo4jrestclient # pip install neo4jrestclient Conéctese a neo4j # from neo4jrestclient.client import GraphDatabase db = GraphDatabase(&amp;quot;http://localhost:7474&amp;quot;, username=&amp;quot;neo4j&amp;quot;, password=&amp;quot;mypass&amp;quot;) Crea algunos nodos con etiquetas # user = db.labels.create(&amp;quot;User&amp;quot;) u1 = db.nodes.create(name=&amp;quot;user1&amp;quot;) user.add(u1) u2 = db.nodes.create(name=&amp;quot;user2&amp;quot;) user.add(u2) Puede asociar una etiqueta con muchos nodos de una sola vez # Language = db.labels.create(&amp;quot;Language&amp;quot;) b1 = db.nodes.create(name=&amp;quot;C++&amp;quot;) b2 = db.nodes.create(name=&amp;quot;Python&amp;quot;) beer.add(b1, b2) Crear relaciones # u1.relationships.create(&amp;quot;likes&amp;quot;, b1) u1.relationships.create(&amp;quot;likes&amp;quot;, b2) u2.relationships.create(&amp;quot;likes&amp;quot;, b1) Relaciones bidireccionales # u1.</description>
    </item>
    
  </channel>
</rss>
