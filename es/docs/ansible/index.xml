<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial ansible on </title>
    <link>https://www.wikiod.com/es/docs/ansible/</link>
    <description>Recent content in Tutorial ansible on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/ansible/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con ansible</title>
      <link>https://www.wikiod.com/es/ansible/primeros-pasos-con-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/primeros-pasos-con-ansible/</guid>
      <description>Hola Mundo # Cree un directorio llamado ansible-helloworld-playbook
mkdir ansible-helloworld-playbook Cree un archivo hosts y agregue los sistemas remotos que desea administrar. Como ansible se basa en ssh para conectar las máquinas, debe asegurarse de que ya estén accesibles para usted en ssh desde su computadora.
192.168.1.1 192.168.1.2 Pruebe la conexión a sus sistemas remotos mediante el módulo Ansible ping.
ansible all -m ping -k En caso de éxito debería devolver algo así</description>
    </item>
    
    <item>
      <title>Uso de Ansible con OpenStack</title>
      <link>https://www.wikiod.com/es/ansible/uso-de-ansible-con-openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/uso-de-ansible-con-openstack/</guid>
      <description>OpenStack es una plataforma de software de código abierto para computación en la nube. Las instancias de Linux pueden iniciarse/detenerse manualmente mediante la interfaz web gráfica o automatizarse gracias al módulo de nube openstack de ansible.
Configurar ansible puede ser complicado, pero una vez que está bien configurado, usarlo es realmente fácil y poderoso para el entorno de prueba e integración continua.
Parámetros # parámetros Comentarios anfitriones: localhost Los comandos de OpenStack se lanzan desde nuestro localhost reunir_hechos: Falso No necesitamos recopilar información en nuestro localhost auth_url: https://openstack-identity.</description>
    </item>
    
    <item>
      <title>Inventario</title>
      <link>https://www.wikiod.com/es/ansible/inventario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/inventario/</guid>
      <description>Parámetros # Parámetro Explicación conexión_ansible Tipo de conexión al host. Este puede ser el nombre de cualquiera de los complementos de conexión de ansible. Los tipos de protocolo SSH son smart, ssh o paramiko. El valor predeterminado es inteligente. Los tipos no basados ​​en SSH se describen en la siguiente sección. host_ansible El nombre del host al que conectarse, si es diferente del alias que desea asignarle. puerto_ansible El número de puerto ssh, si no es 22 usuario_ansible El nombre de usuario ssh predeterminado que se utilizará.</description>
    </item>
    
    <item>
      <title>Instalación</title>
      <link>https://www.wikiod.com/es/ansible/instalacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/instalacion/</guid>
      <description>Instalación de Ansible en cualquier sistema operativo, incluido Windows con Virtual Box y Vagrant. También hay disponible una solución alternativa si solo desea practicar los libros de estrategias y los comandos ad-hoc de ansible y no desea configurar el entorno local.
Instalación de Ansible en Ubuntu # Ansible mantiene un repositorio PPA que se puede usar para instalar los archivos binarios de Ansible:
sudo apt-add-repository ppa:ansible/ansible -y sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install ansible -y Para instalar una versión específica, use pip.</description>
    </item>
    
    <item>
      <title>Bucles y condicionales de Ansible</title>
      <link>https://www.wikiod.com/es/ansible/bucles-y-condicionales-de-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/bucles-y-condicionales-de-ansible/</guid>
      <description>Los documentos oficiales explican los condicionales del libro de jugadas.
http://docs.ansible.com/ansible/playbooks_conditionals.html Ansible (github)
https://github.com/marxwang/ansible-learn-resources ¿Qué tipos de condicionales usar? # Use condicionales a través de (la sintaxis está entre [corchetes]):
cuando cuando:**]
Task: - name: run if operating system is debian command: echo &amp;quot;I am a Debian Computer&amp;quot; when: ansible_os_family == &amp;quot;Debian&amp;quot; bucles [con_elementos:]
bucles [with_dicts:]
Datos personalizados [ cuando: my_custom_facts == &amp;lsquo;1234&amp;rsquo;]
Importaciones condicionadas
Seleccione archivos y plantillas en función de variables</description>
    </item>
    
    <item>
      <title>Introducción a los libros de jugadas</title>
      <link>https://www.wikiod.com/es/ansible/introduccion-a-los-libros-de-jugadas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/introduccion-a-los-libros-de-jugadas/</guid>
      <description>Visión general # En Ansible, un libro de jugadas es un archivo YAML que contiene la definición de cómo debe verse un servidor. En un libro de jugadas, define qué acciones debe tomar Ansible para que el servidor esté en el estado que desea. Solo se hace lo que tú defines.
Este es un libro de jugadas básico de Ansible que instala git en cada host que pertenece al grupo web:</description>
    </item>
    
    <item>
      <title>Uso de Ansible con los servicios web de Amazon</title>
      <link>https://www.wikiod.com/es/ansible/uso-de-ansible-con-los-servicios-web-de-amazon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/uso-de-ansible-con-los-servicios-web-de-amazon/</guid>
      <description>ejemplo-2: Esto sirve como ejemplo, así que simplemente no lo copie ni lo pegue. En su lugar, para satisfacer sus necesidades, debe personalizar sus variables; ansible_key, reglas del grupo de seguridad, etc.
ejemplo-1: Para deshabilitar la verificación estricta de la clave de host ssh, un comportamiento que no queremos al automatizar tareas, lo configuramos en no en el archivo ansible.cfg. es decir: StrictHostKeyChecking=no
El archivo ec2.py es un script de Python que ejecuta y devuelve sus recursos de AWS en función de ec2.</description>
    </item>
    
    <item>
      <title>roles</title>
      <link>https://www.wikiod.com/es/ansible/roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/roles/</guid>
      <description>Dependencias de roles # Los roles también le permiten definir otros roles como una dependencia creando un archivo meta/main.yml con un bloque de dependencias:
dependencies: - role: common También es posible pasar un valor a un parámetro/variable en el rol dependiente:
dependencies: - { role: common, some_parameter: 3 } O incluso ejecutar el rol dependiente condicionalmente:
dependencies: - { role: common, some_parameter: 3 } - { role: sshd, enable_sshd: false, when: environment == &#39;production&#39; } Los roles dependientes siempre se ejecutan antes que los roles que dependen de ellos.</description>
    </item>
    
    <item>
      <title>Inventario dinámico</title>
      <link>https://www.wikiod.com/es/ansible/inventario-dinamico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/inventario-dinamico/</guid>
      <description>Las variables de entorno en el inventario dinámico no funcionarán, p.e.
&amp;quot;ansible_ssh_private_key_file&amp;quot;: $HOME/.ssh/key.pem&amp;quot; Si el lado del servidor de inventario dinámico pasa $HOME por ejemplo, reemplace la variable en el código del cliente (Python):
json_input.replace(&amp;quot;$HOME&amp;quot;, os.environ.get(&amp;quot;HOME&amp;quot;)) Inventario dinámico con credenciales de inicio de sesión # Pase el inventario dinámico a ansible-playbook:
ansible-playbook -i inventory/dyn.py -l targethost my_playbook.yml inventario de python/dyn.py debería imprimir algo como esto:
{ &amp;quot;_meta&amp;quot;: { &amp;quot;hostvars&amp;quot;: { &amp;quot;10.</description>
    </item>
    
    <item>
      <title>Cifrado secreto</title>
      <link>https://www.wikiod.com/es/ansible/cifrado-secreto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ansible/cifrado-secreto/</guid>
      <description>Ansible ofrece Vault (¡no debe confundirse con HashiCorp Vault!) para manejar datos confidenciales encriptación Vault tiene como objetivo principal cifrar cualquier dato estructurado, como variables, tareas, controladores.
Cifrado de datos estructurados confidenciales # Primero, cree un archivo clave, por ejemplo, vault_pass_file, que idealmente contiene una larga secuencia de caracteres aleatorios. En los sistemas Linux, puede usar pwgen para crear un archivo de contraseña aleatorio:
pwgen 256 1 &amp;gt; vault_pass_file Luego, use este archivo para cifrar datos confidenciales, por ejemplo, groups_vars/group.</description>
    </item>
    
  </channel>
</rss>
