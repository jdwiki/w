<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python-solicitudes Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/python-requests/</link>
    <description>Recent content in Python-solicitudes Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/python-requests/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con las solicitudes de python</title>
      <link>https://www.wikiod.com/es/python-requests/primeros-pasos-con-las-solicitudes-de-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/python-requests/primeros-pasos-con-las-solicitudes-de-python/</guid>
      <description>Instalación o configuración # python-requests está disponible en PyPI, el índice de paquetes de Python, lo que significa que se puede instalar a través de pip:
pip install requests El código fuente actualizado se puede encontrar en solicita el repositorio de GitHub
Si desea instalarlo desde la fuente, puede hacerlo clonando el repositorio de GitHub:
git clone git://github.com/kennethreitz/requests.git O obteniendo el tarball (-O escribe la salida en el archivo; -L sigue las redirecciones):</description>
    </item>
    
    <item>
      <title>Automatización del inicio de sesión mediante solicitudes a través del inicio de sesión único</title>
      <link>https://www.wikiod.com/es/python-requests/automatizacion-del-inicio-de-sesion-mediante-solicitudes-a-traves-del-inicio-de-sesion-unico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/python-requests/automatizacion-del-inicio-de-sesion-mediante-solicitudes-a-traves-del-inicio-de-sesion-unico/</guid>
      <description>Ejemplo de acceso a páginas autenticadas mediante solicitudes # A veces tenemos el requisito de analizar páginas, pero hacerlo requiere que sea un usuario autorizado. Aquí hay un ejemplo que le muestra cómo iniciar sesión en Oracle.
import sys import requests import json from bs4 import BeautifulSoup def mprint(x): sys.stdout.write(x) print return headers = {&#39;User-Agent&#39;: &#39;Mozilla/5.0 (X11; Linux i686; rv:7.0.1) Gecko/20100101 Firefox/7.0.1&#39;} mprint(&#39;[-] Initialization...&#39;) s = requests.session() s.headers.update(headers) print &#39;done&#39; mprint(&#39;[-] Gathering JSESSIONID.</description>
    </item>
    
    <item>
      <title>Envío y recepción de JSON</title>
      <link>https://www.wikiod.com/es/python-requests/envio-y-recepcion-de-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/python-requests/envio-y-recepcion-de-json/</guid>
      <description>Publicación de JSON # Para publicar un cuerpo JSON, pase una estructura de datos de Python al argumento json; aquí se publica un diccionario, pero cualquier cosa que se pueda codificar en JSON servirá:
import requests # Create a dictionary to be sent. json_data = {&#39;foo&#39;: [&#39;bar&#39;, &#39;baz&#39;], &#39;spam&#39;: True, &#39;eggs&#39;: 5.5} # Send the data. response = requests.post(url=&#39;http://example.com/api/foobar&#39;, json=json_data) print(&amp;quot;Server responded with %s&amp;quot; % response.status_code) requests se encarga de codificar a JSON por usted y establece Content-Type en application/json.</description>
    </item>
    
    <item>
      <title>Marco Django</title>
      <link>https://www.wikiod.com/es/python-requests/marco-django/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/python-requests/marco-django/</guid>
      <description>Instalación y configuración # Django es un marco de trabajo completo para el desarrollo web. Alimenta algunos de los sitios web más populares de Internet.
Para instalar el marco; usa la herramienta pip:
pip install django Si está instalando esto en OSX o Linux, el comando anterior puede generar un error de permiso; para evitar este error, instale el paquete para su cuenta de usuario o use un entorno virtual:</description>
    </item>
    
    <item>
      <title>Uso de solicitudes detrás de un proxy</title>
      <link>https://www.wikiod.com/es/python-requests/uso-de-solicitudes-detras-de-un-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/python-requests/uso-de-solicitudes-detras-de-un-proxy/</guid>
      <description>Configuración de proxy en código Python # Si su código se ejecuta detrás de un proxy y conoce el punto final, puede configurar esta información en su código.
requests acepta un parámetro proxies. Este debería ser un diccionario que asigne el protocolo a la URL del proxy.
proxies = { &#39;http&#39;: &#39;http://proxy.example.com:8080&#39;, &#39;https&#39;: &#39;http://secureproxy.example.com:8090&#39;, } Tenga en cuenta que en el diccionario hemos definido la URL del proxy para dos protocolos separados: HTTP y HTTPS.</description>
    </item>
    
    <item>
      <title>archivos</title>
      <link>https://www.wikiod.com/es/python-requests/archivos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/python-requests/archivos/</guid>
      <description>Parámetros # Parámetros Función archivo JSON Lista de rutas a los archivos. tipo_de_contenido Tipos MIME encabezados Encabezados HTTP La variable r en los ejemplos contiene los datos binarios completos de cualquier archivo que estés enviando.
Carga sencilla de archivos # url = &#39;http://your_url&#39; files = {&#39;file&#39;: open(&#39;myfile.test&#39;, &#39;rb&#39;)} r = requests.post(url, files=files) Carga de archivos con parámetros manuales # url = &#39;http://httpbin.org/post&#39; files = {&#39;file&#39;: (&#39;report.xls&#39;, open(&#39;report.xls&#39;, &#39;rb&#39;), &#39;application/vnd.ms-excel&#39;, {&#39;Expires&#39;: &#39;0&#39;})} r = requests.</description>
    </item>
    
  </channel>
</rss>
