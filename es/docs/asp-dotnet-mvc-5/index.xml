<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>asp.net-mvc-5 Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/asp-dotnet-mvc-5/</link>
    <description>Recent content in asp.net-mvc-5 Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/asp-dotnet-mvc-5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con asp.net-mvc-5</title>
      <link>https://www.wikiod.com/es/asp-dotnet-mvc-5/primeros-pasos-con-aspnet-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet-mvc-5/primeros-pasos-con-aspnet-mvc-5/</guid>
      <description>Novedades en ASP.NET MVC 5 # Filtros de autenticación Are a new kind of filter added in ASP.NET MVC 5.0 .That run prior to authorization filters in the ASP.NET MVC pipeline and allow you to specify authentication logic per-action, per-controller, or globally for all controllers. Authentication filters process credentials in the request and provide a corresponding principal. Authentication filters can also add authentication challenges in response to unauthorized requests. 2.Anulaciones de filtro You can now override which filters apply to a given action method or controller by specifying an override filter.</description>
    </item>
    
    <item>
      <title>Enrutamiento de atributos en mvc-5</title>
      <link>https://www.wikiod.com/es/asp-dotnet-mvc-5/enrutamiento-de-atributos-en-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet-mvc-5/enrutamiento-de-atributos-en-mvc-5/</guid>
      <description>Sintaxis # {productId:int}/{productTitle} Asignado a ProductsController.Show (int id)
{nombre de usuario} asignado a ProfilesController.Show (cadena de nombre de usuario)
{nombre de usuario}/catalogs/{catalogId:int}/{catalogTitle} asignado a CatalogsController.Show(string nombre de usuario, int catalogId)
El enrutamiento es cómo ASP.NET MVC hace coincidir un URI con una acción. MVC 5 admite un nuevo tipo de enrutamiento, llamado enrutamiento de atributos. Como su nombre lo indica, el enrutamiento de atributos usa atributos para definir rutas. El enrutamiento de atributos le brinda más control sobre los URI en su aplicación web.</description>
    </item>
    
    <item>
      <title>Crear ayudantes HTML</title>
      <link>https://www.wikiod.com/es/asp-dotnet-mvc-5/crear-ayudantes-html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet-mvc-5/crear-ayudantes-html/</guid>
      <description>Los ayudantes HTML son una forma muy útil de crear elementos HTML en vistas utilizando el marco MVC. Con un poco de tiempo, su equipo realmente puede beneficiarse al usarlos. Ayuda a mantener el código limpio y propenso a errores.
Para usar los ayudantes, primero debe agregar una directiva @using dentro de la vista, o agregar el espacio de nombres dentro del archivo Web.config ubicado en la carpeta Views.
Crea un ayudante simple: un div con un texto en él # public static class MyHelpers { public static MvcHtmlString MyCustomDiv(this HtmlHelper htmlHelper, string text, object htmlAttributes = null) { var mainTag = new TagBuilder(&amp;quot;div&amp;quot;); mainTag.</description>
    </item>
    
    <item>
      <title>Controlador asíncrono en MVC 5</title>
      <link>https://www.wikiod.com/es/asp-dotnet-mvc-5/controlador-asincrono-en-mvc-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/asp-dotnet-mvc-5/controlador-asincrono-en-mvc-5/</guid>
      <description>Definición # Uso de un controlador asíncrono en ASP.NET MVC. La clase AsyncController le permite escribir métodos de acción asincrónicos. Puede usar métodos de acción asincrónicos para solicitudes de ejecución prolongada que no estén vinculadas a la CPU. Esto evita bloquear el trabajo del servidor web mientras se procesa la solicitud.
Controlador asíncrono # public async Task&amp;lt;actionresult&amp;gt; Index() { return View(&amp;quot;View&amp;quot;, await db.UserMasers.ToListAsync()); } </description>
    </item>
    
  </channel>
</rss>
