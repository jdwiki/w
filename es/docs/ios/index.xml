<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de iOS on </title>
    <link>https://www.wikiod.com/es/docs/ios/</link>
    <description>Recent content in Tutorial de iOS on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con iOS</title>
      <link>https://www.wikiod.com/es/ios/primeros-pasos-con-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/primeros-pasos-con-ios/</guid>
      <description>Creación de una aplicación de vista única predeterminada # Para desarrollar una aplicación para iOS, debe comenzar con una aplicación llamada Xcode. Hay otras herramientas alternativas que puede usar, pero Xcode es la herramienta oficial de Apple. Tenga en cuenta, sin embargo, que solo se ejecuta en macOS. La última versión oficial es Xcode 8.3.3 con Xcode 9 (actualmente en versión beta) que se lanzará a finales de este año.</description>
    </item>
    
    <item>
      <title>UIViews personalizados de archivos XIB</title>
      <link>https://www.wikiod.com/es/ios/uiviews-personalizados-de-archivos-xib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/uiviews-personalizados-de-archivos-xib/</guid>
      <description>De Apple: Crear una vista personalizada que se represente en Interface Builder
• Nota: tenga en cuenta que si utiliza fuentes &amp;lsquo;personalizadas&amp;rsquo; sofisticadas en sus elementos XIB (como UILabel, UITextField, etc.), el tiempo de carga inicial de su XIB será mayor dependiendo de la fuente elegida y la versión del sistema.
Elementos de cableado # Crear un archivo XIB
Barra de menú de Xcode &amp;gt; Archivo &amp;gt; Nuevo &amp;gt; Archivo. Seleccione iOS, Interfaz de usuario y luego &amp;ldquo;Ver&amp;rdquo;:</description>
    </item>
    
    <item>
      <title>Etiqueta de interfaz de usuario</title>
      <link>https://www.wikiod.com/es/ios/etiqueta-de-interfaz-de-usuario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/etiqueta-de-interfaz-de-usuario/</guid>
      <description>La clase UILabel implementa una vista de texto de solo lectura. Puede usar esta clase para dibujar una o varias líneas de texto estático, como las que podría usar para identificar otras partes de su interfaz de usuario. La clase base UILabel proporciona soporte para estilos simples y complejos del texto de la etiqueta. También puede controlar aspectos de la apariencia, como si la etiqueta usa una sombra o se dibuja con un resaltado.</description>
    </item>
    
    <item>
      <title>Pasar datos entre controladores de vista</title>
      <link>https://www.wikiod.com/es/ios/pasar-datos-entre-controladores-de-vista/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/pasar-datos-entre-controladores-de-vista/</guid>
      <description>Uso del patrón de delegado (devolución de datos) # Para pasar datos del controlador de vista actual al controlador de vista anterior, puede usar el patrón de delegado.
Este ejemplo asume que ha realizado un segue en Interface Builder y que ha establecido el identificador de segue en showSecondViewController. Los puntos de venta y las acciones también deben estar conectados a los nombres en el siguiente código.
Controlador de primera vista</description>
    </item>
    
    <item>
      <title>Diseño automático</title>
      <link>https://www.wikiod.com/es/ios/diseno-automatico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/diseno-automatico/</guid>
      <description>El diseño automático calcula dinámicamente el tamaño y la posición de todas las vistas en su jerarquía de vistas, en función de las restricciones impuestas a esas vistas. Fuente
Sintaxis # NSLayoutConstraint(elemento: Cualquiera, atributo: NSLayoutAttribute, relatedBy: NSLayoutRelation, toItem: Cualquiera?, atributo: NSLayoutAttribute, multiplicador: CGFloat, constante: CGFloat) // Crear una restricción mediante programación Vistas del espacio uniformemente # Es común querer que dos vistas estén una al lado de la otra, centradas en su supervista.</description>
    </item>
    
    <item>
      <title>UIAlertController</title>
      <link>https://www.wikiod.com/es/ios/uialertcontroller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/uialertcontroller/</guid>
      <description>Un objeto UIAlertController muestra un mensaje de alerta al usuario. Esta clase reemplaza las clases UIActionSheet y UIAlertView para visualización de alertas. Después de configurar el controlador de alerta con el acciones y estilo que desee, preséntelo usando el Método presentViewController:animated:completion:.
De Documentación de Apple
UIAlertController en Swift
Vistas de alerta con UIAlertController # UIAlertView y UIActionSheet están en desuso en iOS 8 y versiones posteriores. Así que Apple introdujo un nuevo controlador para AlertView y ActionSheet llamado UIAlertController, cambiando el preferredStyle, puede cambiar entre AlertView y ActionSheet.</description>
    </item>
    
    <item>
      <title>UILocalNotificación</title>
      <link>https://www.wikiod.com/es/ios/uilocalnotificacion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/uilocalnotificacion/</guid>
      <description>Las notificaciones locales permiten que su aplicación notifique al usuario sobre el contenido que no requiere el uso de un servidor.
A diferencia de las notificaciones remotas que se activan desde un servidor, las notificaciones locales se programan y activan dentro de una aplicación. Las notificaciones en general están destinadas a aumentar la interacción del usuario con la aplicación, invitando o tentando al usuario a abrirla e interactuar con ella.</description>
    </item>
    
    <item>
      <title>Notificaciones push</title>
      <link>https://www.wikiod.com/es/ios/notificaciones-push/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/notificaciones-push/</guid>
      <description>Sintaxis # UIUserNotificationSettings.types: UIUserNotificationType // Una máscara de bits de los tipos de notificación que su aplicación puede usar UIUserNotificationSettings.categories: Set // Los grupos de acciones registrados de la aplicación Parámetros # Parámetro Descripción información de usuario Un diccionario que contiene información de notificación remota, que puede incluir un número de placa para el icono de la aplicación, un sonido de alerta, un mensaje de alerta, un identificador de notificación y datos personalizados.</description>
    </item>
    
    <item>
      <title>Color de interfaz de usuario</title>
      <link>https://www.wikiod.com/es/ios/color-de-interfaz-de-usuario/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/color-de-interfaz-de-usuario/</guid>
      <description>Creando un UIColor # Hay muchas formas de crear un UIColor:
Rápido
Usando uno de los colores predefinidos:
let redColor = UIColor.redColor() let blueColor: UIColor = .blueColor() // In Swift 3, the &amp;quot;Color()&amp;quot; suffix is removed: let redColor = UIColor.red let blueColor: UIColor = .blue Si el compilador ya sabe que la variable es una instancia de UIColor, puede omitir el tipo por completo:
let view = UIView() view.backgroundColor = .</description>
    </item>
    
    <item>
      <title>UITableView</title>
      <link>https://www.wikiod.com/es/ios/uitableview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/ios/uitableview/</guid>
      <description>Una vista simple, ampliamente utilizada pero muy poderosa que puede presentar datos en forma de lista usando filas y una sola columna. Los usuarios pueden desplazarse verticalmente por los elementos en una vista de tabla y, opcionalmente, manipular y seleccionar contenido.
Sintaxis # - (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath;
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section;
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section;
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section;
- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section;
- (UITableViewCellAccessoryType)tableView:(UITableView *)tableView accessoryTypeForRowWithIndexPath:(NSIndexPath *)indexPath</description>
    </item>
    
  </channel>
</rss>
