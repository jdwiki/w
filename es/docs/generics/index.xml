<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial genéricos on </title>
    <link>https://www.wikiod.com/es/docs/generics/</link>
    <description>Recent content in Tutorial genéricos on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/generics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con los genéricos</title>
      <link>https://www.wikiod.com/es/generics/primeros-pasos-con-los-genericos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/generics/primeros-pasos-con-los-genericos/</guid>
      <description>Disponibilidad # Los genéricos estuvieron disponibles con:
.NET Framework 2.0 (y la versión 2.0 del marco compacto). Java en la versión 5. Common Lisp desde que fue estandarizado&amp;hellip; </description>
    </item>
    
    <item>
      <title>Genéricos en Java</title>
      <link>https://www.wikiod.com/es/generics/genericos-en-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/generics/genericos-en-java/</guid>
      <description>Sintaxis # clase MiClase&amp;lt;T1, T2 extiende CharSequence&amp;gt; implementa Comparable&amp;lt;MiClase&amp;gt; //... interface MyListInterface&amp;lt;T extends Serializable&amp;gt; extends List&amp;lt;T&amp;gt; //... public &amp;lt;T1, T2 extends Instant&amp;gt; T1 provideClone(T1 toClone, T2 instant&amp;gt; //... Public static List&amp;lt;CharSequence&amp;gt; safe(Colección&amp;lt;? extiende CharSequence&amp;gt; l) { return new ArrayList&amp;lt;&amp;gt;(l);} Set&amp;lt;String&amp;gt; cadenas = Collections.singleton(&amp;quot;Hola mundo&amp;quot;); Lista&amp;lt;CharSequence&amp;gt; chsList = seguro(cadenas); El borrado de tipo limita la reflexión, aunque eso no es específico de JVM, por ejemplo Ceylon [usa genéricos cosificados](http://ceylon-lang.org/documentation/1.2/spec /html/execution.html#reification).
El soporte de tipo existencial no es necesariamente compatible con otros lenguajes en esta forma: Kotlin [lo admite a través de proyecciones de tipo](https://kotlinlang.</description>
    </item>
    
  </channel>
</rss>
