<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>apache-kafka Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/apache-kafka/</link>
    <description>Recent content in apache-kafka Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/apache-kafka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con apache-kafka</title>
      <link>https://www.wikiod.com/es/apache-kafka/primeros-pasos-con-apache-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-kafka/primeros-pasos-con-apache-kafka/</guid>
      <description>Instalación o configuración # Paso 1. Instalar Java 7 u 8
Paso 2. Descargue Apache Kafka en: http://kafka.apache.org/downloads.html
Por ejemplo, intentaremos descargar Apache Kafka 0.10.0.0
Paso 3. Extraiga el archivo comprimido.
En Linux:
tar -xzf kafka_2.11-0.10.0.0.tgz En la ventana: haga clic con el botón derecho &amp;ndash;&amp;gt; Extraer aquí
Paso 4. Iniciar Zookeeper
cd kafka_2.11-0.10.0.0 Linux:
bin/zookeeper-server-start.sh config/zookeeper.properties Ventanas:
bin/windows/zookeeper-server-start.bat config/zookeeper.properties Paso 5. Inicie el servidor Kafka
Linux:
bin/kafka-server-start.sh config/server.properties Ventanas:</description>
    </item>
    
    <item>
      <title>herramientas de la consola kafka</title>
      <link>https://www.wikiod.com/es/apache-kafka/herramientas-de-la-consola-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-kafka/herramientas-de-la-consola-kafka/</guid>
      <description>Kafka ofrece herramientas de línea de comandos para administrar temas, grupos de consumidores, consumir y publicar mensajes, etc.
Importante: Los scripts de la consola de Kafka son diferentes para las plataformas basadas en Unix y Windows. En los ejemplos, es posible que deba agregar la extensión de acuerdo con su plataforma.
Linux: scripts ubicados en bin/ con extensión .sh.
Windows: scripts ubicados en bin\windows\ y con extensión .bat.
Kafka-consola-productor # Esta herramienta le permite generar mensajes desde la línea de comandos.</description>
    </item>
    
    <item>
      <title>Grupos de consumidores y gestión de compensaciones</title>
      <link>https://www.wikiod.com/es/apache-kafka/grupos-de-consumidores-y-gestion-de-compensaciones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-kafka/grupos-de-consumidores-y-gestion-de-compensaciones/</guid>
      <description>Parámetros # Parámetro Descripción grupo.id El nombre del Grupo de Consumidores. enable.auto.commit Comprometer compensaciones automáticamente; predeterminado: verdadero. auto.commit.interval.ms El retraso mínimo en milisegundos entre confirmaciones (requiere enable.auto.commit=true); predeterminado: 5000. auto.offset.restablecer Qué hacer cuando no se encuentra un desplazamiento comprometido válido; predeterminado: último.(+) (+) Valores posibles Descripción más temprano Restablece automáticamente la compensación a la compensación más antigua. último Restablece automáticamente el desplazamiento al último desplazamiento. ninguno Lanza una excepción al consumidor si no se encuentra una compensación anterior para el grupo del consumidor.</description>
    </item>
    
    <item>
      <title>SerializadorDeserializador personalizado</title>
      <link>https://www.wikiod.com/es/apache-kafka/serializadordeserializador-personalizado/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-kafka/serializadordeserializador-personalizado/</guid>
      <description>Kafka almacena y transporta matrices de bytes en su cola. Los (des) serializadores son responsables de traducir entre la matriz de bytes proporcionada por Kafka y los POJO.
Sintaxis # public void configure(Map&amp;lt;String, ?&amp;gt; config, boolean isKey); public T deserialize(String topic, byte[] bytes); byte público[] serializar(String topic, T obj); Parámetros # parámetros detalles configuración las propiedades de configuración (Propiedades) pasadas al Productor o Consumidor en el momento de la creación, como un mapa.</description>
    </item>
    
    <item>
      <title>ProductorConsumidor en Java</title>
      <link>https://www.wikiod.com/es/apache-kafka/productorconsumidor-en-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/apache-kafka/productorconsumidor-en-java/</guid>
      <description>Este tema muestra cómo producir y consumir registros en Java.
ConsumidorSimple (Kafka &amp;gt;= 0.9.0) # La versión 0.9 de Kafka introdujo un rediseño completo del consumidor de kafka. Si está interesado en el antiguo SimpleConsumer (0.8.X), eche un vistazo a esta página. Si su instalación de Kafka es más reciente que 0.8.X, los siguientes códigos deberían funcionar de inmediato.
Configuración e inicialización # Kafka 0.9 ya no es compatible con Java 6 o Scala 2.</description>
    </item>
    
  </channel>
</rss>
