<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial de jira on </title>
    <link>https://www.wikiod.com/es/docs/jira/</link>
    <description>Recent content in tutorial de jira on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/jira/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con jira</title>
      <link>https://www.wikiod.com/es/jira/primeros-pasos-con-jira/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jira/primeros-pasos-con-jira/</guid>
      <description>Inicie una instancia local de JIRA # La forma más fácil de ejecutar una instancia local de JIRA es instalar el SDK y ejecutar
atlas-run-standalone Para obtener más detalles, consulte https://www.wikiod.com/es/jira/inicio-de-una-instancia-de-prueba-local-de-jira
Tenga en cuenta que esto ejecuta una instancia de prueba local y no está diseñado para producción.
Guía de instalación # Hay una guía de instalación para ejecutar un servidor JIRA en Windows o Linux/Mac ( ver Instalación de aplicaciones JIRA)</description>
    </item>
    
    <item>
      <title>Inicio de una instancia de prueba local de JIRA</title>
      <link>https://www.wikiod.com/es/jira/inicio-de-una-instancia-de-prueba-local-de-jira/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jira/inicio-de-una-instancia-de-prueba-local-de-jira/</guid>
      <description>Para iniciar una instancia de prueba de JIRA en una máquina local, Atlassian-SDK es el camino a seguir. Esto es útil para probar el propio JIRA, desarrollar y depurar complementos de JIRA. El SDK está disponible para Windows, Linux y Mac.
Consulte la guía de instalación del SDK de Atlassian. Para ejecutar Atlassian SDK correctamente, se debe instalar Oracle Java SE Development Kit 8 (JDK). ¡OpendJDK no funciona!
Parámetros # Parámetro (breve) Descripción &amp;ndash;versión (-v) Versión de la aplicación a ejecutar (por defecto: última versión).</description>
    </item>
    
    <item>
      <title>Uso de la API del cliente de Jira</title>
      <link>https://www.wikiod.com/es/jira/uso-de-la-api-del-cliente-de-jira/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/jira/uso-de-la-api-del-cliente-de-jira/</guid>
      <description>Obtener problemas de una consulta JQL # final AsynchronousJiraRestClientFactory factory = new AsynchronousJiraRestClientFactory(); restClient = factory.createWithBasicHttpAuthentication(URI.create(JIRA_SERVER), JIRA_LOGIN, JIRA_PASSWORD); getFilteredIssues(&amp;quot;project = TestProject&amp;quot;); public Iterable&amp;lt;Issue&amp;gt; getFilteredIssues(String filterJql) throws Exception { final SearchRestClient searchClient = this.connection.getRestClient().getSearchClient(); HashSet&amp;lt;String&amp;gt; fields = Sets.newHashSet(&amp;quot;*all&amp;quot;); int total = Integer.MAX_VALUE; final ArrayList&amp;lt;Issue&amp;gt; issuesList = new ArrayList&amp;lt;&amp;gt;(); while(issuesList.size() &amp;lt; total){ Promise&amp;lt;SearchResult&amp;gt; promiseResult = searchClient.searchJql(filterJql, 50, issuesList.size(), fields); final SearchResult issues = promiseResult.get(); issuesList.addAll((Collection&amp;lt;? extends Issue&amp;gt;) issues.getIssues()); if (total == Integer.MAX_VALUE) { total = issues.</description>
    </item>
    
  </channel>
</rss>
