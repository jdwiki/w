<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial maya on </title>
    <link>https://www.wikiod.com/es/docs/maya/</link>
    <description>Recent content in tutorial maya on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/maya/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con maya</title>
      <link>https://www.wikiod.com/es/maya/comenzando-con-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/maya/comenzando-con-maya/</guid>
      <description>Instalación # Maya admite 3 entornos de programación principales. Cada uno tiene diferentes requisitos de configuración.
MEL # El lenguaje de secuencias de comandos MEL se incluye con la aplicación Maya. Habilitado de forma predeterminada, los usuarios pueden probar MEL en la ventana de escucha de secuencias de comandos en una copia en ejecución de Maya.
Los archivos MEL son archivos de texto con la extensión .mel. Se pueden cargar en una sesión de Maya en ejecución usando el comando source en el oyente o en otro script MEL.</description>
    </item>
    
    <item>
      <title>Caminos de Python Maya</title>
      <link>https://www.wikiod.com/es/maya/caminos-de-python-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/maya/caminos-de-python-maya/</guid>
      <description>Esta página debe cubrir varias formas de configurar las rutas de Maya python: userSetup, maya.env, variables de entorno, etc.
Usando userSetup.py # Agregue rutas arbitrarias al entorno de Maya Python en el archivo userSetup.py. userSetup.py es un archivo de Python (no un módulo) que se ejecuta automáticamente al iniciar Maya. userSetup.py puede residir en varios lugares, según el sistema operativo y las variables de entorno.
Cuando se inicie Maya, ejecutará el contenido del archivo userSetup.</description>
    </item>
    
    <item>
      <title>Creación de la interfaz de usuario de Maya</title>
      <link>https://www.wikiod.com/es/maya/creacion-de-la-interfaz-de-usuario-de-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/maya/creacion-de-la-interfaz-de-usuario-de-maya/</guid>
      <description>Parámetros # parámetro detalles e / editar le dice a Maya que quiere cambiar el valor de una propiedad existente q / consulta le dice a Maya que quiere obtener el valor de una propiedad existente Maya viene con un conjunto de herramientas de interfaz de usuario bastante completo que incluye ventanas, diseños y una variedad de controles. Esto se implementa mediante el marco QT en C++, pero se expone a los usuarios de MEL y Python a través del conjunto de comandos predeterminado de Maya.</description>
    </item>
    
    <item>
      <title>Creando PyQt GUI con Maya</title>
      <link>https://www.wikiod.com/es/maya/creando-pyqt-gui-con-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/maya/creando-pyqt-gui-con-maya/</guid>
      <description>Creando una Ventana PyQt # Este es un ejemplo muy básico de cómo cargar un archivo pyqt ui en maya con pyqt libs. En esta solución, realmente no necesita convertir su archivo pyqt ui en un archivo python. Simplemente puede cargar su pyqt ui.
from PyQt4 import QtCore, QtGui, uic import maya.OpenMayaUI as mui import sip baseUI = &amp;quot;/user/foo/bar/basic.ui&amp;quot; baseUIClass, baseUIWidget = uic.loadUiType(baseUI) class Ui_MainWindow(baseUIWidget, baseUIClass): def __init__(self,parent=None): super(baseUIWidget, self).__init__(parent) self.</description>
    </item>
    
    <item>
      <title>Encontrar objetos de escena</title>
      <link>https://www.wikiod.com/es/maya/encontrar-objetos-de-escena/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/maya/encontrar-objetos-de-escena/</guid>
      <description>Encuentra objetos por nombre # Use los comandos ls() para buscar objetos por nombre:
freds = cmds.ls(&amp;quot;fred&amp;quot;) #finds all objects in the scene named exactly &#39;fred&#39;, ie [u&#39;fred&#39;, u&#39;|group1|fred&#39;] Utilice * como comodín:
freds = cmds.ls(&amp;quot;fred*&amp;quot;) # finds all objects whose name starts with &#39;fred&#39; # [u&#39;fred&#39;, u&#39;frederick&#39;, u&#39;fred2&#39;] has_fred = cmds.ls(&amp;quot;*fred*&amp;quot;) # [u&#39;fred&#39;, u&#39;alfred&#39;, u&#39;fredericka&#39;] ls() toma múltiples argumentos de cadena de filtro:
cmds.ls(&amp;quot;fred&amp;quot;, &amp;quot;barney&amp;quot;) # [u&#39;fred&#39;, u&#39;|group1|barney&#39;] También puede aceptar un argumento iterable:</description>
    </item>
    
    <item>
      <title>Explicación de los comandos básicos de Maya</title>
      <link>https://www.wikiod.com/es/maya/explicacion-de-los-comandos-basicos-de-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/maya/explicacion-de-los-comandos-basicos-de-maya/</guid>
      <description>¿Qué se establece/obtiene Attr? # establecer Attr
Básicamente, como cualquier otro idioma, setAttr puede establecer un valor para un atributo específico de un nodo o cualquier contexto. Y es compatible con una amplia gama de opciones. Para obtener instrucciones detalladas, visite la documentación oficial de maya aquí.
Aquí hay un ejemplo mínimo de setAttr
nodeName = &amp;quot;pSphere1&amp;quot; cmds.setAttr(&amp;quot;%s.tx&amp;quot; % nodeName, 10) getAttr Igual que setAttr aquí, devolverá el valor de un atributo específico de un nodo.</description>
    </item>
    
    <item>
      <title>Videotutoriales en línea de Maya</title>
      <link>https://www.wikiod.com/es/maya/videotutoriales-en-linea-de-maya/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/maya/videotutoriales-en-linea-de-maya/</guid>
      <description>Tutoriales en video en línea disponibles # Hay muchos tutoriales en video en línea para maya, python y pyqt. Lo que le dará acceso a un conocimiento profundo de la programación maya y python en maya. Algunos también están cubiertos con pyqt. Aquí hay algunos y siéntase libre de agregar más aquí.
https://www.udemy.com/python-for-maya/learn/v4/overview Por Dhruv Gobierno https://cmivfx.com/products/316-pyqt4-ui-development-for-maya Por justin https://cmivfx.com/products/167-python-introduction-vol-01&amp;mdash;maya Por justin https://cmivfx.com/products/173-python-for-maya-vol-02 Por Justin https://www.cgcircuit.com/bundle-details.php?val=21 API de matemáticas y maya </description>
    </item>
    
  </channel>
</rss>
