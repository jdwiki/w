<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de pygame on </title>
    <link>https://www.wikiod.com/es/docs/pygame/</link>
    <description>Recent content in Tutorial de pygame on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/pygame/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comenzando con pygame</title>
      <link>https://www.wikiod.com/es/pygame/comenzando-con-pygame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pygame/comenzando-con-pygame/</guid>
      <description>Un simple &amp;lsquo;juego&amp;rsquo; # Importar e inicializar # Cada módulo debe importarse y pygame no es una excepción. Aunque necesitamos llamar a la función pygame.init() para que todos los módulos importados en pygame se inicialicen correctamente. Si olvidamos esto, algunos módulos no funcionarán. La función también devuelve una tupla de todas las inicializaciones exitosas y fallidas (no generará un error si un módulo no se inicializa).
import pygame successes, failures = pygame.</description>
    </item>
    
    <item>
      <title>Manejo de eventos</title>
      <link>https://www.wikiod.com/es/pygame/manejo-de-eventos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pygame/manejo-de-eventos/</guid>
      <description>Bucle de eventos # Pygame registrará todos los eventos del usuario en una cola de eventos que se puede recibir con el código pygame.event.get(). Cada elemento en esta cola es un objeto Evento y todos tendrán el atributo tipo, que es un número entero que representa qué tipo de evento es. En el módulo pygame hay constantes enteras predefinidas que representan el tipo. Excepto por este atributo, los eventos tienen diferentes atributos.</description>
    </item>
    
    <item>
      <title>Creando una ventana en pygame - pygame.display.set_mode()</title>
      <link>https://www.wikiod.com/es/pygame/creando-una-ventana-en-pygame---pygamedisplayset_mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pygame/creando-una-ventana-en-pygame---pygamedisplayset_mode/</guid>
      <description>Sintaxis # pygame.display.set_mode(resolución=(0,0), banderas=0, profundidad=0) # Devuelve una pygame.Surface que representa la ventana en pantalla banderas = pygame.PANTALLA COMPLETA | pygame.OPENGL # Las banderas se pueden combinar usando el &amp;ldquo;|&amp;rdquo; (O bit a bit o &amp;ldquo;tubería&amp;rdquo;) carácter. Parámetros # parámetro explicacion resolución un par de números que representan el ancho y el alto de la ventana banderas opciones adicionales que cambian el tipo de ventana - ver &amp;ldquo;Observaciones&amp;rdquo; para banderas disponibles profundidad cantidad de bits utilizados para el color Los valores posibles para los argumentos bandera son: bandera descripción pygame.</description>
    </item>
    
    <item>
      <title>Adición de música de fondo y efectos de sonido</title>
      <link>https://www.wikiod.com/es/pygame/adicion-de-musica-de-fondo-y-efectos-de-sonido/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pygame/adicion-de-musica-de-fondo-y-efectos-de-sonido/</guid>
      <description>Intente reproducir música en &amp;lsquo;.wav&amp;rsquo; en lugar de &amp;lsquo;.mp3&amp;rsquo;. En &amp;lsquo;.mp3&amp;rsquo; la música se retrasa.
Ejemplo para agregar música en pygame # import pygame file = &#39;some.mp3&#39; pygame.init() pygame.mixer.init() pygame.mixer.music.load(file) pygame.mixer.music.play(-1) # If the loops is -1 then the music will repeat indefinitely. Ejemplo para agregar una lista de reproducción de música en pygame # import pygame import time pygame.mixer.init() pygame.display.init() screen = pygame.display.set_mode ( ( 420 , 240 ) ) playlist = list() playlist.</description>
    </item>
    
    <item>
      <title>Creando una ventana de pygame simple</title>
      <link>https://www.wikiod.com/es/pygame/creando-una-ventana-de-pygame-simple/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pygame/creando-una-ventana-de-pygame-simple/</guid>
      <description>El código completo # import pygame pygame.init() WIDTH = 300 HEIGHT = 200 SCREEN = pygame.display.set_mode((WIDTH, HEIGHT)) pygame.display.set_caption(&#39;My Game&#39;) WHITE = (255, 255, 255) BLACK = (0, 0, 0) RED = (255, 0, 0) GREEN = (0, 255, 0) BLUE = (0, 0, 255) YELLOW = (255, 255, 255) SCREEN.fill(RED) pygame.display.flip() is_running = True while is_running: for event in pygame.event.get(): if event.type == pygame.QUIT: is_running = False pygame.quit() Importando e inicializando pygame</description>
    </item>
    
    <item>
      <title>Dibujar en la pantalla</title>
      <link>https://www.wikiod.com/es/pygame/dibujar-en-la-pantalla/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pygame/dibujar-en-la-pantalla/</guid>
      <description>Sintaxis # pygame.draw.rect(Superficie, color, Rect, ancho=0) pygame.draw.polygon(Superficie, color, lista de puntos, ancho=0) pygame.draw.circle(Superficie, color, posición, radio, ancho=0) pygame.draw.ellipse(Superficie, color, Rect, ancho=0) pygame.draw.arc(Superficie, color, Rect, start_angle, stop_angle, ancho=1) pygame.draw.line(Superficie, color, start_pos, end_pos, ancho=1) pygame.draw.lines(Superficie, color, cerrado, lista de puntos, ancho=1) pygame.draw.aaline(Superficie, color, posición inicial, posición final, mezcla=1) pygame.draw.aalines(Superficie, color, cerrado, lista de puntos, blend=1) Parámetros # Parámetros Detalles Superficie La superficie sobre la que dibujar la forma. color Una secuencia de 3 o 4 enteros que representa rojo, verde y azul (y alfa), cada valor oscila entre 0 y 255.</description>
    </item>
    
    <item>
      <title>Lo escencial</title>
      <link>https://www.wikiod.com/es/pygame/lo-escencial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pygame/lo-escencial/</guid>
      <description>Dibujo y una animación básica. # Este programa dibuja algunas formas y &amp;lsquo;¡hola mundo!&amp;rsquo; y deja que una imagen vaya a cada rincón de la ventana.
el código completo: # import pygame,sys from pygame.locals import * pygame.init() FPS = 30 #frames per second setting fpsClock = pygame.time.Clock() #set up the window screen = pygame.display.set_mode((500,400), 0, 32) pygame.display.set_caption(&#39;drawing&#39;) #set up the colors black = ( 0, 0, 0) white = (255, 255, 255) red = (255, 0, 0) green = ( 0, 255, 0) blue = ( 0, 0, 255) imageImg = pygame.</description>
    </item>
    
    <item>
      <title>Creando una ventana de pygame</title>
      <link>https://www.wikiod.com/es/pygame/creando-una-ventana-de-pygame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/pygame/creando-una-ventana-de-pygame/</guid>
      <description>Si desea tener otros colores como fondo, nombre una nueva variable como red = (255,0,0) y cambie display.fill(black) a display.fill(red). Puede crear colores almacenándolos en una variable y verificando sus valores RGB desde Internet.
Creando la ventana de pygame # import pygame background_colour = (255,255,255) # For the background color of your window (width, height) = (300, 200) # Dimension of the window screen = pygame.display.set_mode((width, height)) # Making of the screen pygame.</description>
    </item>
    
  </channel>
</rss>
