<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial de componentes web on </title>
    <link>https://www.wikiod.com/es/docs/web-component/</link>
    <description>Recent content in Tutorial de componentes web on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/web-component/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primeros pasos con el componente web</title>
      <link>https://www.wikiod.com/es/web-component/primeros-pasos-con-el-componente-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/web-component/primeros-pasos-con-el-componente-web/</guid>
      <description>Disponibilidad # Implementaciones nativas
El elemento &amp;lt;plantilla&amp;gt; está implementado en todos los navegadores modernos:
Cromo, Borde, -Firefox, Ópera, safari, &amp;hellip; Los elementos personalizados customElements.define(), Shadow DOM attachShadow() y HTML Imports &amp;lt;link rel=&amp;quot;import&amp;quot;&amp;gt; se implementan en las últimas versiones de Chrome y Opera.
Polyfills
Para otros navegadores, puede usar una biblioteca de polyfill:
para elementos personalizados: de WebReflection o Webcomponents.org, para Shadow DOM: de Webcomponents.org, para Plantilla: de Neovov, para Importaciones de HTML: de Webcomponents.</description>
    </item>
    
    <item>
      <title>Prueba de componentes web</title>
      <link>https://www.wikiod.com/es/web-component/prueba-de-componentes-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/web-component/prueba-de-componentes-web/</guid>
      <description>Cosas a considerar cuando queremos probar nuestros componentes con: Estilos, Plantillas, Clases de componentes.
Paquete web y broma # Facebook utiliza Jest para probar todo el código JavaScript, incluidas las aplicaciones React. Una de las filosofías de Jest es proporcionar una experiencia integrada de &amp;ldquo;configuración cero&amp;rdquo;. Observamos que cuando los ingenieros cuentan con herramientas listas para usar, terminan escribiendo más pruebas, lo que a su vez da como resultado bases de código más estables y saludables.</description>
    </item>
    
  </channel>
</rss>
