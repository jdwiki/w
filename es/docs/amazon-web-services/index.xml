<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Amazon-web-services Tutorial on </title>
    <link>https://www.wikiod.com/es/docs/amazon-web-services/</link>
    <description>Recent content in Amazon-web-services Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/es/docs/amazon-web-services/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducción a los servicios web de Amazon</title>
      <link>https://www.wikiod.com/es/amazon-web-services/introduccion-a-los-servicios-web-de-amazon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/amazon-web-services/introduccion-a-los-servicios-web-de-amazon/</guid>
      <description>Antes de que sea demasiado tarde # Consejos y trucos para evitar situaciones desagradables
Instancias EC2 y EBS
Establecer roles de IAM. A diferencia de las etiquetas, el rol de IAM se establece de una vez por todas en la instancia de EC2 (incluso después de 4 años). Intente identificar y categorizar de antemano sus instancias para poder asignarles roles de IAM apropiados. Los roles de IAM son una buena manera de identificar sus máquinas, permitirán que Amazon almacene automáticamente las credenciales del perfil de instancia de forma segura en sus máquinas, y podrá otorgar privilegios adicionales fácilmente.</description>
    </item>
    
    <item>
      <title>Implemente una imagen de contenedor acoplable mediante ECS</title>
      <link>https://www.wikiod.com/es/amazon-web-services/implemente-una-imagen-de-contenedor-acoplable-mediante-ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/amazon-web-services/implemente-una-imagen-de-contenedor-acoplable-mediante-ecs/</guid>
      <description>Antes de poder agregar instancias de ECS a un clúster, primero debe ir a la consola de administración de EC2 y crear instancias &amp;ldquo;optimizadas por ECS&amp;rdquo; con un rol de IAM que tenga adjunta la política &amp;ldquo;AmazonEC2ContainerServiceforEC2Role&amp;rdquo;.
Vaya a su Panel EC2 y haga clic en el botón &amp;ldquo;Iniciar instancia&amp;rdquo;.
En Community AMIs, busque ecs-optimized y seleccione la que mejor se adapte a las necesidades de su proyecto. Cualquiera funcionará. Haga clic en Siguiente.</description>
    </item>
    
    <item>
      <title>Amazon Cognito</title>
      <link>https://www.wikiod.com/es/amazon-web-services/amazon-cognito/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/amazon-web-services/amazon-cognito/</guid>
      <description>Gestión de la identidad del usuario con Amazon Cognito # var app = {}; app.signUp = function(){ app.userName = $(&#39;#userName&#39;).val(); app.password = $(&#39;#password&#39;).val(); app.email = $(&#39;#form-email&#39;).val(); app.phoneNumber = $(&#39;#form-phone&#39;).val(); app.emailRegex = /^(([^&amp;lt;&amp;gt;()\[\]\.,;:\s@\&amp;quot;]+(\.[^&amp;lt;&amp;gt;()\[\]\.,;:\s@\&amp;quot;]+)*)|(\&amp;quot;.+\&amp;quot;))@(([^&amp;lt;&amp;gt;()[\]\.,;:\s@\&amp;quot;]+\.)+[^&amp;lt;&amp;gt;()[\]\.,;:\s@\&amp;quot;]{2,})$/i; /* Put the User input validation logic here. */ if (!app.userName) { alert(&amp;quot;Please provide a user name&amp;quot;); return; } if (!app.password) { alert(&amp;quot;Please provide a password&amp;quot;); return; } if (!app.email) { alert(&amp;quot;Please provide an Email address&amp;quot;); return; } if(!</description>
    </item>
    
    <item>
      <title>Formación en la nube de AWS</title>
      <link>https://www.wikiod.com/es/amazon-web-services/formacion-en-la-nube-de-aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/amazon-web-services/formacion-en-la-nube-de-aws/</guid>
      <description>Script de muestra de CloudFormation para crear una instancia EC2 junto con un grupo de seguridad con el que asociarse. # Este ejemplo creará una instancia EC2 de tipo t2.micro en la región N.Virginia que ejecuta Amazon Linux. Durante la ejecución, pedirá seleccionar el KeyPair a utilizar y una I.P. CIDR desde donde puede SSH a la instancia, use el valor predeterminado para hacer que SSH esté abierto a Internet</description>
    </item>
    
    <item>
      <title>AWSLambda</title>
      <link>https://www.wikiod.com/es/amazon-web-services/awslambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/amazon-web-services/awslambda/</guid>
      <description>AWS Lambda es un servicio que le permite ejecutar código back-end sin necesidad de aprovisionar o administrar servidores. AWS Lambda se encarga del escalado y la alta disponibilidad. El costo depende directamente de la frecuencia y el tiempo de ejecución de su código.
Encontrará ejemplos de cómo crear e implementar funciones de AWS Lambda en diferentes idiomas.
El código AWS Lambda debe escribirse sin estado. Si bien la instancia de una lambda puede conservarse y reutilizarse, nunca debe esperar esto.</description>
    </item>
    
    <item>
      <title>Amazon DynamoDB</title>
      <link>https://www.wikiod.com/es/amazon-web-services/amazon-dynamodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/amazon-web-services/amazon-dynamodb/</guid>
      <description>Operación Crud básica de DynamoDB usando NodeJS # let doc = require(&#39;dynamodb-doc&#39;); let dinamo = nuevo doc.DynamoDB(); var tblName = &#34;MiTabla&#34;; exportaciones.handler = (evento, contexto, devolución de llamada) =&gt; { readOperation(context); } function leerOperación(cnxt) { var params = { TableName: tblName, Key: { &#34;id&#34;: &#34;2013&#34;, &#34;topic&#34;: &#34;Turn It Down, Or Else!&#34; }, AttributesToGet: [ &#34;id&#34;, &#34;client_name&#34;, &#34;info&#34; ], ConsistentRead: false }; dynamo.getItem(params, function(err, data) { if (err) console.log(&#34;Error: &#34;+err); // an error occurred else { var jsonDoc = JSON.</description>
    </item>
    
    <item>
      <title>Tallo de habichuelas elástico</title>
      <link>https://www.wikiod.com/es/amazon-web-services/tallo-de-habichuelas-elastico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/amazon-web-services/tallo-de-habichuelas-elastico/</guid>
      <description>Limitaciones actuales (a partir del 03-10-2016)
Las etiquetas de entorno no se pueden cambiar una vez que se crea el Entorno, así que elija sabiamente. El ajuste de escala automático en Elastic Beanstalk está limitado a Simple y Programado, por lo que si desea utilizar Escalado por pasos, reconsidere si Elastic Beanstalk es una buena opción. Automatización con Jenkins
Existe un excelente complemento de implementación de AWSEB para Jenkins que se conectará y usará para la implementación en Elastic Beanstalk (las implementaciones azul/verde con terminación automática inactiva están a solo una casilla de verificación).</description>
    </item>
    
    <item>
      <title>Clase raíz</title>
      <link>https://www.wikiod.com/es/amazon-web-services/clase-raiz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/es/amazon-web-services/clase-raiz/</guid>
      <description>La clase raíz de la API de Amazon es la siguiente. # public class AmazonRootobject { public Itemsearchresponse ItemSearchResponse { get; set; } } public class Itemsearchresponse { public string xmlns { get; set; } public Operationrequest OperationRequest { get; set; } public Items Items { get; set; } } public class Operationrequest { public Httpheaders HTTPHeaders { get; set; } public string RequestId { get; set; } public Arguments Arguments { get; set; } public string RequestProcessingTime { get; set; } } public class Httpheaders { public Header Header { get; set; } } public class Header { public string Name { get; set; } public string Value { get; set; } } public class Arguments { public Argument[] Argument { get; set; } } public class Argument { public string Name { get; set; } public object Value { get; set; } } public class Items { public Request Request { get; set; } public string TotalResults { get; set; } public string TotalPages { get; set; } public string MoreSearchResultsUrl { get; set; } public Item[] Item { get; set; } } public class Request { public string IsValid { get; set; } public Itemsearchrequest ItemSearchRequest { get; set; } } public class Itemsearchrequest { public string Keywords { get; set; } public string[] ResponseGroup { get; set; } public string SearchIndex { get; set; } public string Sort { get; set; } } public class Item { public string ASIN { get; set; } public string ParentASIN { get; set; } public string DetailPageURL { get; set; } public Itemlinks ItemLinks { get; set; } public Smallimage SmallImage { get; set; } public Mediumimage MediumImage { get; set; } public Largeimage LargeImage { get; set; } public Imagesets ImageSets { get; set; } public Itemattributes ItemAttributes { get; set; } public OfferSummary OfferSummary { get; set; } public Offers Offers { get; set; } public Variationsummary VariationSummary { get; set; } } public class Variationsummary { public Highestprice HighestPrice { get; set; } public Lowestprice LowestPrice { get; set; } public Highestsaleprice HighestSalePrice { get; set; } public Lowestsaleprice LowestSalePrice { get; set; } } public class Highestprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Lowestprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Highestsaleprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Lowestsaleprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Itemlinks { public Itemlink[] ItemLink { get; set; } } public class Itemlink { public string Description { get; set; } public string URL { get; set; } } public class Smallimage { public string URL { get; set; } public Height Height { get; set; } public Width Width { get; set; } } public class Height { public string Units { get; set; } public string text { get; set; } } public class Width { public string Units { get; set; } public string text { get; set; } } public class Mediumimage { public string URL { get; set; } public Height1 Height { get; set; } public Width1 Width { get; set; } } public class Height1 { public string Units { get; set; } public string text { get; set; } } public class Width1 { public string Units { get; set; } public string text { get; set; } } public class Largeimage { public string URL { get; set; } public Height2 Height { get; set; } public Width2 Width { get; set; } } public class Height2 { public string Units { get; set; } public string text { get; set; } } public class Width2 { public string Units { get; set; } public string text { get; set; } } public class Imagesets { public object ImageSet { get; set; } } public class Itemattributes { public string Binding { get; set; } public string Brand { get; set; } public string Color { get; set; } public string Model { get; set; } public string Manufacturer { get; set; } public string ProductGroup { get; set; } public string Title { get; set; } public ListPrice ListPrice { get; set; } } public class ListPrice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class OfferSummary { public Lowestnewprice LowestNewPrice { get; set; } public Lowestusedprice LowestUsedPrice { get; set; } public string TotalNew { get; set; } public string TotalUsed { get; set; } public string TotalCollectible { get; set; } public string TotalRefurbished { get; set; } public Lowestrefurbishedprice LowestRefurbishedPrice { get; set; } } public class Lowestnewprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Lowestusedprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Lowestrefurbishedprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Offers { public string TotalOffers { get; set; } public string TotalOfferPages { get; set; } public string MoreOffersUrl { get; set; } public Offer Offer { get; set; } } public class Offer { public Merchant Merchant { get; set; } public Offerattributes OfferAttributes { get; set; } public Offerlisting OfferListing { get; set; } } public class Merchant { public string Name { get; set; } } public class Offerattributes { public string Condition { get; set; } } public class Offerlisting { public string OfferListingId { get; set; } public string PricePerUnit { get; set; } public Price Price { get; set; } public string Availability { get; set; } public Availabilityattributes AvailabilityAttributes { get; set; } public string IsEligibleForSuperSaverShipping { get; set; } public string IsEligibleForPrime { get; set; } public Saleprice SalePrice { get; set; } public Amountsaved AmountSaved { get; set; } public string PercentageSaved { get; set; } } public class Price { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Availabilityattributes { public string AvailabilityType { get; set; } public string MinimumHours { get; set; } public string MaximumHours { get; set; } } public class Saleprice { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } public class Amountsaved { public string Amount { get; set; } public string CurrencyCode { get; set; } public string FormattedPrice { get; set; } } Clase de negocios # using System; using System.</description>
    </item>
    
  </channel>
</rss>
