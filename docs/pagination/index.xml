<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pagination Tutorial on </title>
    <link>https://www.wikiod.com/docs/pagination/</link>
    <description>Recent content in pagination Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/pagination/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with pagination</title>
      <link>https://www.wikiod.com/pagination/getting-started-with-pagination/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pagination/getting-started-with-pagination/</guid>
      <description>Installation or Setup # Detailed instructions on getting pagination set up or installed.
Pagination solution # The following documentation describes both MySQLi and PDO supported pagination solution.
Go to https://github.com/rajdeeppaul/Pagination and download pagination.php file into your project directory. Let&amp;rsquo;s say your directory structure looks like this:
project directory | |--pagination.php (pagination script) |--index.php (file where you want to use this pagination script) And suppose you want the URL to look like this:</description>
    </item>
    
    <item>
      <title>Pagination with PHP and MySql</title>
      <link>https://www.wikiod.com/pagination/pagination-with-php-and-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pagination/pagination-with-php-and-mysql/</guid>
      <description>Parameters # Parameter Details $params = [] optional parameters for [&#39;table&#39; =&amp;gt; &#39;tableName&#39;, &#39;sort&#39; =&amp;gt; &#39;ASC&#39;, &#39;columns&#39; =&amp;gt; &#39;colId, name, etc&#39;] $attributes = [] optional list of attributes [&#39;ul-class&#39;: =&amp;gt; &#39;space separated list of classes&#39;, &#39;ul-attr&#39;: &#39;id=&amp;quot;someId&amp;quot; data-pre=&amp;quot;pre&amp;quot;&#39;, &#39;li-class&#39;: &#39;space separated list of classes&#39;, &#39;li-attr&#39;: &#39;id=&amp;quot;someid&amp;quot;&#39;] Creating a Simple Pagination # You need to include the Pagination.php in your page/s.
require_once &#39;Paginator.php&#39;; $Paginator = new Paginator(&#39;mysql:host=localhost;dbname=ng_app&#39;, &#39;root&#39;, &#39;000000&#39;); $Paginator-&amp;gt;setItemLimitPerPage(4); $Paginator-&amp;gt;setTable(&#39;comments&#39;); $Paginator-&amp;gt;createPages(); // this will create pages using PHP copy() $Paginator-&amp;gt;setCurrentPageClass(&#39;active&#39;); // set the current page class $Paginator-&amp;gt;setUrlPattern(&#39;/php_paginator/&#39;); $numPrevPage = 4; // number of pages to appear before the current page $numNextPage = 4; // number of pages to appear after the current page $paginationCssClass = &#39;pagination&#39;; Creating Pagination # &amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt; &amp;lt;!</description>
    </item>
    
  </channel>
</rss>
