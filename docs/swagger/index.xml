<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>swagger Tutorial on </title>
    <link>https://www.wikiod.com/docs/swagger/</link>
    <description>Recent content in swagger Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/swagger/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with swagger</title>
      <link>https://www.wikiod.com/swagger/getting-started-with-swagger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/swagger/getting-started-with-swagger/</guid>
      <description>Introduction - Installation - Setup (Developing in Node.js) # Introduction:
Swagger is a set of rules/specifications for a format describing REST APIs. It provides a powerful and actively developed ecosystem of tools around this formal specification like code generators and editors. The best part of Swagger is that the documentation of methods, parameters, and models are tightly integrated into the server code, allowing APIs to always stay in sync. Hereâ€™s a link giving a brief overview of what is swagger: getting-started.</description>
    </item>
    
    <item>
      <title>springfox</title>
      <link>https://www.wikiod.com/swagger/springfox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/swagger/springfox/</guid>
      <description>Override default response messages # Springfox defines a set default response messages that are applied to all API controllers by default. This includes e.g. 201 - Created and 204 - No Content, as well as several 40x responses. There might be cases, in which the default response messages don&amp;rsquo;t apply for your API. You have to build-in possibilities to deal with this:
You can turn of the default response message and define your own using the @ApiResponses annotation.</description>
    </item>
    
    <item>
      <title>swagger-ui</title>
      <link>https://www.wikiod.com/swagger/swagger-ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/swagger/swagger-ui/</guid>
      <description>It&amp;rsquo;s nice if you have fair amount of idea on following components :
REST WS Concepts (JAX-RS) Use of annotations Web application REST API standards Maven and its dependency
swagger-ui with jersey REST WS # As the official website of Swagger says :
Swagger is to define a standard, language-agnostic interface to REST APIs which allows both humans and computers to discover and understand the capabilities of the service without access to source code, documentation, or through network traffic inspection.</description>
    </item>
    
  </channel>
</rss>
