<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gstreamer Tutorial on </title>
    <link>https://www.wikiod.com/docs/gstreamer/</link>
    <description>Recent content in gstreamer Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/gstreamer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with gstreamer</title>
      <link>https://www.wikiod.com/gstreamer/getting-started-with-gstreamer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gstreamer/getting-started-with-gstreamer/</guid>
      <description>Installation or Setup # Detailed instructions on getting gstreamer set up or installed.</description>
    </item>
    
    <item>
      <title>appsrc saving application-generated media to file</title>
      <link>https://www.wikiod.com/gstreamer/appsrc-saving-application-generated-media-to-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gstreamer/appsrc-saving-application-generated-media-to-file/</guid>
      <description>saving application-generated media to file # #include &amp;lt;string.h&amp;gt; #include &amp;lt;gst/gst.h&amp;gt; #include &amp;lt;gst/app/gstappsrc.h&amp;gt; /* * an example application of using appsrc in push mode to create a file. * from buffers we push into the pipeline. */ /* S16LE 10ms frame audio */ #define BUFFER_SIZE 160 /* 300 frames = 5 minutes */ #define TOTAL_FRAMES 30000 #define QUEUED_FRAMES 30 typedef struct { GMainLoop *loop; GstElement *pipeline; GstElement *source; guint source_id; guint num_frame; } AppData; /* This method is called by the idle GSource in the mainloop.</description>
    </item>
    
  </channel>
</rss>
