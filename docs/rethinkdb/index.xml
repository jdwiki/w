<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rethinkdb Tutorial on </title>
    <link>https://www.wikiod.com/docs/rethinkdb/</link>
    <description>Recent content in rethinkdb Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/rethinkdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with rethinkdb</title>
      <link>https://www.wikiod.com/rethinkdb/getting-started-with-rethinkdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/rethinkdb/getting-started-with-rethinkdb/</guid>
      <description>Installation on Windows # Downloading # Prerequisites: We provide native 64-bit binaries for Windows 7 and above. A 64-bit version of Windows is required.
Download the ZIP archive and unpack it in a directory of your choice.
The Windows port of RethinkDB is a recent addition and hasn&amp;rsquo;t received as much tuning as the Linux and OS X versions yet. Please report any performance issues on GitHub.
Running RethinkDB # The Windows version of RethinkDB, like the Linux/OS X versions, is executed from the command line.</description>
    </item>
    
    <item>
      <title>Using RethinkDB with Docker</title>
      <link>https://www.wikiod.com/rethinkdb/using-rethinkdb-with-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/rethinkdb/using-rethinkdb-with-docker/</guid>
      <description>Basic usage # By default, RethinkDB binds all services to 127.0.0.1. So this following example will persist data to the host_data_path on the container&amp;rsquo;s host machine and available to 127.0.0.1 on the standard ports.
Service Flag Default Port Driver --driver-port 28015 Cluster --cluster-port 29015 HTTP WebUI --http-port 8080 docker run -d -v host_data_path:/data rethinkdb To open up the driver and cluster port to the external traffic you must specify the address of local interfaces or provide all.</description>
    </item>
    
    <item>
      <title>using thinky.io with RethinkDB</title>
      <link>https://www.wikiod.com/rethinkdb/using-thinkyio-with-rethinkdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/rethinkdb/using-thinkyio-with-rethinkdb/</guid>
      <description>Starting thinky in node.js # thinky is a lightweight node.js ORM for RethinkDB.
First you need to have RethinkDB running on your server.
Then install the thinky.io npm package into your project.
npm install --save thinky Now import thinky into your model file.
const thinky = require(&#39;thinky)(); const type = thinky.type Next create a model.
const User = thinky.createModel(&#39;User&#39; { email:type.string(), password: type.string() }); You can now create and save a user.</description>
    </item>
    
    <item>
      <title>Getting started with Node</title>
      <link>https://www.wikiod.com/rethinkdb/getting-started-with-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/rethinkdb/getting-started-with-node/</guid>
      <description>Installing the RethinkDB package from NPM # npm install -g rethinkdb Making a connection to RethinkDB # const r = require(&amp;ldquo;rethinkdb&amp;rdquo;);
r.connect({host: &#39;localhost&#39;, port: 28015}, (conn) =&amp;gt; console.log(conn)) // Or as a promise let rdb_conn; r.connect({host: &#39;localhost&#39;, port: 28015}).then((conn) =&amp;gt; { rdb_conn = conn; }).then(() =&amp;gt; { // Continue to use rdb_conn }); Listing all databases # r.connect({host: &#39;localhost&#39;, port: 28015}) .then((conn) =&amp;gt; { return r.dbList().run(conn); }).then((result) =&amp;gt; { // Prints out list of databases on the RethinkDB instance console.</description>
    </item>
    
  </channel>
</rss>
