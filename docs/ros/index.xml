<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ros Tutorial on </title>
    <link>https://www.wikiod.com/docs/ros/</link>
    <description>Recent content in ros Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/ros/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with ros</title>
      <link>https://www.wikiod.com/ros/getting-started-with-ros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/ros/getting-started-with-ros/</guid>
      <description>Installation # Depending on your target machine, you need to choose a supported ROS Version (or vice-versa). Although ROS installation is well documented in the ROS wiki, It might be confusing to find them. So, here&amp;rsquo;s a table of the ROS Version, target platforms &amp;amp; architecture and the links for the appropriate install guides :
ROS Version Platform Arch Status Install Guide Link Kinetic Ubuntu 16.04 (Xenial) amd64 / i386 / armhf Supported Kinetic-Xenial-guide Ubuntu 15.</description>
    </item>
    
    <item>
      <title>roslaunch</title>
      <link>https://www.wikiod.com/ros/roslaunch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/ros/roslaunch/</guid>
      <description>&amp;rsquo;node form the package&amp;rsquo; should be &amp;rsquo;node from the package&#39;
initially your say &amp;ldquo;starting&amp;rdquo; and &amp;ldquo;Stopping&amp;rdquo;, but you don&amp;rsquo;t explain how to do a controlled shutdown.
launch ros nodes and load parameters from Yaml file # roslaunch is an important tool that manages the start and stop of ROS nodes. It takes one or more &amp;ldquo;*.launch&amp;rdquo; files as arguments.
For this example, I will refer to the following (as asked in this question), so how can we execute those commands consecutively &amp;amp; automatically :</description>
    </item>
    
    <item>
      <title>Creating a package</title>
      <link>https://www.wikiod.com/ros/creating-a-package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/ros/creating-a-package/</guid>
      <description>This tutorial shows how to create a package in ROS. Packages sit inside workspaces, in the src directory. Each package directory must have a CMakeLists.txt and a package.xml files.
Creating a package using rospy # Assuming a workspace named workspace_name has been previously created in the home directory, a package named package_name can be created by executing the following command lines.
$ cd ~/workspace_name/src/ $ catkin_create_pkg package_name rospy </description>
    </item>
    
    <item>
      <title>creating a workspace</title>
      <link>https://www.wikiod.com/ros/creating-a-workspace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/ros/creating-a-workspace/</guid>
      <description>This tutorial shows how to create a workspace. A workspace is a set of directories in which a related set of ROS code lives. One can have multiple ROS workspaces, but it is possible to work only in one at a time.
Creating a Workspace # In order to create a workspace, one should run the following in the terminal:
$ mkdir -p ~/workspace_name/src $ cd ~/workspace_name/src $ catkin_init_workspace $ cd ~/workspace_name/ $ catkin_make The previous commands creates a workspace named workspace_name.</description>
    </item>
    
  </channel>
</rss>
