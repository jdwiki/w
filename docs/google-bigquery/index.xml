<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>google-bigquery Tutorial on </title>
    <link>https://www.wikiod.com/docs/google-bigquery/</link>
    <description>Recent content in google-bigquery Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/google-bigquery/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with google-bigquery</title>
      <link>https://www.wikiod.com/google-bigquery/getting-started-with-google-bigquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/google-bigquery/getting-started-with-google-bigquery/</guid>
      <description>Analyzing 50 billion Wikipedia pageviews in 5 seconds (BigQuery beginner tutorial) # Hi everyone! This is a demo I love running for people that get started with BigQuery. So let&amp;rsquo;s run some simple queries to get you started.
Setup # You will need a Google Cloud project:
Go to http://bigquery.cloud.google.com/. If it tells you to create a project, follow the link to create a project, and create a project. Come back to http://bigquery.</description>
    </item>
    
    <item>
      <title>Integration of Google&#39;s BigQuery with web application</title>
      <link>https://www.wikiod.com/google-bigquery/integration-of-googles-bigquery-with-web-application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/google-bigquery/integration-of-googles-bigquery-with-web-application/</guid>
      <description>Integration of Google&amp;rsquo;s BigQuery API with web application # In this tutorial , I will explain how to integrate Google&amp;rsquo;s BigQuery API with web application. My web application is going to get the data using BigQuery and plot a graph using d3.js and Javascript.
Each project on Google Developers Console has a clientID and you need to copy the clientID and put it as a config:
var gconfig = { &#39;client_id&#39;: &#39;ClientID&#39;, &#39;scope&#39;: &#39;https://www.</description>
    </item>
    
  </channel>
</rss>
