<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visual-foxpro Tutorial on </title>
    <link>https://www.wikiod.com/docs/visual-foxpro/</link>
    <description>Recent content in visual-foxpro Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/visual-foxpro/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with visual-foxpro</title>
      <link>https://www.wikiod.com/visual-foxpro/getting-started-with-visual-foxpro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/visual-foxpro/getting-started-with-visual-foxpro/</guid>
      <description>Hello World # In all languages traditionally the first example is printing &amp;ldquo;Hello World&amp;rdquo;. Probably doing that is easiest in VFP:
? &amp;quot;Hello World&amp;quot; Add Global Error Handler # A simple way to catch unhandled errors (exceptions) in a VFP application is to use the ON ERROR command near the beginning of your main program.
The following ON ERROR command calls a method in the current program called &amp;ldquo;errorHandler&amp;rdquo;. The values returned by ERROR (the VFP Error Number), MESSAGE (the VFP Error Message), PROGRAM (name of the currently executing program) and LINENO (the line number of the error) are passed to the errorHandler method.</description>
    </item>
    
    <item>
      <title>Operators</title>
      <link>https://www.wikiod.com/visual-foxpro/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/visual-foxpro/operators/</guid>
      <description>In VFP, operators are grouped into those:
Numeric Operators Logical Operators Character Operators Date and Time Operators Relational Operators Also there are operators, implemented as functions (such as bitwise operations, object comparison &amp;hellip;).
We will look into each by example.
Numeric Operators # Numeric operators are the easiest and almost the same as in other languages.
+, -, * and /. Addition, subtraction, multiplication and division operators (in VFP there is no integer division, you can convert a result to integer with functions INT(), CEILING() and FLOOR()).</description>
    </item>
    
    <item>
      <title>VFP Interop with .NET</title>
      <link>https://www.wikiod.com/visual-foxpro/vfp-interop-with-net/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/visual-foxpro/vfp-interop-with-net/</guid>
      <description>This topic will cover interop between VFP and .NET.
Using wwDotNetBridge to Run .NET Code # With the help of West Wind&amp;rsquo;s wwDotNetBridge, you can easily have access .NET code within a VFP program.
The white paper has all the details, but this concise example will help illustrate the basic steps to running a method in a .NET assembly.
Note that wwDotNetBridge can directly access simple properties like strings, ints, etc.</description>
    </item>
    
  </channel>
</rss>
