<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>google-spreadsheet Tutorial on </title>
    <link>https://www.wikiod.com/docs/google-spreadsheet/</link>
    <description>Recent content in google-spreadsheet Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/google-spreadsheet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with google-spreadsheet</title>
      <link>https://www.wikiod.com/google-spreadsheet/getting-started-with-google-spreadsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/google-spreadsheet/getting-started-with-google-spreadsheet/</guid>
      <description>Installation or Setup # Google Sheets is a spreadsheet application that runs on web browser. It doesn&amp;rsquo;t require any installation or setup just a Google account and a modern web browser.
The Website # Visit http://sheets.google.com to try out now! Create a new spreadsheet and start playing around.</description>
    </item>
    
    <item>
      <title>Using arrays in Google Sheets</title>
      <link>https://www.wikiod.com/google-spreadsheet/using-arrays-in-google-sheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/google-spreadsheet/using-arrays-in-google-sheets/</guid>
      <description>Syntax # ={item1,item2} ={item2,item2;item3,item4} ={{item1;item2},{item3,item4;item5,item6}} Parameters # Parameter Details itemN It could be a value, a cell reference, a range reference or a function Overview # An array of literals is written between curly brackets. Separators depends on the spreadsheet&amp;rsquo;s regional configuration settings.
To separate columns, if the decimal separator is . use , but if the decimal separator is , then use \. To separate rows use ;. Official Documentation # Google Docs editors Help # Using arrays in Google Sheets Array of literals # Formula in A1</description>
    </item>
    
    <item>
      <title>Query Function</title>
      <link>https://www.wikiod.com/google-spreadsheet/query-function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/google-spreadsheet/query-function/</guid>
      <description>Official Documentation # Google Docs editors Help # QUERY Google Charts on Google Developers # Query Language Reference (Version 0.7) Introduction into queries # Source table
Row A B C D 1 Code Product Colour Price 2 1 pen red 500 3 2 pen blue -50 4 3 pen red 0 5 4 pencil blue 17 6 5 pencil green -1.5 to select all:
= QUERY(A1:D5, &amp;quot;select *&amp;quot;) or
= QUERY(A1:D5, &amp;quot;select A, B, C, D&amp;quot;) or convert data range into array and use this formula:</description>
    </item>
    
    <item>
      <title>Add a Google Form to a web page</title>
      <link>https://www.wikiod.com/google-spreadsheet/add-a-google-form-to-a-web-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/google-spreadsheet/add-a-google-form-to-a-web-page/</guid>
      <description>Google Spreadsheets has a powerful add on called Google Forms that allows a web developer to add simple forms easily to web sites in order to collect data from users.
This article discusses the way to embed these into a web application.
I&amp;rsquo;ve also created a Youtube video with a running commentary, screenshots and so on.
The examples above are adapted from a fully functional site and this article assumes a reasonable existing knowledge of HTML/Javascript/CSS in order to use these code snippets.</description>
    </item>
    
  </channel>
</rss>
