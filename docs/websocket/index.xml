<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebSockets Tutorial on </title>
    <link>https://www.wikiod.com/docs/websocket/</link>
    <description>Recent content in WebSockets Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/websocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with WebSockets</title>
      <link>https://www.wikiod.com/websocket/getting-started-with-websockets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/websocket/getting-started-with-websockets/</guid>
      <description>web-socket Client example # This is an example of a web-socket client in javascript.
It:
Connects to a live demo server. Sends a message. Receives message(s). Disconnects after an interval. var mySocket = null; var serverUrl = &#39;wss://echo.websocket.org&#39;; // wss: is ws: but using SSL. var oWebSocket = window.WebSocket || window.MozWebSocket; if (oWebSocket) { mySocket = new oWebSocket (serverUrl); if (mySocket) { console.log (mySocket); mySocket.onopen = onSocketOpen; mySocket.onclose = onSocketClose; mySocket.</description>
    </item>
    
    <item>
      <title>Differences between WebSockets and AJAX</title>
      <link>https://www.wikiod.com/websocket/differences-between-websockets-and-ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/websocket/differences-between-websockets-and-ajax/</guid>
      <description>Ajax uses the HTTP Protocol and can send requests using POST/GET methods from Client to Server.
WebSocket is itself a protocol to communicate between Client and Server, distinct from HTTP.
In Ajax when you send a request , server sends response for that request and connection ends.
Using WebSockets when you establish a connection with server , then you can communicate between client and server as much you want and it keeps connection alive.</description>
    </item>
    
  </channel>
</rss>
