<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Component Tutorial on </title>
    <link>https://www.wikiod.com/docs/web-component/</link>
    <description>Recent content in Web Component Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/web-component/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with Web Component</title>
      <link>https://www.wikiod.com/web-component/getting-started-with-web-component/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/web-component/getting-started-with-web-component/</guid>
      <description>Availability # Native implementations
The &amp;lt;template&amp;gt; element is implemented in every modern browsers:
Chrome, Edge, Firefox, Opera, Safari, &amp;hellip; Custom Elements customElements.define(), Shadow DOM attachShadow() and HTML Imports &amp;lt;link rel=&amp;quot;import&amp;quot;&amp;gt; are implemented in the latest versions of Chrome and Opera.
Polyfills
For other browsers, you can use a polyfill library:
for Custom Elements: from WebReflection or Webcomponents.org, for Shadow DOM: from Webcomponents.org, for Template : from Neovov, for HTML Imports: from Webcomponents.</description>
    </item>
    
    <item>
      <title>Testing Web Components</title>
      <link>https://www.wikiod.com/web-component/testing-web-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/web-component/testing-web-components/</guid>
      <description>Things to consider when we want to test our components with: Styles, Templates, Component classes.
Webpack and Jest # Jest is used by Facebook to test all JavaScript code including React applications. One of Jest&amp;rsquo;s philosophies is to provide an integrated &amp;ldquo;zero-configuration&amp;rdquo; experience. We observed that when engineers are provided with ready-to-use tools, they end up writing more tests, which in turn results in more stable and healthy code bases.</description>
    </item>
    
  </channel>
</rss>
