<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>stm32 Tutorial on </title>
    <link>https://www.wikiod.com/docs/stm32/</link>
    <description>Recent content in stm32 Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/stm32/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with stm32</title>
      <link>https://www.wikiod.com/stm32/getting-started-with-stm32/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/stm32/getting-started-with-stm32/</guid>
      <description>First time setup with blink LED example using SW4STM32 and HAL library # (Note: There are many IDE, toolchain and library which are ready-to-use with STM32. The following setup requires minimal effort to get it work, but it is only one of the many. Feel free to explore others, it is not the purpose of this example to force anyone to use the tools that will be used here.)
IDE installation # System Workbench for STM32: free IDE on Windows, Linux and OS X.</description>
    </item>
    
    <item>
      <title>Integrated development environments (IDEs)</title>
      <link>https://www.wikiod.com/stm32/integrated-development-environments-ides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/stm32/integrated-development-environments-ides/</guid>
      <description>The purpose of this topic is to list all integrated development environments (IDE) that can be used to develop software for STM32 microcontrollers. The examples should contain:
List of the IDE&amp;rsquo;s main features. List of the operating systems supported by the IDE. Installation process. Additional configuration steps (if there are any). Listed IDEs by ST Microelectronics:
Part Number General Description Marketing Status Supplier Software Type CoIDE CooCox CoIDE, a free and highly-integrated software development environment for ARM Cortex MCUs Active CooCox SW development suites CosmicIDE Cosmic ARM/Cortex &amp;quot;M&amp;quot; Cross Development Tools for STM32 Microcontroller Active Cosmic SW development suites CrossWorks Rowley Associates CrossWorks, integrated development environment with JTAG Flash download and debug Active Rowley SW development suites DS-5 ARM Development Studio 5 (DS-5) provides best-in-class tools for the broadest range of ARM processor-based platforms Active ARM SW development suites EMP-Thunder Emprog ThunderBench, fully integrated and well-crafted development C/C++ tools for ARM Cortex Active Emprog Firmware Hitop5 Universal user interface, IDE and debugger for all Hitex development tools Active Hitex SW development suites IAR-EWARM IAR Integrated development environment and optimizing C/C++ compiler for ARM Cortex-M Active IAR SW development suites MDK-ARM-STM32 MDK-ARM software development environment for Cortex-M based MCUs Active Keil SW development suites MULTI GreenHills integrated development and debug environment for embedded applications using C and C++ Active GreenHills Software SW development suites Men-Nucleus-SF Nucleus SmartFit for STM32 Active Mentor Graphics Firmware PER-Tracealyzer Percepio run-time trace analyser for STM32 MCU Active Percepio PLSUDE-STM32 Debug and emulator platform with optimized Trace and Flash support for STM32 Cortex-M based MCU&amp;rsquo;s by PLS development tools Active Pls SW development suites RIDE-STM32 Raisonance branded integrated development environment for STM32 MCUs Active Raisonance SW development suites SOMN-DRT-IDE SOMNIUM DRT Cortex-M IDE Active SOMNIUM SW development suites SW4STM32 System Workbench for STM32: free IDE on Windows, Linux and OS X Active AC6 SW development suites TASKINGVX-STM32 Altium&amp;rsquo;s C/C++ compiler and debugger tools for ARM based MCUs Active TASKING Firmware TrueSTUDIO The premier C/C++ development tool for STM32 development, with its unrivalled feature set and unprecedented integration Active Atollic SW development suites iSYS-winIDEAOpen iSYSTEM&amp;rsquo;s free unlimited software development platform for all STM32 Cortex-M based devices Active iSYSTEM SW development suites mikroBasicPRO MikroElektronika full-featured Basic compiler which makes STM32 development suitable for everyone Active Mikroelectronika SW development suites mikroCPRO MikroElektronika full-featured ANSI C compiler for STM32 devices.</description>
    </item>
    
    <item>
      <title>UART - Universal Asynchronous ReceiverTransmitter (serial communication)</title>
      <link>https://www.wikiod.com/stm32/uart---universal-asynchronous-receivertransmitter-serial-communication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/stm32/uart---universal-asynchronous-receivertransmitter-serial-communication/</guid>
      <description>This topic is about serial communication using the Universal Asynchronous Receiver/Transmitter (UART) peripheral of the STM32 microcontrollers.
Echo application - HAL library # In this example the microcontroller echos back the received bytes to the sender using UART RX interrupt.
#include &amp;quot;stm32f4xx.h&amp;quot; UART_HandleTypeDef huart2; /* Single byte to store input */ uint8_t byte; void SystemClock_Config(void); /* UART2 Interrupt Service Routine */ void USART2_IRQHandler(void) { HAL_UART_IRQHandler(&amp;amp;huart2); } /* This callback is called by the HAL_UART_IRQHandler when the given number of bytes are received */ void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) { if (huart-&amp;gt;Instance == USART2) { /* Transmit one byte with 100 ms timeout */ HAL_UART_Transmit(&amp;amp;huart2, &amp;amp;byte, 1, 100); /* Receive one byte in interrupt mode */ HAL_UART_Receive_IT(&amp;amp;huart2, &amp;amp;byte, 1); } } void uart_gpio_init() { GPIO_InitTypeDef GPIO_InitStruct; __GPIOA_CLK_ENABLE(); /**USART2 GPIO Configuration PA2 ------&amp;gt; USART2_TX PA3 ------&amp;gt; USART2_RX */ GPIO_InitStruct.</description>
    </item>
    
  </channel>
</rss>
