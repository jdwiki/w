<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pyqt4 Tutorial on </title>
    <link>https://www.wikiod.com/docs/pyqt4/</link>
    <description>Recent content in pyqt4 Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/pyqt4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with pyqt4</title>
      <link>https://www.wikiod.com/pyqt4/getting-started-with-pyqt4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pyqt4/getting-started-with-pyqt4/</guid>
      <description>Basic Hello World Program # import sys from PyQt4 import QtGui def window(): app = QtGui.QApplication(sys.argv) w = QtGui.QWidget() b = QtGui.QLabel(w) b.setText(&amp;quot;&amp;lt;h1&amp;gt;Welcome to PyQt4 SO Documentation!&amp;lt;/h1&amp;gt;&amp;quot;) w.setGeometry(100,100,550,65) b.move(50,20) w.setWindowTitle(&amp;quot;PyQt4 Hello World Demo&amp;quot;) w.show() sys.exit(app.exec_()) if __name__ == &#39;__main__&#39;: window() Installation or Setup # Detailed instructions on getting pyqt4 set up or installed.
Windows Link Mac Link Linux Link If you want to install the version specific to your system python version and you system configuration(32-bit or 64-bit) then go to this link and download and install the package.</description>
    </item>
    
    <item>
      <title>Basic Widgets  QLabel</title>
      <link>https://www.wikiod.com/pyqt4/basic-widgets--qlabel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pyqt4/basic-widgets--qlabel/</guid>
      <description>QLabel is used for displaying text or an image. No user interaction functionality is provided. The visual appearance of the label can be configured in various ways, and it can be used for specifying a focus mnemonic key for another widget.
A QLabel object acts as a placeholder to display non-editable text,image, or a animated GIF. It can also be used as a mnemonic key for other widgets.
In this example, QLabel objects l2 and l4 have the caption containing hyperlink.</description>
    </item>
    
    <item>
      <title>QMessageBox</title>
      <link>https://www.wikiod.com/pyqt4/qmessagebox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pyqt4/qmessagebox/</guid>
      <description>QMessageBox is the simplest way to give (or ask) an information to (or from) the user. It&amp;rsquo;s a modal dialog, inheriting the QDialog class. It also has four convenience static functions: information, question, warning and critical.
Basic usage: Hello World # app = QApplication( sys.argv ) box = QMessageBox() # Window Title box.setWindowTitle( &amp;quot;Hello World.&amp;quot; ) # Icon: Information, Warning, Question, Critical box.setIcon( QMessageBox.Information ) # Short version of the information box.</description>
    </item>
    
    <item>
      <title>Signals and Slots</title>
      <link>https://www.wikiod.com/pyqt4/signals-and-slots/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pyqt4/signals-and-slots/</guid>
      <description>Functions or methods are executed in response to user’s actions like clicking on a button, selecting an item from a collection or a mouse click etc., called events.
Each PyQt widget, which is derived from QObject class, is designed to emit signal in response to one or more events. The signal on its own does not perform any action. Instead, it is connected to a slot.
In the following example, two QPushButton objects (b1 and b2) are added in QDialog window.</description>
    </item>
    
    <item>
      <title>Hello World Program</title>
      <link>https://www.wikiod.com/pyqt4/hello-world-program/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pyqt4/hello-world-program/</guid>
      <description>You need to know basics of Python Programming Language before you start with PyQt.
PyQt is a GUI widgets toolkit. It is a Python interface for Qt, one of the most powerful, and popular cross-platform GUI library. PyQt is a blend of Python programming language and the Qt library.
Here is an Hello World Program to get you started.
Creating a simple GUI application using PyQt involves the following steps −</description>
    </item>
    
  </channel>
</rss>
