<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data.table Tutorial on </title>
    <link>https://www.wikiod.com/docs/data-table/</link>
    <description>Recent content in data.table Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/data-table/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with data.table</title>
      <link>https://www.wikiod.com/data-table/getting-started-with-datatable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/getting-started-with-datatable/</guid>
      <description>Installation and setup # Install the stable release from CRAN:
install.packages(&amp;quot;data.table&amp;quot;) Or the development version from github:
install.packages(&amp;quot;data.table&amp;quot;, type = &amp;quot;source&amp;quot;, repos = &amp;quot;http://Rdatatable.github.io/data.table&amp;quot;) To revert from devel to CRAN, the current version must first be removed:
remove.packages(&amp;quot;data.table&amp;quot;) install.packages(&amp;quot;data.table&amp;quot;) Visit the website for full installation instructions and the latest version numbers.
Using the package # Usually you will want to load the package and all of its functions with a line like</description>
    </item>
    
    <item>
      <title>Using .SD and .SDcols for the subset of data</title>
      <link>https://www.wikiod.com/data-table/using-sd-and-sdcols-for-the-subset-of-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/using-sd-and-sdcols-for-the-subset-of-data/</guid>
      <description>The special symbol .SD is available in j of DT[i,j,by], capturing the Subset of Data for each by group surviving the filter, i. .SDcols is a helper. Type ?`special-symbols` for the official docs.
A reminder: DT[where, select|update|do, by] syntax is used to work with columns of a data.table.
The &amp;ldquo;where&amp;rdquo; part is the i argument The &amp;ldquo;select|update|do&amp;rdquo; part is the j argument These two arguments are usually passed by position instead of by name.</description>
    </item>
    
    <item>
      <title>Reshaping, stacking and splitting</title>
      <link>https://www.wikiod.com/data-table/reshaping-stacking-and-splitting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/reshaping-stacking-and-splitting/</guid>
      <description>The official vignette, &amp;ldquo;Efficient reshaping using data.tables&amp;rdquo;, is the best introduction to this topic.
Many reshaping tasks require moving between long and wide formats:
Wide data is data with each column representing a seperate variable, and rows representing seperate observations Long data is data with the form ID | variable | value, where each row representing a observation-variable pair melt and cast with data.table # Going from long to wide format using dcast # Casting: The Basics # Casting is used to transform data from long to wide format.</description>
    </item>
    
    <item>
      <title>Adding and modifying columns</title>
      <link>https://www.wikiod.com/data-table/adding-and-modifying-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/adding-and-modifying-columns/</guid>
      <description>The official vignette, &amp;ldquo;Reference semantics&amp;rdquo;, is the best introduction to this topic.
A reminder: DT[where, select|update|do, by] syntax is used to work with columns of a data.table.
The &amp;ldquo;where&amp;rdquo; part is the i argument The &amp;ldquo;select|update|do&amp;rdquo; part is the j argument These two arguments are usually passed by position instead of by name.
All modifications to columns can be done in j. Additionally, the set function is available for this use.</description>
    </item>
    
    <item>
      <title>Joins and merges</title>
      <link>https://www.wikiod.com/data-table/joins-and-merges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/joins-and-merges/</guid>
      <description>A join combines two tables containing related columns. The term covers a wide range of operations, essentially everything except [appending the two tables](https://www.wikiod.com/data-table/reshaping-stacking-and-splitting#Stacking multiple tables using rbindlist). &amp;ldquo;Merge&amp;rdquo; is a synonym. Type ?`[.data.table` for the official docs.
Syntax # x[i, on, j]
# join: data.table x &amp;amp; data.table or list i x[!i, on, j]
# anti-join Working with keyed tables # If x &amp;amp; i have a key or x is keyed to match i&amp;rsquo;s first few columns, then the on can be skipped like x[i].</description>
    </item>
    
    <item>
      <title>Using keys and indices</title>
      <link>https://www.wikiod.com/data-table/using-keys-and-indices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/using-keys-and-indices/</guid>
      <description>The key and indices of a data.table allow certain computations to run faster, mostly related to joins and subsetting. The key describes the table&amp;rsquo;s current sort order; while each index stores information about the order of the table with respect a sequence of columns.
See the &amp;ldquo;Remarks&amp;rdquo; section below for links to the official vignettes on the topic.
The official vignettes are the best introduction to this topic:
&amp;ldquo;Keys and fast binary search based subset&amp;rdquo; &amp;ldquo;Secondary indices and auto indexing&amp;rdquo; Keys vs indices # A data.</description>
    </item>
    
    <item>
      <title>Computing summary statistics</title>
      <link>https://www.wikiod.com/data-table/computing-summary-statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/computing-summary-statistics/</guid>
      <description>A reminder: DT[where, select|update|do, by] syntax is used to work with columns of a data.table.
The &amp;ldquo;where&amp;rdquo; part is the i argument The &amp;ldquo;select|update|do&amp;rdquo; part is the j argument These two arguments are usually passed by position instead of by name.
Applying a summarizing function to multiple variables # # example data DT = data.table(iris) DT[, Bin := cut(Sepal.Length, c(4,6,8))] To apply the same summarizing function to every column by group, we can use lapply and .</description>
    </item>
    
    <item>
      <title>Creating a data.table</title>
      <link>https://www.wikiod.com/data-table/creating-a-datatable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/creating-a-datatable/</guid>
      <description>A data.table is an enhanced version of the data.frame class from base R. As such, its class() attribute is the vector &amp;quot;data.table&amp;quot; &amp;quot;data.frame&amp;quot; and functions that work on a data.frame will also work with a data.table. There are many ways to create, load or coerce to a data.table, as seen here.
Coerce a data.frame # To copy a data.frame as a data.table, use as.data.table or data.table:
DF = data.frame(x = letters[1:5], y = 1:5, z = (1:5) &amp;gt; 3) DT &amp;lt;- as.</description>
    </item>
    
    <item>
      <title>Subsetting rows by group</title>
      <link>https://www.wikiod.com/data-table/subsetting-rows-by-group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/subsetting-rows-by-group/</guid>
      <description>A reminder: DT[where, select|update|do, by] syntax is used to work with columns of a data.table.
The &amp;ldquo;where&amp;rdquo; part is the i argument The &amp;ldquo;select|update|do&amp;rdquo; part is the j argument These two arguments are usually passed by position instead of by name.
Selecting rows within each group # # example data DT &amp;lt;- data.table(Titanic) Suppose that, for each sex, we want the rows with the highest survival numbers:
DT[Survived == &amp;quot;Yes&amp;quot;, .</description>
    </item>
    
    <item>
      <title>Using list columns to store data</title>
      <link>https://www.wikiod.com/data-table/using-list-columns-to-store-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/data-table/using-list-columns-to-store-data/</guid>
      <description>Data.table supports column vectors belonging to R&amp;rsquo;s list class.
In case it looks weird that we&amp;rsquo;re talking about lists without using that word in the code, note that .() is an alias for list() when used inside a DT[...] call.
Reading in many related files # Suppose we want to read and stack a bunch of similarly-formatted files. The quick solution is:
rbindlist(lapply(list.files(patt=&amp;quot;csv$&amp;quot;), fread), id=TRUE) We might not be satisfied with this for a couple reasons:</description>
    </item>
    
  </channel>
</rss>
