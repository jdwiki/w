<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows Tutorial on </title>
    <link>https://www.wikiod.com/docs/windows/</link>
    <description>Recent content in Windows Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with Windows</title>
      <link>https://www.wikiod.com/windows/getting-started-with-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windows/getting-started-with-windows/</guid>
      <description>Information # The History # Microsoft windows is an operating system available in 137 languages, wrote in C,C++ &amp;amp; Assembly , can be installed on &amp;ldquo;ARM, IA-32, Itanium, x86-64, DEC Alpha, MIPS, PowerPC&amp;rdquo; platforms
first release was in November 20 ,1985 as windows 1.0
with about 2 billion PC(personal computer) windows is the most used operating system</description>
    </item>
    
    <item>
      <title>Programming Custom Desktop FileFolder context menu extensions</title>
      <link>https://www.wikiod.com/windows/programming-custom-desktop-filefolder-context-menu-extensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windows/programming-custom-desktop-filefolder-context-menu-extensions/</guid>
      <description>Using Registry entries # This works well for single level right click context menu. All you need to do is create a registry entry under Classes Root HKEY_CLASSES_ROOT for specific extension. If you want to create a entry for all types of files choose * else choose extension like .pdf etc.
var regmenu = Registry.ClassesRoot.CreateSubKey(&amp;quot;*\\shell\\hello&amp;quot;); if (regmenu != null) regmenu.SetValue(&amp;quot;&amp;quot;, &amp;quot;Hello World&amp;quot;); var regcmd = Registry.ClassesRoot.CreateSubKey(&amp;quot;*\\shell\\hello\\command&amp;quot;); if (regcmd != null) regcmd.</description>
    </item>
    
    <item>
      <title>Serial Ports</title>
      <link>https://www.wikiod.com/windows/serial-ports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windows/serial-ports/</guid>
      <description>Using the serial ports on Windows can be a bit complex. This documentation section will, in time, explain all about the use of DCBs, CreateFile(), port events, and asynchronous serial communication.
Listing all serial ports. # Getting all serial ports information from Windows is often necessary, you may want to give the user a choice of ports to open, or check if your device is connected.
In addition, some ports just cannot be opened using a &amp;ldquo;COMx&amp;rdquo; string and need to be opened using a device name.</description>
    </item>
    
  </channel>
</rss>
