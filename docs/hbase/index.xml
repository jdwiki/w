<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hbase Tutorial on </title>
    <link>https://www.wikiod.com/docs/hbase/</link>
    <description>Recent content in hbase Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/hbase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with hbase</title>
      <link>https://www.wikiod.com/hbase/getting-started-with-hbase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/hbase/getting-started-with-hbase/</guid>
      <description>Installing HBase in Standalone # HBase Standalone is a mode which allow you to get rid of HDFS and to test HBase before deploying in a cluster, It is not production oriented.
Installing HBase in standalone is extremely simple. First you have to download the HBase archive named hbase-X.X.X-bin.tar.gz available on one of the apache mirrors.
Once you have done this, execute this shell command
tar xzvf hbase-X.X.X-bin.tar.gz It will export the archive in your directory, you can put it wherever you want.</description>
    </item>
    
    <item>
      <title>Using the Java API</title>
      <link>https://www.wikiod.com/hbase/using-the-java-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/hbase/using-the-java-api/</guid>
      <description>Syntax # HBaseConfiguration.create(); //Create a configuration file
Configuration.set(String key, String value); //Add a key to the configuration
ConnectionFactory.createConnection(HBaseConfiguration configuration); //Connects to HBase
Connection.getAdmin(); //Instanciate a new Admin
new HTableDescriptor(Table.valueOf(String tableName));; //Create a table descriptor
HTableDescriptor.addFamily(new HColumnDescriptor(String familyName)); //Add a family to the table descriptor
Admin.createTable(HTableDescriptor descriptor); //Create a table as described in the descriptor
Admin.deleteTable(TableName.valueOf(String tableName)); //Delete a table
Connection.getTable(TableName.valueOf(String tableName)); //Get a Table Object
new Get(Bytes.toBytes(String row_key)); //Create a new Get</description>
    </item>
    
  </channel>
</rss>
