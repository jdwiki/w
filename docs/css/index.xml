<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS Tutorial on </title>
    <link>https://www.wikiod.com/docs/css/</link>
    <description>Recent content in CSS Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with CSS</title>
      <link>https://www.wikiod.com/css/getting-started-with-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/getting-started-with-css/</guid>
      <description>External Stylesheet # An external CSS stylesheet can be applied to any number of HTML documents by placing a &amp;lt;link&amp;gt; element in each HTML document.
The attribute rel of the &amp;lt;link&amp;gt; tag has to be set to &amp;quot;stylesheet&amp;quot;, and the href attribute to the relative or absolute path to the stylesheet. While using relative URL paths is generally considered good practice, absolute paths can be used, too. In HTML5 the type attribute can be omitted.</description>
    </item>
    
    <item>
      <title>Selectors</title>
      <link>https://www.wikiod.com/css/selectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/selectors/</guid>
      <description>CSS selectors identify specific HTML elements as targets for CSS styles. This topic covers how CSS selectors target HTML elements. Selectors use a wide range of over 50 selection methods offered by the CSS language, including elements, classes, IDs, pseudo-elements and pseudo-classes, and patterns.
Syntax # #id
.classname
:pseudo-classname
::pseudo-elementname
[attr] /* has the attr attribute. */
[attr=&amp;quot;value&amp;quot;] /* has the attr attribute, and its value is exactly &amp;ldquo;value&amp;rdquo;. */</description>
    </item>
    
    <item>
      <title>Centering</title>
      <link>https://www.wikiod.com/css/centering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/centering/</guid>
      <description>Using Flexbox # HTML:
&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;http://lorempixel.com/400/200&amp;quot; /&amp;gt; &amp;lt;/div&amp;gt; CSS:
html, body, .container { height: 100%; } .container { display: flex; justify-content: center; /* horizontal center */ } img { align-self: center; /* vertical center */ } View Result
HTML:
&amp;lt;img src=&amp;quot;http://lorempixel.com/400/200&amp;quot; /&amp;gt; CSS:
html, body { height: 100%; } body { display: flex; justify-content: center; /* horizontal center */ align-items: center; /* vertical center */ } View Result</description>
    </item>
    
    <item>
      <title>Backgrounds</title>
      <link>https://www.wikiod.com/css/backgrounds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/backgrounds/</guid>
      <description>With CSS you can set colors, gradients, and images as the background of an element.
It is possible to specify various combinations of images, colors, and gradients, and adjust the size, positioning, and repetition (among others) of these.
Syntax # background-color: color | transparent | initial | inherit; background-image: url | none | initial | inherit; background-position: value; background-size: &amp;lt;bg-size&amp;gt; [&amp;lt;bg-size&amp;gt;] &amp;lt;bg-size&amp;gt;: auto | length | cover | contain | initial | inherit; background-repeat: repeat | repeat-x | repeat-y | no-repeat | initial | inherit; background-origin: padding-box | border-box | content-box | initial | inherit; background-clip: border-box | padding-box | content-box | initial | inherit; background-attachment: scroll | fixed | local | initial | inherit; background: bg-color bg-image position / bg-size bg-repeat bg-origin bg-clip bg-attachment initial | inherit; CSS3 gradients will not work on versions of Internet Explorer less than 10.</description>
    </item>
    
    <item>
      <title>Flexible Box Layout (Flexbox)</title>
      <link>https://www.wikiod.com/css/flexible-box-layout-flexbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/flexible-box-layout-flexbox/</guid>
      <description>The Flexible Box module, or just &amp;lsquo;flexbox&amp;rsquo; for short, is a box model designed for user interfaces, and it allows users to align and distribute space among items in a container such that elements behave predictably when the page layout must accommodate different, unknown screen sizes. A flex container expands items to fill available space and shrinks them to prevent overflow.
Syntax # display: flex; flex-direction: row | row-reverse | column | column-reverse; flex-wrap: nowrap | wrap | wrap-reverse; flex-flow: &amp;lt;&amp;lsquo;flex-direction&amp;rsquo;&amp;gt; || &amp;lt;&amp;lsquo;flex-wrap&amp;rsquo;&amp;gt; justify-content: flex-start | flex-end | center | space-between | space-around; align-items: flex-start | flex-end | center | baseline | stretch; align-content: flex-start | flex-end | center | space-between | space-around | stretch; order: &amp;lt;integer&amp;gt;; flex-grow: &amp;lt;number&amp;gt;; /* default 0 */ flex-shrink: &amp;lt;number&amp;gt;; /* default 1 */ flex-basis: &amp;lt;length&amp;gt; | auto; /* default auto */ flex: none | [ &amp;lt;&amp;lsquo;flex-grow&amp;rsquo;&amp;gt; &amp;lt;&amp;lsquo;flex-shrink&amp;rsquo;&amp;gt;?</description>
    </item>
    
    <item>
      <title>The Box Model</title>
      <link>https://www.wikiod.com/css/the-box-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/the-box-model/</guid>
      <description>Syntax # box-sizing: parameter; Parameters # Parameter Detail content-box Width and height of the element only includes content area. padding-box Width and height of the element includes content and padding. border-box Width and height of the element includes content, padding and border. initial Sets the box model to its default state. inherit Inherits the box model of the parent element. About padding-box # This value was only implemented by Firefox and thus should not be used.</description>
    </item>
    
    <item>
      <title>Media Queries</title>
      <link>https://www.wikiod.com/css/media-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/media-queries/</guid>
      <description>Syntax # @media [not|only] mediatype and (media feature) { /* CSS rules to apply */ } Parameters # Parameter Details mediatype (Optional) This is the type of media. Could be anything in the range of all to screen. not (Optional) Doesn&amp;rsquo;t apply the CSS for this particular media type and applies for everything else. media feature Logic to identify use case for CSS. Options outlined below. Media Feature Details aspect-ratio Describes the aspect ratio of the targeted display area of the output device.</description>
    </item>
    
    <item>
      <title>Typography</title>
      <link>https://www.wikiod.com/css/typography/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/typography/</guid>
      <description>Syntax # font: [font-style] [font-variant] [font-weight] font-size [/line-height] font-family; font-style: font-style font-variant: font-variant font-weight: font-weight; font-size: font-size; line-height: line-height; font-family: font-family; color: color; quotes: none|string|initial|inherit; font-stretch: font-stretch; text-align: text-align; text-indent: length|initial|inherit; text-overflow: clip|ellipsis|string|initial|inherit; text-transform: none|capitalize|uppercase|lowercase|initial|inherit; text-shadow: h-shadow v-shadow blur-radius color|none|initial|inherit; font-size-adjust: number|none|initial|inherit; font-stretch: ultra-condensed|extra-condensed|condensed|semi-condensed|normal|semi-expanded|expanded|extra-expanded|ultra-expanded|initial|inherit; hyphens: none | manual | auto; tab-size: number|length|initial|inherit; letter-spacing: normal|length|initial|inherit; word-spacing: normal|length|initial|inherit; Parameters # Parameter Details font-style italics or oblique font-variant normal or small-caps font-weight normal, bold or numeric from 100 to 900.</description>
    </item>
    
    <item>
      <title>Colors</title>
      <link>https://www.wikiod.com/css/colors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/colors/</guid>
      <description>Syntax # color: #rgb color: #rrggbb color: rgb[a](&amp;lt;red&amp;gt;, &amp;lt;green&amp;gt;, &amp;lt;blue&amp;gt;[, &amp;lt;alpha&amp;gt;]) color: hsl[a](&amp;lt;hue&amp;gt;, &amp;lt;saturation%&amp;gt;, &amp;lt;lightness%&amp;gt;[, &amp;lt;alpha&amp;gt;]) color: [colorkeyword](https://www.wikiod.com/css/colors#Color Keywords) /* green, blue, yellow, orange, red, ..etc */ currentColor # currentColor returns the computed color value of the current element.
Use in same element # Here currentColor evaluates to red since the color property is set to red:
div { color: red; border: 5px solid currentColor; box-shadow: 0 0 5px currentColor; } In this case, specifying currentColor for the border is most likely redundant because omitting it should produce identical results.</description>
    </item>
    
    <item>
      <title>Cascading and Specificity</title>
      <link>https://www.wikiod.com/css/cascading-and-specificity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/css/cascading-and-specificity/</guid>
      <description>CSS specificity intends to promote code conciseness by allowing an author to define some general formatting rules for a broad set of elements, and then to override them for a certain subset.
Calculating Selector Specificity # Each individual CSS Selector has its own specificity value. Every selector in a sequence increases the sequence&amp;rsquo;s overall specificity. Selectors fall into one of three different specificity groups: A, B and c. When multiple selector sequences select a given element, the browser uses the styles applied by the sequence with the highest overall specificity.</description>
    </item>
    
  </channel>
</rss>
