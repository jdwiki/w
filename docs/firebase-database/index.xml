<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>firebase-database Tutorial on </title>
    <link>https://www.wikiod.com/docs/firebase-database/</link>
    <description>Recent content in firebase-database Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/firebase-database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with firebase-database</title>
      <link>https://www.wikiod.com/firebase-database/getting-started-with-firebase-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/firebase-database/getting-started-with-firebase-database/</guid>
      <description>Add Firebase to Your Android Project # Here the steps required to create a Firebase project and to connect it with an Android app.
Add Firebase to your app # Create a Firebase project in the Firebase console and click Create New Project.
Click Add Firebase to your Android app and follow the setup steps.
When prompted, enter your app&amp;rsquo;s package name.
It&amp;rsquo;s important to enter the package name your app is using; this can only be set when you add an app to your Firebase project.</description>
    </item>
    
    <item>
      <title>Firebase Realtime Database Rules</title>
      <link>https://www.wikiod.com/firebase-database/firebase-realtime-database-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/firebase-database/firebase-realtime-database-rules/</guid>
      <description>Firebase Realtime Database Rules determine who has read and write access to your database, how your data is structured, and what indexes exist. These rules live on the Firebase servers and are enforced automatically at all times. Every read and write request will only be completed if your rules allow it. By default, your rules are set to allow only authenticated users full read and write access to your database. This is to protect your database from abuse until you have time to customize your rules or set up authentication.</description>
    </item>
    
    <item>
      <title>FirebaseRealtime database with Android</title>
      <link>https://www.wikiod.com/firebase-database/firebaserealtime-database-with-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/firebase-database/firebaserealtime-database-with-android/</guid>
      <description>Example for data insert or data retrieve from Firebase # Get value/s from firebase # Add the Realtime Database in Android # Complete the Installation and setup to connect your app to Firebase.
This will create the project in Firebase.
Add the dependency for Firebase Realtime Database to your module-level build.gradle file:
compile &amp;lsquo;com.google.firebase:firebase-database:9.2.1&amp;rsquo;
Configure Firebase Database Rules
Now you are ready to work with the Realtime Database in Android.</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://www.wikiod.com/firebase-database/hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/firebase-database/hello-world/</guid>
      <description>Hello World in Android # Hello World in IOS # </description>
    </item>
    
    <item>
      <title>Firebase Realtime Database Transactions</title>
      <link>https://www.wikiod.com/firebase-database/firebase-realtime-database-transactions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/firebase-database/firebase-realtime-database-transactions/</guid>
      <description>Transactions provide a mechanism to coordinate between multiple parties that might be accessing the same data at the same time. These &amp;ldquo;parties&amp;rdquo; might be different instances of the same code like different users running the same application or nodes in a server cluster, parts of the same program or event different programs like an administration application, a &amp;ldquo;end user&amp;rdquo; application and/or &amp;ldquo;backend&amp;rdquo; server logic.
A distributed counter # Imagine many users all running a web application that is trying to increment a counter in the database.</description>
    </item>
    
    <item>
      <title>Reading data</title>
      <link>https://www.wikiod.com/firebase-database/reading-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/firebase-database/reading-data/</guid>
      <description>Understanding which data is inside dataSnapshot object # Note: You need to [know which data referenced by getReference()][1] first before you can completely understand this example.
There are three common method to get your data from Firebase Realtime Database:
addValueEventListener() addListenerForSingleValueEvent() addChildEventListener() When we talk about which data is inside dataSnapshot object, then addValueEventListener() and addListenerForSingleValueEvent() is basically the same. The only difference is addValueEventListener() keep listen to changes made in the referenced data while addListenerForSingleValueEvent() is not.</description>
    </item>
    
    <item>
      <title>Firebase Real-Time Database with Android</title>
      <link>https://www.wikiod.com/firebase-database/firebase-real-time-database-with-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/firebase-database/firebase-real-time-database-with-android/</guid>
      <description>Integrate Firebase Real-Time database with an Android application # How to implement Firebase Real-Time database in Android applications.
Setup/Installation:
First, install the Firebase SDK (guide)
Register your project using the Firebase console
After successfuly completing the two steps above, add the following dependency in your application level gradel.
compile &#39;com.google.firebase:firebase-database:9.2.1&#39; [Optional] Configure your database security rules (reference).
Implementation Sample:
Declare and initialize the database reference
FirebaseDatabase database = FirebaseDatabase.getInstance(); DatabaseReference myRef = database.</description>
    </item>
    
    <item>
      <title>Firebase Query</title>
      <link>https://www.wikiod.com/firebase-database/firebase-query/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/firebase-database/firebase-query/</guid>
      <description>Firebase Query can be used to order a collection of data based on some attributes as well as restricted to the large list of items (for like chat data) down to a number suitable for synchronizing to the client.
Just as with a Reference, you can receive data from a Query by using the on() method. You will only receive events and DataSnapshots for the subset of the data that matches your query.</description>
    </item>
    
  </channel>
</rss>
