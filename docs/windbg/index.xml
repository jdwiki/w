<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WinDbg Tutorial on </title>
    <link>https://www.wikiod.com/docs/windbg/</link>
    <description>Recent content in WinDbg Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/windbg/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with WinDbg</title>
      <link>https://www.wikiod.com/windbg/getting-started-with-windbg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windbg/getting-started-with-windbg/</guid>
      <description>Installation or Setup # Microsoft describes 3 ways of installing WinDbg:
as part of the WDK (Windows Driver Kit) as part of the SDK (Software Development Kit) with the installer of the SDK and deselecting everything else but &amp;ldquo;Debugging Tools for Windows&amp;rdquo; To get the installer, visit Download the WDK, WinDbg, and associated tools and scroll down to a section called &amp;ldquo;Get debugging tools&amp;rdquo;.
A well-known and convenient but inofficial source is Codemachine where you can also download older versions of the Debugging Tools directly.</description>
    </item>
    
    <item>
      <title>Extensions</title>
      <link>https://www.wikiod.com/windbg/extensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windbg/extensions/</guid>
      <description>SOS # SOS (son of strike) is the official WinDbg extension from Microsoft for .NET. It gets installed as part of the .NET framework and thus is available by default.
Like any extension, it can be loaded using .load x:\full\path\to\sos.dll, but there are easier ways. Depending on the version of .NET, the extension is located side by side to mscorwks.dll (.NET CLR 2), clr.dll (.NET CLR 4) or coreclr.dll (Silverlight and Universal apps), so one of the following commands should work:</description>
    </item>
    
    <item>
      <title>User mode  application debugging</title>
      <link>https://www.wikiod.com/windbg/user-mode--application-debugging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windbg/user-mode--application-debugging/</guid>
      <description>Important commands # Documenting your work # Remember what you&amp;rsquo;ve done and retain long outputs which can&amp;rsquo;t be kept in WinDbg&amp;rsquo;s buffer. It&amp;rsquo;s always good to have a log available for reproducing debugging steps, e.g. to ask questions on Stack Overflow.
Command Purpose .logopen create a log file .logclose close the log file .dump save crash dump file (snapshot of the current debugging session) Working with symbols # Without or with incorrect symbols, you may receive wrong information and be misled.</description>
    </item>
    
    <item>
      <title>Crash analysis</title>
      <link>https://www.wikiod.com/windbg/crash-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windbg/crash-analysis/</guid>
      <description>Basic user mode crash analysis # .exr -1 gives you details about the last exception thrown.
!analyze -v usually does a good job as well.
For .NET, the command !pe of the SOS extension shows details about the .NET exception that was thrown.</description>
    </item>
    
    <item>
      <title>DML(Debugger Mark Language)</title>
      <link>https://www.wikiod.com/windbg/dmldebugger-mark-language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windbg/dmldebugger-mark-language/</guid>
      <description>Turn on/off # .prefer_dml 1 turn on dmlformat output
.prefer_dml 0 turn off dmlformat output</description>
    </item>
    
    <item>
      <title>Kernel debugging</title>
      <link>https://www.wikiod.com/windbg/kernel-debugging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windbg/kernel-debugging/</guid>
      <description>Important commands # !process - list user mode processes .process - set process context !peb - show process environment block !teb - show thread environment block !locks - deadlock analysis .dump - save a crash dump file to disk </description>
    </item>
    
    <item>
      <title>Remote debugging</title>
      <link>https://www.wikiod.com/windbg/remote-debugging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/windbg/remote-debugging/</guid>
      <description>Important commands # .server - create a debugging server .clients - list debugging clients connected to the server .endsrv - end a debugging server .servers - list debugging server connections .remote - start a remote.exe server .noshell - prevent shell commands </description>
    </item>
    
  </channel>
</rss>
