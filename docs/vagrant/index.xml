<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vagrant Tutorial on </title>
    <link>https://www.wikiod.com/docs/vagrant/</link>
    <description>Recent content in vagrant Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/vagrant/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with vagrant</title>
      <link>https://www.wikiod.com/vagrant/getting-started-with-vagrant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vagrant/getting-started-with-vagrant/</guid>
      <description>LAMP project # In this example a custom LAMP project development environment is created with Vagrant.
First of all you will need to install Virtual Box and Vagrant.
Then, create a vagrant folder in your home directory, open your terminal and change the current directory to the new vagrant directory. Now, execute vagrant init. A Vagrantfile file will be created inside and will look like this:
# -*- mode: ruby -*- # vi: set ft=ruby : # All Vagrant configuration is done below.</description>
    </item>
    
    <item>
      <title>Snapshots</title>
      <link>https://www.wikiod.com/vagrant/snapshots/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vagrant/snapshots/</guid>
      <description>Take a snapshot # vagrant snapshot save mysnapshot Bash script to delete all snapshots # #!/bin/bash NO_SNAPSHOTS=&amp;quot;No snapshots have been taken yet&amp;quot; SNAPSHOT_OUTPUT=$(vagrant snapshot list | grep &amp;quot;${NO_SNAPSHOTS}&amp;quot;) if [ -z &amp;quot;${SNAPSHOT_OUTPUT}&amp;quot; ]; then echo &amp;quot;Found some snapshots, going to remove them&amp;quot; for SNAPSHOT in $(vagrant snapshot list); do vagrant snapshot delete &amp;quot;${SNAPSHOT}&amp;quot; done else echo &amp;quot;No snapshots found&amp;quot; fi Restore a snapshot # vagrant snapshot restore mysnapshot List snapshots # vagrant snapshot list Restore a snapshot without provisioning the box # vagrant snapshot restore --no-provision mysnapshot Remove a snapshot # vagrant snapshot delete mysnapshot </description>
    </item>
    
    <item>
      <title>Provision</title>
      <link>https://www.wikiod.com/vagrant/provision/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vagrant/provision/</guid>
      <description>Syntax # config.vm.provision &amp;ldquo;shell&amp;rdquo;, inline: COMMANDS config.vm.provision &amp;ldquo;shell&amp;rdquo;, path: &amp;ldquo;relativePath/script.sh&amp;rdquo; Parameters # Parameter Details COMMANDS The shell commands to run. Can be a string (e.g. &amp;quot;echo \&amp;quot;Hello, World!\&amp;quot;&amp;quot;) or a string variable (e.g. $setup). Provisioning is used to automatically configure a virtual machine. It is performed automatically when a virtual machine is first created (using vagrant up). It can also be re-run later using vagrant provision.
Minimal setup # Launch and provision the box # Launch the box without provisioning # Provision a running box # Shell provisioner # The shell provisioner runs a shell script when provisioning.</description>
    </item>
    
    <item>
      <title>Providers</title>
      <link>https://www.wikiod.com/vagrant/providers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vagrant/providers/</guid>
      <description>Set default provider with environment variable # Introduce environment variable VAGRANT_DEFAULT_PROVIDER
export VAGRANT_DEFAULT_PROVIDER=vmware_fusion Set default provider in Vagrantfile # Vagrant.configure(&amp;quot;2&amp;quot;) do |config| # ... other config up here config.vm.provider &amp;quot;vmware_fusion&amp;quot; end Launch box in Hyper-V # vagrant up --provider hyperv Launch box in Docker # vagrant up --provider docker Launch box in VMWare Fusion # vagrant up --provider vmware_fusion Launch box in VMWare Workstation # vagrant up --provider vmware_workstation Launch box in VirtualBox # vagrant up --provider virtualbox VirtualBox is the default provider for a vanilla Vagrant setup.</description>
    </item>
    
    <item>
      <title>Re-provisioning running VM</title>
      <link>https://www.wikiod.com/vagrant/re-provisioning-running-vm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vagrant/re-provisioning-running-vm/</guid>
      <description>Command # vagrant reload --provision </description>
    </item>
    
    <item>
      <title>SSH</title>
      <link>https://www.wikiod.com/vagrant/ssh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vagrant/ssh/</guid>
      <description>SSH to the box # vagrant ssh SSH directly to the box # vagrant ssh-config &amp;gt;&amp;gt; ~/.ssh/config ssh default </description>
    </item>
    
  </channel>
</rss>
