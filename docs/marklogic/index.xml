<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>marklogic Tutorial on </title>
    <link>https://www.wikiod.com/docs/marklogic/</link>
    <description>Recent content in marklogic Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/marklogic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with marklogic</title>
      <link>https://www.wikiod.com/marklogic/getting-started-with-marklogic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/marklogic/getting-started-with-marklogic/</guid>
      <description>Installation or Setup # Detailed instructions on getting MarkLogic set up or installed can be found in the Installation Guide. The full offering of documentation is available via docs.marklogic.com
The overall setup process involves
Installing the binary/rpm Starting the services Configuring first and subsequent hosts A &amp;ldquo;Hello World&amp;rdquo; example is not really necessary to verify setup. The setup process includes verification of success, in that once installed, the user will navigate a browser to the administrative interface.</description>
    </item>
    
    <item>
      <title>Very simple CRUD examples for XML documents</title>
      <link>https://www.wikiod.com/marklogic/very-simple-crud-examples-for-xml-documents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/marklogic/very-simple-crud-examples-for-xml-documents/</guid>
      <description>Create a simple document # This very simple snippet of XQuery can be executed in QueryConsole using the built-in &amp;ldquo;Documents&amp;rdquo; database as a sandbox. Each piece of the snippet has a comment to explain what the following line of code means.
xquery version &amp;quot;1.0-ml&amp;quot;; (: Let&#39;s first insert a simple document to get started :) (: You need a URI- the location where the document is found in the database :) let $uri := &amp;quot;/stuff/mysimpledocument.</description>
    </item>
    
    <item>
      <title>Working with fncount, xdmpestimate and ctsfrequency</title>
      <link>https://www.wikiod.com/marklogic/working-with-fncount-xdmpestimate-and-ctsfrequency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/marklogic/working-with-fncount-xdmpestimate-and-ctsfrequency/</guid>
      <description>This section provides an overview of fn:count, xdmp:estimate and cts:frequency along with examples and use cases
Using fn:count() to get the number of matching documents # The XML document, I will be using throughout the examples is -
&amp;lt;a&amp;gt; &amp;lt;b&amp;gt;test-value&amp;lt;/b&amp;gt; &amp;lt;d&amp;gt;fragment-d&amp;lt;/d&amp;gt; &amp;lt;c-root&amp;gt; &amp;lt;d&amp;gt;fragment-d&amp;lt;/d&amp;gt; &amp;lt;e&amp;gt;fragment-e&amp;lt;/e&amp;gt; &amp;lt;/c-root&amp;gt; &amp;lt;/a&amp;gt; The following queries returns the number of documents with value fragment-d for element d -
Using a cts:search
fn:count(cts:search(fn:doc(), cts:element-value-query(xs:QName(&amp;quot;d&amp;quot;), &amp;quot;fragment-d&amp;quot;)))
Using XPath
fn:count(fn:doc()[//d=&amp;quot;fragment-d&amp;quot;]))</description>
    </item>
    
    <item>
      <title>Marklogic 8 Features</title>
      <link>https://www.wikiod.com/marklogic/marklogic-8-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/marklogic/marklogic-8-features/</guid>
      <description>This section provides an overview of what&amp;rsquo;s new in MarkLogic 8 and its other updated versions. Use case for each feature also needs to be added.
New features in MarkLogic 8 # Server-Side JavaScript Native JSON Samplestack Sample Application Temporal Documents REST Management API Improvements More Semantics Features, Including SPARQL 1.1, Inferencing, and SPARQL UPDATE Node.js Client API REST and Java Client API Improvements Enhanced HTTP Server Features Flexible Replication Enhancements Incremental Backup Document Library Services (DLS) Improvements MLCP Enhancements </description>
    </item>
    
    <item>
      <title>Search in MarkLogic</title>
      <link>https://www.wikiod.com/marklogic/search-in-marklogic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/marklogic/search-in-marklogic/</guid>
      <description>This section provides an overview of search in MarkLogic. Intent is to cover cts:search, search:search and qbe with use cases and examples
Fetching all the documents with word &amp;ldquo;marklogic&amp;rdquo; # cts:search( fn:doc(), cts:word-query(&amp;quot;marklogic&amp;quot;)) Fetching all the documents with word &amp;ldquo;marklogic&amp;rdquo;, document in collection &amp;ldquo;first-collection&amp;rdquo; # This can be done in the following two ways -
cts:search( fn:collection(&amp;quot;first-collection&amp;quot;), cts:word-query(&amp;quot;marklogic&amp;quot;)) In this, the scope is changed from all the documents to documents in collection &amp;ldquo;first-collection&amp;rdquo; only.</description>
    </item>
    
  </channel>
</rss>
