<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Twilio Tutorial on </title>
    <link>https://www.wikiod.com/docs/twilio/</link>
    <description>Recent content in Twilio Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/twilio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with Twilio</title>
      <link>https://www.wikiod.com/twilio/getting-started-with-twilio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/twilio/getting-started-with-twilio/</guid>
      <description>Sending an SMS Message from a US Number # This is how to send an SMS text message from a US number using Twilio&amp;rsquo;s Node.js SDK.
First you need to install the Node.js client using:
npm install twilio Then, you have to create an account on their website.
Once you have an account, you&amp;rsquo;ll need the account SID and auth token that you can find on the online dashboard.
In the code example below, replace [Account SID] and [Auth Token] with the ones from your account.</description>
    </item>
    
    <item>
      <title>Send messages in Python</title>
      <link>https://www.wikiod.com/twilio/send-messages-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/twilio/send-messages-in-python/</guid>
      <description>Syntax # class twilio.rest.resources.Messages(*args, **kwargs) Parameters # Parameter Details to (str) The destination phone number. from_ (str) The phone number sending this message (must be a verified Twilio number) body (str) The message you want to send, limited to 160 characters. status_callback A URL that Twilio will POST to when your message is processed. application_sid (str) The 34 character sid of the application Twilio should use to handle this phone call.</description>
    </item>
    
    <item>
      <title>How To Send an SMS with Ruby</title>
      <link>https://www.wikiod.com/twilio/how-to-send-an-sms-with-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/twilio/how-to-send-an-sms-with-ruby/</guid>
      <description>Using the Twilio Gem # This assumes you have a twilio account and have purchased/reserved a phone number&amp;hellip;
If you are using bundler add the following line to your Gemfile to include twilio-ruby in your project:
gem &#39;twilio-ruby&#39; otherwise enter gem install twilio-ruby on the command line. You might need sudo if you&amp;rsquo;re using system Ruby and not ruby-env etc.
and the code
# Instantiate a Twilio REST client with your account SID and auth token, # which can be found on your dashboard.</description>
    </item>
    
    <item>
      <title>How To Receive SMS Messages with Ruby on Rails</title>
      <link>https://www.wikiod.com/twilio/how-to-receive-sms-messages-with-ruby-on-rails/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/twilio/how-to-receive-sms-messages-with-ruby-on-rails/</guid>
      <description>Using the Twilio Gem # Assuming you have a Twilio account and API credentials, add the following to your Gemfile:
gem &#39;twilio-ruby&#39; Alternatively you can gem install twilio-ruby.
To have Twilio send an incoming SMS to a particular route in your application, you need to configure the Messaging URL for your phone number. Once that&amp;rsquo;s done, you need to set up a route in config/routes.rb:
TwilioSample::Application.routes.draw do resources :messages end This creates a set RESTful routes (GET /messages to list messages, POST /messages to create a message, etc.</description>
    </item>
    
    <item>
      <title>Send an SMS message using Bash and cURL</title>
      <link>https://www.wikiod.com/twilio/send-an-sms-message-using-bash-and-curl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/twilio/send-an-sms-message-using-bash-and-curl/</guid>
      <description>Syntax # https://api.twilio.com/{Api version}/Accounts/{AccountSid}/Messages.json {body} Parameters # Parameter Details {Api version} Versioning date of the API. e.g. 2010-04-01 {Account Sid} The Account Sid. Starts AC {body} URL encoded body including From, To, Body and MessagingServiceSid Send a single message using an alphanumeric sender id # An HTTP POST request is sent to a URL of the format: &amp;ldquo;https://api.twilio.com/2xxx-xx-xx/Accounts/[AccountSid]/Messages.json
The example below uses a alphanumeric string as the sender. At the time of writing a sender ID can only be added through a service request Twlio.</description>
    </item>
    
    <item>
      <title>Sending messages in Node.js</title>
      <link>https://www.wikiod.com/twilio/sending-messages-in-nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/twilio/sending-messages-in-nodejs/</guid>
      <description>Twilio allows you to send and receive text messages with Node.js by using the twilio-node library to make calls. This guide assumes you&amp;rsquo;ve already setup an account with Twilio and have your account SID and the authentication token from the Twilio Console.
Parameters # Parameter Details to A valid phone number to receive the message from A Twilio number that is assigned to you body The body of the text message limited to 1600 characters StatusCallback A URL that Twilio posts to when a message status changes maxPrice Set the maximum price of a message validityPeriod The number of seconds the message will remain in the Twilio queue provideFeedback Boolean value, when set to true mediaUrl A URL containing a gif, png or jpeg content that will be sent with the message 2.</description>
    </item>
    
  </channel>
</rss>
