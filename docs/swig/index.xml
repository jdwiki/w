<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>swig Tutorial on </title>
    <link>https://www.wikiod.com/docs/swig/</link>
    <description>Recent content in swig Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/swig/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with swig</title>
      <link>https://www.wikiod.com/swig/getting-started-with-swig/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/swig/getting-started-with-swig/</guid>
      <description>Hello World # A minimal example of using SWIG.
HelloWorld.i, the SWIG interface file
%module helloworld //the name of the module SWIG will create %{ //code inside %{...%} gets inserted into the wrapper file #include &amp;quot;myheader.h&amp;quot; //helloworld_wrap.cxx includes this header %} %include &amp;quot;myheader.h&amp;quot; //include the header for SWIG to parse Then, in the command line
swig -c++ -java HelloWorld.i which means we are wrapping C++ (as opposed to C) with Java as the target language as specified by HelloWorld.</description>
    </item>
    
    <item>
      <title>Introduction to Typemaps</title>
      <link>https://www.wikiod.com/swig/introduction-to-typemaps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/swig/introduction-to-typemaps/</guid>
      <description>Typemaps are the very heart of what SWIG does. When you want to pass data between languages the behaviours for doing so depend upon the type that SWIG sees. The power of typemaps is that the chunks of code are applied many times.
SWIG itself includes many useful typemaps in the core library it is supplied with, e.g. for primitive types, C++ standard library containers, boost etc. so often you won&amp;rsquo;t even need to write any typemaps to expose your code, however that list is by no means complete.</description>
    </item>
    
  </channel>
</rss>
