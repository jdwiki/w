<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>email Tutorial on </title>
    <link>https://www.wikiod.com/docs/email/</link>
    <description>Recent content in email Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/email/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with email</title>
      <link>https://www.wikiod.com/email/getting-started-with-email/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/getting-started-with-email/</guid>
      <description>HTML and Plain Text # HTML email is the use of a subset of HTML and CSS to format an email message like a web page using colors, graphics, table columns and links.
When you send an email it’s important to send both plain text and HTML. You do this by sending your email as multi-part MIME. Most email service providers have tools to automatically construct the MIME for you. Some will generate a plain text version based on your HTML version, and there are third party tools as well.</description>
    </item>
    
    <item>
      <title>Bulletproof Buttons</title>
      <link>https://www.wikiod.com/email/bulletproof-buttons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/bulletproof-buttons/</guid>
      <description>Buttons can be one of the most frustrating parts of email development, but they can be built with code instead of images and still display well in all major email clients. When built in HTML/CSS, a button will display in all email clients even with images off. Both the content and style of each button can be quickly edited in HTML/CSS template.
Progressive Enhancement with Media Queries
For clients that support media queries, any of the examples above can be progressively enhance the button.</description>
    </item>
    
    <item>
      <title>Meta Information</title>
      <link>https://www.wikiod.com/email/meta-information/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/meta-information/</guid>
      <description>As with web development, &amp;lt;meta&amp;gt; tags can be included in the &amp;lt;head&amp;gt; tag of an email. &amp;lt;meta&amp;gt; tags tell emails clients how to interpret and display email code. These are &amp;lt;meta&amp;gt; tags that are regularly used in email.
Content-Type # The Content-Type meta tag is for telling the destination rendering engine how to process text and special characters. You should encode all special characters anyway (e.g., &amp;amp; becomes &amp;amp;amp; for an ampersand) to be safe, but it’s worth keeping this line in there anyway.</description>
    </item>
    
    <item>
      <title>HTML Email Reset</title>
      <link>https://www.wikiod.com/email/html-email-reset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/html-email-reset/</guid>
      <description>As with web development, it&amp;rsquo;s good to provide some reset CSS to the emails. As when building a web page, adding a CSS reset to an email helps to normalize how the code gets rendered across multiple email clients (since each has it&amp;rsquo;s own default styles and way of interpreting code).
Resetting Email CSS in </description>
    </item>
    
    <item>
      <title>HTML email composition and Outlook intricacies</title>
      <link>https://www.wikiod.com/email/html-email-composition-and-outlook-intricacies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/html-email-composition-and-outlook-intricacies/</guid>
      <description>Creating spacers # Some email clients (notably Windows Desktop Outlook) collapse tables with no content, even if there are dimensions or padding.
To prevent these clients from collapsing the spacer table, you can add an invisible &amp;amp;nbsp; that serves as content. Then zero out the character&amp;rsquo;s font-size and line-height so it doesn&amp;rsquo;t impact the &amp;lt;table&amp;gt;s dimensions. The height (or width) attribute is now the only thing affecting the spacer&amp;rsquo;s dimensions.</description>
    </item>
    
    <item>
      <title>Hybrid Email Coding</title>
      <link>https://www.wikiod.com/email/hybrid-email-coding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/hybrid-email-coding/</guid>
      <description>When an email client doesn&amp;rsquo;t support media-queries, a hybrid approach can be used to to reconfigure the layout for different screen sizes for email clients regardless of media query support. It uses fluid tables and max-width and min-width to impose rigid baselines (allowing some movement) and imposes a fixed, wide width for Outlook who is shackled to desktop anyway. Once a mobile-friendly baseline is set, media queries progressively enhance the email further in clients that support it.</description>
    </item>
    
    <item>
      <title>Postmarkup email service</title>
      <link>https://www.wikiod.com/email/postmarkup-email-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/postmarkup-email-service/</guid>
      <description>Postmark up is a third party API which provide you to send mail or we can say multiple mails at a time with a speedy response.
Send mail through postmark email API. # PostmarkMailSender.java
public class PostmarkMailSender implements MailSender{ private static Logger logger = Logger.getLogger(&amp;quot;com.postmark&amp;quot;); private String serverToken; private static Gson gson; static { GsonBuilder gsonBuilder = new GsonBuilder(); gsonBuilder.disableHtmlEscaping(); SimpleMailMessage src=new SimpleMailMessage(); String [] arr={&amp;quot;&amp;quot;,&amp;quot;&amp;quot;}; src.setTo(arr); System.out.println(src.getTo()); gsonBuilder.registerTypeAdapter(SimpleMailMessage.class, new SimpleMailMessageAdapter()); gsonBuilder.</description>
    </item>
    
    <item>
      <title>CSSHTML Support</title>
      <link>https://www.wikiod.com/email/csshtml-support/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/csshtml-support/</guid>
      <description>Not every css property or HTML tag is supported by all email clients and here we can keep track of it &amp;amp; possible work around.
Visual Decorations # CSS properties which add visual decorations but are not supported can be replaced with image tag.
For example: border-radius is not supported in Yahoo! Mail, Outlook 2007/10/13 +, Outlook 03/Express/Mail &amp;amp; Android 4 (Gmail) +
To work around this we can add images with border radius in them i.</description>
    </item>
    
    <item>
      <title>Images</title>
      <link>https://www.wikiod.com/email/images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/email/images/</guid>
      <description>Images can be added to an email as foreground or background images. Images should be remotely hosted on a web server and pulled into an email using absolute paths. While similar to the web, the syntax and considerations can be a little different.
Parameters # Parameters Details align Specifies the alignment of an image relative to the surrounding element(s) alt Alternative text that should be displayed if for some reason the image could not be displayed border How the element handles crossorigin requests height Specifies the height of the image (optional) src Specifies the URL of the image srcset Images to use in different situations (e.</description>
    </item>
    
  </channel>
</rss>
