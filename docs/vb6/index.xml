<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visual Basic 6 Tutorial on </title>
    <link>https://www.wikiod.com/docs/vb6/</link>
    <description>Recent content in Visual Basic 6 Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/vb6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with Visual Basic 6</title>
      <link>https://www.wikiod.com/vb6/getting-started-with-visual-basic-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vb6/getting-started-with-visual-basic-6/</guid>
      <description>Hello world # &#39; A &amp;quot;Hello, World!&amp;quot; program in Visual Basic. Module Hello Sub Main() MsgBox(&amp;quot;Hello, World!&amp;quot;) &#39; Display message on computer screen. End Sub End Module Installation or Setup # Detailed instructions on getting vb6 set up or installed.</description>
    </item>
    
    <item>
      <title>Installing VB6 on Windows 10</title>
      <link>https://www.wikiod.com/vb6/installing-vb6-on-windows-10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vb6/installing-vb6-on-windows-10/</guid>
      <description>Installation Wizard # Visual Studio 6.0 Installer wizard
By default, the following packages do not install properly under Windows 10:
Visual Studio 6 Enterprise Visual Studio 6 Professional Visual Basic 6 Enterprise Visual Basic 6 Professional To install the above packages, you&amp;rsquo;ll either need to make numerous adjustments and registry hacks, or use the fantastic Visual Studio 6.0 Installer wizard by Giorgio Brausi.
You&amp;rsquo;ll need the following items before starting:</description>
    </item>
    
    <item>
      <title>Function Procedures</title>
      <link>https://www.wikiod.com/vb6/function-procedures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vb6/function-procedures/</guid>
      <description>Function is a series of statements enclosed by &amp;ldquo;Function&amp;rdquo; and &amp;ldquo;End Function&amp;rdquo; statements.
The Function performs an activity and returns control to the caller. When it returns control, it also returns a value to the calling code.
You can define a Function in a Class, Structure &amp;amp; Module. By default It is Public. It means, you can call it from anywhere in your application that has access to the class, Structure or Module in which you defined it.</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://www.wikiod.com/vb6/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vb6/variables/</guid>
      <description>Variable types # There are different variable types for different purposes. In Visual Basic 6 the following variable types are available:
Array Boolean Byte Currency Date Double Integer Long Single String Variant You declare a variable by using the Dim keyword:
Dim RandomNumber As Integer If you do not specify a variable type the variable will default to Variant:
Dim Foo is equivalent to
Dim Foo As Variant Boolean # Boolean is the simplest variable type as it can contain only one of two values: True or False.</description>
    </item>
    
    <item>
      <title>Basic Syntax</title>
      <link>https://www.wikiod.com/vb6/basic-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vb6/basic-syntax/</guid>
      <description>Select Case Statement # Dim number As Integer = 8 Select Case number Case 1 To 5 Debug.WriteLine(&amp;quot;Between 1 and 5, inclusive&amp;quot;) &#39; The following is the only Case clause that evaluates to True. Case 6, 7, 8 Debug.WriteLine(&amp;quot;Between 6 and 8, inclusive&amp;quot;) Case 9 To 10 Debug.WriteLine(&amp;quot;Equal to 9 or 10&amp;quot;) Case Else Debug.WriteLine(&amp;quot;Not between 1 and 10, inclusive&amp;quot;) End Select if / else statement # If condition Then code to execute if true ElseIf condition Then code Else code to execute if conditions are both false End If for loop # For I as Integer = 1 To 10 Step 1 code to execute Next Step is optional and Step 1 is the default.</description>
    </item>
    
  </channel>
</rss>
