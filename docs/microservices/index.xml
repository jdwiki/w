<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>microservices Tutorial on </title>
    <link>https://www.wikiod.com/docs/microservices/</link>
    <description>Recent content in microservices Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with microservices</title>
      <link>https://www.wikiod.com/microservices/getting-started-with-microservices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/microservices/getting-started-with-microservices/</guid>
      <description>Essential Checklist for Microservices platform # CI/CD pipeline Centralized authentication and authorization service API documentation API gateway Centralize log management tool Service monitor Infrastructure Automation Centralized config server API documentation # Use Spring REST Docs to document your services. It&amp;rsquo;s a powerful framework which makes sure that the Service logic is always inline with the documentation. In order to do so, you would have to write integration tests for your services.</description>
    </item>
    
    <item>
      <title>API Gateway</title>
      <link>https://www.wikiod.com/microservices/api-gateway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/microservices/api-gateway/</guid>
      <description>Microservices architecture offers great flexibility to decouple the applications and develop independent applications. A Microservice should always be independently testable &amp;amp; deployable.
But, as you keep on having too many services, there is a need to have an API Gateway.
You can&amp;rsquo;t expose all your services to external clients. You need to have some layer of abstraction which acts as a gatekeeper for all your Microservices. One entry point for all your services.</description>
    </item>
    
  </channel>
</rss>
