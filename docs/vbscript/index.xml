<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vbscript Tutorial on </title>
    <link>https://www.wikiod.com/docs/vbscript/</link>
    <description>Recent content in vbscript Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/vbscript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with vbscript</title>
      <link>https://www.wikiod.com/vbscript/getting-started-with-vbscript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/getting-started-with-vbscript/</guid>
      <description>Hello World message using cscript and wscript # WScript.Echo &amp;quot;Hello world!&amp;quot; This displays a message on the console if run with cscript.exe (the console host) or in a message box if run with wscript.exe (the GUI host).
If you&amp;rsquo;re using VBScript as the server-side scripting language for a web page (for classic ASP, for example),
Response.Write &amp;quot;Hello world!&amp;quot; puts the message into the HTML send to the client (browser).
If you want to displays a message in the message box, you can use:</description>
    </item>
    
    <item>
      <title>InputBox</title>
      <link>https://www.wikiod.com/vbscript/inputbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/inputbox/</guid>
      <description>Syntax # InputBox(prompt[, title][, default][, xpos][, ypos][, helpfile, context]) Parameters # Argument Detail prompt Text to display above the input field (usually an instruction as to what is required form the user). title Caption displayed in the titlebar of the input box. default A placeholder for the text field, used as the return value if the user doesn&amp;rsquo;t overwrite. xpos Horizontal distance in twips to display input box from the left edge of the screen.</description>
    </item>
    
    <item>
      <title>Dictionary Objects</title>
      <link>https://www.wikiod.com/vbscript/dictionary-objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/dictionary-objects/</guid>
      <description>Iterate all items in the dictionary # set oDic = CreateObject(&amp;quot;Scripting.Dictionary&amp;quot;) oDic.add &amp;quot;USA&amp;quot;, &amp;quot;United States of America&amp;quot; oDic.add &amp;quot;UK&amp;quot;, &amp;quot;United Kingdom&amp;quot; oDic.add &amp;quot;CAN&amp;quot;, &amp;quot;Canada&amp;quot; For Each obj in oDic.Items Msgbox obj Next Set oDic = Nothing *Output:
United States of America
United Kingdom
Canada
Create dictionary and Add Items to dictionary # Dim oDic Set oDic = CreateObject(&amp;quot;Scripting.Dictionary&amp;quot;) oDic.Add &amp;quot;US&amp;quot;, &amp;quot;United States of America&amp;quot; oDic.Add &amp;quot;UK&amp;quot;, &amp;quot;United Kingdom&amp;quot; Check if key Exists in Dictionary # If oDic.</description>
    </item>
    
    <item>
      <title>Using Classes</title>
      <link>https://www.wikiod.com/vbscript/using-classes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/using-classes/</guid>
      <description>Creating a Class # Class Car Private wheels_ Private distances_ &#39; Property getter Public Property Get Wheels() Wheels = wheels_ End Property &#39; Property setter Public Property Let Wheels(v) wheels_ = v End Property &#39; Parameterless Constructor Public Sub Class_Initialize() distances_ = Array(0) End Sub &#39; Method Public Function GetTotalDistance() dim d &#39;GetTotalDistance = 0 For Each d in distances_ GetTotalDistance = GetTotalDistance + d Next End Function &#39; Void Method Public Sub Drive(distance) distances_(ubound(distances_)) = distance Redim Preserve distances_(ubound(distances_)+1) End Sub End Class Using a Class Instance # &#39; Initialize the object Dim myCar Set myCar = new Car &#39; Setting a property myCar.</description>
    </item>
    
    <item>
      <title>Creating Your First Script</title>
      <link>https://www.wikiod.com/vbscript/creating-your-first-script/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/creating-your-first-script/</guid>
      <description>To begin, in Windows, create a text document on your desktop (Right-click&amp;gt;New&amp;gt;Text Document.) Change the the extension from &amp;ldquo;.txt&amp;rdquo; to &amp;ldquo;.vbs&amp;rdquo;. At this point it is executable by double clicking it(nothing will happen if you try, there&amp;rsquo;s nothing in it yet.) To edit, right-click document and click edit. Add the example code for your first program.
Parameters # Column Column Cell Cell Hello World # Just a simple hello world to start.</description>
    </item>
    
    <item>
      <title>Arrays and Loops</title>
      <link>https://www.wikiod.com/vbscript/arrays-and-loops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/arrays-and-loops/</guid>
      <description>1. Arrays - Static # Dim cars(2) cars(0) = &amp;quot;Ford&amp;quot; cars(1) = &amp;quot;Audi&amp;quot; cars(2) = &amp;quot;Prius&amp;quot; 2. Arrays - Dynamic # Dim cars() Redim cars(0) &#39;Give it 1 entry Dim tmp tmp = &amp;quot;Ford&amp;quot; &#39;ubound(arrayvariable) is the count of array size. &#39;in this case, it would be 1, since there is 1 entry. cars(ubound(cars)) = tmp &#39;cars(0) Redim preserve cars(ubound(cars)+1) 5. Creating an array from a text file. # Dim cars Dim filefullname : filefullname = &amp;quot;C:\testenv\test.</description>
    </item>
    
    <item>
      <title>Include files</title>
      <link>https://www.wikiod.com/vbscript/include-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/include-files/</guid>
      <description>When running VbScript in Windows shell, there is no built in function to include a file, therefore, to organize your code in different files you&amp;rsquo;ll need to create a method to do that.
A few things to keep in mind when using the IncludeFile(p_Path) method :
There is no limitation of file type that can be included but the included files content must be VbScript. If there is a syntax error in the included file, you will not get the line/column of the error.</description>
    </item>
    
    <item>
      <title>Strings</title>
      <link>https://www.wikiod.com/vbscript/strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/strings/</guid>
      <description>MSDN Date/Time, String and Numeric Functions
https://msdn.microsoft.com/en-us/library/3ca8tfek(v=vs.84).aspx
1. Standard String # In vbscript, an object doesn&amp;rsquo;t necessarily need a designated type. Similar to C#&amp;rsquo;s var variable.
Dim ExampleString1 As String Dim ExampleString2 2. String Manipulation Basics # &#39;Base string Dim exStr : exStr = &amp;quot; &amp;lt;Head&amp;gt;data&amp;lt;/Head&amp;gt; &amp;quot; &#39;Left Dim res: res = Left(exStr,6) &#39;res now equals &amp;quot; &amp;lt;Head&amp;quot; &#39;Right Dim res: res = Right(exStr,6) &#39;res now equals &amp;quot;Head&amp;gt; &amp;quot; &#39;Mid Dim res: res = Mid(exStr,8,4) &#39;res now equals &amp;quot;data&amp;quot; &#39;Replace Dim res: res = Replace(&amp;quot;variable&amp;quot;, &amp;quot;var&amp;quot;, &amp;quot;&amp;quot;) &#39;res now equals &amp;quot;riable&amp;quot; &#39;LCase Dim res: res = Lcase(exStr) &#39;res now equals &amp;quot; &amp;lt;head&amp;gt;data&amp;lt;/head&amp;gt; &amp;quot; &#39;UCase Dim res: res = UCase(exStr) &#39;res now equals &amp;quot; &amp;lt;HEAD&amp;gt;DATA&amp;lt;/HEAD&amp;gt; &amp;quot; &#39;LTrim Dim res: res = LTrim(exStr) &#39;res now equals &amp;quot;&amp;lt;Head&amp;gt;data&amp;lt;/Head&amp;gt; &amp;quot; notice no space on left side &#39;RTrim Dim res: res = RTrim(exStr) &#39;res now equals &amp;quot;&amp;lt;Head&amp;gt;data&amp;lt;/Head&amp;gt; &amp;quot; notice no space on right side &#39;Trim Dim res: res = Trim(exStr) &#39;res now equals &amp;quot;&amp;lt;Head&amp;gt;data&amp;lt;/Head&amp;gt;&amp;quot; &#39;StrReverse Dim res: res = StrReverse(exStr) &#39;res now equals &amp;quot; &amp;gt;daeH/&amp;lt;atad&amp;gt;daeH&amp;lt; &amp;quot; &#39;String Dim res: res = String(4,&amp;quot;c&amp;quot;) &#39;res now equals &amp;quot;cccc&amp;quot; &#39;StrComp - String Compare, by default, compares the binary of 2 strings.</description>
    </item>
    
    <item>
      <title>WMI queries</title>
      <link>https://www.wikiod.com/vbscript/wmi-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/wmi-queries/</guid>
      <description>VBScript can query Windows Management Instrumentation (WMI) for various vital info related to local and remote PC . We can use WMI queries to perform various tasks such as extracting PC&amp;rsquo;s name , getting screen resolution , getting info about user and username , extracting vital info about any process , modifying core system settings,etc .
Below are some examples which use WMI queries to carry out specific tasks .</description>
    </item>
    
    <item>
      <title>FileSystem Objects</title>
      <link>https://www.wikiod.com/vbscript/filesystem-objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vbscript/filesystem-objects/</guid>
      <description>Moving a File/Folder # Methods Used:
.MoveFile(Source, Dest) .MoveFolder(Source, Dest) The following code illustrates the use of MoveFile method to Move a file to a new location. The same thing can be achieved for the folders by using the MoveFolder method.
Code:
Dim objFso, strSourcePath, strDestPath strSourcePath = &amp;quot;C:\Users\GS\Desktop\Source.txt&amp;quot; strDestPath = &amp;quot;C:\Users\GS\Desktop\Folder\Dest.txt&amp;quot; Set objFso = CreateObject(&amp;quot;Scripting.FileSystemObject&amp;quot;) If objFso.FileExists(strSourcePath) then objFso.MoveFile strSourcePath, strDestPath End If Set objFso = Nothing NOTE: We do not have any method of a filesystem object which allows us to rename a file.</description>
    </item>
    
  </channel>
</rss>
