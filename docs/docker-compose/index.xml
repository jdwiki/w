<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker-compose Tutorial on </title>
    <link>https://www.wikiod.com/docs/docker-compose/</link>
    <description>Recent content in docker-compose Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with docker-compose</title>
      <link>https://www.wikiod.com/docker-compose/getting-started-with-docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/docker-compose/getting-started-with-docker-compose/</guid>
      <description>Ruby on Rails with docker-compose # If you want to use docker for rails app, and use database, you need to know that all the data in the docker container will be destroyed (unless you configure the container specifically for keeping data) Sometimes, you need to create a docker container with an application and attach it to an old container with a database.
As an example of rails application, I used a simple app.</description>
    </item>
    
    <item>
      <title>Docker-compose multi-container example with default network</title>
      <link>https://www.wikiod.com/docker-compose/docker-compose-multi-container-example-with-default-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/docker-compose/docker-compose-multi-container-example-with-default-network/</guid>
      <description>By default Compose sets up a single network for your app. Each container for a service joins the default network and is both reachable by other containers on that network, and discoverable by them at a hostname identical to the container name.
Links allow you to define extra aliases by which a service is reachable from another service. They are not required to enable services to communicate – by default, any service can reach any other service at that service’s name.</description>
    </item>
    
    <item>
      <title>Environment variables external file</title>
      <link>https://www.wikiod.com/docker-compose/environment-variables-external-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/docker-compose/environment-variables-external-file/</guid>
      <description>There a number of ways to include environment variables into the docker application. Here are some examples:
Via External File # docker-composer.yml
web: ... env_file: - ./filename filename
variable=value within the docker-compose itself # app: ... environment: - var=value </description>
    </item>
    
  </channel>
</rss>
