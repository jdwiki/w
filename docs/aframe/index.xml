<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aframe Tutorial on </title>
    <link>https://www.wikiod.com/docs/aframe/</link>
    <description>Recent content in aframe Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/aframe/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with aframe</title>
      <link>https://www.wikiod.com/aframe/getting-started-with-aframe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/getting-started-with-aframe/</guid>
      <description>Getting started # A-Frame can be developed from a plain HTML file without having to install anything! A great way to try out A-Frame to remix the starter example on Glitch, an online code editor that instantly hosts and deploys for free. Or create an .html file and include A-Frame in the head:
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;https://aframe.io/releases/0.5.0/aframe.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;a-scene&amp;gt; &amp;lt;a-box position=&amp;quot;-1 0.5 -3&amp;quot; rotation=&amp;quot;0 45 0&amp;quot; color=&amp;quot;#4CC3D9&amp;quot;&amp;gt;&amp;lt;/a-box&amp;gt; &amp;lt;a-sphere position=&amp;quot;0 1.</description>
    </item>
    
    <item>
      <title>cursors</title>
      <link>https://www.wikiod.com/aframe/cursors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/cursors/</guid>
      <description>The cursor component lets us interact with entities through clicking and gazing.
Syntax # &amp;lt;a-entity cursor=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a-cursor&amp;gt; &amp;lt;a-cursor&amp;gt;&amp;lt;/a-cursor&amp;gt; Parameters # Property Description fuse Whether cursor is fuse-based. Default value: false on desktop, true on mobile fuseTimeout How long to wait (in milliseconds) before triggering a fuse-based click event. Default value: 1500 The cursor is a specific application of the raycaster component in that it
Listens for mouse clicks and gaze-based fuses Captures only the first intersected entity Emits special mouse and hover events (e.</description>
    </item>
    
    <item>
      <title>Controls (component)</title>
      <link>https://www.wikiod.com/aframe/controls-component/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/controls-component/</guid>
      <description>Controllers are vital for immersing people into a VR application. The potential of VR is not met without them, namely controllers that provide six degrees of freedom (6DoF). With controllers, people can reach out and around the scene and interact with objects with their hands.
A-Frame provides components for controllers across the spectrum as supported by their respective WebVR browsers through the Gamepad Web API. There are components for Vive, Oculus Touch, Daydream, and GearVR controllers.</description>
    </item>
    
    <item>
      <title>Raycasters (component)</title>
      <link>https://www.wikiod.com/aframe/raycasters-component/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/raycasters-component/</guid>
      <description>The raycaster component does general intersection testing with a raycaster. Raycasting is the method of extending a line from an origin towards a direction, and checking whether that line intersects with other entites. The raycaster component is a wrapper on top of the three.js raycaster. It checks for intersections at a certain interval against a list of objects, and will emit events on the entity when it detects intersections or clearing of intersections (i.</description>
    </item>
    
    <item>
      <title>Camera</title>
      <link>https://www.wikiod.com/aframe/camera/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/camera/</guid>
      <description>The camera component defines from which perspective the user views the scene. The camera is commonly paired with controls components that allow input devices to move and rotate the camera.
Syntax # &amp;lt;a-entity camera&amp;gt;&amp;lt;/a-entity&amp;gt; &amp;lt;a-camera&amp;gt;&amp;lt;/a-camera&amp;gt; Parameters # Property Description active Whether the camera is the active camera in a scene with more than one camera. far Camera frustum far clipping plane. fov Field of view (in degrees). near Camera frustum near clipping plane.</description>
    </item>
    
    <item>
      <title>Entities &lt;a-entity&gt;</title>
      <link>https://www.wikiod.com/aframe/entities-a-entity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/entities-a-entity/</guid>
      <description>A-Frame represents an entity via the &amp;lt;a-entity&amp;gt; element. As defined in the entity-component-system pattern, entities are placeholder objects to which we plug in components to provide them appearance, behavior, and functionality.
Syntax # &amp;lt;a-entity&amp;gt; // Consider the entity below. By itself, it has no appearance, behavior, or functionality. It does nothing: &amp;lt;a-entity geometry=&amp;quot;primitive: box&amp;quot; material=&amp;quot;color: red&amp;quot;&amp;gt; // We can attach components to it to make it render something or do something.</description>
    </item>
    
    <item>
      <title>light (component)</title>
      <link>https://www.wikiod.com/aframe/light-component/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/light-component/</guid>
      <description>The light component defines the entity as a source of light. Light affects all materials that have not specified a flat shading model with shader: flat. Note that lights are computationally expensive we should limit number of lights in a scene.
Syntax # &amp;lt;a-entity light=&amp;ldquo;color: #AFA; intensity: 1.5&amp;rdquo; position=&amp;quot;-1 1 0&amp;quot;&amp;gt;&amp;lt;/a-entity&amp;gt; &amp;lt;a-light type=&amp;ldquo;point&amp;rdquo; color=&amp;ldquo;blue&amp;rdquo; position=&amp;ldquo;0 5 0&amp;rdquo;&amp;gt;&amp;lt;/a-light&amp;gt; Parameters # Parameters Details type One of ambient, directional, hemisphere, point, spot. color Light color.</description>
    </item>
    
    <item>
      <title>Asset Management System</title>
      <link>https://www.wikiod.com/aframe/asset-management-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/asset-management-system/</guid>
      <description>A-Frame has an asset management system that allows us to place our assets in one place and to preload and cache assets for better performance.
Games and rich 3D experiences traditionally preload their assets, such as models or textures, before rendering their scenes. This makes sure that assets aren’t missing visually, and this is beneficial for performance to ensure scenes don’t try to fetch assets while rendering.
Events # Since &amp;lt;a-assets&amp;gt; and &amp;lt;a-asset-item&amp;gt; are nodes in A-Frame, they will emit the loaded event when they say they have finished loading.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://www.wikiod.com/aframe/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/components/</guid>
      <description>In the entity-component-system pattern, a component is a reusable and modular chunk of data that we plug into an entity to add appearance, behavior, and/or functionality.
In A-Frame, components modify entities which are 3D objects in the scene. We mix and compose components together to build complex objects. They let us encapsulate three.js and JavaScript code into modules that we can use declaratively from HTML. Components are roughly analogous to CSS.</description>
    </item>
    
    <item>
      <title>Primitives</title>
      <link>https://www.wikiod.com/aframe/primitives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aframe/primitives/</guid>
      <description>Primitives are just &amp;lt;a-entity&amp;gt;s under the hood. This means primitives have the same API as entities such as positioning, rotating, scaling, and attaching components. A-Frame provides a handful of elements such as &amp;lt;a-box&amp;gt; or &amp;lt;a-sky&amp;gt; called primitives that wrap the entity-component pattern to make it appealing for beginners. . Developers can create their own primitives as well.
Under the Hood # Primitives act as a convenience layer (i.e., syntactic sugar) primarily for newcomers.</description>
    </item>
    
  </channel>
</rss>
