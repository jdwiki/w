<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kivy Tutorial on </title>
    <link>https://www.wikiod.com/docs/kivy/</link>
    <description>Recent content in kivy Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/kivy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with kivy</title>
      <link>https://www.wikiod.com/kivy/getting-started-with-kivy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/kivy/getting-started-with-kivy/</guid>
      <description>Touch, grab and move # The following example creates a canvas with 2 points and 1 line in between. You will be able to move the point and the line around.
from kivy.app import App from kivy.graphics import Ellipse, Line from kivy.uix.boxlayout import BoxLayout class CustomLayout(BoxLayout): def __init__(self, **kwargs): super(CustomLayout, self).__init__(**kwargs) self.canvas_edge = {} self.canvas_nodes = {} self.nodesize = [25, 25] self.grabbed = {} #declare a canvas with self.canvas.after: pass self.</description>
    </item>
    
    <item>
      <title>Using the Screen Manager</title>
      <link>https://www.wikiod.com/kivy/using-the-screen-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/kivy/using-the-screen-manager/</guid>
      <description>Circular Imports # This is a big issue in Kivy, Python, and many programming languages
When one resource is required by two files, it is normal to place this resource in the file that will be using it most. But if this happens with two resources, and they end up in opposite files, then importing both into Python will result in a circular import.
Python will import the first file, but this file imports the second.</description>
    </item>
    
    <item>
      <title>Property</title>
      <link>https://www.wikiod.com/kivy/property/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/kivy/property/</guid>
      <description>Difference between Properties and Binding. # In brief:
Properties make it easy to pass updates from the python side to the user interface
Binding passes the changes that happened on the user interface to the python side.
from kivy.app import App from kivy.uix.boxlayout import BoxLayout from kivy.lang import Builder from kivy.properties import StringProperty from kivy.properties import ObjectProperty from kivy.uix.textinput import TextInput from kivy.event import EventDispatcher Builder.load_string(&amp;quot;&amp;quot;&amp;quot; CustLab1@Label size_hint:0.3,1 CustLab2@Label text: &amp;ldquo;Result&amp;rdquo; size_hint: 0.</description>
    </item>
    
  </channel>
</rss>
