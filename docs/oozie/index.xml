<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>oozie Tutorial on </title>
    <link>https://www.wikiod.com/docs/oozie/</link>
    <description>Recent content in oozie Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/oozie/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with oozie</title>
      <link>https://www.wikiod.com/oozie/getting-started-with-oozie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/oozie/getting-started-with-oozie/</guid>
      <description>Installation or Setup # Pre-requisites
This article demonstrated installing oozie-4.3.0 on Hadoop 2.7.3
Java 1.7+ Hadoop 2.x (here, 2.7.3) Maven3+ Unix box Step1: Dist file
Get oozie tar.gz file from http://www-eu.apache.org/dist/oozie/4.3.0/ and extract it
cd $HOME tar -xvf oozie-4.3.0.tar.gz Step2: Build Oozie
cd $HOME/oozie-4.3.0/bin ./mkdistro.sh -DskipTests Step3: Server Installation
Copy the built binaries to the home directory as ‘oozie’
cd $HOME cp -R $HOME/oozie-4.3.0/distro/target/oozie-4.3.0-distro/oozie-4.3.0 . Step 3.1: libext Create libext directory inside oozie directory</description>
    </item>
    
    <item>
      <title>Oozie data triggered coordinator</title>
      <link>https://www.wikiod.com/oozie/oozie-data-triggered-coordinator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/oozie/oozie-data-triggered-coordinator/</guid>
      <description>A detailed explanation is given on oozie data triggered coordinator job with example.
Coordinator runs periodically from the start time until the end time. Beginning at start time, the coordinator job checks if input data is available. When the input data becomes available, a workflow is started to process the input data which on completion produces the required output data. This process is repeated at every tick of frequency until the end time of coordinator.</description>
    </item>
    
    <item>
      <title>Oozie 101</title>
      <link>https://www.wikiod.com/oozie/oozie-101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/oozie/oozie-101/</guid>
      <description>Oozie Architecture # Oozie is developed on a client-server architecture. Oozie server is a Java web application that runs Java servlet container within an embedded Apache Tomcat. Oozie provides three different type of clients to interact with the Oozie server: Command Line, Java Client API and HTTP REST API.
Oozie server does not store any in-memory information of the running jobs. It relies on RDBMS to store states and data of all the Oozie jobs.</description>
    </item>
    
  </channel>
</rss>
