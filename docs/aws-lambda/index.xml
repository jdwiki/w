<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws-lambda Tutorial on </title>
    <link>https://www.wikiod.com/docs/aws-lambda/</link>
    <description>Recent content in aws-lambda Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/aws-lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with aws-lambda</title>
      <link>https://www.wikiod.com/aws-lambda/getting-started-with-aws-lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aws-lambda/getting-started-with-aws-lambda/</guid>
      <description>Installation or Setup # Log into your AWS Console and click on Lambda under the Services tab.
Under Functions you&amp;rsquo;ll be able to Create a Lambda function using the same-labeled button. You&amp;rsquo;ll be shown a screen where you can select a blueprint. These are simply starting points to existing Lambda functions for quickly starting out with Lambda. On the next screen you can configure any triggers you&amp;rsquo;d like to use to &amp;ldquo;set&amp;rdquo; this Lambda function off.</description>
    </item>
    
    <item>
      <title>How to develop aws-lambda(C#) on a local machine</title>
      <link>https://www.wikiod.com/aws-lambda/how-to-develop-aws-lambdac-on-a-local-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aws-lambda/how-to-develop-aws-lambdac-on-a-local-machine/</guid>
      <description>As part of the Serverless movement, AWS recently announced C# support for AWS Lambda functions. In this article, I will show you how to develop, install and call a simple C# AWS Lambda Function using Visual Studio 2015.
Before you start this example, first go to the Remarks section of this document and make sure you have all of the required components installed.
Install Required Components # At the time of this writing (Jan 2017), the following components will need to be installed on your machine in this order.</description>
    </item>
    
    <item>
      <title>Serverless Framework</title>
      <link>https://www.wikiod.com/aws-lambda/serverless-framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aws-lambda/serverless-framework/</guid>
      <description>The open-source, application framework to easily build serverless architectures on AWS Lambda &amp;amp; more. This section includes, how to setup serverless framework for application development with relevant examples.
&amp;ldquo;Serverless&amp;rdquo; is a framework: https://serverless.com/
Create Simple CRUD Operation # Create simple CRUD Operation Using Serverless Framework
Install Serverless framework globally npm install serverless -g Create simple Lambda Service serverless create --template aws-nodejs --path myService Go to the myService Directory it should contain</description>
    </item>
    
    <item>
      <title>AWS Lambda using Python</title>
      <link>https://www.wikiod.com/aws-lambda/aws-lambda-using-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aws-lambda/aws-lambda-using-python/</guid>
      <description>Hello World - Lambda Function # This is one of the simplest lambda function. It is equivalent to Hello World program.
To create your first program follow the below mentioned steps.
Login to AWS Console Click Lambda under compute Click create a Lambda Function Skip select blueprint section In configure trigger click on the dotted rectangle Select API Gateway Fill the required details as in the image. API Name is the name of your API you are going to build.</description>
    </item>
    
    <item>
      <title>aws-lambda triggered by S3</title>
      <link>https://www.wikiod.com/aws-lambda/aws-lambda-triggered-by-s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aws-lambda/aws-lambda-triggered-by-s3/</guid>
      <description>Syntax # Deserialized JSON based object &amp;ldquo;Records&amp;rdquo; key has one or more actual events Each sub event object contains all information you need to determine what changed Parameters # Parameter Details Records -&amp;gt; [] -&amp;gt; s3 -&amp;gt; bucket -&amp;gt; name The name of the S3 bucket Records -&amp;gt; [] -&amp;gt; s3 -&amp;gt; object -&amp;gt; key The path and name of the file. File names # Unlike most file paths, the S3 key name (JSON Schema: $.</description>
    </item>
    
    <item>
      <title>AWS Lambda with S3</title>
      <link>https://www.wikiod.com/aws-lambda/aws-lambda-with-s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aws-lambda/aws-lambda-with-s3/</guid>
      <description>Lambda developers will handle issues that requires the use of other AWS resources. This topic focuses on S3 (Simple Storage Service) which will commonly be used for storing static files and other configurations. This documentation will consider using AWS-SDK in lambda, accessing files in S3 from Lambda and triggering Lambda functions when an S3 event gets fired
Cheatsheet # AWS-SDK for javascript Lambda contains aws-sdk (https://aws.amazon.com/sdk-for-node-js/) in its global so no need to upload this node-module into the zip.</description>
    </item>
    
    <item>
      <title>alexa-skills-kit</title>
      <link>https://www.wikiod.com/aws-lambda/alexa-skills-kit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/aws-lambda/alexa-skills-kit/</guid>
      <description>Create Alexa Skills Kit Using Blueprint # Log in to the AWS Management Console and navigate to AWS Lambda.
Click create new function then you will see this window.
Select Runtime environment but blueprint (sample code) only for node.js and python
There are two example conation for alexa skills kit. You can filter those thing.
By selection one of these blue print. You can view Configure triggers window you can next it by filling required field.</description>
    </item>
    
  </channel>
</rss>
