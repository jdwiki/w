<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>acumatica Tutorial on </title>
    <link>https://www.wikiod.com/docs/acumatica/</link>
    <description>Recent content in acumatica Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/acumatica/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with acumatica</title>
      <link>https://www.wikiod.com/acumatica/getting-started-with-acumatica/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/getting-started-with-acumatica/</guid>
      <description>Installation or Setup # Detailed instructions on getting acumatica set up or installed.</description>
    </item>
    
    <item>
      <title>Exporting Records via REST Contract-Based API</title>
      <link>https://www.wikiod.com/acumatica/exporting-records-via-rest-contract-based-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/exporting-records-via-rest-contract-based-api/</guid>
      <description>This topic will demonstrate how to export records from Acumatica ERP via the REST Contract-Based API. In contrast to the Screen-Based API of Acumatica ERP, the Contract-Based API provides both SOAP and REST interfaces. For more information on the Contract-Based API, see Acumatica ERP Documentation
To communicate with the REST Contract-Based API of Acumatica ERP your client application must always perform the following 3 steps:
log into Acumatica ERP instance and get cookie with user session information</description>
    </item>
    
    <item>
      <title>Replacing Images on the Login Page</title>
      <link>https://www.wikiod.com/acumatica/replacing-images-on-the-login-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/replacing-images-on-the-login-page/</guid>
      <description>In this topic you will learn how to replacing standard Acumatica images on the login page. The demonstrated approach will make sure to keep your custom images on login page after the upgrade to a newer version and restore original images, provided by Acumatica, if at some point your customization appears unpublished.
Using customization to replace images on the login page # To create a customization package replacing images on the login page, follow the steps below on your local Acumatica instance:</description>
    </item>
    
    <item>
      <title>Populating report with data through code</title>
      <link>https://www.wikiod.com/acumatica/populating-report-with-data-through-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/populating-report-with-data-through-code/</guid>
      <description>This article covers example showing how to create report using memory records: # This example shows how to populate report with data returned by a data view delegate. During the exercise, we will develop an inquiry screen showing list of Sales Orders between two dates. Data view delegate will be used to populate Sales Order information.
Prerequisites:
We start with declaration of the SOOrderFilter DAC:
[Serializable] public class SOOrderFilter : IBqlTable { public abstract class dateFrom : IBqlField { } [PXDate()] [PXUIField(DisplayName = &amp;quot;Date From&amp;quot;)] public DateTime?</description>
    </item>
    
    <item>
      <title>Acumatica Platform Attributes Reference</title>
      <link>https://www.wikiod.com/acumatica/acumatica-platform-attributes-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/acumatica-platform-attributes-reference/</guid>
      <description>PXFormula Attribute # General Description # A formula in Acumatica is a DAC field that is calculated based on the values of other object fields.
To calculate a formula, Aсumatiсa framework provides a set of various operations and functions (such as arithmetical, logical, and comparison operations and string processing functions; see List of Built-In Common Formulas). In addition to the field values, a formula can use various constants provided by both the core of Acumatica and the application solutions.</description>
    </item>
    
    <item>
      <title>Using Customization Plug-In to Make Changes in Multiple Companies</title>
      <link>https://www.wikiod.com/acumatica/using-customization-plug-in-to-make-changes-in-multiple-companies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/using-customization-plug-in-to-make-changes-in-multiple-companies/</guid>
      <description>With classes derived from CustomizationPlug you can utilize capabilities of the Acumatica Customization Platform and execute custom code after the customization project has been published. In this topic you will learn how customization plug-ins can be used to make changes in multiple companies.
More information on customization plug-ins is available in Acumatica Customization Guide
Implementation of a customization plug-in to update multiple companies # To create a customization plugin, you simply create a class derived from CustomizationPlug and package it into customization.</description>
    </item>
    
    <item>
      <title>Adding Attribute Support to out-of-box Sales Order Entity</title>
      <link>https://www.wikiod.com/acumatica/adding-attribute-support-to-out-of-box-sales-order-entity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/adding-attribute-support-to-out-of-box-sales-order-entity/</guid>
      <description>Acumatica ERP lets you define attributes for flexible, meaningful classification of an Entity (Lead, Stock/Non-Stock Items Etc.) as required for your company’s specific needs. An attribute is a property that enables you to specify additional information for objects in the system. Attributes are defined in the context of a class which is a grouping of the business accounts (including leads, opportunities, customers, and cases), Stock and Non-Stock items by one or more of their properties.</description>
    </item>
    
    <item>
      <title>Exporting Records via Screen-Based API</title>
      <link>https://www.wikiod.com/acumatica/exporting-records-via-screen-based-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/exporting-records-via-screen-based-api/</guid>
      <description>This topic will demonstrate how to export records from Acumatica ERP via the Screen-Based API. The Screen-Based API of Acumatica ERP provides only the SOAP interface. If your development platform has limited support for SOAP web services, consider the Contract-Based API providing both SOAP and REST interfaces. For more information on the Screen-Based API, see Acumatica ERP Documentation
All sample provided in this topic were created with the Screen-Based API Wrapper.</description>
    </item>
    
    <item>
      <title>Changing caption dynamically using readonly DAC fields.</title>
      <link>https://www.wikiod.com/acumatica/changing-caption-dynamically-using-readonly-dac-fields/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/changing-caption-dynamically-using-readonly-dac-fields/</guid>
      <description>This example shows how to change dynamically the Caption/Label of Customer Name field on Customer ScreenID AR303000 on Acumatica ERP, depending on current Customer ID selected on the same form. We could:
How-To # Add new unbound field to the DAC. (as readonly)
[PXString(60, IsUnicode = true)] [PXUIField(Enabled = false, IsReadOnly = true)] public virtual string UsrReadOnlyAcctName{get;set;} public abstract class usrReadOnlyAcctName : IBqlField{} Modify its value depending on conditions using handlers.</description>
    </item>
    
    <item>
      <title>Modifications to Base Data Views</title>
      <link>https://www.wikiod.com/acumatica/modifications-to-base-data-views/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/acumatica/modifications-to-base-data-views/</guid>
      <description>This topic is intended to demonstrate various patterns and practices available to modify base data views in Acumatica.
APInvoiceEntry BLC: add additional restriction to poReceiptLinesSelection data view # To add additional restriction to the poReceiptLinesSelection data view, you should invoke Select method on base view and inspect each item in returned PXResultSet independently to decide if it complies with additional restriction(s):
public class APInvoiceEntryExt : PXGraphExtension&amp;lt;APInvoiceEntry&amp;gt; { [PXCopyPasteHiddenView] public PXSelect&amp;lt;APInvoiceEntry.POReceiptLineAdd&amp;gt; poReceiptLinesSelection; public virtual IEnumerable POReceiptLinesSelection() { foreach (var record in Base.</description>
    </item>
    
  </channel>
</rss>
