<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>v8 Tutorial on </title>
    <link>https://www.wikiod.com/docs/v8/</link>
    <description>Recent content in v8 Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/v8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with v8</title>
      <link>https://www.wikiod.com/v8/getting-started-with-v8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/v8/getting-started-with-v8/</guid>
      <description>Useful built-in functions and objects in d8 # In addition to libraries defined in EcmaScript language specification and EcmaScript internationalization API specification, d8 also implements the following functions and objects.
print(args...): function. Print to stdout. printErr(args...): function. Print to stderr. write(args...): function. Same as print but no newline at the end. read(filename): function. Read text from file and returned as String. readbuffer(filename): function. Read binary from file and returned as ArrayBuffer.</description>
    </item>
    
    <item>
      <title>Weak Callbacks</title>
      <link>https://www.wikiod.com/v8/weak-callbacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/v8/weak-callbacks/</guid>
      <description>Weak callbacks are primarily used for cleaning up C++ objects embedded in the InternalField of a v8::Object created from a v8::ObjectTemplate. When the JavaScript object is garbage collected, often times the C++ object must be deleted as well. By setting a weak callback, you can get notification that a javascript object has been garbage collected and take appropriate action.
It is VERY important to remember that garbage collection is NOT deterministic.</description>
    </item>
    
  </channel>
</rss>
