<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sfml Tutorial on </title>
    <link>https://www.wikiod.com/docs/sfml/</link>
    <description>Recent content in sfml Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/sfml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with sfml</title>
      <link>https://www.wikiod.com/sfml/getting-started-with-sfml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sfml/getting-started-with-sfml/</guid>
      <description>Basic SFML program # If everything whas been set up correctly, the following snippet will show a window titled &amp;ldquo;SFML works!&amp;rdquo; with a green circle:
#include &amp;lt;SFML/Graphics.hpp&amp;gt; int main() { sf::RenderWindow window(sf::VideoMode(200, 200), &amp;quot;SFML works!&amp;quot;); sf::CircleShape shape(100.f); shape.setFillColor(sf::Color::Green); while (window.isOpen()) { sf::Event event; while (window.pollEvent(event)) { if (event.type == sf::Event::Closed) window.close(); } window.clear(); window.draw(shape); window.display(); } return 0; } Installation - Linux # There are different approaches to the installation of SFML on Linux:</description>
    </item>
    
    <item>
      <title>Compile SFML for Android on Windows</title>
      <link>https://www.wikiod.com/sfml/compile-sfml-for-android-on-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sfml/compile-sfml-for-android-on-windows/</guid>
      <description>4. Build the SFML Android Sample # You can find the Android Sample in [SFML_ROOT]\examples\android
You can copy it to leave the SFML repository in it&amp;rsquo;s original state. Open cmd.exe in the sample location.
To get a list of all available Android build targets:
android list target Run Update Project for the Sample:
android update project --path [Path/to/Android/Sample] --target [targetID] e.g.
android update project --path &amp;quot;&amp;quot; --target android-19 For path we can use &amp;quot;&amp;quot; because we are running cmd in the sample path already.</description>
    </item>
    
    <item>
      <title>Window Basics</title>
      <link>https://www.wikiod.com/sfml/window-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sfml/window-basics/</guid>
      <description>You have to use a sf::RenderWindow rather than a sf::Window, if you plan on drawing primitives provided by SFML, such as sf::RectangleShape or sf::Sprite.
Creating an OpenGL window # Windows in SFML are represented by one of two classes:
sf::Window is a generic window provided by the operating system including an OpenGL render context. sf::RenderWindow is a specialized version of sf::Window that also acts as a sf::RenderTarget, allowing SFML&amp;rsquo;s primitives to be rendered to it.</description>
    </item>
    
  </channel>
</rss>
