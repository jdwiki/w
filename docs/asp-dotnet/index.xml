<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ASP.NET Tutorial on </title>
    <link>https://www.wikiod.com/docs/asp-dotnet/</link>
    <description>Recent content in ASP.NET Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/asp-dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with ASP.NET</title>
      <link>https://www.wikiod.com/asp-dotnet/getting-started-with-aspnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/getting-started-with-aspnet/</guid>
      <description>Installation or Setup # By default, all the required libraries for build ASP.NET applications are included during the installation of Visual Studio. If a newer version of ASP.NET is released that was not included with Visual Studio, you can download the appropriate SDK library from Microsoft, which will include all the necessary libraries for that version.
Similarly, the Windows operating system comes pre-installed with a more recent version of ASP.NET and is automatically registered with IIS for configuration and execution.</description>
    </item>
    
    <item>
      <title>Event Handling</title>
      <link>https://www.wikiod.com/asp-dotnet/event-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/event-handling/</guid>
      <description>Syntax # private void EventName (object sender, EventArgs e); Parameters # Parameter Details object sender sender refers to the object that invoked the event that fired the event handler. This is useful if you have many objects using the same event handler. EventArgs e EventArgs is something of a dummy base class. In and of itself it&amp;rsquo;s more or less useless, but if you derive from it, you can add whatever data you need to pass to your event handlers.</description>
    </item>
    
    <item>
      <title>GridView</title>
      <link>https://www.wikiod.com/asp-dotnet/gridview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/gridview/</guid>
      <description>Strongly Typed GridView # Starting with Asp.net 4.5 web controls can take advantage from strongly-typed binding to get IntelliSense support and compiletime errors.
Create a class, which holds your model:
public class Album { public int Id { get; set; } public string Name { get; set; } public string Artist { get; set; } } Define the GridView control on your page:
&amp;lt;asp:GridView ID=&amp;quot;Grid&amp;quot; runat=&amp;quot;server&amp;quot; AutoGenerateColumns=&amp;quot;false&amp;quot; ItemType=&amp;quot;YourNamespace.Album&amp;quot;&amp;gt; &amp;lt;Columns&amp;gt; &amp;lt;asp:TemplateField HeaderText=&amp;quot;Id&amp;quot;&amp;gt; &amp;lt;ItemTemplate&amp;gt; &amp;lt;asp:Label ID=&amp;quot;lblName&amp;quot; runat=&amp;quot;server&amp;quot; Text=&amp;quot;&amp;lt;%# Item.</description>
    </item>
    
    <item>
      <title>ASP.NET - User Controls</title>
      <link>https://www.wikiod.com/asp-dotnet/aspnet---user-controls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/aspnet---user-controls/</guid>
      <description>User controls are containers which can be populated with HTML markup &amp;amp; server controls with code-behind in the same way as ASPX page. They&amp;rsquo;re treated as reusable smaller units of a page, so they can&amp;rsquo;t run as stand-alone pages and must not having html, body or form HTML elements in them.
Introduction of User Controls # User controls are made for reusability across ASP.NET pages, similar to master pages. Instead of sharing base page layout, user controls share group of HTML/ASP.</description>
    </item>
    
    <item>
      <title>WebForms</title>
      <link>https://www.wikiod.com/asp-dotnet/webforms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/webforms/</guid>
      <description>Syntax # &amp;lt;asp:TextBox runat=&amp;ldquo;server&amp;rdquo; ID=&amp;quot;&amp;quot; TextMode=&amp;quot;&amp;quot; Text=&amp;quot;&amp;quot; /&amp;gt; &amp;lt;asp:Repeater runat=&amp;ldquo;server&amp;rdquo; ID=&amp;quot;&amp;quot; OnItemDataBound=&amp;quot;&amp;quot;&amp;gt;
&amp;lt;HeaderTemplate&amp;gt;&amp;lt;/HeaderTemplate&amp;gt;
&amp;lt;ItemTemplate&amp;gt;&amp;lt;/ItemTemplate&amp;gt;
&amp;lt;FooterTemplate&amp;gt;&amp;lt;/FooterTemplate&amp;gt;
&amp;lt;/asp:Repeater&amp;gt; All ASP.Net WebForm controls require runat=&amp;quot;server&amp;quot; in order to communicate with the CodeBehind.
Using a Repeater to create a HTML Table # Grouping in ListView # Example # &amp;lt;script language=&amp;quot;VB&amp;quot; runat=&amp;quot;server&amp;quot;&amp;gt; Sub SubmitBtn_Click(sender As Object, e As EventArgs) Label1.Text = &amp;quot;Text1.Text = &amp;quot; &amp;amp; Text1.Text End Sub &amp;lt;/script&amp;gt; &amp;lt;h3&amp;gt;&amp;lt;font face=&amp;quot;Verdana&amp;quot;&amp;gt;TextBox Sample&amp;lt;/font&amp;gt;&amp;lt;/h3&amp;gt; &amp;lt;form runat=&amp;quot;server&amp;quot;&amp;gt; &amp;lt;asp:TextBox id=&amp;quot;Text1&amp;quot; Text=&amp;quot;Copy this text to the label&amp;quot; Width=&amp;quot;200px&amp;quot; runat=&amp;quot;server&amp;quot;/&amp;gt; &amp;lt;asp:Button OnClick=&amp;quot;SubmitBtn_Click&amp;quot; Text=&amp;quot;Copy Text to Label&amp;quot; Runat=&amp;quot;server&amp;quot;/&amp;gt; &amp;lt;p&amp;gt; &amp;lt;asp:Label id=&amp;quot;Label1&amp;quot; Text=&amp;quot;Label1&amp;quot; runat=&amp;quot;server&amp;quot;/&amp;gt; &amp;lt;/form&amp;gt; Hyperlink # The HyperLink control is used to navigate from the client to another page.</description>
    </item>
    
    <item>
      <title>Page Methods</title>
      <link>https://www.wikiod.com/asp-dotnet/page-methods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/page-methods/</guid>
      <description>Parameters # Parameter Detail limit The parameter of the C# method. You supply the argument via the Page Method. onSuccess The JavaScript function that is executed when the Page Method call is successful. onError The JavaScript function that is executed when there is an error in the Page Method call. More than one parameter # In the example the C# function just request one parameter, if you need to pass more than one you can do it, just put them in order in your JS call and you are good to go.</description>
    </item>
    
    <item>
      <title>Page Life Cycle</title>
      <link>https://www.wikiod.com/asp-dotnet/page-life-cycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/page-life-cycle/</guid>
      <description>Life Cycle Events # Following are the page life cycle events:
PreInit - PreInit is the first event in page life cycle. It checks the IsPostBack property and determines whether the page is a postback. It sets the themes and master pages, creates dynamic controls, and gets and sets profile property values. This event can be handled by overriding the OnPreInit method or creating a Page_PreInit handler.
Init - Init event initializes the control property and the control tree is built.</description>
    </item>
    
    <item>
      <title>Data Binding</title>
      <link>https://www.wikiod.com/asp-dotnet/data-binding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/data-binding/</guid>
      <description>SQL Data Source # Controls that can be bound with data can make use of SqlDataSource controls. The SqlDataSource control not only allows you to retrieve data from a database, but also edit and sort the data.
Retrieving Data # Stored Procedure:
&amp;lt;asp:SqlDataSource ID=&amp;quot;SqlDataSourceEmployees&amp;quot; runat=&amp;quot;server&amp;quot; ConnectionString=&amp;quot;&amp;lt;%$ ConnectionStrings:MyConnectionString %&amp;gt;&amp;quot; SelectCommand=&amp;quot;sp_GetEmployees&amp;quot; SelectCommandType=&amp;quot;StoredProcedure&amp;quot;&amp;gt; &amp;lt;/asp:SqlDataSource&amp;gt; SQL Query:
&amp;lt;asp:SqlDataSource ID=&amp;quot;SqlDataSourceEmployees&amp;quot; runat=&amp;quot;server&amp;quot; ConnectionString=&amp;quot;&amp;lt;%$ ConnectionStrings:MyConnectionString %&amp;gt;&amp;quot; SelectCommand=&amp;quot;SELECT EmployeeID, EmployeeFirstName, EmployeeLastName FROM dbo.Employees&amp;quot;&amp;gt; &amp;lt;/asp:SqlDataSource&amp;gt; Parameters:
&amp;lt;asp:SqlDataSource ID=&amp;quot;SqlDataSourceEmployees&amp;quot; runat=&amp;quot;server&amp;quot; ConnectionString=&amp;quot;&amp;lt;%$ ConnectionStrings:MyConnectionString %&amp;gt;&amp;quot; SelectCommand=&amp;quot;SELECT EmployeeID, EmployeeFirstName, EmployeeLastName FROM dbo.</description>
    </item>
    
    <item>
      <title>Directives</title>
      <link>https://www.wikiod.com/asp-dotnet/directives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/directives/</guid>
      <description>The Application Directive # The Application directive defines application-specific attributes. It is provided at the top of the global.aspx file. The basic syntax of Application directive is:
&amp;lt;%@ Application Language=&amp;quot;C#&amp;quot; %&amp;gt; The attributes of the Application directive are:
Attributes Description Inherits The name of the class from which to inherit. Description The text description of the application. Parsers and compilers ignore this. Language The language used in code blocks. The Control Directive # The control directive is used with the user controls and appears in the user control (.</description>
    </item>
    
    <item>
      <title>DayPilot Scheduler</title>
      <link>https://www.wikiod.com/asp-dotnet/daypilot-scheduler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet/daypilot-scheduler/</guid>
      <description>Parameters # Parameter Desc DataStartField specifies the data source column that contains event start (DateTime) DataStartField specifies the data source column that contains event start (DateTime) DataEndField specifies the data source column that contains event end (DateTime) DataTextField specifies the data soruce column that contains event text (string) DataIdField specifies the data source column that contains event id (string or integer) DataResourceField specifies the data soruce column that contains event resource foreign key (string) This is basics of DayPilot schedular which needs to be further explore.</description>
    </item>
    
  </channel>
</rss>
