<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>alamofire Tutorial on </title>
    <link>https://www.wikiod.com/docs/alamofire/</link>
    <description>Recent content in alamofire Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/alamofire/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with alamofire</title>
      <link>https://www.wikiod.com/alamofire/getting-started-with-alamofire/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/alamofire/getting-started-with-alamofire/</guid>
      <description>Installation or Setup # Installation # CocoaPods # CocoaPods is a dependency manager for Cocoa projects. You can install it with the following command:
$ gem install cocoapods CocoaPods 1.1.0+ is required to build Alamofire 4.0.0+.
To integrate Alamofire into your Xcode project using CocoaPods, specify it in your Podfile:
source &#39;https://github.com/CocoaPods/Specs.git&#39; platform :ios, &#39;10.0&#39; use_frameworks! target &#39;&amp;lt;Your Target Name&amp;gt;&#39; do pod &#39;Alamofire&#39;, &#39;~&amp;gt; 4.0&#39; end Then, run the following command:</description>
    </item>
    
    <item>
      <title>Component Libraries</title>
      <link>https://www.wikiod.com/alamofire/component-libraries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/alamofire/component-libraries/</guid>
      <description>In order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the Alamofire Software Foundation to bring additional functionality to the Alamofire ecosystem.
AlamofireImage AlamofireNetworkActivityIndicator Image Response Serializers # import AlamofireImage Alamofire.request(&amp;quot;https://httpbin.org/image/png&amp;quot;).responseImage { response in debugPrint(response) print(response.request) print(response.response) debugPrint(response.result) if let image = response.result.value { print(&amp;quot;image downloaded: \(image)&amp;quot;) } } </description>
    </item>
    
  </channel>
</rss>
