<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bokeh Tutorial on </title>
    <link>https://www.wikiod.com/docs/bokeh/</link>
    <description>Recent content in bokeh Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/bokeh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with bokeh</title>
      <link>https://www.wikiod.com/bokeh/getting-started-with-bokeh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/bokeh/getting-started-with-bokeh/</guid>
      <description>Installing Bokeh # Bokeh&amp;rsquo;s Docs on Installation # Bokeh runs on Python it has the following dependencies;
NumPy, Jinja2, Six, Requests, Tornado &amp;gt;= 4.0, PyYaml, DateUtil
If you plan on installing with Python 2.7 you will also need future.
All of those come with the Anaconda Python Distribution. Which you can download and install for free.
Once you have anaconda installed onto your machine then you can simply run the following in cmd.</description>
    </item>
    
    <item>
      <title>Deploying Bokeh Code</title>
      <link>https://www.wikiod.com/bokeh/deploying-bokeh-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/bokeh/deploying-bokeh-code/</guid>
      <description>This topic should cover all ways to make a bokeh application available to users.
Local bokeh server with console entry point # To allow a bokeh application to be executed like a normal .py file, you need to handle the tornado IOloop in your application, as described here. A standalone bokeh application like this can be used to implement a console script entry point in setup.py. However, this requires bokeh version &amp;gt;= 0.</description>
    </item>
    
  </channel>
</rss>
