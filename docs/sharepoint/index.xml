<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sharepoint Tutorial on </title>
    <link>https://www.wikiod.com/docs/sharepoint/</link>
    <description>Recent content in sharepoint Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/sharepoint/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with sharepoint</title>
      <link>https://www.wikiod.com/sharepoint/getting-started-with-sharepoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/getting-started-with-sharepoint/</guid>
      <description>Installation of SharePoint 2016 for Single Server Farm # Introduction # SharePoint 2016 is the version 16 release of the SharePoint product family. It was released on May 4, 2016. This example covers the installation of SharePoint 2016 using the Single Server Farm configuration. This configuration covers the basics of setting up a SharePoint farm without the need to have multiple servers. Note that the covered scenarios by a Single Server Farm are usually limited to development and very small production scenarios.</description>
    </item>
    
    <item>
      <title>Working with JavaScript Client Object Model (JSOM)</title>
      <link>https://www.wikiod.com/sharepoint/working-with-javascript-client-object-model-jsom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/working-with-javascript-client-object-model-jsom/</guid>
      <description>Background
The JavaScript Object Model was introduced in SharePoint 2010. It exposes on the client side many of the objects that were previously only accessible through server-side code or through dedicated web services.
Embedding JavaScript in SharePoint Pages
In SharePoint 2013 you can put your JavaScript in a Script Editor web part.
In SharePoint 2010 you can use the &amp;ldquo;content link&amp;rdquo; property of a Content Editor web part to link to an HTML file that contains your embedded script.</description>
    </item>
    
    <item>
      <title>Working with Modal Dialog Boxes with JavaScript</title>
      <link>https://www.wikiod.com/sharepoint/working-with-modal-dialog-boxes-with-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/working-with-modal-dialog-boxes-with-javascript/</guid>
      <description>Syntax # var options = SP.UI.$create_DialogOptions();
var modalDialog = SP.UI.ModalDialog.showModalDialog(options);
Parameters # options Property Description title A string that contains the title of the dialog url A string that contains the URL of the page that appears in the dialog. Either url or html must be specified. url takes precedence over html. html An HTML element to display within the dialog. x The x-offset of the dialog as an integer value.</description>
    </item>
    
    <item>
      <title>Working with Managed Client Side Object Model (CSOM)</title>
      <link>https://www.wikiod.com/sharepoint/working-with-managed-client-side-object-model-csom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/working-with-managed-client-side-object-model-csom/</guid>
      <description>Most examples are from MSDN.
To create a .NET managed client application that uses the client object model, you must set references to two client library DLLs: Microsoft.SharePoint.Client.dll and Microsoft.SharePoint.Client.Runtime.dll. You can find it in %ProgramFiles%\Common Files\Microsoft Shared\web server extensions\16\ISAPI folder or your SharePoint server.
or Install the Microsoft.SharePointOnline.CSOM NuGet Package, which will work &amp;ldquo;on prem&amp;rdquo; as well as in SP O365.
Most properties are value properties and before accessing them you need to explicitly call clientContext.</description>
    </item>
    
    <item>
      <title>REST Services</title>
      <link>https://www.wikiod.com/sharepoint/rest-services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/rest-services/</guid>
      <description>REST Service Endpoint URLs The REST client access API was first introduced in SharePoint 2010, but was greatly expanded in SharePoint 2013. The REST API in SharePoint 2010 is accessed through the ListData web service at the /_vti_bin/ListData.svc url. SharePoint 2013 introduced the /_api/lists/ and /_api/web endpoint URLs, which behave slightly differently.
The above endpoint URLs should be preceded by http://server/site where server represents the name of the server, and site represents the name of, or path to, the specific site.</description>
    </item>
    
    <item>
      <title>SharePoint 2013 Client Side Rendering</title>
      <link>https://www.wikiod.com/sharepoint/sharepoint-2013-client-side-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/sharepoint-2013-client-side-rendering/</guid>
      <description>Client Side Rendering (CSR) is a new concept that is introduced in SharePoint 2013. It provides you with a mechanism that allow you to use your own output render for a set of controls that are hosted in a SharePoint page (list views, list forms and search results).
Client Site Rendering is simply when the data is transformed using the client rather than the server. This means using client-side technologies, such as HTML and JavaScript rather than having to write XSLT.</description>
    </item>
    
    <item>
      <title>Major Releases</title>
      <link>https://www.wikiod.com/sharepoint/major-releases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/major-releases/</guid>
      <description>SharePoint 2016 # Build number Description Product 16.0.4366.1000 Cumulative Update April 2016 SharePoint Server 2016 16.0.4336.1000 RTM SharePoint Server 2016 16.0.4327.1000 Release Candidate SharePoint Server 2016 16.0.4266.1001 16.0.4306.1002 Beta 2 SharePoint Server 2016 SharePoint 2013 # Build number Description 15.0.4623.1001 June 2014 15.0.4631.1001 July 2014 15.0.4641.1001 August 2014 15.0.4649.1001 September 2014 15.0.4659.1001 October 2014 15.0.4667.1000 November 2014 15.0.4675.1000 December 2014 15.0.4693.1001 February 2015 15.0.4701.1001 March 2015 15.0.4711.1000 April 2015 (SP1 REQ) 15.</description>
    </item>
    
    <item>
      <title>Creating a provider hosted App</title>
      <link>https://www.wikiod.com/sharepoint/creating-a-provider-hosted-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/creating-a-provider-hosted-app/</guid>
      <description>Setting development environment # To start with App Development we need Visual studio 2013 or higher version. Download latest community or expression edition from here &amp;gt; https://www.visualstudio.com/products/free-developer-offers-vs
Once it has been downloaded and installed
Open and Click create new project
expand Office/SharePoint section you should see an option for App as shown below.
If App option not available Close the VS , download and install Microsoft Office Developer Tools https://www.visualstudio.com/en-us/features/office-tools-vs.aspx</description>
    </item>
    
    <item>
      <title>Working with Managed Server Side Object Model (full-trust)</title>
      <link>https://www.wikiod.com/sharepoint/working-with-managed-server-side-object-model-full-trust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/working-with-managed-server-side-object-model-full-trust/</guid>
      <description>Conceptual Hierarchy In the SharePoint conceptual hierarchy, site collections contain sites, which in turn contain lists. A site collection (SPSite) has no explicit UI but always contains one root level site (accessible through the RootWeb property) and possibly additional subsites under that root site. A site or web (SPWeb) has a UI and contains lists/document libraries (SPList), pages with webparts, and items/documents (SPListItem).
Server-Side Caveats To create an application that uses the SharePoint server-side object model, in your Visual Studio project you must add a reference to the Microsoft.</description>
    </item>
    
    <item>
      <title>SharePoint App</title>
      <link>https://www.wikiod.com/sharepoint/sharepoint-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/sharepoint/sharepoint-app/</guid>
      <description>SharePoint Hosted App
Reference required from site: http://www.letsharepoint.com/what-is-user-information-list-in-sharepoint-2013/
SharePoint 2013: Access User Profile Service Data using JSOM in SharePoint 2013 ​ # SharePoint 2013: Access User Profile Service Data using JSOM in SharePoint 2013 ​
In this article, we will learn to manage or access User Profile Service(UPS) Application using JSOM (Javascript Object Model) and create a basic App. Before we start, lets go through basic UPS terminology first.
User Profile – It has all the information of people in an organization in an organized manner.</description>
    </item>
    
  </channel>
</rss>
