<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gtk3 Tutorial on </title>
    <link>https://www.wikiod.com/docs/gtk3/</link>
    <description>Recent content in gtk3 Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/gtk3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with gtk3</title>
      <link>https://www.wikiod.com/gtk3/getting-started-with-gtk3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gtk3/getting-started-with-gtk3/</guid>
      <description>Installation or Setup # Python # Windows
The easiest way to install GTK3 for Python is by using PyGObject for Windows. It offers an installer that installs most things you need to develop GTK appilcations.
The number of options the PyGObject installer offers can be daunting, but for most GTK projects the only option you have to select is GTK+ 3.xx.
C++ # The C++ binding for Gtk+ is known as gtkmm.</description>
    </item>
    
    <item>
      <title>GTK&#43;3 with Python</title>
      <link>https://www.wikiod.com/gtk3/gtk-3-with-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gtk3/gtk-3-with-python/</guid>
      <description>A simple GTK window # Simply presenting a window is easy with GTK and Python. The example below is based off the Python GTK3 Tutorial, which you should read if you are a beginner in GUI programming or GTK.
import gi gi.require_version(&#39;Gtk&#39;, &#39;3.0&#39;) from gi.repository import Gtk # Set up the Gtk window win = Gtk.Window() # Tell Gtk what to do when the window is closed (in this case quit the main loop) win.</description>
    </item>
    
    <item>
      <title>Gtk3 with Ruby</title>
      <link>https://www.wikiod.com/gtk3/gtk3-with-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gtk3/gtk3-with-ruby/</guid>
      <description>Get up and running # # Like any other ruby code, require gtk3 after installing from &amp;quot;gem install gtk3&amp;quot; require &#39;gtk3&#39; # Like in Rails, you import working functions from a higher class, in this case the GTK Window class RubyApp &amp;lt; Gtk::Window # Calling the original method from GTK Window and redefining the defaults def initialize super # Printing window title set_title &amp;quot;Center&amp;quot; # Invoking built-in GTK connection and calling destroy to replicate the quit action signal_connect &amp;quot;destroy&amp;quot; do Gtk.</description>
    </item>
    
    <item>
      <title>Using Glade with Builder API</title>
      <link>https://www.wikiod.com/gtk3/using-glade-with-builder-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gtk3/using-glade-with-builder-api/</guid>
      <description>[C++] using Gtk::Builder in gtkmm # Overview # Gtk+ supports a workflow where the task of user interface design and the task of programming are decoupled. Although the user interface elements such as buttons, menus, layout etc. can be directly added from code, this approach not only clutters the code, but also makes changing the UI for anyone but the programmer hard. Besides, some interface elements are used only to hold the layout structure and not need to participate in logic, adding them from code only makes it longer.</description>
    </item>
    
    <item>
      <title>gtk&#43;3 linux c</title>
      <link>https://www.wikiod.com/gtk3/gtk-3-linux-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gtk3/gtk-3-linux-c/</guid>
      <description>code samples and some other stuff
css in action # #include &amp;lt;gtk/gtk.h&amp;gt;//jjk.c static void destroy(GtkWidget *widget, gpointer data) { gtk_main_quit(); } int main(int argc, char *argv[]) { gtk_init(&amp;amp;argc, &amp;amp;argv); GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL); gtk_window_set_title(GTK_WINDOW(window), &amp;quot;Window&amp;quot;); g_signal_connect(window, &amp;quot;destroy&amp;quot;, G_CALLBACK(destroy), NULL); GtkWidget *k; k= gtk_fixed_new(); gtk_container_add(GTK_CONTAINER(window), k); GtkWidget* la,*r; la = gtk_button_new_with_label (&amp;quot;,mkl&amp;quot;); gtk_fixed_put (GTK_FIXED (k), la,50,237); gtk_widget_set_size_request(la, 98, 90); // gtk_container_set_border_width(GTK_CONTAINER (la) , 5); union { char w[4]={0xf,0xe,0xd,0xa};; uint t; } tc; GtkCssProvider *provider = gtk_css_provider_new (); gtk_css_provider_load_from_path (provider, &amp;quot;/home/alex/gtk-widgets.</description>
    </item>
    
    <item>
      <title>GTK&#43; 3 with Vala</title>
      <link>https://www.wikiod.com/gtk3/gtk-3-with-vala/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gtk3/gtk-3-with-vala/</guid>
      <description>Hello world # Could be even more basic, but this showcases some of the features the Vala language.
The code # using Gtk; int main (string[] args) { Gtk.init (ref args); var window = new Window (); window.title = &amp;quot;First GTK+ Program&amp;quot;; window.border_width = 10; window.window_position = WindowPosition.CENTER; window.set_default_size (350, 70); window.destroy.connect (Gtk.main_quit); var button = new Button.with_label (&amp;quot;Click me!&amp;quot;); button.clicked.connect (() =&amp;gt; { button.label = &amp;quot;Thank you&amp;quot;; }); window.add (button); window.</description>
    </item>
    
    <item>
      <title>Installation of GTK&#43;3 On Windows (using GNOME GIT Repository)( C Language-Assuming GCC is Installed)</title>
      <link>https://www.wikiod.com/gtk3/installation-of-gtk-3-on-windows-using-gnome-git-repository-c-language-assuming-gcc-is-installed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gtk3/installation-of-gtk-3-on-windows-using-gnome-git-repository-c-language-assuming-gcc-is-installed/</guid>
      <description>Downloading GTK+3 (also suitable for other versions) and Setting Up # Downloading the Bundle:
The easiest way to download the required GTK Bundle is to search and download it using this link: https://git.gnome.org/browse/gtk+ (GNOME GIT Repository)
GNOME GIT Repository provides the bundles for different versions and you can easily find the desired version by scrolling through the list. These are uploaded by other users or authors and you will often find new bundles coming up.</description>
    </item>
    
  </channel>
</rss>
