<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vaadin Tutorial on </title>
    <link>https://www.wikiod.com/docs/vaadin/</link>
    <description>Recent content in vaadin Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/vaadin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with vaadin</title>
      <link>https://www.wikiod.com/vaadin/getting-started-with-vaadin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vaadin/getting-started-with-vaadin/</guid>
      <description>Create Vaadin project with Maven # With Maven you can create Vaadin project with vaadin-archetype-application archetype. You can also add that archetype in IDE to create maven project with IDE.
mvn archetype:generate -DarchetypeGroupId=com.vaadin -DarchetypeArtifactId=vaadin-archetype-application -DarchetypeVersion=7.6.8 -DgroupId=myvaadin.project -DartifactId=DemoVaadinProject -Dversion=0.1 -Dpackaging=war Once you execute above command you will have following project structure.
DemoVaadinProject |-src |-main |-java | |-myvaadin | |-project | |-MyUI.java |-resource | |-myvaadin | |-project | |-MyAppWidgetset.gwt.xml |-webapps |- VAADIN |-theme |- mytheme.</description>
    </item>
    
    <item>
      <title>Using add-ons with Vaadin</title>
      <link>https://www.wikiod.com/vaadin/using-add-ons-with-vaadin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vaadin/using-add-ons-with-vaadin/</guid>
      <description>Using add-ons in a Maven project # To view an browse Vaadin add-ons in the Directory, you must be registered to vaadin.com. After the initial discovery of artifact details, e.g. for download and usage, registration is not required. Also, the usage of add-ons in a Maven project is not IDE-specific and the same instructions apply.
From a normal Maven project, start by editing your pom.xml :
Add the Vaadin add-on repository</description>
    </item>
    
    <item>
      <title>Vaadin and Maven</title>
      <link>https://www.wikiod.com/vaadin/vaadin-and-maven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vaadin/vaadin-and-maven/</guid>
      <description>This would be very useful to the Vaadin and Maven community because there is no documentation
Vaadin Maven Setup # Common Maven
mvn -B archetype:generate -DarchetypeGroupId=com.vaadin -DarchetypeArtifactId=vaadin- archetype-application -DarchetypeVersion=7.7.3 -DgroupId=org.test -DartifactId=vaadin-app -Dversion=1.0-SNAPSHOT Advanced Maven
mvn archetype:generate \ -DgroupId=com.mycompany.mycompanyapp \ -DartifactId=mycompanyapp \ -Dversion=1.0 \ -DpackageName=com.mycompany.mycompanyapp \ -DarchetypeGroupId=com.vaadin \ -DarchetypeArtifactId=vaadin-archetype-application \ -DthemeName=mytheme \ -DuiName=MyCompanyAppUI \ -DwidgetsetName=MyCompanyAppAppWidgetSet \ -DarchetypeVersion=LATEST \ -DinteractiveMode=false After this is done, run following: cd ~/mycompanyapp &amp;amp;&amp;amp; mvn install -Dmaven.skip.tests=true</description>
    </item>
    
    <item>
      <title>Themes</title>
      <link>https://www.wikiod.com/vaadin/themes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vaadin/themes/</guid>
      <description>Valo # @theme(&amp;quot;valo&amp;quot;) Reindeer # @theme(&amp;quot;reindeer&amp;quot;) </description>
    </item>
    
    <item>
      <title>Login Page</title>
      <link>https://www.wikiod.com/vaadin/login-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vaadin/login-page/</guid>
      <description>SimpleLoginView # public class SimpleLoginView extends CustomComponent implements View, Button.ClickListener { public static final String NAME = &amp;quot;login&amp;quot;; private final TextField user; private final PasswordField password; private final Button loginButton; public SimpleLoginView() { setSizeFull(); // Create the user input field user = new TextField(&amp;quot;User:&amp;quot;); user.setWidth(&amp;quot;300px&amp;quot;); user.setRequired(true); user.setInputPrompt(&amp;quot;Your username (eg. joe@email.com)&amp;quot;); user.addValidator(new EmailValidator( &amp;quot;Username must be an email address&amp;quot;)); user.setInvalidAllowed(false); // Create the password input field password = new PasswordField(&amp;quot;Password:&amp;quot;); password.setWidth(&amp;quot;300px&amp;quot;); password.</description>
    </item>
    
    <item>
      <title>Vaadin TouchKit</title>
      <link>https://www.wikiod.com/vaadin/vaadin-touchkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/vaadin/vaadin-touchkit/</guid>
      <description>Setup # @Theme(&amp;quot;mobiletheme&amp;quot;) @Widgetset(&amp;quot;com.example.myapp.MyAppWidgetSet&amp;quot;) @Title(&amp;quot;My Mobile App&amp;quot;) public class SimplePhoneUI extends UI { @Override protected void init(VaadinRequest request) { // Define a view class MyView extends NavigationView { public MyView() { super(&amp;quot;Planet Details&amp;quot;); CssLayout content = new CssLayout(); setContent(content); VerticalComponentGroup group = new VerticalComponentGroup(); content.addComponent(group); group.addComponent(new TextField(&amp;quot;Planet&amp;quot;)); group.addComponent(new NumberField(&amp;quot;Found&amp;quot;)); group.addComponent(new Switch(&amp;quot;Probed&amp;quot;)); setRightComponent(new Button(&amp;quot;OK&amp;quot;)); } } // Use it as the content root setContent(new MyView()); } </description>
    </item>
    
  </channel>
</rss>
