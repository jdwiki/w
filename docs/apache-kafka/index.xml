<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>apache-kafka Tutorial on </title>
    <link>https://www.wikiod.com/docs/apache-kafka/</link>
    <description>Recent content in apache-kafka Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/apache-kafka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with apache-kafka</title>
      <link>https://www.wikiod.com/apache-kafka/getting-started-with-apache-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/apache-kafka/getting-started-with-apache-kafka/</guid>
      <description>Installation or Setup # Step 1. Install Java 7 or 8
Step 2. Download Apache Kafka at: http://kafka.apache.org/downloads.html
For example, we will try download Apache Kafka 0.10.0.0
Step 3. Extract the compressed file.
On Linux:
tar -xzf kafka_2.11-0.10.0.0.tgz On Window: Right click &amp;ndash;&amp;gt; Extract here
Step 4. Start Zookeeper
cd kafka_2.11-0.10.0.0 Linux:
bin/zookeeper-server-start.sh config/zookeeper.properties Windows:
bin/windows/zookeeper-server-start.bat config/zookeeper.properties Step 5. Start Kafka server
Linux:
bin/kafka-server-start.sh config/server.properties Windows:
bin/windows/kafka-server-start.bat config/server.properties Introduction # Apache Kafkaâ„¢ is a distributed streaming platform.</description>
    </item>
    
    <item>
      <title>kafka console tools</title>
      <link>https://www.wikiod.com/apache-kafka/kafka-console-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/apache-kafka/kafka-console-tools/</guid>
      <description>Kafka offers command-line tools to manage topics, consumer groups, to consume and publish messages and so forth.
Important: Kafka console scripts are different for Unix-based and Windows platforms. In the examples, you might need to add the extension according to your platform.
Linux: scripts located in bin/ with .sh extension.
Windows: scripts located in bin\windows\ and with .bat extension.
kafka-console-producer # This tool lets you produce messages from the command-line.</description>
    </item>
    
    <item>
      <title>Consumer Groups and Offset Management</title>
      <link>https://www.wikiod.com/apache-kafka/consumer-groups-and-offset-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/apache-kafka/consumer-groups-and-offset-management/</guid>
      <description>Parameters # Parameter Description group.id The name of the Consumer Group. enable.auto.commit Automatically commit offsets; default: true. auto.commit.interval.ms The minimum delay in milliseconds between to commits (requires enable.auto.commit=true); default: 5000. auto.offset.reset What to do when there is no valid committed offset found; default: latest.(+) (+) Possible Values Description earliest Automatically reset the offset to the earliest offset. latest Automatically reset the offset to the latest offset. none Throw exception to the consumer if no previous offset is found for the consumer&amp;rsquo;s group.</description>
    </item>
    
    <item>
      <title>Custom SerializerDeserializer</title>
      <link>https://www.wikiod.com/apache-kafka/custom-serializerdeserializer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/apache-kafka/custom-serializerdeserializer/</guid>
      <description>Kafka stores and transports byte arrays in its queue. The (de)serializers are responsible for translating between the byte array provided by Kafka and POJOs.
Syntax # public void configure(Map&amp;lt;String, ?&amp;gt; config, boolean isKey); public T deserialize(String topic, byte[] bytes); public byte[] serialize(String topic, T obj); Parameters # parameters details config the configuration properties (Properties) passed to the Producer or Consumer upon creation, as a map. It contains regular kafka configs, but can also be augmented with user-defined configuration.</description>
    </item>
    
    <item>
      <title>ProducerConsumer in Java</title>
      <link>https://www.wikiod.com/apache-kafka/producerconsumer-in-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/apache-kafka/producerconsumer-in-java/</guid>
      <description>This topic shows how to produce and consume records in Java.
SimpleConsumer (Kafka &amp;gt;= 0.9.0) # The 0.9 release of Kafka introduced a complete redesign of the kafka consumer. If you are interested in the old SimpleConsumer (0.8.X), have a look at this page. If your Kafka installation is newer than 0.8.X, the following codes should work out of the box.
Configuration and initialization # Kafka 0.9 no longer supports Java 6 or Scala 2.</description>
    </item>
    
  </channel>
</rss>
