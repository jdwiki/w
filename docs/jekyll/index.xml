<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jekyll Tutorial on </title>
    <link>https://www.wikiod.com/docs/jekyll/</link>
    <description>Recent content in jekyll Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/jekyll/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with jekyll</title>
      <link>https://www.wikiod.com/jekyll/getting-started-with-jekyll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/jekyll/getting-started-with-jekyll/</guid>
      <description>Installation or Setup # Quickstart for Jekyll # $ gem install jekyll $ jekyll new my-awesome-site $ cd my-awesome-site ~/my-awesome-site $ jekyll serve Now browse to http://localhost:4000
Quickstart for Jekyll with Bundler # $ gem install jekyll bundler $ jekyll new my-awesome-site $ cd my-awesome-site ~/my-awesome-site $ bundle exec jekyll serve Now browse to http://localhost:4000
Basic Usage # The Jekyll gem makes a jekyll executable available to you in your Terminal window.</description>
    </item>
    
    <item>
      <title>Building a Jekyll site folder</title>
      <link>https://www.wikiod.com/jekyll/building-a-jekyll-site-folder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/jekyll/building-a-jekyll-site-folder/</guid>
      <description>Syntax # jekyll build [flag] [value] # Build the site with the setting specified by &amp;lt;flag&amp;gt; and &amp;lt;value&amp;gt; # cf. list of available settings for Jekyll If you edit _config.yml and you are using --watch, you need to restart the command to apply the changes.
Building the site to a folder # $ jekyll build # The current site folder will be built into the ./_site directory $ jekyll build --destination /var/www/ # The current site folder will be generated into /var/www/ $ jekyll build --watch # The current site folder will be built into the .</description>
    </item>
    
    <item>
      <title>Hosting</title>
      <link>https://www.wikiod.com/jekyll/hosting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/jekyll/hosting/</guid>
      <description>GitHub Pages # GitHub offers unlimited hosting for users or organizations and project site. Both Jekyll and static files are available.
Here are the steps in hosting your Jekyll blog on Github.
Setup # Users or organizations site # Create a repository named username.github.io, where username is your username (or organization name) on GitHub. Clone the repository onto your computer: $ git clone https://github.com/username/username.github.io Enter the project folder, bootstrap, design and debug your site: $ cd username.</description>
    </item>
    
    <item>
      <title>Front Matter</title>
      <link>https://www.wikiod.com/jekyll/front-matter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/jekyll/front-matter/</guid>
      <description>Front Matter tells Jekyll to parse the page. It can contain properties for the page.
Basic Front Matter in Jekyll # Front matter tells Jekyll to parse a file. You add predefined variables, which are YAML sets, to the front matter. Then, you can use Liquid tags in your files to access the front matter.
Front matter is indicated with two triple-dashed lines. You must place the variables between the two triple-dashed lines, and you must place front matter at the top of the file.</description>
    </item>
    
    <item>
      <title>Collections</title>
      <link>https://www.wikiod.com/jekyll/collections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/jekyll/collections/</guid>
      <description>Configuring a New Collection # To create an albums collection, add the following to your config.yml file:
collections: - albums Create a corresponding folder at the root of your Jekyll install, named exactly what you put in your config.yml file with an additional prepended underscore; in our example, &amp;lt;source&amp;gt;/_albums.
Adding documents to this folder will add items to your collection. Any variables included in a file&amp;rsquo;s YAML front matter is read in as data attributes, and everything after it is included in the item&amp;rsquo;s content attribute.</description>
    </item>
    
    <item>
      <title>Assets</title>
      <link>https://www.wikiod.com/jekyll/assets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/jekyll/assets/</guid>
      <description>Sass/SCSS # By default, all your .scss partials go in the &amp;lt;source&amp;gt;/_sass folder.
/_sass/base.scss
body { margin: 0; } Your main .css or .scss files go in the &amp;lt;source&amp;gt;/css folder. Note: the two first two lines of triple dashes are necessary in order for Jekyll to transpile your .scss file to .css.
/css/main.scss
--- --- @import &amp;quot;base&amp;quot;; div { color: #000; } A transpiled .css file will then appear in _site/css/ when you build your site:</description>
    </item>
    
    <item>
      <title>Importing</title>
      <link>https://www.wikiod.com/jekyll/importing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/jekyll/importing/</guid>
      <description>More information can be found at http://import.jekyllrb.com/
Introduction # If you’re switching to Jekyll from another blogging system, Jekyll’s importers can help you with the move. Most methods listed on this page require read access to the database from your old system to generate posts for Jekyll. Each method generates .markdown posts in the _posts directory based on the entries in the foreign system.
Installation # Because the importers have many of their own dependencies, they are made available via a separate gem called jekyll-import.</description>
    </item>
    
  </channel>
</rss>
