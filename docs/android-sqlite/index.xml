<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android-sqlite Tutorial on </title>
    <link>https://www.wikiod.com/docs/android-sqlite/</link>
    <description>Recent content in android-sqlite Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/android-sqlite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with android-sqlite</title>
      <link>https://www.wikiod.com/android-sqlite/getting-started-with-android-sqlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/android-sqlite/getting-started-with-android-sqlite/</guid>
      <description>Basic usage # To include a database in your app, you typically derive a class from SQLiteOpenHelper:
public class HelloDBHelper extends SQLiteOpenHelper { private static final int DATABASE_VERSION = 1; private static final int DATABASE_NAME = &amp;quot;hello&amp;quot;; HelloDBHelper(Context context) { super(context, DATABASE_NAME, null, DATABASE_VERSION); } @Override public void onCreate(SQLiteDatabase db) { db.execSQL(&amp;quot;CREATE TABLE ...&amp;quot;); ... } } This helper class is responsible for opening (and creating/updating, if needed) the database. Use it to get an SQLiteDatabase object to access the data:</description>
    </item>
    
    <item>
      <title>SQLiteOpenHelper</title>
      <link>https://www.wikiod.com/android-sqlite/sqliteopenhelper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/android-sqlite/sqliteopenhelper/</guid>
      <description>SQLiteOpenHelper with fully qualified DB path name/databse in public folder # Normally Android-SQLiteOpenHelper does not allow fully qualified path names where the database should be stored. So public database files are not possible.
You can use the SQLiteOpenHelper with a custom path if you provide a custom ContextClass and if you have write access in the target directory.
public class DatabaseHelper extends SQLiteOpenHelper { private static final int DATABASE_VERSION = 3; .</description>
    </item>
    
  </channel>
</rss>
