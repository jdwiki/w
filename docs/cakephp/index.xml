<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cakephp Tutorial on </title>
    <link>https://www.wikiod.com/docs/cakephp/</link>
    <description>Recent content in cakephp Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/cakephp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with cakephp</title>
      <link>https://www.wikiod.com/cakephp/getting-started-with-cakephp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/cakephp/getting-started-with-cakephp/</guid>
      <description>Basic first empty project # Initial Creation and Download (CakePHP 3.x) # The easiest way to create a new CakePHP project is via Composer (if you don&amp;rsquo;t know about composer look here for more info)
Install Composer # If you need to install it and are on a windows machine follow this guide
If you are on Linux/Unix/OSX follow this guide
Create the first CakePHP Project # Open a console window and navigate to your installation of php (on Windows with the default xampp installation this is C:\xampp\php)</description>
    </item>
    
    <item>
      <title>CakePHP3 Coding Tips</title>
      <link>https://www.wikiod.com/cakephp/cakephp3-coding-tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/cakephp/cakephp3-coding-tips/</guid>
      <description>Creating new Controller # namespace App\Controller; class PostsController extends AppController { public function initialize(){ parent::initialize(); // code that you want to run before every action } public function view($id) { //Your code here } } Retrieving post data equivalent to $_POST # You can retrieve post data as Array.
$post_data= $this-&amp;gt;request-&amp;gt;data; You can retrieve post data for particular key.
$this-&amp;gt;request-&amp;gt;data[&#39;field&#39;]; Retrieve specific key value
$this-&amp;gt;request-&amp;gt;data(&#39;key_name&#39;); Retrieve specific key value of nested array</description>
    </item>
    
    <item>
      <title>Instantiating models from another datasource</title>
      <link>https://www.wikiod.com/cakephp/instantiating-models-from-another-datasource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/cakephp/instantiating-models-from-another-datasource/</guid>
      <description>There will come a time where your CakePHP application will need to query more than one database. The method for requesting Models from non-default databases is not present in the official documentation.
On the fly database changes for modal # For multiple databases, you have the database.php file where you can set as many databases as you need.
If you want to &amp;ldquo;switch&amp;rdquo; a database for a specific model on the fly, use the setDataSource() method.</description>
    </item>
    
    <item>
      <title>Ajax request handling</title>
      <link>https://www.wikiod.com/cakephp/ajax-request-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/cakephp/ajax-request-handling/</guid>
      <description>Basic CakePHP 2.x example # Controller: In the Controller you have to add the RequestHandler component. This Enables CakePHP to automatically detect Ajax requests(see: http://book.cakephp.org/2.0/en/core-libraries/components/request-handling.html for more info):
class YourController extends AppController { public $components = array(&#39;RequestHandler&#39;); //... public function ajaxCall() { if($this-&amp;gt;request-&amp;gt;is(&#39;ajax&#39;){ // some code that should be executed // ... // variables you want to return $this-&amp;gt;set(compact(&#39;firstVariable&#39;, &#39;secondVariable&#39;)); $this-&amp;gt;set(&#39;_serialize&#39;, array(&#39;firstVariable&#39;, secondVariable)) } } View Code (using jQuery):
&amp;lt;script&amp;gt; $.</description>
    </item>
    
  </channel>
</rss>
