<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>phpunit Tutorial on </title>
    <link>https://www.wikiod.com/docs/phpunit/</link>
    <description>Recent content in phpunit Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/phpunit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Assertions</title>
      <link>https://www.wikiod.com/phpunit/assertions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/phpunit/assertions/</guid>
      <description>Assert an Exception is Thrown # PHPUnit provides the following functions to watch for thrown exceptions, which were released with 5.2.0:
expectException($exception) expectExceptionMessage($message) expectExceptionCode($code) expectExceptionMessageRegExp($messageRegExp) These are used to watch for an exception to be thrown and inspect the properties of that exception.
Let&amp;rsquo;s start with a math function that divides (just for simplicity). It will raise an exception if the denominator is zero.
function divide($numerator, $denominator) { if ($denominator !</description>
    </item>
    
    <item>
      <title>Test Doubles (Mocks and Stubs)</title>
      <link>https://www.wikiod.com/phpunit/test-doubles-mocks-and-stubs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/phpunit/test-doubles-mocks-and-stubs/</guid>
      <description>Simple mocking # Introduction # The PHPUnit Manual describes mocking as such:
The practice of replacing an object with a test double that verifies expectations, for instance asserting that a method has been called, is referred to as mocking.
So instead of stubbing out code, an observer is created that not only replaces the code that needs to be silenced, but observes that a specific activity would have happened in the real world.</description>
    </item>
    
    <item>
      <title>Getting Started with PHPUnit</title>
      <link>https://www.wikiod.com/phpunit/getting-started-with-phpunit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/phpunit/getting-started-with-phpunit/</guid>
      <description>Installation on Linux or MacOSX # Global installation using the PHP Archive # wget https://phar.phpunit.de/phpunit.phar # download the archive file chmod +x phpunit.phar # make it executable sudo mv phpunit.phar /usr/local/bin/phpunit # move it to /usr/local/bin phpunit --version # show installed version number Global installation using Composer # # If you have composer installed system wide composer global require phpunit/phpunit # set PHPUnit as a global dependency phpunit --version # show installed version number # If you have the .</description>
    </item>
    
  </channel>
</rss>
