<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coq Tutorial on </title>
    <link>https://www.wikiod.com/docs/coq/</link>
    <description>Recent content in coq Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/coq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with coq</title>
      <link>https://www.wikiod.com/coq/getting-started-with-coq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/coq/getting-started-with-coq/</guid>
      <description>A simple proof # Theorem my_first_theorem : 1 + 1 = 2. Proof. reflexivity. Qed. Try it in your browser.
Installation with Nix # Warning: this is not the standard way of installing Coq.
For users of Linux (and MacOS) who wish to gain access to up-to-date versions of Coq or to be able to use several versions of Coq on the same machine, without the hassle of using opam, and without having to compile from source, this is an alternative solution.</description>
    </item>
    
    <item>
      <title>Searching for an existing fact with Search and variants</title>
      <link>https://www.wikiod.com/coq/searching-for-an-existing-fact-with-search-and-variants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/coq/searching-for-an-existing-fact-with-search-and-variants/</guid>
      <description>Syntax # Search qualid. (* for Coq 8.4 and newer versions *) SearchAbout qualid. (* deprecated synonym. *) Parameters # Parameter Description qualid The identifier or pattern to search for. It can involve notations Before Coq 8.4, Search had the meaning of the current SearchHead: only search for facts where the pattern matches in the conclusion of the statement.
Facts about a particular identifier # To see all the facts involving the le relation from the prelude:</description>
    </item>
    
    <item>
      <title>Using Tactics</title>
      <link>https://www.wikiod.com/coq/using-tactics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/coq/using-tactics/</guid>
      <description>This section includes information on how to use various Coq tactics and techniques (case analysis, proof by induction, auto, etc.) to prove theorems.
Trivial example of a case analysis # In Coq, destruct more or less corresponds to a case analysis. It is similar to induction except that there&amp;rsquo;s no induction hypothesis. Here is a (admittedly rather trivial) example of this tactic:
Require Import Coq.Arith.Lt. Theorem atLeastZero : forall a, 0 &amp;lt;= a.</description>
    </item>
    
  </channel>
</rss>
