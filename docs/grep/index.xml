<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>grep Tutorial on </title>
    <link>https://www.wikiod.com/docs/grep/</link>
    <description>Recent content in grep Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/grep/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with grep</title>
      <link>https://www.wikiod.com/grep/getting-started-with-grep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/grep/getting-started-with-grep/</guid>
      <description>Find text within a given directory, recursively # Using GNU grep # grep -r &#39;pattern&#39; &amp;lt;directory path&amp;gt; To also list line numbers of matches use -n option
grep -rn &#39;pattern&#39; &amp;lt;directory path&amp;gt; To search only files with particular glob pattern
grep --include=&#39;*.txt&#39; -r &#39;pattern&#39; &amp;lt;directory path&amp;gt; Exclude file patterns or directories
grep -R --exclude=*.log &#39;pattern&#39; &amp;lt;directory path&amp;gt; grep -R --exclude={*.log,*.class} &#39;pattern&#39; &amp;lt;directory path&amp;gt; grep -R --exclude-dir=tmp &#39;pattern&#39; &amp;lt;directory path&amp;gt; grep -R --exclude-dir={tmp,lib} &#39;pattern&#39; &amp;lt;directory path&amp;gt; Notes and other useful options</description>
    </item>
    
    <item>
      <title>Difference between grep, egrep, fgrep, pgrep.</title>
      <link>https://www.wikiod.com/grep/difference-between-grep-egrep-fgrep-pgrep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/grep/difference-between-grep-egrep-fgrep-pgrep/</guid>
      <description>grep, egrep, fgrep, rgrep, pgrep - are commands in Unix-like operating systems that print lines matching a pattern. The grep searches the named input FILEs for lines containing a match to the given PATTERN. By default, it prints the matching lines. In addition, the variant programs egrep, fgrep, and rgrep are the same as grep -E, grep -F, and grep -r, respectively. These variants are deprecated, but are provided for backward compatibility.</description>
    </item>
    
    <item>
      <title>Context line control</title>
      <link>https://www.wikiod.com/grep/context-line-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/grep/context-line-control/</guid>
      <description>-A, -B and -C options are not available in POSIX (see the POSIX specifications for grep).
Print lines before and/or after matching pattern # Usually grep prints only matching lines. In the example below seq 9 generates a list of numbers from 1 to 9, one per line, and grep prints a single matching line:
seq 9 | grep 5 # 5 The -C n option (or --context=n in long form) prints n lines before and after each matching line, in addition to the matching line itself:</description>
    </item>
    
    <item>
      <title>Regular expressions</title>
      <link>https://www.wikiod.com/grep/regular-expressions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/grep/regular-expressions/</guid>
      <description>Regular expressions # Look behind # Given the following file:
hello how are you i am fine let&#39;s go, you! let&#39;s go, baby! grep with look-behind allows to print only some parts:
$ grep -Po &amp;quot;(?&amp;lt;=let&#39;s go, ).*&amp;quot; file you! baby! In this case, it matches what occurs after &amp;ldquo;let&amp;rsquo;s go, &amp;ldquo;.</description>
    </item>
    
  </channel>
</rss>
