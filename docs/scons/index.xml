<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SCons Tutorial on </title>
    <link>https://www.wikiod.com/docs/scons/</link>
    <description>Recent content in SCons Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/scons/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with SCons</title>
      <link>https://www.wikiod.com/scons/getting-started-with-scons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/scons/getting-started-with-scons/</guid>
      <description>Getting Started # Once you have SCons running, create a file named SConstruct:
print(&#39;..Building World&#39;) Now run scons:
$ scons scons: Reading SConscript files ... ..Building World scons: done reading SConscript files. scons: Building targets ... scons: `.&#39; is up to date. scons: done building targets. SConstruct is a Python script with additional SCons functions.
Zip(&#39;archive&#39;, [&#39;SConstruct&#39;]) The script above packs itself into archive.zip using Zip() function provided by SCons. Zip is a Builder - it builds target specified by first argument from multiple sources, which come as second argument to Builders by convention.</description>
    </item>
    
    <item>
      <title>Getting SCons running</title>
      <link>https://www.wikiod.com/scons/getting-scons-running/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/scons/getting-scons-running/</guid>
      <description>SCons is written in Python 2 and doesn&amp;rsquo;t need any dependencies to work. You can just copy its scripts to your project source tree and run from here. Or you may want to use version packaged for your operating system.
Installing on Linux # On Debian or Ubuntu, you can install SCons using
$ sudo apt-get install scons On YUM-based systems, use
$ sudo yum install scons You can install using an RPM by downloading it, then running</description>
    </item>
    
    <item>
      <title>SCons run phases</title>
      <link>https://www.wikiod.com/scons/scons-run-phases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/scons/scons-run-phases/</guid>
      <description>SCons is a multi-step build system. First it reads all SConstruct and SConscript to execute Python code and create build graph with targets. Then it scans filesystem to detect which targets from the build graph should be updated, and after that it executes command to build outdated targets.
Inspecting SCons phases # scons describes running phases itself. Running it over an empty SConstruct yields this:
$ scons scons: Reading SConscript files .</description>
    </item>
    
    <item>
      <title>C&#43;&#43;</title>
      <link>https://www.wikiod.com/scons/c-/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/scons/c-/</guid>
      <description>A Simple Build # It is very easy to build a simple C++ project. Here is an example of a SConstruct file that does so:
env=Environment() env.Program(&#39;hello&#39;, Glob(&#39;src/*.cpp&#39;)) This creates the executable hello composed of all the sources in src with extension cpp.
Specifying Various Build Options # This example shows more detailed build settings:
env=Environment( CPPPATH=&#39;/usr/include/boost/&#39;, CPPDEFINES=[&#39;foo&#39;], LIBS=[&#39;bar&#39;], SCONS_CXX_STANDARD=&#39;c++11&#39;) env.Program(&#39;hello&#39;, Glob(&#39;src/*.cpp&#39;)) This builds the executable hello from all the cpp files in src, with the following settings:</description>
    </item>
    
  </channel>
</rss>
