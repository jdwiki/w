<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pug Tutorial on </title>
    <link>https://www.wikiod.com/docs/pug/</link>
    <description>Recent content in pug Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/pug/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with pug</title>
      <link>https://www.wikiod.com/pug/getting-started-with-pug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pug/getting-started-with-pug/</guid>
      <description>Hello World Example # First, let&amp;rsquo;s create a template to be rendered!
p Hello World, #{name}! Save this in a file ending with the .pug extension (you can call it anything you like, but we will use view.pug in the following code to compile it).
All that&amp;rsquo;s left to do, now, is compile that template! Create a JS script file (we&amp;rsquo;ll call ours main.js), and add the following content:
// Import the pug module const pug = require(&#39;pug&#39;); // Compile the template (with the data not yet inserted) const templateCompiler = pug.</description>
    </item>
    
    <item>
      <title>Conditionals</title>
      <link>https://www.wikiod.com/pug/conditionals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pug/conditionals/</guid>
      <description>Pug can conditionally run code based on variables (passed from your server or based in Pug itself).
Syntax # if (statement)
// Pug code else if (statement)
// Pug code else
// Pug code unless (statement)
// Pug code Parameters # Parameter Details if (statement) Evaluates statement to see if it returns true or false. The code nested underneath if will run only if statement returns true. else if (statement) Chained to an existing if or else if statement; it only runs if the previous statement evaluated to false.</description>
    </item>
    
    <item>
      <title>Interpolation with Pug</title>
      <link>https://www.wikiod.com/pug/interpolation-with-pug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pug/interpolation-with-pug/</guid>
      <description>It&amp;rsquo;s important to be able to use server-side variables in your website. Pug allows you to interpolate data generated by your server in HTML, CSS, and even JavaScript code.
Syntax # res.render(path, variables) // Searches for a pug file to render at path &amp;ldquo;path&amp;rdquo;, and passes &amp;ldquo;variables&amp;rdquo; to it #{variable} // Interpolates &amp;ldquo;variable&amp;rdquo; inline with the surrounding Jade code, after evaluating &amp;ldquo;variable&amp;rdquo; !{variable} // Interpolates &amp;ldquo;variable&amp;rdquo; inline with the surrounding Jade code, without evaluating &amp;ldquo;variable&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Iteration with Pug</title>
      <link>https://www.wikiod.com/pug/iteration-with-pug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pug/iteration-with-pug/</guid>
      <description>How to iterate over a simple JSON object and save a lot of typing
You need to have Node.js and Pug installed
Each iteration # Build an app.js with a simple data store:
app.get(&amp;quot;/bookstore&amp;quot;, function (req, res, next) { // Your route data var bookStore = [ { title: &amp;quot;Templating with Pug&amp;quot;, author: &amp;quot;Winston Smith&amp;quot;, pages: 143, year: 2017 }, { title: &amp;quot;Node.js will help&amp;quot;, author: &amp;quot;Guy Fake&amp;quot;, pages: 879, year: 2015 } ]; res.</description>
    </item>
    
    <item>
      <title>Syntax and markup generation</title>
      <link>https://www.wikiod.com/pug/syntax-and-markup-generation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/pug/syntax-and-markup-generation/</guid>
      <description>A preview of the difference between pug code and the generated markup
Pug makes possible to write HTML in a simplest way, using a clean, whitespace sensitive syntax.
From Pug to HTML # doctype html html(lang=&amp;quot;en&amp;quot;) head title= pageTitle script(type=&#39;text/javascript&#39;). if (foo) bar(1 + 5) body h1 Pug - node template engine #container.col if youAreUsingPug p You are amazing else p Get on it! p. Pug is a terse and simple templating language with a strong focus on performance and powerful features.</description>
    </item>
    
  </channel>
</rss>
