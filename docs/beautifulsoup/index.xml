<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>beautifulsoup Tutorial on </title>
    <link>https://www.wikiod.com/docs/beautifulsoup/</link>
    <description>Recent content in beautifulsoup Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/beautifulsoup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with beautifulsoup</title>
      <link>https://www.wikiod.com/beautifulsoup/getting-started-with-beautifulsoup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/beautifulsoup/getting-started-with-beautifulsoup/</guid>
      <description>Installation or Setup # pip may be used to install BeautifulSoup. To install Version 4 of BeautifulSoup, run the command:
pip install beautifulsoup4 Be aware that the package name is beautifulsoup4 instead of beautifulsoup, the latter name stands for old release, see old beautifulsoup
A BeautifulSoup &amp;ldquo;Hello World&amp;rdquo; scraping example # from bs4 import BeautifulSoup import requests main_url = &amp;quot;https://fr.wikipedia.org/wiki/Hello_world&amp;quot; req = requests.get(main_url) soup = BeautifulSoup(req.text, &amp;quot;html.parser&amp;quot;) # Finding the main title tag.</description>
    </item>
    
    <item>
      <title>Locating elements</title>
      <link>https://www.wikiod.com/beautifulsoup/locating-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/beautifulsoup/locating-elements/</guid>
      <description>Locate a text after an element in BeautifulSoup # Imagine you have the following HTML:
&amp;lt;div&amp;gt; &amp;lt;label&amp;gt;Name:&amp;lt;/label&amp;gt; John Smith &amp;lt;/div&amp;gt; And you need to locate the text &amp;ldquo;John Smith&amp;rdquo; after the label element.
In this case, you can locate the label element by text and then use .next_sibling property:
from bs4 import BeautifulSoup data = &amp;quot;&amp;quot;&amp;quot; &amp;lt;div&amp;gt; &amp;lt;label&amp;gt;Name:&amp;lt;/label&amp;gt; John Smith &amp;lt;/div&amp;gt; &amp;quot;&amp;quot;&amp;quot; soup = BeautifulSoup(data, &amp;quot;html.parser&amp;quot;) label = soup.find(&amp;quot;label&amp;quot;, text=&amp;quot;Name:&amp;quot;) print(label.</description>
    </item>
    
  </channel>
</rss>
