<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>automapper Tutorial on </title>
    <link>https://www.wikiod.com/docs/automapper/</link>
    <description>Recent content in automapper Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/automapper/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with automapper</title>
      <link>https://www.wikiod.com/automapper/getting-started-with-automapper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/automapper/getting-started-with-automapper/</guid>
      <description>Installation or Setup # Automapper can be installed from nuget running the following command in Package Manager Console:
Install-Package AutoMapper Then it can be included in different files within the project it has been installed to by using directives:
using AutoMapper; </description>
    </item>
    
    <item>
      <title>Profiles</title>
      <link>https://www.wikiod.com/automapper/profiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/automapper/profiles/</guid>
      <description>Syntax # public void AddProfiles(params string[] assemblyNamesToScan) public void AddProfiles(params Assembly[] assembliesToScan) public void AddProfiles(params Type[] typesFromAssembliesContainingProfiles) public void AddProfiles(IEnumerable&amp;lt;string&amp;gt; assemblyNamesToScan) public void AddProfiles(IEnumerable&amp;lt;Assembly&amp;gt; assembliesToScan) public void AddProfiles(IEnumerable&amp;lt;Type&amp;gt; typesFromAssembliesContainingProfiles) Parameters # Parameter Details assemblyNamesToScan Assembly names containing profiles to load and scan. assembliesToScan Assemblies containing profiles to scan. typesFromAssembliesContainingProfiles Types from assemblies containing profiles to load and scan Basic Profile # Profiles permit the programmer to organize maps into classes, enhancing code readability and maintainability.</description>
    </item>
    
  </channel>
</rss>
