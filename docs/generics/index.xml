<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>generics Tutorial on </title>
    <link>https://www.wikiod.com/docs/generics/</link>
    <description>Recent content in generics Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/generics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with generics</title>
      <link>https://www.wikiod.com/generics/getting-started-with-generics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/generics/getting-started-with-generics/</guid>
      <description>Availability # Generics became available with:
.NET Framework 2.0 (and version 2.0 of the compact framework). Java in version 5. Common Lisp since it was standardised &amp;hellip; </description>
    </item>
    
    <item>
      <title>Generics in Java</title>
      <link>https://www.wikiod.com/generics/generics-in-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/generics/generics-in-java/</guid>
      <description>Syntax # class MyClass&amp;lt;T1, T2 extends CharSequence&amp;gt; implements Comparable&amp;lt;MyClass&amp;gt; //... interface MyListInterface&amp;lt;T extends Serializable&amp;gt; extends List&amp;lt;T&amp;gt; //... public &amp;lt;T1, T2 extends Instant&amp;gt; T1 provideClone(T1 toClone, T2 instant&amp;gt; //... public static List&amp;lt;CharSequence&amp;gt; safe(Collection&amp;lt;? extends CharSequence&amp;gt; l) { return new ArrayList&amp;lt;&amp;gt;(l);} Set&amp;lt;String&amp;gt; strings = Collections.singleton(&amp;quot;Hello world&amp;quot;); List&amp;lt;CharSequence&amp;gt; chsList = safe(strings); Type erasure limits reflection, though that is not JVM specific, for example Ceylon uses reified generics.
Existential type support is not necessarily supported by other languages in this form: Kotlin supports it through type projections.</description>
    </item>
    
  </channel>
</rss>
