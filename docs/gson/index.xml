<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gson Tutorial on </title>
    <link>https://www.wikiod.com/docs/gson/</link>
    <description>Recent content in gson Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/gson/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with gson</title>
      <link>https://www.wikiod.com/gson/getting-started-with-gson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gson/getting-started-with-gson/</guid>
      <description>Arrays # JSON:
[ { &amp;quot;id&amp;quot;: 8484, &amp;quot;name&amp;quot;: &amp;quot;David&amp;quot;, &amp;quot;height&amp;quot;: 173.2, &amp;quot;weight&amp;quot;: 75.42 }, { &amp;quot;id&amp;quot;: 8485, &amp;quot;name&amp;quot;: &amp;quot;Ronald&amp;quot;, &amp;quot;height&amp;quot;: 183.73, &amp;quot;weight&amp;quot;: 83.1 } ] Person.java
public class Person { public int id; public String name; public double height; public double weight; @Override public String toString() { return &amp;quot;[ id: &amp;quot; + String.valueOf(id) + &amp;quot;, name: &amp;quot; + name + &amp;quot;, height: &amp;quot; + String.valueOf(height) + &amp;quot;, weight: &amp;quot; + String.</description>
    </item>
    
    <item>
      <title>Using Gson with JAX-RS (RESTful web services)</title>
      <link>https://www.wikiod.com/gson/using-gson-with-jax-rs-restful-web-services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gson/using-gson-with-jax-rs-restful-web-services/</guid>
      <description>JAX-RS provider to use Gson # This is a custom JAX-RS @Provider to use Gson as the JSON parser. The example also shows how to use custom Java 8 date/time converters.
@Provider @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) public class JerseyServerGson implements MessageBodyWriter&amp;lt;Object&amp;gt;, MessageBodyReader&amp;lt;Object&amp;gt; { @Override public boolean isReadable(Class&amp;lt;?&amp;gt; type, Type genericType, Annotation[] annotations, MediaType mediaType) { return true; } @Override public Object readFrom(Class&amp;lt;Object&amp;gt; type, Type genericType, Annotation[] annotations, MediaType mediaType, MultivaluedMap&amp;lt;String, String&amp;gt; httpHeaders, InputStream entityStream) throws IOException, WebApplicationException { try ( InputStreamReader input = new InputStreamReader(entityStream, &amp;quot;UTF-8&amp;quot;) ) { Gson gson = getGson(); return gson.</description>
    </item>
    
  </channel>
</rss>
