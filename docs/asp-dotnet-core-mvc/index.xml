<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>asp.net-core-mvc Tutorial on </title>
    <link>https://www.wikiod.com/docs/asp-dotnet-core-mvc/</link>
    <description>Recent content in asp.net-core-mvc Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/asp-dotnet-core-mvc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with asp.net-core-mvc</title>
      <link>https://www.wikiod.com/asp-dotnet-core-mvc/getting-started-with-aspnet-core-mvc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet-core-mvc/getting-started-with-aspnet-core-mvc/</guid>
      <description>Add MVC Middleware # If you created an empty project, or you still don&amp;rsquo;t have mvc configured in your application, you can add dependency:
&amp;quot;Microsoft.AspNetCore.Mvc&amp;quot;: &amp;quot;1.0.1&amp;quot;
To your project.json file under &amp;quot;dependencies&amp;quot;.
And register MVC middleware in your Startup class:
public void ConfigureServices(IServiceCollection services) { ... services.AddMvc(); } Note that we have both services.AddMvc() and services.AddMvcCore(). If you are starting with asp.net core, or you want it the way it is, you should keep with services.</description>
    </item>
    
    <item>
      <title>Setup and install .Net Core MVC with Visual studio code and quick start .net core mvc hello world.</title>
      <link>https://www.wikiod.com/asp-dotnet-core-mvc/setup-and-install-net-core-mvc-with-visual-studio-code-and-quick-start-net-core-mvc-hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet-core-mvc/setup-and-install-net-core-mvc-with-visual-studio-code-and-quick-start-net-core-mvc-hello-world/</guid>
      <description>This article give idea&amp;rsquo;s about setup and installing Asp.Net core with visual studio code. Also create basic MVC template and debugging.
Steps involved below&amp;hellip;
Step 1 - installing Visual studio code.
Step 2 - Configuring .Net core and C#.
Step 3 - Create Basic MVC Template.
Step 4 - Execute and Debug the application.
This article is about to setup from scratch with visual studio code open source and create and debug basic .</description>
    </item>
    
    <item>
      <title>Change default view location</title>
      <link>https://www.wikiod.com/asp-dotnet-core-mvc/change-default-view-location/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-dotnet-core-mvc/change-default-view-location/</guid>
      <description>In ASP.NET MVC, the views are placed by default in the Views folder. Sometimes you want to change this locations and store the views somewhere else.
Create a View Location Expander # To be able to change the view location, you need to implement the IViewLocationExpander. The ExpandViewLocations method returns an IEnumerable&amp;lt;string&amp;gt; containing the different locations where to search, with
public class MyViewLocationExpander : IViewLocationExpander { public IEnumerable&amp;lt;string&amp;gt; ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable&amp;lt;string&amp;gt; viewLocations) { yield return &amp;quot;/CustomViewFolder/{1}/{0}.</description>
    </item>
    
  </channel>
</rss>
