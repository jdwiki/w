<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>logstash Tutorial on </title>
    <link>https://www.wikiod.com/docs/logstash/</link>
    <description>Recent content in logstash Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/logstash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with logstash</title>
      <link>https://www.wikiod.com/logstash/getting-started-with-logstash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/logstash/getting-started-with-logstash/</guid>
      <description>Installation or Setup # Detailed instructions on getting logstash set up or installed.
A basic, complete Syslog example # Going to its roots, Logstash has the ability to parse and store syslog data. This example shows a basic configuration that gets you to that.
input { file { path =&amp;gt; [ &amp;quot;/var/log/syslog&amp;quot;, &amp;quot;/var/log/auth.log&amp;quot; ] type =&amp;gt; &amp;quot;syslog&amp;quot; } } filter { if [type] == &amp;quot;syslog&amp;quot; { # Uses built-in Grok patterns to parse this standard format grok { match =&amp;gt; { &amp;quot;message&amp;quot; =&amp;gt; &amp;quot;%{SYSLOGBASE}%{SPACE}%{GREEDYDATA:SYSLOGMESSAGE}&amp;quot; } } # Sets the timestamp of the event to the timestamp of recorded in the log-data # By default, logstash sets the timestamp to the time it was ingested.</description>
    </item>
    
  </channel>
</rss>
