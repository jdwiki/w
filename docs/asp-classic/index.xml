<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>asp-classic Tutorial on </title>
    <link>https://www.wikiod.com/docs/asp-classic/</link>
    <description>Recent content in asp-classic Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/asp-classic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with asp-classic</title>
      <link>https://www.wikiod.com/asp-classic/getting-started-with-asp-classic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-classic/getting-started-with-asp-classic/</guid>
      <description>Structure of a Simple ASP Page # &amp;lt;%@ Language=&amp;quot;VBScript&amp;quot; CodePage = 65001 %&amp;gt; &amp;lt;% Option Explicit Response.Charset = &amp;quot;UTF-8&amp;quot; Response.CodePage = 65001 %&amp;gt; &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;My First Classic ASP Page&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;%=&amp;quot;Hello World&amp;quot;%&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; This is a very basic example of a Classic ASP page that returns the phrase &amp;ldquo;Hello World&amp;rdquo; to the browser along with the rest of the standard HTML. The HTML portions are static, i.</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://www.wikiod.com/asp-classic/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-classic/variables/</guid>
      <description>Declaring # Creating variables in VBScript can be done by using the Dim, Public, or Private statement. It is best practice to put at the top of the script &amp;ldquo;Option Explicit&amp;rdquo; which forces you to explicitly define a variable.
You can declare one variable like this:
Option Explicit Dim firstName Or you can several variables like this:
Option Explicit Dim firstName, middleName, lastName If you do not have the option explicit statement, you can create variables like so:</description>
    </item>
    
    <item>
      <title>Connecting to a database</title>
      <link>https://www.wikiod.com/asp-classic/connecting-to-a-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-classic/connecting-to-a-database/</guid>
      <description>Classic ASP utilises a technology called ActiveX Data Objects when requiring access to external data sources. The ADODB Library provides three main objects for this purpose, ADODB.Connection, ADODB.Command and the ADODB.Recordset.
Populating a dropdown from the database # (Caveat emptor: there are many, many programmers who go into absolute conniptions if they meet code that uses recordsets instead of commands and stored procedures.)
&amp;lt;% dim rs, sql dim SelectedUser SelectedUser = request.</description>
    </item>
    
    <item>
      <title>Looping</title>
      <link>https://www.wikiod.com/asp-classic/looping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/asp-classic/looping/</guid>
      <description>For Loop # In classic ASP we can specify a for loop with the for keyword. With the for statement we need the next statement which will increment the counter.
For i = 0 To 10 Response.Write(&amp;quot;Index: &amp;quot; &amp;amp; i) Next The step keyword can be used to changed the how the next statement will modify the counter.
For i = 10 To 1 Step -1 &#39;VBS Comment Next To exit a for loop, use the Exit For statement</description>
    </item>
    
  </channel>
</rss>
