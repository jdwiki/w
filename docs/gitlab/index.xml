<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gitlab Tutorial on </title>
    <link>https://www.wikiod.com/docs/gitlab/</link>
    <description>Recent content in gitlab Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/gitlab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with gitlab</title>
      <link>https://www.wikiod.com/gitlab/getting-started-with-gitlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gitlab/getting-started-with-gitlab/</guid>
      <description>Installation or Setup # This is a short summary of the GitLab guide on Install a GitLab CE Omnibus package.
Requirements
In order to install the GitLab Community Edition on your server, you should read the requirements page. To make it brief, the recommended requirements are:
OS: Ubuntu, Debian, CentOS, RHEL Ruby version: Ruby (MRI) 2.1.x, currently does not work with versions 2.2 or 2.3. CPU: 2 cores (supports up to 500 users) Memory: 2 GB (supports up to 100 users) Database: PostgreSQL Installation</description>
    </item>
    
    <item>
      <title>Continuous integration</title>
      <link>https://www.wikiod.com/gitlab/continuous-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gitlab/continuous-integration/</guid>
      <description>The GitLab CI runs build jobs based on a checked in .gitlab-ci.yml. Jobs are run on a remote server in it&amp;rsquo;s own docker container.
The CI server itself is configured with a config.toml.
A build will fail if any lines in a job return an exit code != 0. Runner installation # Debian, Ubuntu and CentOS # Add the official repository Debian/Ubuntu
curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.deb.sh | sudo bash CentOS
curl -L https://packages.</description>
    </item>
    
    <item>
      <title>Android CI Configuration</title>
      <link>https://www.wikiod.com/gitlab/android-ci-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gitlab/android-ci-configuration/</guid>
      <description>Build Tools 24.0.0 - Android # image: jangrewe/gitlab-ci-android before_script: - apt-get --quiet update --yes - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1 openjdk-8-jdk - echo y | ${ANDROID_HOME}/tools/android --silent update sdk --no-ui --all --filter android-24 - echo y | ${ANDROID_HOME}/tools/android --silent update sdk --no-ui --all --filter platform-tools - echo y | ${ANDROID_HOME}/tools/android --silent update sdk --no-ui --all --filter build-tools-24.0.0 - echo y | ${ANDROID_HOME}/tools/android --silent update sdk --no-ui --all --filter extra-android-m2repository - echo y | ${ANDROID_HOME}/tools/android --silent update sdk --no-ui --all --filter extra-google-google_play_services - echo y | ${ANDROID_HOME}/tools/android --silent update sdk --no-ui --all --filter extra-google-m2repository - chmod +x gradlew build: script: - .</description>
    </item>
    
    <item>
      <title>Google Cloud SDK CI Configuration</title>
      <link>https://www.wikiod.com/gitlab/google-cloud-sdk-ci-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/gitlab/google-cloud-sdk-ci-configuration/</guid>
      <description>Open JDK 8 Docker Example # image: openjdk:8-jdk before_script: - curl https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz &amp;gt; /tmp/google-cloud-sdk.tar.gz - mkdir -p /usr/local/gcloud - tar -C /usr/local/gcloud -xvf /tmp/google-cloud-sdk.tar.gz - echo y |/usr/local/gcloud/google-cloud-sdk/install.sh - chmod +x ./gradlew build: script: - ./gradlew build artifacts: paths: - app/build/outputs/ </description>
    </item>
    
  </channel>
</rss>
