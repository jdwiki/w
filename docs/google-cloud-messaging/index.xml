<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>google-cloud-messaging Tutorial on </title>
    <link>https://www.wikiod.com/docs/google-cloud-messaging/</link>
    <description>Recent content in google-cloud-messaging Tutorial on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://www.wikiod.com/docs/google-cloud-messaging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with google-cloud-messaging</title>
      <link>https://www.wikiod.com/google-cloud-messaging/getting-started-with-google-cloud-messaging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/google-cloud-messaging/getting-started-with-google-cloud-messaging/</guid>
      <description>Send downstream messages from the cloud # Send a message using GCM HTTP connection server protocol:
https://gcm-http.googleapis.com/gcm/send Content-Type:application/json Authorization:key=AIzaSyZ-1u...0GBYzPu7Udno5aA { &amp;quot;to&amp;quot;: &amp;quot;/topics/foo-bar&amp;quot;, &amp;quot;data&amp;quot;: { &amp;quot;message&amp;quot;: &amp;quot;This is a GCM Topic Message!&amp;quot;, } } To do this in Postman, you simply have to set the following (some details are as what is mentioned above):
Set request type to POST In the Headers, set the following: Content-Type = application/json Authorization = &amp;lt; Your GCM Server Key &amp;gt; Set the payload parameters in the Body (in this example, we used the raw option, see screenshot (2)) Send the request to https://gcm-http.</description>
    </item>
    
    <item>
      <title>Differences between sending to Android and iOS devices</title>
      <link>https://www.wikiod.com/google-cloud-messaging/differences-between-sending-to-android-and-ios-devices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.wikiod.com/google-cloud-messaging/differences-between-sending-to-android-and-ios-devices/</guid>
      <description>Make device receive notification even when sleeping # When sending a notification to an iOS device, you must set priority: &amp;quot;high&amp;quot; for it to wake up. Otherwise, the notification will not be received while the phone is asleep.
Sets the priority of the message. Valid values are &amp;ldquo;normal&amp;rdquo; and &amp;ldquo;high.&amp;rdquo; On iOS, these correspond to APNs priorities 5 and 10.
By default, messages are sent with normal priority. Normal priority optimizes the client app&amp;rsquo;s battery consumption and should be used unless immediate delivery is required.</description>
    </item>
    
  </channel>
</rss>
